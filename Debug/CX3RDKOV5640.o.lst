   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"CX3RDKOV5640.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	gl32SetControl,4,4
  17              		.comm	gl16SetControl,2,2
  18              		.comm	uvcAppThread,168,4
  19              		.comm	glTimerEvent,40,4
  20              		.section	.bss.UvcTimer,"aw",%nobits
  21              		.align	2
  24              	UvcTimer:
  25 0000 00000000 		.space	44
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.UvcAppProgressTimer,"ax",%progbits
  27              		.align	2
  29              	UvcAppProgressTimer:
  30              	.LFB0:
  31              		.file 1 "../CX3RDKOV5640.c"
   1:../CX3RDKOV5640.c **** /*
   2:../CX3RDKOV5640.c ****  ## e-con Systems USB UVC Stack – See3CAMCX3RDK Platform
   3:../CX3RDKOV5640.c **** 
   4:../CX3RDKOV5640.c ****  ## source file : CX3RDKOV5640.c
   5:../CX3RDKOV5640.c ****  ## ===========================
   6:../CX3RDKOV5640.c ****  ##
   7:../CX3RDKOV5640.c ****  ##  Copyright E-Con Systems, 2013-2014,
   8:../CX3RDKOV5640.c ****  ##  All Rights Reserved
   9:../CX3RDKOV5640.c ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
  10:../CX3RDKOV5640.c ****  ##
  11:../CX3RDKOV5640.c ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  12:../CX3RDKOV5640.c ****  ##  PROPERTY OF ECON SYSTEMS
  13:../CX3RDKOV5640.c **** 
  14:../CX3RDKOV5640.c ****  ## www.e-consystems.com
  15:../CX3RDKOV5640.c ****  ##
  16:../CX3RDKOV5640.c ****  ##
  17:../CX3RDKOV5640.c ****  ## ===========================
  18:../CX3RDKOV5640.c **** */
  19:../CX3RDKOV5640.c **** 
  20:../CX3RDKOV5640.c **** #include "cyu3system.h"
  21:../CX3RDKOV5640.c **** #include "cyu3os.h"
  22:../CX3RDKOV5640.c **** #include "cyu3dma.h"
  23:../CX3RDKOV5640.c **** #include "cyu3error.h"
  24:../CX3RDKOV5640.c **** #include "cyu3usb.h"
  25:../CX3RDKOV5640.c **** #include "cyu3i2c.h"
  26:../CX3RDKOV5640.c **** #include "cyu3uart.h"
  27:../CX3RDKOV5640.c **** #include "cyu3gpio.h"
  28:../CX3RDKOV5640.c **** #include "cyu3utils.h"
  29:../CX3RDKOV5640.c **** #include "cyu3pib.h"
  30:../CX3RDKOV5640.c **** #include "cyu3socket.h"
  31:../CX3RDKOV5640.c **** #include "sock_regs.h"
  32:../CX3RDKOV5640.c **** #include "cyu3mipicsi.h"
  33:../CX3RDKOV5640.c **** 
  34:../CX3RDKOV5640.c **** #include "CX3OV5640Lib.h"
  35:../CX3RDKOV5640.c **** #include "CX3RDKOV5640.h"
  36:../CX3RDKOV5640.c **** 
  37:../CX3RDKOV5640.c **** /* Event generated on Timer overflow*/
  38:../CX3RDKOV5640.c **** #define ES_TIMER_RESET_EVENT		(1<<4)
  39:../CX3RDKOV5640.c **** 
  40:../CX3RDKOV5640.c **** /* Event generated on a USB Suspend Request*/
  41:../CX3RDKOV5640.c **** #define ES_USB_SUSP_EVENT_FLAG		(1<<5)
  42:../CX3RDKOV5640.c **** 
  43:../CX3RDKOV5640.c **** /* Firmware version*/
  44:../CX3RDKOV5640.c **** #define MajorVersion 				1
  45:../CX3RDKOV5640.c **** #define MinorVersion 				3
  46:../CX3RDKOV5640.c **** #define SubVersion					133
  47:../CX3RDKOV5640.c **** #define SubVersion1					309
  48:../CX3RDKOV5640.c **** #define RESET_TIMER_ENABLE 1
  49:../CX3RDKOV5640.c **** 
  50:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
  51:../CX3RDKOV5640.c **** #define TIMER_PERIOD	(500)
  52:../CX3RDKOV5640.c **** 
  53:../CX3RDKOV5640.c **** /****** for VIS debugging ******/
  54:../CX3RDKOV5640.c **** //#define VISDebug
  55:../CX3RDKOV5640.c **** 
  56:../CX3RDKOV5640.c **** /*************End***************/
  57:../CX3RDKOV5640.c **** 
  58:../CX3RDKOV5640.c **** static CyU3PTimer        UvcTimer;
  59:../CX3RDKOV5640.c **** 
  60:../CX3RDKOV5640.c **** static void UvcAppProgressTimer (uint32_t arg)
  61:../CX3RDKOV5640.c **** {
  32              		.loc 1 61 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		stmfd	sp!, {fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              	.LCFI1:
  43              		.cfi_def_cfa 11, 4
  44 0008 08D04DE2 		sub	sp, sp, #8
  45 000c 08000BE5 		str	r0, [fp, #-8]
  62:../CX3RDKOV5640.c ****     /* This frame has taken too long to complete.
  63:../CX3RDKOV5640.c ****      * Abort it, so that the next frame can be started. */
  64:../CX3RDKOV5640.c ****     CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
  46              		.loc 1 64 0
  47 0010 10009FE5 		ldr	r0, .L2
  48 0014 1010A0E3 		mov	r1, #16
  49 0018 0020A0E3 		mov	r2, #0
  50 001c FEFFFFEB 		bl	_txe_event_flags_set
  65:../CX3RDKOV5640.c **** }
  51              		.loc 1 65 0
  52 0020 04D04BE2 		sub	sp, fp, #4
  53              		@ sp needed
  54 0024 0088BDE8 		ldmfd	sp!, {fp, pc}
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0028 00000000 		.word	glTimerEvent
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.global	glDMATxCount
  63              		.section	.bss.glDMATxCount,"aw",%nobits
  64              		.align	2
  67              	glDMATxCount:
  68 0000 00000000 		.space	4
  69              		.global	glDmaDone
  70              		.section	.bss.glDmaDone,"aw",%nobits
  71              		.align	2
  74              	glDmaDone:
  75 0000 00000000 		.space	4
  76              		.global	glActiveSocket
  77              		.section	.bss.glActiveSocket,"aw",%nobits
  80              	glActiveSocket:
  81 0000 00       		.space	1
  82              		.global	doLpmDisable
  83              		.section	.data.doLpmDisable,"aw",%progbits
  84              		.align	2
  87              	doLpmDisable:
  88 0000 01000000 		.word	1
  89              		.global	glHitFV
  90              		.section	.bss.glHitFV,"aw",%nobits
  91              		.align	2
  94              	glHitFV:
  95 0000 00000000 		.space	4
  96              		.global	glMipiActive
  97              		.section	.bss.glMipiActive,"aw",%nobits
  98              		.align	2
 101              	glMipiActive:
 102 0000 00000000 		.space	4
 103              		.global	glIsClearFeature
 104              		.section	.bss.glIsClearFeature,"aw",%nobits
 105              		.align	2
 108              	glIsClearFeature:
 109 0000 00000000 		.space	4
 110              		.global	glPreviewStarted
 111              		.section	.bss.glPreviewStarted,"aw",%nobits
 112              		.align	2
 115              	glPreviewStarted:
 116 0000 00000000 		.space	4
 117              		.global	glUVCHeader
 118              		.section	.data.glUVCHeader,"aw",%progbits
 119              		.align	2
 122              	glUVCHeader:
 123 0000 0C       		.byte	12
 124 0001 8C       		.byte	-116
 125 0002 00       		.byte	0
 126 0003 00       		.byte	0
 127 0004 00       		.byte	0
 128 0005 00       		.byte	0
 129 0006 00       		.byte	0
 130 0007 00       		.byte	0
 131 0008 00       		.byte	0
 132 0009 00       		.byte	0
 133 000a 00       		.byte	0
 134 000b 00       		.byte	0
 135              		.comm	glCommitCtrl,32,4
 136              		.global	glCurrentFrameIndex
 137              		.section	.data.glCurrentFrameIndex,"aw",%progbits
 140              	glCurrentFrameIndex:
 141 0000 01       		.byte	1
 142              		.comm	glStillCommitCtrl,32,4
 143              		.global	glCurrentStillFrameIndex
 144              		.section	.data.glCurrentStillFrameIndex,"aw",%progbits
 147              	glCurrentStillFrameIndex:
 148 0000 01       		.byte	1
 149              		.global	glStillTriggerCtrl
 150              		.section	.bss.glStillTriggerCtrl,"aw",%nobits
 153              	glStillTriggerCtrl:
 154 0000 00       		.space	1
 155              		.global	glFrameIndexToSet
 156              		.section	.bss.glFrameIndexToSet,"aw",%nobits
 159              	glFrameIndexToSet:
 160 0000 00       		.space	1
 161              		.global	glStillCaptureStart
 162              		.section	.bss.glStillCaptureStart,"aw",%nobits
 163              		.align	2
 166              	glStillCaptureStart:
 167 0000 00000000 		.space	4
 168              		.global	glStillCaptured
 169              		.section	.bss.glStillCaptured,"aw",%nobits
 170              		.align	2
 173              	glStillCaptured:
 174 0000 00000000 		.space	4
 175              		.global	glStillSkip
 176              		.section	.bss.glStillSkip,"aw",%nobits
 179              	glStillSkip:
 180 0000 00       		.space	1
 181              		.global	glIsApplnActive
 182              		.section	.bss.glIsApplnActive,"aw",%nobits
 183              		.align	2
 186              	glIsApplnActive:
 187 0000 00000000 		.space	4
 188              		.global	glIsConfigured
 189              		.section	.bss.glIsConfigured,"aw",%nobits
 190              		.align	2
 193              	glIsConfigured:
 194 0000 00000000 		.space	4
 195              		.global	glIsStreamingStarted
 196              		.section	.bss.glIsStreamingStarted,"aw",%nobits
 197              		.align	2
 200              	glIsStreamingStarted:
 201 0000 00000000 		.space	4
 202              		.comm	glChHandleUVCStream,232,4
 203              		.global	ES_UVC_STREAM_BUF_SIZE
 204              		.section	.bss.ES_UVC_STREAM_BUF_SIZE,"aw",%nobits
 205              		.align	1
 208              	ES_UVC_STREAM_BUF_SIZE:
 209 0000 0000     		.space	2
 210              		.global	ES_UVC_DATA_BUF_SIZE
 211              		.section	.bss.ES_UVC_DATA_BUF_SIZE,"aw",%nobits
 212              		.align	1
 215              	ES_UVC_DATA_BUF_SIZE:
 216 0000 0000     		.space	2
 217              		.global	ES_UVC_STREAM_BUF_COUNT
 218              		.section	.bss.ES_UVC_STREAM_BUF_COUNT,"aw",%nobits
 221              	ES_UVC_STREAM_BUF_COUNT:
 222 0000 00       		.space	1
 223              		.global	g_IsAutoFocus
 224              		.section	.data.g_IsAutoFocus,"aw",%progbits
 227              	g_IsAutoFocus:
 228 0000 01       		.byte	1
 229              		.global	glGet_Info
 230              		.section	.bss.glGet_Info,"aw",%nobits
 233              	glGet_Info:
 234 0000 00       		.space	1
 235              		.global	gl8GetControl
 236              		.section	.bss.gl8GetControl,"aw",%nobits
 237              		.align	1
 240              	gl8GetControl:
 241 0000 0000     		.space	2
 242              		.global	gl8SetControl
 243              		.section	.bss.gl8SetControl,"aw",%nobits
 244              		.align	1
 247              	gl8SetControl:
 248 0000 0000     		.space	2
 249              		.global	gl16GetControl
 250              		.section	.bss.gl16GetControl,"aw",%nobits
 251              		.align	1
 254              	gl16GetControl:
 255 0000 0000     		.space	2
 256              		.global	gl32GetControl
 257              		.section	.bss.gl32GetControl,"aw",%nobits
 258              		.align	2
 261              	gl32GetControl:
 262 0000 00000000 		.space	4
 263              		.global	glcommitcount
 264              		.section	.bss.glcommitcount,"aw",%nobits
 267              	glcommitcount:
 268 0000 00       		.space	1
 269              		.global	glcheckframe
 270              		.section	.data.glcheckframe,"aw",%progbits
 273              	glcheckframe:
 274 0000 01       		.byte	1
 275              		.section	.text.esUVCAppErrorHandler,"ax",%progbits
 276              		.align	2
 277              		.global	esUVCAppErrorHandler
 279              	esUVCAppErrorHandler:
 280              	.LFB1:
  66:../CX3RDKOV5640.c **** #endif
  67:../CX3RDKOV5640.c **** 
  68:../CX3RDKOV5640.c **** volatile int32_t glDMATxCount = 0;          /* Counter used to count the Dma Transfers */
  69:../CX3RDKOV5640.c **** volatile int32_t glDmaDone = 0;
  70:../CX3RDKOV5640.c **** volatile uint8_t glActiveSocket = 0;
  71:../CX3RDKOV5640.c **** volatile CyBool_t doLpmDisable = CyTrue;	/* Flag used to Enable/Disable low USB 3.0 LPM */
  72:../CX3RDKOV5640.c **** CyBool_t glHitFV = CyFalse;             	/* Flag used for state of FV signal. */
  73:../CX3RDKOV5640.c **** CyBool_t glMipiActive = CyFalse;        	/* Flag set to true when Mipi interface is active. Used fo
  74:../CX3RDKOV5640.c **** CyBool_t glIsClearFeature = CyFalse;    	/* Flag to signal when AppStop is called from the ClearFea
  75:../CX3RDKOV5640.c **** CyBool_t glPreviewStarted = CyFalse;		/* Flag to support Mac os */
  76:../CX3RDKOV5640.c **** 
  77:../CX3RDKOV5640.c **** /* UVC Header */
  78:../CX3RDKOV5640.c **** uint8_t glUVCHeader[ES_UVC_HEADER_LENGTH] =
  79:../CX3RDKOV5640.c **** {
  80:../CX3RDKOV5640.c ****     0x0C,                           /* Header Length */
  81:../CX3RDKOV5640.c ****     0x8C,                           /* Bit field header field */
  82:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,            /* Presentation time stamp field */
  83:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,0x00,0x00   /* Source clock reference field */
  84:../CX3RDKOV5640.c **** };
  85:../CX3RDKOV5640.c **** 
  86:../CX3RDKOV5640.c **** /* Video Probe Commit Control */
  87:../CX3RDKOV5640.c **** uint8_t glCommitCtrl[ES_UVC_MAX_PROBE_SETTING_ALIGNED];
  88:../CX3RDKOV5640.c **** uint8_t glCurrentFrameIndex = 1;
  89:../CX3RDKOV5640.c **** uint8_t glStillCommitCtrl[ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED];
  90:../CX3RDKOV5640.c **** uint8_t glCurrentStillFrameIndex = 1;
  91:../CX3RDKOV5640.c **** uint8_t glStillTriggerCtrl = 0;
  92:../CX3RDKOV5640.c **** uint8_t glFrameIndexToSet = 0;
  93:../CX3RDKOV5640.c **** CyBool_t glStillCaptureStart = CyFalse;
  94:../CX3RDKOV5640.c **** CyBool_t glStillCaptured = CyFalse;
  95:../CX3RDKOV5640.c **** uint8_t glStillSkip = 0;
  96:../CX3RDKOV5640.c **** 
  97:../CX3RDKOV5640.c **** CyBool_t glIsApplnActive = CyFalse;             /* Whether the Mipi->USB application is active or n
  98:../CX3RDKOV5640.c **** CyBool_t glIsConfigured = CyFalse;              /* Whether Application is in configured state or no
  99:../CX3RDKOV5640.c **** CyBool_t glIsStreamingStarted = CyFalse;        /* Whether streaming has started - Used for MAC OS 
 100:../CX3RDKOV5640.c **** 
 101:../CX3RDKOV5640.c **** /* DMA Channel */
 102:../CX3RDKOV5640.c **** CyU3PDmaMultiChannel glChHandleUVCStream;       /* DMA Channel Handle for UVC Stream  */
 103:../CX3RDKOV5640.c **** uint16_t ES_UVC_STREAM_BUF_SIZE=0;
 104:../CX3RDKOV5640.c **** uint16_t ES_UVC_DATA_BUF_SIZE=0;
 105:../CX3RDKOV5640.c **** uint8_t ES_UVC_STREAM_BUF_COUNT=0;
 106:../CX3RDKOV5640.c **** 
 107:../CX3RDKOV5640.c **** uint8_t g_IsAutoFocus=1;						/* Check the AutoFocus is Enabled or not*/
 108:../CX3RDKOV5640.c **** 
 109:../CX3RDKOV5640.c **** /* USB control request processing variables*/
 110:../CX3RDKOV5640.c **** #if 1
 111:../CX3RDKOV5640.c **** 
 112:../CX3RDKOV5640.c **** uint8_t glGet_Info = 0;
 113:../CX3RDKOV5640.c **** int16_t gl8GetControl = 0;
 114:../CX3RDKOV5640.c **** int16_t gl8SetControl = 0;
 115:../CX3RDKOV5640.c **** int16_t gl16GetControl = 0;
 116:../CX3RDKOV5640.c **** 
 117:../CX3RDKOV5640.c **** int32_t gl32GetControl = 0;
 118:../CX3RDKOV5640.c **** 
 119:../CX3RDKOV5640.c **** #endif
 120:../CX3RDKOV5640.c **** 
 121:../CX3RDKOV5640.c **** uint8_t glcommitcount=0,glcheckframe=1;
 122:../CX3RDKOV5640.c **** 
 123:../CX3RDKOV5640.c **** /* Application critical error handler */
 124:../CX3RDKOV5640.c ****     void
 125:../CX3RDKOV5640.c **** esUVCAppErrorHandler (
 126:../CX3RDKOV5640.c ****         CyU3PReturnStatus_t status        /* API return status */
 127:../CX3RDKOV5640.c ****         )
 128:../CX3RDKOV5640.c **** {
 281              		.loc 1 128 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 00482DE9 		stmfd	sp!, {fp, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 04B08DE2 		add	fp, sp, #4
 291              	.LCFI3:
 292              		.cfi_def_cfa 11, 4
 293 0008 08D04DE2 		sub	sp, sp, #8
 294 000c 08000BE5 		str	r0, [fp, #-8]
 295              	.L5:
 129:../CX3RDKOV5640.c ****     /* Application failed with the error code status */
 130:../CX3RDKOV5640.c **** 
 131:../CX3RDKOV5640.c ****     /* Add custom debug or recovery actions here */
 132:../CX3RDKOV5640.c **** 
 133:../CX3RDKOV5640.c ****     /* Loop indefinitely */
 134:../CX3RDKOV5640.c ****     for (;;)
 135:../CX3RDKOV5640.c ****     {
 136:../CX3RDKOV5640.c ****         /* Thread sleep : 100 ms */
 137:../CX3RDKOV5640.c ****         CyU3PThreadSleep (100);
 296              		.loc 1 137 0 discriminator 1
 297 0010 6400A0E3 		mov	r0, #100
 298 0014 FEFFFFEB 		bl	_tx_thread_sleep
 138:../CX3RDKOV5640.c ****     }
 299              		.loc 1 138 0 discriminator 1
 300 0018 FCFFFFEA 		b	.L5
 301              		.cfi_endproc
 302              	.LFE1:
 304              		.section	.text.esUVCUvcAddHeader,"ax",%progbits
 305              		.align	2
 307              	esUVCUvcAddHeader:
 308              	.LFB2:
 139:../CX3RDKOV5640.c **** }
 140:../CX3RDKOV5640.c **** 
 141:../CX3RDKOV5640.c **** 
 142:../CX3RDKOV5640.c **** /* UVC header addition function */
 143:../CX3RDKOV5640.c ****     static void
 144:../CX3RDKOV5640.c **** esUVCUvcAddHeader (
 145:../CX3RDKOV5640.c ****         uint8_t *buffer_p,      /* Buffer pointer */
 146:../CX3RDKOV5640.c ****         uint8_t frameInd        /* EOF or normal frame indication */
 147:../CX3RDKOV5640.c ****         )
 148:../CX3RDKOV5640.c **** {
 309              		.loc 1 148 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 00482DE9 		stmfd	sp!, {fp, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 11, -8
 317              		.cfi_offset 14, -4
 318 0004 04B08DE2 		add	fp, sp, #4
 319              	.LCFI5:
 320              		.cfi_def_cfa 11, 4
 321 0008 08D04DE2 		sub	sp, sp, #8
 322 000c 08000BE5 		str	r0, [fp, #-8]
 323 0010 0130A0E1 		mov	r3, r1
 324 0014 09304BE5 		strb	r3, [fp, #-9]
 149:../CX3RDKOV5640.c ****     /* Copy header to buffer */
 150:../CX3RDKOV5640.c ****     CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, ES_UVC_HEADER_LENGTH);
 325              		.loc 1 150 0
 326 0018 08001BE5 		ldr	r0, [fp, #-8]
 327 001c 50109FE5 		ldr	r1, .L8
 328 0020 0C20A0E3 		mov	r2, #12
 329 0024 FEFFFFEB 		bl	CyU3PMemCopy
 151:../CX3RDKOV5640.c **** 
 152:../CX3RDKOV5640.c ****     /* Check if last packet of the frame. */
 153:../CX3RDKOV5640.c ****     if (frameInd == ES_UVC_HEADER_EOF)
 330              		.loc 1 153 0
 331 0028 09305BE5 		ldrb	r3, [fp, #-9]	@ zero_extendqisi2
 332 002c 020053E3 		cmp	r3, #2
 333 0030 0D00001A 		bne	.L6
 154:../CX3RDKOV5640.c ****     {
 155:../CX3RDKOV5640.c ****         /* Modify UVC header to toggle Frame ID */
 156:../CX3RDKOV5640.c ****         glUVCHeader[1] ^= ES_UVC_HEADER_FRAME_ID;
 334              		.loc 1 156 0
 335 0034 38309FE5 		ldr	r3, .L8
 336 0038 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 337 003c 013023E2 		eor	r3, r3, #1
 338 0040 FF2003E2 		and	r2, r3, #255
 339 0044 28309FE5 		ldr	r3, .L8
 340 0048 0120C3E5 		strb	r2, [r3, #1]
 157:../CX3RDKOV5640.c **** 
 158:../CX3RDKOV5640.c ****         /* Indicate End of Frame in the buffer */
 159:../CX3RDKOV5640.c ****         buffer_p[1] |=  ES_UVC_HEADER_EOF;
 341              		.loc 1 159 0
 342 004c 08301BE5 		ldr	r3, [fp, #-8]
 343 0050 013083E2 		add	r3, r3, #1
 344 0054 08201BE5 		ldr	r2, [fp, #-8]
 345 0058 012082E2 		add	r2, r2, #1
 346 005c 0020D2E5 		ldrb	r2, [r2]	@ zero_extendqisi2
 347 0060 022082E3 		orr	r2, r2, #2
 348 0064 FF2002E2 		and	r2, r2, #255
 349 0068 0020C3E5 		strb	r2, [r3]
 350              	.L6:
 160:../CX3RDKOV5640.c ****     }
 161:../CX3RDKOV5640.c **** }
 351              		.loc 1 161 0
 352 006c 04D04BE2 		sub	sp, fp, #4
 353              		@ sp needed
 354 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
 355              	.L9:
 356              		.align	2
 357              	.L8:
 358 0074 00000000 		.word	glUVCHeader
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0A0D4170 		.ascii	"\012\015AplnStrt:ChannelReset Err = 0x%x\000"
 365      6C6E5374 
 365      72743A43 
 365      68616E6E 
 365      656C5265 
 366 0023 00       		.align	2
 367              	.LC1:
 368 0024 0A0D4170 		.ascii	"\012\015AplnStrt:SetXfer Err = 0x%x\000"
 368      6C6E5374 
 368      72743A53 
 368      65745866 
 368      65722045 
 369              		.section	.text.esUVCUvcApplnStart,"ax",%progbits
 370              		.align	2
 371              		.global	esUVCUvcApplnStart
 373              	esUVCUvcApplnStart:
 374              	.LFB3:
 162:../CX3RDKOV5640.c **** 
 163:../CX3RDKOV5640.c **** 
 164:../CX3RDKOV5640.c **** /* This function starts the video streaming application. It is called
 165:../CX3RDKOV5640.c ****  * when there is a SET_INTERFACE event for alternate interface 1
 166:../CX3RDKOV5640.c ****  * (in case of UVC over Isochronous Endpoint usage) or when a
 167:../CX3RDKOV5640.c ****  * COMMIT_CONTROL(SET_CUR) request is received (when using BULK only UVC).
 168:../CX3RDKOV5640.c ****  */
 169:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t
 170:../CX3RDKOV5640.c **** esUVCUvcApplnStart (void)
 171:../CX3RDKOV5640.c **** {
 375              		.loc 1 171 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 00482DE9 		stmfd	sp!, {fp, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 11, -8
 383              		.cfi_offset 14, -4
 384 0004 04B08DE2 		add	fp, sp, #4
 385              	.LCFI7:
 386              		.cfi_def_cfa 11, 4
 387 0008 10D04DE2 		sub	sp, sp, #16
 172:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 388              		.loc 1 172 0
 389 000c 0030A0E3 		mov	r3, #0
 390 0010 08300BE5 		str	r3, [fp, #-8]
 173:../CX3RDKOV5640.c **** 
 174:../CX3RDKOV5640.c ****     glIsApplnActive = CyTrue;
 391              		.loc 1 174 0
 392 0014 60319FE5 		ldr	r3, .L15
 393 0018 0120A0E3 		mov	r2, #1
 394 001c 002083E5 		str	r2, [r3]
 175:../CX3RDKOV5640.c ****     glDmaDone = 0;
 395              		.loc 1 175 0
 396 0020 58319FE5 		ldr	r3, .L15+4
 397 0024 0020A0E3 		mov	r2, #0
 398 0028 002083E5 		str	r2, [r3]
 176:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 399              		.loc 1 176 0
 400 002c 50319FE5 		ldr	r3, .L15+8
 401 0030 0020A0E3 		mov	r2, #0
 402 0034 002083E5 		str	r2, [r3]
 177:../CX3RDKOV5640.c ****     glHitFV = CyFalse;
 403              		.loc 1 177 0
 404 0038 48319FE5 		ldr	r3, .L15+12
 405 003c 0020A0E3 		mov	r2, #0
 406 0040 002083E5 		str	r2, [r3]
 178:../CX3RDKOV5640.c ****     doLpmDisable = CyTrue;
 407              		.loc 1 178 0
 408 0044 40319FE5 		ldr	r3, .L15+16
 409 0048 0120A0E3 		mov	r2, #1
 410 004c 002083E5 		str	r2, [r3]
 179:../CX3RDKOV5640.c **** 
 180:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 181:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 411              		.loc 1 181 0
 412 0050 38019FE5 		ldr	r0, .L15+20
 413 0054 FEFFFFEB 		bl	_txe_timer_deactivate
 182:../CX3RDKOV5640.c **** #endif
 183:../CX3RDKOV5640.c **** 
 184:../CX3RDKOV5640.c **** 
 185:../CX3RDKOV5640.c ****     /* Place the EP in NAK mode before cleaning up the pipe. */
 186:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 414              		.loc 1 186 0
 415 0058 8300A0E3 		mov	r0, #131
 416 005c 0110A0E3 		mov	r1, #1
 417 0060 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 187:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 418              		.loc 1 187 0
 419 0064 6400A0E3 		mov	r0, #100
 420 0068 FEFFFFEB 		bl	CyFx3BusyWait
 188:../CX3RDKOV5640.c **** 
 189:../CX3RDKOV5640.c ****     /* Reset USB EP and DMA */
 190:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 421              		.loc 1 190 0
 422 006c 8300A0E3 		mov	r0, #131
 423 0070 FEFFFFEB 		bl	CyU3PUsbFlushEp
 191:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 424              		.loc 1 191 0
 425 0074 18019FE5 		ldr	r0, .L15+24
 426 0078 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 427 007c 08000BE5 		str	r0, [fp, #-8]
 192:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 428              		.loc 1 192 0
 429 0080 08301BE5 		ldr	r3, [fp, #-8]
 430 0084 000053E3 		cmp	r3, #0
 431 0088 0500000A 		beq	.L11
 193:../CX3RDKOV5640.c ****     {
 194:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 432              		.loc 1 194 0
 433 008c 0400A0E3 		mov	r0, #4
 434 0090 00119FE5 		ldr	r1, .L15+28
 435 0094 08201BE5 		ldr	r2, [fp, #-8]
 436 0098 FEFFFFEB 		bl	CyU3PDebugPrint
 195:../CX3RDKOV5640.c ****         return status;
 437              		.loc 1 195 0
 438 009c 08301BE5 		ldr	r3, [fp, #-8]
 439 00a0 320000EA 		b	.L12
 440              	.L11:
 196:../CX3RDKOV5640.c ****     }
 197:../CX3RDKOV5640.c **** 
 198:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 441              		.loc 1 198 0
 442 00a4 E8009FE5 		ldr	r0, .L15+24
 443 00a8 0010A0E3 		mov	r1, #0
 444 00ac 0020A0E3 		mov	r2, #0
 445 00b0 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetXfer
 446 00b4 08000BE5 		str	r0, [fp, #-8]
 199:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 447              		.loc 1 199 0
 448 00b8 08301BE5 		ldr	r3, [fp, #-8]
 449 00bc 000053E3 		cmp	r3, #0
 450 00c0 0500000A 		beq	.L13
 200:../CX3RDKOV5640.c ****     {
 201:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 451              		.loc 1 201 0
 452 00c4 0400A0E3 		mov	r0, #4
 453 00c8 CC109FE5 		ldr	r1, .L15+32
 454 00cc 08201BE5 		ldr	r2, [fp, #-8]
 455 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 202:../CX3RDKOV5640.c ****         return status;
 456              		.loc 1 202 0
 457 00d4 08301BE5 		ldr	r3, [fp, #-8]
 458 00d8 240000EA 		b	.L12
 459              	.L13:
 203:../CX3RDKOV5640.c ****     }
 204:../CX3RDKOV5640.c **** 
 205:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 460              		.loc 1 205 0
 461 00dc 8300A0E3 		mov	r0, #131
 462 00e0 0010A0E3 		mov	r1, #0
 463 00e4 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 206:../CX3RDKOV5640.c ****     CyU3PBusyWait (200);
 464              		.loc 1 206 0
 465 00e8 C800A0E3 		mov	r0, #200
 466 00ec FEFFFFEB 		bl	CyFx3BusyWait
 207:../CX3RDKOV5640.c **** //
 208:../CX3RDKOV5640.c **** //    /* Place the EP in NAK mode before cleaning up the pipe. */
 209:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 210:../CX3RDKOV5640.c **** //    CyU3PBusyWait (100);
 211:../CX3RDKOV5640.c **** //
 212:../CX3RDKOV5640.c **** //    /* Reset USB EP and DMA */
 213:../CX3RDKOV5640.c **** //    CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 214:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 215:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 216:../CX3RDKOV5640.c **** //    {
 217:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 218:../CX3RDKOV5640.c **** //        return status;
 219:../CX3RDKOV5640.c **** //    }
 220:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 221:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 222:../CX3RDKOV5640.c **** //    {
 223:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 224:../CX3RDKOV5640.c **** //        return status;
 225:../CX3RDKOV5640.c **** //    }
 226:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 227:../CX3RDKOV5640.c **** //    CyU3PBusyWait (200);
 228:../CX3RDKOV5640.c **** 
 229:../CX3RDKOV5640.c **** 	 /* Night Mode function
 230:../CX3RDKOV5640.c **** 	 *  --------------------
 231:../CX3RDKOV5640.c **** 	 *  esOV5640_Nightmode API is used to enable the Nightmode
 232:../CX3RDKOV5640.c **** 	 *  of OV5640 sensor.
 233:../CX3RDKOV5640.c **** 	 *  Set Enable -- Cytrue to enable Nightmode
 234:../CX3RDKOV5640.c **** 	 * 				  CyFalse to Disable Nightmode
 235:../CX3RDKOV5640.c **** 	 *
 236:../CX3RDKOV5640.c **** 	 *  Set NightMode_option -- 1 to 6 to set different night modes
 237:../CX3RDKOV5640.c **** 	 *
 238:../CX3RDKOV5640.c **** 	 * To test different night modes, uncomment the below statement and build the firmware
 239:../CX3RDKOV5640.c **** 	 */
 240:../CX3RDKOV5640.c ****     //TODO Change this Function to "Sensor Specific" Nightmode Function to enable the nightmode(If 
 241:../CX3RDKOV5640.c **** 	/*esOV5640_Nightmode(CyTrue,3);*/
 242:../CX3RDKOV5640.c **** 
 243:../CX3RDKOV5640.c **** 
 244:../CX3RDKOV5640.c ****     /* Resume the Fixed Function GPIF State machine */
 245:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyFalse);
 467              		.loc 1 245 0
 468 00f0 0000A0E3 		mov	r0, #0
 469 00f4 FEFFFFEB 		bl	CyU3PGpifSMControl
 246:../CX3RDKOV5640.c **** 
 247:../CX3RDKOV5640.c ****     glActiveSocket = 0;
 470              		.loc 1 247 0
 471 00f8 A0309FE5 		ldr	r3, .L15+36
 472 00fc 0020A0E3 		mov	r2, #0
 473 0100 0020C3E5 		strb	r2, [r3]
 248:../CX3RDKOV5640.c ****     CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 474              		.loc 1 248 0
 475 0104 0230A0E3 		mov	r3, #2
 476 0108 00308DE5 		str	r3, [sp]
 477 010c 90009FE5 		ldr	r0, .L15+40
 478 0110 0010A0E3 		mov	r1, #0
 479 0114 88209FE5 		ldr	r2, .L15+40
 480 0118 0030A0E3 		mov	r3, #0
 481 011c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 249:../CX3RDKOV5640.c ****     		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 250:../CX3RDKOV5640.c **** 
 251:../CX3RDKOV5640.c ****     CyU3PThreadSleep(10);
 482              		.loc 1 251 0
 483 0120 0A00A0E3 		mov	r0, #10
 484 0124 FEFFFFEB 		bl	_tx_thread_sleep
 252:../CX3RDKOV5640.c **** 
 253:../CX3RDKOV5640.c ****     /* Wake Mipi interface and Image Sensor */
 254:../CX3RDKOV5640.c ****     CyU3PMipicsiWakeup();
 485              		.loc 1 254 0
 486 0128 FEFFFFEB 		bl	CyU3PMipicsiWakeup
 255:../CX3RDKOV5640.c **** 
 256:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the sensor
 257:../CX3RDKOV5640.c ****     esCamera_Power_Up();
 487              		.loc 1 257 0
 488 012c FEFFFFEB 		bl	esCamera_Power_Up
 258:../CX3RDKOV5640.c **** 
 259:../CX3RDKOV5640.c ****     glMipiActive = CyTrue;
 489              		.loc 1 259 0
 490 0130 70309FE5 		ldr	r3, .L15+44
 491 0134 0120A0E3 		mov	r2, #1
 492 0138 002083E5 		str	r2, [r3]
 260:../CX3RDKOV5640.c **** 
 261:../CX3RDKOV5640.c ****     //TODO Change this Function with "Sensor Specific" AutoFocus Function to Set the AutoFocus of t
 262:../CX3RDKOV5640.c **** 	if(glStillCaptureStart!= CyTrue)
 493              		.loc 1 262 0
 494 013c 68309FE5 		ldr	r3, .L15+48
 495 0140 003093E5 		ldr	r3, [r3]
 496 0144 010053E3 		cmp	r3, #1
 497 0148 0700000A 		beq	.L14
 263:../CX3RDKOV5640.c **** 	{
 264:../CX3RDKOV5640.c **** 		if(g_IsAutoFocus)
 498              		.loc 1 264 0
 499 014c 5C309FE5 		ldr	r3, .L15+52
 500 0150 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0154 000053E3 		cmp	r3, #0
 502 0158 0300000A 		beq	.L14
 265:../CX3RDKOV5640.c **** 			esOV5640_SetAutofocus(g_IsAutoFocus);
 503              		.loc 1 265 0
 504 015c 4C309FE5 		ldr	r3, .L15+52
 505 0160 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0164 0300A0E1 		mov	r0, r3
 507 0168 FEFFFFEB 		bl	esOV5640_SetAutofocus
 508              	.L14:
 266:../CX3RDKOV5640.c **** 	}
 267:../CX3RDKOV5640.c ****     return CY_U3P_SUCCESS;
 509              		.loc 1 267 0
 510 016c 0030A0E3 		mov	r3, #0
 511              	.L12:
 268:../CX3RDKOV5640.c **** }
 512              		.loc 1 268 0
 513 0170 0300A0E1 		mov	r0, r3
 514 0174 04D04BE2 		sub	sp, fp, #4
 515              		@ sp needed
 516 0178 0088BDE8 		ldmfd	sp!, {fp, pc}
 517              	.L16:
 518              		.align	2
 519              	.L15:
 520 017c 00000000 		.word	glIsApplnActive
 521 0180 00000000 		.word	glDmaDone
 522 0184 00000000 		.word	glDMATxCount
 523 0188 00000000 		.word	glHitFV
 524 018c 00000000 		.word	doLpmDisable
 525 0190 00000000 		.word	UvcTimer
 526 0194 00000000 		.word	glChHandleUVCStream
 527 0198 00000000 		.word	.LC0
 528 019c 24000000 		.word	.LC1
 529 01a0 00000000 		.word	glActiveSocket
 530 01a4 01010000 		.word	257
 531 01a8 00000000 		.word	glMipiActive
 532 01ac 00000000 		.word	glStillCaptureStart
 533 01b0 00000000 		.word	g_IsAutoFocus
 534              		.cfi_endproc
 535              	.LFE3:
 537              		.section	.rodata
 538 0042 0000     		.align	2
 539              	.LC2:
 540 0044 0A0D4170 		.ascii	"\012\015AplnStop:ChannelReset Err = 0x%x\000"
 540      6C6E5374 
 540      6F703A43 
 540      68616E6E 
 540      656C5265 
 541              		.section	.text.esUVCUvcApplnStop,"ax",%progbits
 542              		.align	2
 543              		.global	esUVCUvcApplnStop
 545              	esUVCUvcApplnStop:
 546              	.LFB4:
 269:../CX3RDKOV5640.c **** 
 270:../CX3RDKOV5640.c **** /* This function stops the video streaming. It is called from the USB event
 271:../CX3RDKOV5640.c ****  * handler, when there is a reset / disconnect or SET_INTERFACE for alternate
 272:../CX3RDKOV5640.c ****  * interface 0 in case of ischronous implementation or when a Clear Feature (Halt)
 273:../CX3RDKOV5640.c ****  * request is received (in case of bulk only implementation).
 274:../CX3RDKOV5640.c ****  */
 275:../CX3RDKOV5640.c ****     void
 276:../CX3RDKOV5640.c **** esUVCUvcApplnStop(void)
 277:../CX3RDKOV5640.c **** {
 547              		.loc 1 277 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 00482DE9 		stmfd	sp!, {fp, lr}
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 11, -8
 555              		.cfi_offset 14, -4
 556 0004 04B08DE2 		add	fp, sp, #4
 557              	.LCFI9:
 558              		.cfi_def_cfa 11, 4
 559 0008 08D04DE2 		sub	sp, sp, #8
 278:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 560              		.loc 1 278 0
 561 000c 0030A0E3 		mov	r3, #0
 562 0010 08300BE5 		str	r3, [fp, #-8]
 279:../CX3RDKOV5640.c **** 
 280:../CX3RDKOV5640.c ****     /* Update the flag so that the application thread is notified of this. */
 281:../CX3RDKOV5640.c ****     glIsApplnActive = CyFalse;
 563              		.loc 1 281 0
 564 0014 DC309FE5 		ldr	r3, .L20
 565 0018 0020A0E3 		mov	r2, #0
 566 001c 002083E5 		str	r2, [r3]
 282:../CX3RDKOV5640.c **** 
 283:../CX3RDKOV5640.c ****     /* Stop the image sensor and CX3 mipi interface */
 284:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSleep();
 567              		.loc 1 284 0
 568 0020 FEFFFFEB 		bl	CyU3PMipicsiSleep
 569 0024 08000BE5 		str	r0, [fp, #-8]
 285:../CX3RDKOV5640.c **** 
 286:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
 287:../CX3RDKOV5640.c ****     esCamera_Power_Down();
 570              		.loc 1 287 0
 571 0028 FEFFFFEB 		bl	esCamera_Power_Down
 288:../CX3RDKOV5640.c **** 
 289:../CX3RDKOV5640.c ****     glMipiActive = CyFalse;
 572              		.loc 1 289 0
 573 002c C8309FE5 		ldr	r3, .L20+4
 574 0030 0020A0E3 		mov	r2, #0
 575 0034 002083E5 		str	r2, [r3]
 290:../CX3RDKOV5640.c **** 
 291:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 292:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 576              		.loc 1 292 0
 577 0038 C0009FE5 		ldr	r0, .L20+8
 578 003c FEFFFFEB 		bl	_txe_timer_deactivate
 293:../CX3RDKOV5640.c **** #endif
 294:../CX3RDKOV5640.c **** 
 295:../CX3RDKOV5640.c ****     /* Pause the GPIF interface*/
 296:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 579              		.loc 1 296 0
 580 0040 0100A0E3 		mov	r0, #1
 581 0044 FEFFFFEB 		bl	CyU3PGpifSMControl
 297:../CX3RDKOV5640.c **** 
 298:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 582              		.loc 1 298 0
 583 0048 8300A0E3 		mov	r0, #131
 584 004c 0110A0E3 		mov	r1, #1
 585 0050 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 299:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 586              		.loc 1 299 0
 587 0054 6400A0E3 		mov	r0, #100
 588 0058 FEFFFFEB 		bl	CyFx3BusyWait
 300:../CX3RDKOV5640.c **** 
 301:../CX3RDKOV5640.c ****     /* Abort and destroy the video streaming channel */
 302:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set DSCR_SIZE field i
 303:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 589              		.loc 1 303 0
 590 005c A0009FE5 		ldr	r0, .L20+12
 591 0060 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 592 0064 08000BE5 		str	r0, [fp, #-8]
 304:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 593              		.loc 1 304 0
 594 0068 08301BE5 		ldr	r3, [fp, #-8]
 595 006c 000053E3 		cmp	r3, #0
 596 0070 0300000A 		beq	.L18
 305:../CX3RDKOV5640.c ****     {
 306:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStop:ChannelReset Err = 0x%x",status);
 597              		.loc 1 306 0
 598 0074 0400A0E3 		mov	r0, #4
 599 0078 88109FE5 		ldr	r1, .L20+16
 600 007c 08201BE5 		ldr	r2, [fp, #-8]
 601 0080 FEFFFFEB 		bl	CyU3PDebugPrint
 602              	.L18:
 307:../CX3RDKOV5640.c ****     }
 308:../CX3RDKOV5640.c ****     CyU3PThreadSleep(25);
 603              		.loc 1 308 0
 604 0084 1900A0E3 		mov	r0, #25
 605 0088 FEFFFFEB 		bl	_tx_thread_sleep
 309:../CX3RDKOV5640.c **** 
 310:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
 311:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 606              		.loc 1 311 0
 607 008c 8300A0E3 		mov	r0, #131
 608 0090 FEFFFFEB 		bl	CyU3PUsbFlushEp
 312:../CX3RDKOV5640.c ****     /* Clear the stall condition and sequence numbers if ClearFeature. */
 313:../CX3RDKOV5640.c ****     if (glIsClearFeature)
 609              		.loc 1 313 0
 610 0094 70309FE5 		ldr	r3, .L20+20
 611 0098 003093E5 		ldr	r3, [r3]
 612 009c 000053E3 		cmp	r3, #0
 613 00a0 0600000A 		beq	.L19
 314:../CX3RDKOV5640.c ****     {
 315:../CX3RDKOV5640.c ****         CyU3PUsbStall (ES_UVC_EP_BULK_VIDEO, CyFalse, CyTrue);
 614              		.loc 1 315 0
 615 00a4 8300A0E3 		mov	r0, #131
 616 00a8 0010A0E3 		mov	r1, #0
 617 00ac 0120A0E3 		mov	r2, #1
 618 00b0 FEFFFFEB 		bl	CyU3PUsbStall
 316:../CX3RDKOV5640.c ****         glIsClearFeature = CyFalse;
 619              		.loc 1 316 0
 620 00b4 50309FE5 		ldr	r3, .L20+20
 621 00b8 0020A0E3 		mov	r2, #0
 622 00bc 002083E5 		str	r2, [r3]
 623              	.L19:
 317:../CX3RDKOV5640.c ****     }
 318:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 624              		.loc 1 318 0
 625 00c0 8300A0E3 		mov	r0, #131
 626 00c4 0010A0E3 		mov	r1, #0
 627 00c8 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 319:../CX3RDKOV5640.c **** 	CyU3PBusyWait (200);
 628              		.loc 1 319 0
 629 00cc C800A0E3 		mov	r0, #200
 630 00d0 FEFFFFEB 		bl	CyFx3BusyWait
 320:../CX3RDKOV5640.c **** 
 321:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 631              		.loc 1 321 0
 632 00d4 34309FE5 		ldr	r3, .L20+24
 633 00d8 0020A0E3 		mov	r2, #0
 634 00dc 002083E5 		str	r2, [r3]
 322:../CX3RDKOV5640.c ****     glDmaDone = 0;
 635              		.loc 1 322 0
 636 00e0 2C309FE5 		ldr	r3, .L20+28
 637 00e4 0020A0E3 		mov	r2, #0
 638 00e8 002083E5 		str	r2, [r3]
 323:../CX3RDKOV5640.c **** 
 324:../CX3RDKOV5640.c ****     /* Enable USB 3.0 LPM */
 325:../CX3RDKOV5640.c ****     CyU3PUsbLPMEnable ();
 639              		.loc 1 325 0
 640 00ec FEFFFFEB 		bl	CyU3PUsbLPMEnable
 326:../CX3RDKOV5640.c **** }
 641              		.loc 1 326 0
 642 00f0 04D04BE2 		sub	sp, fp, #4
 643              		@ sp needed
 644 00f4 0088BDE8 		ldmfd	sp!, {fp, pc}
 645              	.L21:
 646              		.align	2
 647              	.L20:
 648 00f8 00000000 		.word	glIsApplnActive
 649 00fc 00000000 		.word	glMipiActive
 650 0100 00000000 		.word	UvcTimer
 651 0104 00000000 		.word	glChHandleUVCStream
 652 0108 44000000 		.word	.LC2
 653 010c 00000000 		.word	glIsClearFeature
 654 0110 00000000 		.word	glDMATxCount
 655 0114 00000000 		.word	glDmaDone
 656              		.cfi_endproc
 657              	.LFE4:
 659              		.section	.rodata
 660 0067 00       		.align	2
 661              	.LC3:
 662 0068 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK0 Err = 0x%x\000"
 662      69664342 
 662      3A577261 
 662      70557020 
 662      53434B30 
 663              		.align	2
 664              	.LC4:
 665 0088 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK1 Err = 0x%x\000"
 665      69664342 
 665      3A577261 
 665      70557020 
 665      53434B31 
 666              		.section	.text.esUVCGpifCB,"ax",%progbits
 667              		.align	2
 668              		.global	esUVCGpifCB
 670              	esUVCGpifCB:
 671              	.LFB5:
 327:../CX3RDKOV5640.c **** 
 328:../CX3RDKOV5640.c **** /* GpifCB callback function is invoked when FV triggers GPIF interrupt */
 329:../CX3RDKOV5640.c ****     void
 330:../CX3RDKOV5640.c **** esUVCGpifCB (
 331:../CX3RDKOV5640.c ****         CyU3PGpifEventType event,
 332:../CX3RDKOV5640.c ****         uint8_t currentState
 333:../CX3RDKOV5640.c ****         )
 334:../CX3RDKOV5640.c **** {
 672              		.loc 1 334 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 00482DE9 		stmfd	sp!, {fp, lr}
 677              	.LCFI10:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 11, -8
 680              		.cfi_offset 14, -4
 681 0004 04B08DE2 		add	fp, sp, #4
 682              	.LCFI11:
 683              		.cfi_def_cfa 11, 4
 684 0008 10D04DE2 		sub	sp, sp, #16
 685 000c 0020A0E1 		mov	r2, r0
 686 0010 0130A0E1 		mov	r3, r1
 687 0014 0D204BE5 		strb	r2, [fp, #-13]
 688 0018 0E304BE5 		strb	r3, [fp, #-14]
 335:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 689              		.loc 1 335 0
 690 001c 0030A0E3 		mov	r3, #0
 691 0020 08300BE5 		str	r3, [fp, #-8]
 336:../CX3RDKOV5640.c ****     /* Handle interrupt from the State Machine */
 337:../CX3RDKOV5640.c ****     if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
 692              		.loc 1 337 0
 693 0024 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 694 0028 010053E3 		cmp	r3, #1
 695 002c 1C00001A 		bne	.L22
 338:../CX3RDKOV5640.c ****     {
 339:../CX3RDKOV5640.c ****         /* Wrapup Socket 0*/
 340:../CX3RDKOV5640.c ****         if(currentState == CX3_PARTIAL_BUFFER_IN_SCK0)
 696              		.loc 1 340 0
 697 0030 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 698 0034 090053E3 		cmp	r3, #9
 699 0038 0B00001A 		bne	.L24
 341:../CX3RDKOV5640.c ****         {
 342:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,0);
 700              		.loc 1 342 0
 701 003c 68009FE5 		ldr	r0, .L26
 702 0040 0010A0E3 		mov	r1, #0
 703 0044 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 704 0048 08000BE5 		str	r0, [fp, #-8]
 343:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 705              		.loc 1 343 0
 706 004c 08301BE5 		ldr	r3, [fp, #-8]
 707 0050 000053E3 		cmp	r3, #0
 708 0054 1200000A 		beq	.L22
 344:../CX3RDKOV5640.c ****             {
 345:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK0 Err = 0x%x",status);
 709              		.loc 1 345 0
 710 0058 0400A0E3 		mov	r0, #4
 711 005c 4C109FE5 		ldr	r1, .L26+4
 712 0060 08201BE5 		ldr	r2, [fp, #-8]
 713 0064 FEFFFFEB 		bl	CyU3PDebugPrint
 714 0068 0D0000EA 		b	.L22
 715              	.L24:
 346:../CX3RDKOV5640.c ****             }
 347:../CX3RDKOV5640.c ****         }
 348:../CX3RDKOV5640.c ****         /* Wrapup Socket 1 */
 349:../CX3RDKOV5640.c ****         else if(currentState == CX3_PARTIAL_BUFFER_IN_SCK1)
 716              		.loc 1 349 0
 717 006c 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 718 0070 0A0053E3 		cmp	r3, #10
 719 0074 0A00001A 		bne	.L22
 350:../CX3RDKOV5640.c ****         {
 351:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,1);
 720              		.loc 1 351 0
 721 0078 2C009FE5 		ldr	r0, .L26
 722 007c 0110A0E3 		mov	r1, #1
 723 0080 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 724 0084 08000BE5 		str	r0, [fp, #-8]
 352:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 725              		.loc 1 352 0
 726 0088 08301BE5 		ldr	r3, [fp, #-8]
 727 008c 000053E3 		cmp	r3, #0
 728 0090 0300000A 		beq	.L22
 353:../CX3RDKOV5640.c ****             {
 354:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK1 Err = 0x%x",status);
 729              		.loc 1 354 0
 730 0094 0400A0E3 		mov	r0, #4
 731 0098 14109FE5 		ldr	r1, .L26+8
 732 009c 08201BE5 		ldr	r2, [fp, #-8]
 733 00a0 FEFFFFEB 		bl	CyU3PDebugPrint
 734              	.L22:
 355:../CX3RDKOV5640.c ****             }
 356:../CX3RDKOV5640.c ****         }
 357:../CX3RDKOV5640.c ****     }
 358:../CX3RDKOV5640.c **** #ifdef VISDebug
 359:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rJump into GPIFCB: event %d currentState %d", event, currentState);
 360:../CX3RDKOV5640.c **** #endif
 361:../CX3RDKOV5640.c **** }
 735              		.loc 1 361 0
 736 00a4 04D04BE2 		sub	sp, fp, #4
 737              		@ sp needed
 738 00a8 0088BDE8 		ldmfd	sp!, {fp, pc}
 739              	.L27:
 740              		.align	2
 741              	.L26:
 742 00ac 00000000 		.word	glChHandleUVCStream
 743 00b0 68000000 		.word	.LC3
 744 00b4 88000000 		.word	.LC4
 745              		.cfi_endproc
 746              	.LFE5:
 748              		.section	.text.esUVCUvcAppDmaCallback,"ax",%progbits
 749              		.align	2
 750              		.global	esUVCUvcAppDmaCallback
 752              	esUVCUvcAppDmaCallback:
 753              	.LFB6:
 362:../CX3RDKOV5640.c **** 
 363:../CX3RDKOV5640.c **** 
 364:../CX3RDKOV5640.c **** /* DMA callback function to handle the produce and consume events. */
 365:../CX3RDKOV5640.c ****     void
 366:../CX3RDKOV5640.c **** esUVCUvcAppDmaCallback (
 367:../CX3RDKOV5640.c ****         CyU3PDmaMultiChannel   *chHandle,
 368:../CX3RDKOV5640.c ****         CyU3PDmaCbType_t  type,
 369:../CX3RDKOV5640.c ****         CyU3PDmaCBInput_t *input
 370:../CX3RDKOV5640.c ****         )
 371:../CX3RDKOV5640.c **** {
 754              		.loc 1 371 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 32
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 00482DE9 		stmfd	sp!, {fp, lr}
 759              	.LCFI12:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 11, -8
 762              		.cfi_offset 14, -4
 763 0004 04B08DE2 		add	fp, sp, #4
 764              	.LCFI13:
 765              		.cfi_def_cfa 11, 4
 766 0008 28D04DE2 		sub	sp, sp, #40
 767 000c 18000BE5 		str	r0, [fp, #-24]
 768 0010 0130A0E1 		mov	r3, r1
 769 0014 20200BE5 		str	r2, [fp, #-32]
 770 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 372:../CX3RDKOV5640.c ****     CyU3PDmaBuffer_t DmaBuffer;
 373:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 771              		.loc 1 373 0
 772 001c 0030A0E3 		mov	r3, #0
 773 0020 08300BE5 		str	r3, [fp, #-8]
 374:../CX3RDKOV5640.c **** 
 375:../CX3RDKOV5640.c ****     if (type == CY_U3P_DMA_CB_PROD_EVENT)
 774              		.loc 1 375 0
 775 0024 BA315BE1 		ldrh	r3, [fp, #-26]
 776 0028 080053E3 		cmp	r3, #8
 777 002c 5800001A 		bne	.L29
 376:../CX3RDKOV5640.c ****     {
 377:../CX3RDKOV5640.c ****         /* This is a produce event notification to the CPU. This notification is
 378:../CX3RDKOV5640.c ****          * received upon reception of every buffer. The buffer will not be sent
 379:../CX3RDKOV5640.c ****          * out unless it is explicitly committed. The call shall fail if there
 380:../CX3RDKOV5640.c ****          * is a bus reset / usb disconnect or if there is any application error. */
 381:../CX3RDKOV5640.c **** 
 382:../CX3RDKOV5640.c ****         /* Disable USB 3.0 LPM while Buffer is being transmitted out*/
 383:../CX3RDKOV5640.c ****         if ((CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED) && (doLpmDisable))
 778              		.loc 1 383 0
 779 0030 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 780 0034 0030A0E1 		mov	r3, r0
 781 0038 030053E3 		cmp	r3, #3
 782 003c 0B00001A 		bne	.L30
 783              		.loc 1 383 0 is_stmt 0 discriminator 1
 784 0040 38339FE5 		ldr	r3, .L43
 785 0044 003093E5 		ldr	r3, [r3]
 786 0048 000053E3 		cmp	r3, #0
 787 004c 0700000A 		beq	.L30
 384:../CX3RDKOV5640.c ****         {
 385:../CX3RDKOV5640.c ****             CyU3PUsbLPMDisable ();
 788              		.loc 1 385 0 is_stmt 1
 789 0050 FEFFFFEB 		bl	CyU3PUsbLPMDisable
 386:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 790              		.loc 1 386 0
 791 0054 0000A0E3 		mov	r0, #0
 792 0058 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 387:../CX3RDKOV5640.c ****             CyU3PBusyWait (200);
 793              		.loc 1 387 0
 794 005c C800A0E3 		mov	r0, #200
 795 0060 FEFFFFEB 		bl	CyFx3BusyWait
 388:../CX3RDKOV5640.c **** 
 389:../CX3RDKOV5640.c ****             doLpmDisable = CyFalse;
 796              		.loc 1 389 0
 797 0064 14339FE5 		ldr	r3, .L43
 798 0068 0020A0E3 		mov	r2, #0
 799 006c 002083E5 		str	r2, [r3]
 800              	.L30:
 390:../CX3RDKOV5640.c ****         }
 391:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 392:../CX3RDKOV5640.c ****             CyU3PTimerStart (&UvcTimer);
 801              		.loc 1 392 0
 802 0070 0C039FE5 		ldr	r0, .L43+4
 803 0074 FEFFFFEB 		bl	_txe_timer_activate
 393:../CX3RDKOV5640.c **** #endif
 394:../CX3RDKOV5640.c **** 
 395:../CX3RDKOV5640.c ****         status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 804              		.loc 1 395 0
 805 0078 14304BE2 		sub	r3, fp, #20
 806 007c 18001BE5 		ldr	r0, [fp, #-24]
 807 0080 0310A0E1 		mov	r1, r3
 808 0084 0020A0E3 		mov	r2, #0
 809 0088 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 810 008c 08000BE5 		str	r0, [fp, #-8]
 396:../CX3RDKOV5640.c **** #ifdef VISDebug
 397:../CX3RDKOV5640.c **** //    CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT CyU3PDmaMultiChannelGetBuffe
 398:../CX3RDKOV5640.c **** #endif
 399:../CX3RDKOV5640.c ****         while (status == CY_U3P_SUCCESS)
 811              		.loc 1 399 0
 812 0090 3B0000EA 		b	.L31
 813              	.L36:
 400:../CX3RDKOV5640.c ****         {
 401:../CX3RDKOV5640.c ****             /* Add Headers*/
 402:../CX3RDKOV5640.c ****             if(DmaBuffer.count < ES_UVC_DATA_BUF_SIZE)
 814              		.loc 1 402 0
 815 0094 B0215BE1 		ldrh	r2, [fp, #-16]
 816 0098 E8329FE5 		ldr	r3, .L43+8
 817 009c B030D3E1 		ldrh	r3, [r3]
 818 00a0 030052E1 		cmp	r2, r3
 819 00a4 0800002A 		bcs	.L32
 403:../CX3RDKOV5640.c ****             {
 404:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_EOF);
 820              		.loc 1 404 0
 821 00a8 14301BE5 		ldr	r3, [fp, #-20]
 822 00ac 0C3043E2 		sub	r3, r3, #12
 823 00b0 0300A0E1 		mov	r0, r3
 824 00b4 0210A0E3 		mov	r1, #2
 825 00b8 FEFFFFEB 		bl	esUVCUvcAddHeader
 405:../CX3RDKOV5640.c ****                 glHitFV = CyTrue;
 826              		.loc 1 405 0
 827 00bc C8329FE5 		ldr	r3, .L43+12
 828 00c0 0120A0E3 		mov	r2, #1
 829 00c4 002083E5 		str	r2, [r3]
 830 00c8 040000EA 		b	.L33
 831              	.L32:
 406:../CX3RDKOV5640.c **** #ifdef VISDebug
 407:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT count %x glDMATxCount++ %x", D
 408:../CX3RDKOV5640.c **** #endif
 409:../CX3RDKOV5640.c **** 
 410:../CX3RDKOV5640.c ****             }
 411:../CX3RDKOV5640.c ****             else
 412:../CX3RDKOV5640.c ****             {
 413:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_FRAME);
 832              		.loc 1 413 0
 833 00cc 14301BE5 		ldr	r3, [fp, #-20]
 834 00d0 0C3043E2 		sub	r3, r3, #12
 835 00d4 0300A0E1 		mov	r0, r3
 836 00d8 0010A0E3 		mov	r1, #0
 837 00dc FEFFFFEB 		bl	esUVCUvcAddHeader
 838              	.L33:
 414:../CX3RDKOV5640.c ****             }
 415:../CX3RDKOV5640.c **** 
 416:../CX3RDKOV5640.c ****             /* Commit Buffer to USB*/
 417:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelCommitBuffer (chHandle, (DmaBuffer.count + 12), 0);
 839              		.loc 1 417 0
 840 00e0 B0315BE1 		ldrh	r3, [fp, #-16]
 841 00e4 0C3083E2 		add	r3, r3, #12
 842 00e8 0338A0E1 		mov	r3, r3, asl #16
 843 00ec 2338A0E1 		mov	r3, r3, lsr #16
 844 00f0 18001BE5 		ldr	r0, [fp, #-24]
 845 00f4 0310A0E1 		mov	r1, r3
 846 00f8 0020A0E3 		mov	r2, #0
 847 00fc FEFFFFEB 		bl	CyU3PDmaMultiChannelCommitBuffer
 848 0100 08000BE5 		str	r0, [fp, #-8]
 418:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 849              		.loc 1 418 0
 850 0104 08301BE5 		ldr	r3, [fp, #-8]
 851 0108 000053E3 		cmp	r3, #0
 852 010c 0500000A 		beq	.L34
 419:../CX3RDKOV5640.c ****             {
 420:../CX3RDKOV5640.c ****                    CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 853              		.loc 1 420 0
 854 0110 78029FE5 		ldr	r0, .L43+16
 855 0114 1010A0E3 		mov	r1, #16
 856 0118 0020A0E3 		mov	r2, #0
 857 011c FEFFFFEB 		bl	_txe_event_flags_set
 421:../CX3RDKOV5640.c ****                    break;
 858              		.loc 1 421 0
 859 0120 0000A0E1 		mov	r0, r0	@ nop
 860 0124 930000EA 		b	.L28
 861              	.L34:
 422:../CX3RDKOV5640.c ****             }
 423:../CX3RDKOV5640.c ****             else
 424:../CX3RDKOV5640.c ****             {
 425:../CX3RDKOV5640.c ****                 glDMATxCount++;
 862              		.loc 1 425 0
 863 0128 64329FE5 		ldr	r3, .L43+20
 864 012c 003093E5 		ldr	r3, [r3]
 865 0130 012083E2 		add	r2, r3, #1
 866 0134 58329FE5 		ldr	r3, .L43+20
 867 0138 002083E5 		str	r2, [r3]
 426:../CX3RDKOV5640.c ****                 glDmaDone++;
 868              		.loc 1 426 0
 869 013c 54329FE5 		ldr	r3, .L43+24
 870 0140 003093E5 		ldr	r3, [r3]
 871 0144 012083E2 		add	r2, r3, #1
 872 0148 48329FE5 		ldr	r3, .L43+24
 873 014c 002083E5 		str	r2, [r3]
 427:../CX3RDKOV5640.c ****             }
 428:../CX3RDKOV5640.c **** 
 429:../CX3RDKOV5640.c ****             glActiveSocket ^= 1; /* Toggle the Active Socket */
 874              		.loc 1 429 0
 875 0150 44329FE5 		ldr	r3, .L43+28
 876 0154 0030D3E5 		ldrb	r3, [r3]
 877 0158 FF3003E2 		and	r3, r3, #255
 878 015c 013023E2 		eor	r3, r3, #1
 879 0160 FF2003E2 		and	r2, r3, #255
 880 0164 30329FE5 		ldr	r3, .L43+28
 881 0168 0020C3E5 		strb	r2, [r3]
 430:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 882              		.loc 1 430 0
 883 016c 14304BE2 		sub	r3, fp, #20
 884 0170 18001BE5 		ldr	r0, [fp, #-24]
 885 0174 0310A0E1 		mov	r1, r3
 886 0178 0020A0E3 		mov	r2, #0
 887 017c FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 888 0180 08000BE5 		str	r0, [fp, #-8]
 889              	.L31:
 399:../CX3RDKOV5640.c ****         {
 890              		.loc 1 399 0 discriminator 1
 891 0184 08301BE5 		ldr	r3, [fp, #-8]
 892 0188 000053E3 		cmp	r3, #0
 893 018c C0FFFF0A 		beq	.L36
 894 0190 780000EA 		b	.L28
 895              	.L29:
 431:../CX3RDKOV5640.c ****         }
 432:../CX3RDKOV5640.c ****     }
 433:../CX3RDKOV5640.c ****     else if(type == CY_U3P_DMA_CB_CONS_EVENT)
 896              		.loc 1 433 0
 897 0194 BA315BE1 		ldrh	r3, [fp, #-26]
 898 0198 100053E3 		cmp	r3, #16
 899 019c 7500001A 		bne	.L28
 434:../CX3RDKOV5640.c ****     {
 435:../CX3RDKOV5640.c ****         glDmaDone--;
 900              		.loc 1 435 0
 901 01a0 F0319FE5 		ldr	r3, .L43+24
 902 01a4 003093E5 		ldr	r3, [r3]
 903 01a8 012043E2 		sub	r2, r3, #1
 904 01ac E4319FE5 		ldr	r3, .L43+24
 905 01b0 002083E5 		str	r2, [r3]
 436:../CX3RDKOV5640.c **** 
 437:../CX3RDKOV5640.c ****         /* Check if Frame is completely transferred */
 438:../CX3RDKOV5640.c ****         glIsStreamingStarted = CyTrue;
 906              		.loc 1 438 0
 907 01b4 E4319FE5 		ldr	r3, .L43+32
 908 01b8 0120A0E3 		mov	r2, #1
 909 01bc 002083E5 		str	r2, [r3]
 439:../CX3RDKOV5640.c **** 
 440:../CX3RDKOV5640.c ****         if((glHitFV == CyTrue) && (glDmaDone == 0))
 910              		.loc 1 440 0
 911 01c0 C4319FE5 		ldr	r3, .L43+12
 912 01c4 003093E5 		ldr	r3, [r3]
 913 01c8 010053E3 		cmp	r3, #1
 914 01cc 6900001A 		bne	.L28
 915              		.loc 1 440 0 is_stmt 0 discriminator 1
 916 01d0 C0319FE5 		ldr	r3, .L43+24
 917 01d4 003093E5 		ldr	r3, [r3]
 918 01d8 000053E3 		cmp	r3, #0
 919 01dc 6500001A 		bne	.L28
 441:../CX3RDKOV5640.c ****         {
 442:../CX3RDKOV5640.c ****             glHitFV = CyFalse;
 920              		.loc 1 442 0 is_stmt 1
 921 01e0 A4319FE5 		ldr	r3, .L43+12
 922 01e4 0020A0E3 		mov	r2, #0
 923 01e8 002083E5 		str	r2, [r3]
 443:../CX3RDKOV5640.c ****             glDMATxCount=0;
 924              		.loc 1 443 0
 925 01ec A0319FE5 		ldr	r3, .L43+20
 926 01f0 0020A0E3 		mov	r2, #0
 927 01f4 002083E5 		str	r2, [r3]
 444:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 445:../CX3RDKOV5640.c ****             CyU3PTimerStop (&UvcTimer);
 928              		.loc 1 445 0
 929 01f8 84019FE5 		ldr	r0, .L43+4
 930 01fc FEFFFFEB 		bl	_txe_timer_deactivate
 446:../CX3RDKOV5640.c **** #endif
 447:../CX3RDKOV5640.c **** 
 448:../CX3RDKOV5640.c ****             if (glActiveSocket)
 931              		.loc 1 448 0
 932 0200 94319FE5 		ldr	r3, .L43+28
 933 0204 0030D3E5 		ldrb	r3, [r3]
 934 0208 FF3003E2 		and	r3, r3, #255
 935 020c 000053E3 		cmp	r3, #0
 936 0210 0700000A 		beq	.L38
 449:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK1,
 937              		.loc 1 449 0
 938 0214 0230A0E3 		mov	r3, #2
 939 0218 00308DE5 		str	r3, [sp]
 940 021c 80019FE5 		ldr	r0, .L43+36
 941 0220 0D10A0E3 		mov	r1, #13
 942 0224 78219FE5 		ldr	r2, .L43+36
 943 0228 0030A0E3 		mov	r3, #0
 944 022c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 945 0230 060000EA 		b	.L39
 946              	.L38:
 450:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK1, ES_UVC_GPIF_SWITCH_TIMEOUT);
 451:../CX3RDKOV5640.c ****             else
 452:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 947              		.loc 1 452 0
 948 0234 0230A0E3 		mov	r3, #2
 949 0238 00308DE5 		str	r3, [sp]
 950 023c 60019FE5 		ldr	r0, .L43+36
 951 0240 0010A0E3 		mov	r1, #0
 952 0244 58219FE5 		ldr	r2, .L43+36
 953 0248 0030A0E3 		mov	r3, #0
 954 024c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 955              	.L39:
 453:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 454:../CX3RDKOV5640.c **** #ifdef VISDebug
 455:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_CONS_EVENT glActiveSocket  %x", glActiveS
 456:../CX3RDKOV5640.c **** #endif
 457:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 956              		.loc 1 457 0
 957 0250 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 458:../CX3RDKOV5640.c ****             doLpmDisable = CyTrue;
 958              		.loc 1 458 0
 959 0254 24319FE5 		ldr	r3, .L43
 960 0258 0120A0E3 		mov	r2, #1
 961 025c 002083E5 		str	r2, [r3]
 459:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 460:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 962              		.loc 1 460 0
 963 0260 1C019FE5 		ldr	r0, .L43+4
 964 0264 7D1FA0E3 		mov	r1, #500
 965 0268 0020A0E3 		mov	r2, #0
 966 026c FEFFFFEB 		bl	_txe_timer_change
 461:../CX3RDKOV5640.c **** #endif
 462:../CX3RDKOV5640.c **** 
 463:../CX3RDKOV5640.c ****             if(glStillCaptured == CyTrue)
 967              		.loc 1 463 0
 968 0270 30319FE5 		ldr	r3, .L43+40
 969 0274 003093E5 		ldr	r3, [r3]
 970 0278 010053E3 		cmp	r3, #1
 971 027c 1000001A 		bne	.L40
 464:../CX3RDKOV5640.c ****             {
 465:../CX3RDKOV5640.c ****             	glStillCaptured = CyFalse;
 972              		.loc 1 465 0
 973 0280 20319FE5 		ldr	r3, .L43+40
 974 0284 0020A0E3 		mov	r2, #0
 975 0288 002083E5 		str	r2, [r3]
 466:../CX3RDKOV5640.c ****             	glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 976              		.loc 1 466 0
 977 028c 18319FE5 		ldr	r3, .L43+44
 978 0290 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 979 0294 203023E2 		eor	r3, r3, #32
 980 0298 FF2003E2 		and	r2, r3, #255
 981 029c 08319FE5 		ldr	r3, .L43+44
 982 02a0 0120C3E5 		strb	r2, [r3, #1]
 467:../CX3RDKOV5640.c ****             	glFrameIndexToSet = glCurrentFrameIndex;
 983              		.loc 1 467 0
 984 02a4 04319FE5 		ldr	r3, .L43+48
 985 02a8 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 986 02ac 00319FE5 		ldr	r3, .L43+52
 987 02b0 0020C3E5 		strb	r2, [r3]
 468:../CX3RDKOV5640.c ****             	CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 988              		.loc 1 468 0
 989 02b4 D4009FE5 		ldr	r0, .L43+16
 990 02b8 1010A0E3 		mov	r1, #16
 991 02bc 0020A0E3 		mov	r2, #0
 992 02c0 FEFFFFEB 		bl	_txe_event_flags_set
 993              	.L40:
 469:../CX3RDKOV5640.c ****             }
 470:../CX3RDKOV5640.c ****             if(glStillCaptureStart == CyTrue)
 994              		.loc 1 470 0
 995 02c4 EC309FE5 		ldr	r3, .L43+56
 996 02c8 003093E5 		ldr	r3, [r3]
 997 02cc 010053E3 		cmp	r3, #1
 998 02d0 2800001A 		bne	.L28
 471:../CX3RDKOV5640.c ****             {
 472:../CX3RDKOV5640.c ****             	if(glStillSkip == 3)
 999              		.loc 1 472 0
 1000 02d4 E0309FE5 		ldr	r3, .L43+60
 1001 02d8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 02dc 030053E3 		cmp	r3, #3
 1003 02e0 0D00001A 		bne	.L41
 473:../CX3RDKOV5640.c **** 				{
 474:../CX3RDKOV5640.c ****             		glStillSkip--;
 1004              		.loc 1 474 0
 1005 02e4 D0309FE5 		ldr	r3, .L43+60
 1006 02e8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 02ec 013043E2 		sub	r3, r3, #1
 1008 02f0 FF2003E2 		and	r2, r3, #255
 1009 02f4 C0309FE5 		ldr	r3, .L43+60
 1010 02f8 0020C3E5 		strb	r2, [r3]
 475:../CX3RDKOV5640.c ****             		glFrameIndexToSet = 4;
 1011              		.loc 1 475 0
 1012 02fc B0309FE5 		ldr	r3, .L43+52
 1013 0300 0420A0E3 		mov	r2, #4
 1014 0304 0020C3E5 		strb	r2, [r3]
 476:../CX3RDKOV5640.c **** 					CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1015              		.loc 1 476 0
 1016 0308 80009FE5 		ldr	r0, .L43+16
 1017 030c 1010A0E3 		mov	r1, #16
 1018 0310 0020A0E3 		mov	r2, #0
 1019 0314 FEFFFFEB 		bl	_txe_event_flags_set
 1020 0318 160000EA 		b	.L28
 1021              	.L41:
 477:../CX3RDKOV5640.c **** 				}
 478:../CX3RDKOV5640.c ****             	else if(glStillSkip == 0)
 1022              		.loc 1 478 0
 1023 031c 98309FE5 		ldr	r3, .L43+60
 1024 0320 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 0324 000053E3 		cmp	r3, #0
 1026 0328 0C00001A 		bne	.L42
 479:../CX3RDKOV5640.c ****             	{
 480:../CX3RDKOV5640.c ****             		glStillCaptureStart = CyFalse;
 1027              		.loc 1 480 0
 1028 032c 84309FE5 		ldr	r3, .L43+56
 1029 0330 0020A0E3 		mov	r2, #0
 1030 0334 002083E5 		str	r2, [r3]
 481:../CX3RDKOV5640.c **** 					glStillCaptured = CyTrue;
 1031              		.loc 1 481 0
 1032 0338 68309FE5 		ldr	r3, .L43+40
 1033 033c 0120A0E3 		mov	r2, #1
 1034 0340 002083E5 		str	r2, [r3]
 482:../CX3RDKOV5640.c **** 					glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1035              		.loc 1 482 0
 1036 0344 60309FE5 		ldr	r3, .L43+44
 1037 0348 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1038 034c 203023E2 		eor	r3, r3, #32
 1039 0350 FF2003E2 		and	r2, r3, #255
 1040 0354 50309FE5 		ldr	r3, .L43+44
 1041 0358 0120C3E5 		strb	r2, [r3, #1]
 1042 035c 050000EA 		b	.L28
 1043              	.L42:
 483:../CX3RDKOV5640.c ****             	}
 484:../CX3RDKOV5640.c ****             	else
 485:../CX3RDKOV5640.c ****             		glStillSkip--;
 1044              		.loc 1 485 0
 1045 0360 54309FE5 		ldr	r3, .L43+60
 1046 0364 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0368 013043E2 		sub	r3, r3, #1
 1048 036c FF2003E2 		and	r2, r3, #255
 1049 0370 44309FE5 		ldr	r3, .L43+60
 1050 0374 0020C3E5 		strb	r2, [r3]
 1051              	.L28:
 486:../CX3RDKOV5640.c ****             }
 487:../CX3RDKOV5640.c ****         }
 488:../CX3RDKOV5640.c ****     }
 489:../CX3RDKOV5640.c **** }
 1052              		.loc 1 489 0
 1053 0378 04D04BE2 		sub	sp, fp, #4
 1054              		@ sp needed
 1055 037c 0088BDE8 		ldmfd	sp!, {fp, pc}
 1056              	.L44:
 1057              		.align	2
 1058              	.L43:
 1059 0380 00000000 		.word	doLpmDisable
 1060 0384 00000000 		.word	UvcTimer
 1061 0388 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 1062 038c 00000000 		.word	glHitFV
 1063 0390 00000000 		.word	glTimerEvent
 1064 0394 00000000 		.word	glDMATxCount
 1065 0398 00000000 		.word	glDmaDone
 1066 039c 00000000 		.word	glActiveSocket
 1067 03a0 00000000 		.word	glIsStreamingStarted
 1068 03a4 01010000 		.word	257
 1069 03a8 00000000 		.word	glStillCaptured
 1070 03ac 00000000 		.word	glUVCHeader
 1071 03b0 00000000 		.word	glCurrentFrameIndex
 1072 03b4 00000000 		.word	glFrameIndexToSet
 1073 03b8 00000000 		.word	glStillCaptureStart
 1074 03bc 00000000 		.word	glStillSkip
 1075              		.cfi_endproc
 1076              	.LFE6:
 1078              		.section	.text.esUVCUvcApplnUSBEventCB,"ax",%progbits
 1079              		.align	2
 1081              	esUVCUvcApplnUSBEventCB:
 1082              	.LFB7:
 490:../CX3RDKOV5640.c **** 
 491:../CX3RDKOV5640.c **** /* This is the Callback function to handle the USB Events */
 492:../CX3RDKOV5640.c ****     static void
 493:../CX3RDKOV5640.c **** esUVCUvcApplnUSBEventCB (
 494:../CX3RDKOV5640.c ****         CyU3PUsbEventType_t evtype,     /* Event type */
 495:../CX3RDKOV5640.c ****         uint16_t            evdata      /* Event data */
 496:../CX3RDKOV5640.c ****         )
 497:../CX3RDKOV5640.c **** {
 1083              		.loc 1 497 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 16
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1088              	.LCFI14:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 11, -8
 1091              		.cfi_offset 14, -4
 1092 0004 04B08DE2 		add	fp, sp, #4
 1093              	.LCFI15:
 1094              		.cfi_def_cfa 11, 4
 1095 0008 10D04DE2 		sub	sp, sp, #16
 1096 000c 0020A0E1 		mov	r2, r0
 1097 0010 0130A0E1 		mov	r3, r1
 1098 0014 0D204BE5 		strb	r2, [fp, #-13]
 1099 0018 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 498:../CX3RDKOV5640.c ****     uint8_t interface = 0, altSetting = 0;
 1100              		.loc 1 498 0
 1101 001c 0030A0E3 		mov	r3, #0
 1102 0020 05304BE5 		strb	r3, [fp, #-5]
 1103 0024 0030A0E3 		mov	r3, #0
 1104 0028 06304BE5 		strb	r3, [fp, #-6]
 499:../CX3RDKOV5640.c **** 
 500:../CX3RDKOV5640.c ****     switch (evtype)
 1105              		.loc 1 500 0
 1106 002c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1107 0030 070053E3 		cmp	r3, #7
 1108 0034 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1109 0038 530000EA 		b	.L58
 1110              	.L48:
 1111 003c 2C010000 		.word	.L47
 1112 0040 2C010000 		.word	.L47
 1113 0044 5C000000 		.word	.L49
 1114 0048 8C010000 		.word	.L58
 1115 004c 2C010000 		.word	.L47
 1116 0050 2C010000 		.word	.L47
 1117 0054 8C010000 		.word	.L58
 1118 0058 7C000000 		.word	.L50
 1119              	.L49:
 501:../CX3RDKOV5640.c ****     {
 502:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SUSPEND:
 503:../CX3RDKOV5640.c ****             /* Suspend the device with Wake On Bus Activity set */
 504:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1120              		.loc 1 504 0
 1121 005c 34319FE5 		ldr	r3, .L59
 1122 0060 0020A0E3 		mov	r2, #0
 1123 0064 002083E5 		str	r2, [r3]
 505:../CX3RDKOV5640.c ****             CyU3PEventSet (&glTimerEvent, ES_USB_SUSP_EVENT_FLAG, CYU3P_EVENT_OR);
 1124              		.loc 1 505 0
 1125 0068 2C019FE5 		ldr	r0, .L59+4
 1126 006c 2010A0E3 		mov	r1, #32
 1127 0070 0020A0E3 		mov	r2, #0
 1128 0074 FEFFFFEB 		bl	_txe_event_flags_set
 506:../CX3RDKOV5640.c ****             break;
 1129              		.loc 1 506 0
 1130 0078 440000EA 		b	.L45
 1131              	.L50:
 507:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETINTF:
 508:../CX3RDKOV5640.c ****             /* Start the video streamer application if the
 509:../CX3RDKOV5640.c ****              * interface requested was 1. If not, stop the
 510:../CX3RDKOV5640.c ****              * streamer. */
 511:../CX3RDKOV5640.c ****             interface = CY_U3P_GET_MSB(evdata);
 1132              		.loc 1 511 0
 1133 007c B0315BE1 		ldrh	r3, [fp, #-16]
 1134 0080 2334A0E1 		mov	r3, r3, lsr #8
 1135 0084 0338A0E1 		mov	r3, r3, asl #16
 1136 0088 2338A0E1 		mov	r3, r3, lsr #16
 1137 008c 05304BE5 		strb	r3, [fp, #-5]
 512:../CX3RDKOV5640.c ****             altSetting = CY_U3P_GET_LSB(evdata);
 1138              		.loc 1 512 0
 1139 0090 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 1140 0094 06304BE5 		strb	r3, [fp, #-6]
 513:../CX3RDKOV5640.c **** 
 514:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1141              		.loc 1 514 0
 1142 0098 F8309FE5 		ldr	r3, .L59
 1143 009c 0020A0E3 		mov	r2, #0
 1144 00a0 002083E5 		str	r2, [r3]
 515:../CX3RDKOV5640.c **** 
 516:../CX3RDKOV5640.c ****             if ((altSetting == ES_UVC_STREAM_INTERFACE) && (interface == 1))
 1145              		.loc 1 516 0
 1146 00a4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1147 00a8 010053E3 		cmp	r3, #1
 1148 00ac 0C00001A 		bne	.L52
 1149              		.loc 1 516 0 is_stmt 0 discriminator 1
 1150 00b0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1151 00b4 010053E3 		cmp	r3, #1
 1152 00b8 0900001A 		bne	.L52
 517:../CX3RDKOV5640.c ****             {
 518:../CX3RDKOV5640.c ****                 /* Stop the application before re-starting. */
 519:../CX3RDKOV5640.c ****                 if (glIsApplnActive)
 1153              		.loc 1 519 0 is_stmt 1
 1154 00bc DC309FE5 		ldr	r3, .L59+8
 1155 00c0 003093E5 		ldr	r3, [r3]
 1156 00c4 000053E3 		cmp	r3, #0
 1157 00c8 0300000A 		beq	.L53
 520:../CX3RDKOV5640.c ****                 {
 521:../CX3RDKOV5640.c ****                 	glIsClearFeature = CyTrue;
 1158              		.loc 1 521 0
 1159 00cc D0309FE5 		ldr	r3, .L59+12
 1160 00d0 0120A0E3 		mov	r2, #1
 1161 00d4 002083E5 		str	r2, [r3]
 522:../CX3RDKOV5640.c ****                     esUVCUvcApplnStop ();
 1162              		.loc 1 522 0
 1163 00d8 FEFFFFEB 		bl	esUVCUvcApplnStop
 1164              	.L53:
 523:../CX3RDKOV5640.c **** #ifdef VISDebug
 524:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStop");
 525:../CX3RDKOV5640.c **** #endif
 526:../CX3RDKOV5640.c ****                 }
 527:../CX3RDKOV5640.c ****                 esUVCUvcApplnStart ();
 1165              		.loc 1 527 0
 1166 00dc FEFFFFEB 		bl	esUVCUvcApplnStart
 1167 00e0 100000EA 		b	.L54
 1168              	.L52:
 528:../CX3RDKOV5640.c **** #ifdef VISDebug
 529:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStart")
 530:../CX3RDKOV5640.c **** #endif
 531:../CX3RDKOV5640.c **** 
 532:../CX3RDKOV5640.c ****             }
 533:../CX3RDKOV5640.c ****             else if ((altSetting == 0x00) && (interface == 1))
 1169              		.loc 1 533 0
 1170 00e4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1171 00e8 000053E3 		cmp	r3, #0
 1172 00ec 0D00001A 		bne	.L54
 1173              		.loc 1 533 0 is_stmt 0 discriminator 1
 1174 00f0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1175 00f4 010053E3 		cmp	r3, #1
 1176 00f8 0A00001A 		bne	.L54
 534:../CX3RDKOV5640.c ****             {
 535:../CX3RDKOV5640.c ****             	glPreviewStarted = CyFalse;
 1177              		.loc 1 535 0 is_stmt 1
 1178 00fc A4309FE5 		ldr	r3, .L59+16
 1179 0100 0020A0E3 		mov	r2, #0
 1180 0104 002083E5 		str	r2, [r3]
 536:../CX3RDKOV5640.c ****             	/* Stop the application before re-starting. */
 537:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1181              		.loc 1 537 0
 1182 0108 94309FE5 		ldr	r3, .L59+12
 1183 010c 0120A0E3 		mov	r2, #1
 1184 0110 002083E5 		str	r2, [r3]
 538:../CX3RDKOV5640.c **** 				esUVCUvcApplnStop ();
 1185              		.loc 1 538 0
 1186 0114 FEFFFFEB 		bl	esUVCUvcApplnStop
 539:../CX3RDKOV5640.c **** 
 540:../CX3RDKOV5640.c **** 				glcommitcount = 0;
 1187              		.loc 1 540 0
 1188 0118 8C309FE5 		ldr	r3, .L59+20
 1189 011c 0020A0E3 		mov	r2, #0
 1190 0120 0020C3E5 		strb	r2, [r3]
 541:../CX3RDKOV5640.c **** #ifdef VISDebug
 542:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF: esUVCUvcApplnStop");
 543:../CX3RDKOV5640.c **** #endif
 544:../CX3RDKOV5640.c ****             }
 545:../CX3RDKOV5640.c ****             break;
 1191              		.loc 1 545 0
 1192 0124 190000EA 		b	.L45
 1193              	.L54:
 1194 0128 180000EA 		b	.L45
 1195              	.L47:
 546:../CX3RDKOV5640.c **** 
 547:../CX3RDKOV5640.c ****             /* Fall-through. */
 548:../CX3RDKOV5640.c **** 
 549:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETCONF:
 550:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_RESET:
 551:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 552:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_CONNECT:
 553:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1196              		.loc 1 553 0
 1197 012c 64309FE5 		ldr	r3, .L59
 1198 0130 0020A0E3 		mov	r2, #0
 1199 0134 002083E5 		str	r2, [r3]
 554:../CX3RDKOV5640.c ****             if (evtype == CY_U3P_USB_EVENT_SETCONF)
 1200              		.loc 1 554 0
 1201 0138 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1202 013c 050053E3 		cmp	r3, #5
 1203 0140 0300001A 		bne	.L55
 555:../CX3RDKOV5640.c ****                 glIsConfigured = CyTrue;
 1204              		.loc 1 555 0
 1205 0144 64309FE5 		ldr	r3, .L59+24
 1206 0148 0120A0E3 		mov	r2, #1
 1207 014c 002083E5 		str	r2, [r3]
 1208 0150 020000EA 		b	.L56
 1209              	.L55:
 556:../CX3RDKOV5640.c ****             else
 557:../CX3RDKOV5640.c ****                 glIsConfigured = CyFalse;
 1210              		.loc 1 557 0
 1211 0154 54309FE5 		ldr	r3, .L59+24
 1212 0158 0020A0E3 		mov	r2, #0
 1213 015c 002083E5 		str	r2, [r3]
 1214              	.L56:
 558:../CX3RDKOV5640.c **** 
 559:../CX3RDKOV5640.c ****             /* Stop the video streamer application and enable LPM. */
 560:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 1215              		.loc 1 560 0
 1216 0160 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 561:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 1217              		.loc 1 561 0
 1218 0164 34309FE5 		ldr	r3, .L59+8
 1219 0168 003093E5 		ldr	r3, [r3]
 1220 016c 000053E3 		cmp	r3, #0
 1221 0170 0400000A 		beq	.L57
 562:../CX3RDKOV5640.c ****             {
 563:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1222              		.loc 1 563 0
 1223 0174 28309FE5 		ldr	r3, .L59+12
 1224 0178 0120A0E3 		mov	r2, #1
 1225 017c 002083E5 		str	r2, [r3]
 564:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop ();
 1226              		.loc 1 564 0
 1227 0180 FEFFFFEB 		bl	esUVCUvcApplnStop
 565:../CX3RDKOV5640.c **** #ifdef VISDebug
 566:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rEvent %x: esUVCUvcApplnStop", evtype);
 567:../CX3RDKOV5640.c **** #endif
 568:../CX3RDKOV5640.c ****             }
 569:../CX3RDKOV5640.c ****             break;
 1228              		.loc 1 569 0
 1229 0184 010000EA 		b	.L45
 1230              	.L57:
 1231 0188 000000EA 		b	.L45
 1232              	.L58:
 570:../CX3RDKOV5640.c ****         default:
 571:../CX3RDKOV5640.c ****             break;
 1233              		.loc 1 571 0
 1234 018c 0000A0E1 		mov	r0, r0	@ nop
 1235              	.L45:
 572:../CX3RDKOV5640.c ****     }
 573:../CX3RDKOV5640.c **** }
 1236              		.loc 1 573 0
 1237 0190 04D04BE2 		sub	sp, fp, #4
 1238              		@ sp needed
 1239 0194 0088BDE8 		ldmfd	sp!, {fp, pc}
 1240              	.L60:
 1241              		.align	2
 1242              	.L59:
 1243 0198 00000000 		.word	glIsStreamingStarted
 1244 019c 00000000 		.word	glTimerEvent
 1245 01a0 00000000 		.word	glIsApplnActive
 1246 01a4 00000000 		.word	glIsClearFeature
 1247 01a8 00000000 		.word	glPreviewStarted
 1248 01ac 00000000 		.word	glcommitcount
 1249 01b0 00000000 		.word	glIsConfigured
 1250              		.cfi_endproc
 1251              	.LFE7:
 1253              		.section	.text.esUVCApplnLPMRqtCB,"ax",%progbits
 1254              		.align	2
 1256              	esUVCApplnLPMRqtCB:
 1257              	.LFB8:
 574:../CX3RDKOV5640.c **** 
 575:../CX3RDKOV5640.c **** /* Callback for LPM requests. Always return true to allow host to transition device
 576:../CX3RDKOV5640.c ****  * into required LPM state U1/U2/U3. When data transmission is active LPM management
 577:../CX3RDKOV5640.c ****  * is explicitly disabled to prevent data transmission errors.
 578:../CX3RDKOV5640.c ****  */
 579:../CX3RDKOV5640.c **** static CyBool_t esUVCApplnLPMRqtCB (
 580:../CX3RDKOV5640.c ****         CyU3PUsbLinkPowerMode link_mode         /*USB 3.0 linkmode requested by Host */
 581:../CX3RDKOV5640.c ****         )
 582:../CX3RDKOV5640.c **** {
 1258              		.loc 1 582 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 1263 0000 04B02DE5 		str	fp, [sp, #-4]!
 1264              	.LCFI16:
 1265              		.cfi_def_cfa_offset 4
 1266              		.cfi_offset 11, -4
 1267 0004 00B08DE2 		add	fp, sp, #0
 1268              	.LCFI17:
 1269              		.cfi_def_cfa_register 11
 1270 0008 0CD04DE2 		sub	sp, sp, #12
 1271 000c 0030A0E1 		mov	r3, r0
 1272 0010 05304BE5 		strb	r3, [fp, #-5]
 583:../CX3RDKOV5640.c ****     return CyTrue;
 1273              		.loc 1 583 0
 1274 0014 0130A0E3 		mov	r3, #1
 584:../CX3RDKOV5640.c **** }
 1275              		.loc 1 584 0
 1276 0018 0300A0E1 		mov	r0, r3
 1277 001c 00D04BE2 		sub	sp, fp, #0
 1278              		@ sp needed
 1279 0020 04B09DE4 		ldr	fp, [sp], #4
 1280 0024 1EFF2FE1 		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE8:
 1284              		.section	.rodata
 1285              		.align	2
 1286              	.LC5:
 1287 00a8 0A0D6573 		.ascii	"\012\015esSetCameraResolution %d\000"
 1287      53657443 
 1287      616D6572 
 1287      61526573 
 1287      6F6C7574 
 1288 00c3 00       		.align	2
 1289              	.LC6:
 1290 00c4 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS1 Err = 0x%x\000"
 1290      42537470 
 1290      43423A53 
 1290      6574496E 
 1290      74665061 
 1291              		.align	2
 1292              	.LC7:
 1293 00ec 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams FS Err = 0x%x\000"
 1293      42537470 
 1293      43423A53 
 1293      6574496E 
 1293      74665061 
 1294 0113 00       		.align	2
 1295              	.LC8:
 1296 0114 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS2 Err = 0x%x\000"
 1296      42537470 
 1296      43423A53 
 1296      6574496E 
 1296      74665061 
 1297              		.align	2
 1298              	.LC9:
 1299 013c 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams HS Err = 0x%x\000"
 1299      42537470 
 1299      43423A53 
 1299      6574496E 
 1299      74665061 
 1300              		.section	.text.esSetCameraResolution,"ax",%progbits
 1301              		.align	2
 1302              		.global	esSetCameraResolution
 1304              	esSetCameraResolution:
 1305              	.LFB9:
 585:../CX3RDKOV5640.c **** 
 586:../CX3RDKOV5640.c **** //TODO Change this function with "Sensor Specific" function to write the sensor settings & configur
 587:../CX3RDKOV5640.c **** void esSetCameraResolution(uint8_t FrameIndex)
 588:../CX3RDKOV5640.c **** {
 1306              		.loc 1 588 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1311              	.LCFI18:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 11, -8
 1314              		.cfi_offset 14, -4
 1315 0004 04B08DE2 		add	fp, sp, #4
 1316              	.LCFI19:
 1317              		.cfi_def_cfa 11, 4
 1318 0008 10D04DE2 		sub	sp, sp, #16
 1319 000c 0030A0E1 		mov	r3, r0
 1320 0010 0D304BE5 		strb	r3, [fp, #-13]
 589:../CX3RDKOV5640.c **** 	CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1321              		.loc 1 589 0
 1322 0014 0030A0E3 		mov	r3, #0
 1323 0018 08300BE5 		str	r3, [fp, #-8]
 590:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\resSetCameraResolution %d", FrameIndex);
 1324              		.loc 1 590 0
 1325 001c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1326 0020 0400A0E3 		mov	r0, #4
 1327 0024 9C119FE5 		ldr	r1, .L76
 1328 0028 0320A0E1 		mov	r2, r3
 1329 002c FEFFFFEB 		bl	CyU3PDebugPrint
 591:../CX3RDKOV5640.c **** 	FrameIndex = 0x03; //force to set VGA 30fps -debug
 1330              		.loc 1 591 0
 1331 0030 0330A0E3 		mov	r3, #3
 1332 0034 0D304BE5 		strb	r3, [fp, #-13]
 592:../CX3RDKOV5640.c **** 	/* Super Speed USB Streams*/
 593:../CX3RDKOV5640.c **** 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1333              		.loc 1 593 0
 1334 0038 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1335 003c 0030A0E1 		mov	r3, r0
 1336 0040 030053E3 		cmp	r3, #3
 1337 0044 3F00001A 		bne	.L64
 594:../CX3RDKOV5640.c **** 	{
 595:../CX3RDKOV5640.c **** 		if(FrameIndex == 0x01)
 1338              		.loc 1 595 0
 1339 0048 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1340 004c 010053E3 		cmp	r3, #1
 1341 0050 0C00001A 		bne	.L65
 596:../CX3RDKOV5640.c **** 		{
 597:../CX3RDKOV5640.c **** 			/* Write 1080pSettings */
 598:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc1080p30NoMclk, CyFalse);
 1342              		.loc 1 598 0
 1343 0054 70019FE5 		ldr	r0, .L76+4
 1344 0058 0010A0E3 		mov	r1, #0
 1345 005c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1346 0060 08000BE5 		str	r0, [fp, #-8]
 599:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1347              		.loc 1 599 0
 1348 0064 08301BE5 		ldr	r3, [fp, #-8]
 1349 0068 000053E3 		cmp	r3, #0
 1350 006c 0300000A 		beq	.L66
 600:../CX3RDKOV5640.c **** 			{
 601:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS1 Err = 0x%x", status);
 1351              		.loc 1 601 0
 1352 0070 0400A0E3 		mov	r0, #4
 1353 0074 54119FE5 		ldr	r1, .L76+8
 1354 0078 08201BE5 		ldr	r2, [fp, #-8]
 1355 007c FEFFFFEB 		bl	CyU3PDebugPrint
 1356              	.L66:
 602:../CX3RDKOV5640.c **** 			}
 603:../CX3RDKOV5640.c **** 			esOV5640_1080P_config();
 1357              		.loc 1 603 0
 1358 0080 FEFFFFEB 		bl	esOV5640_1080P_config
 1359 0084 4D0000EA 		b	.L63
 1360              	.L65:
 604:../CX3RDKOV5640.c **** 		}
 605:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x02)
 1361              		.loc 1 605 0
 1362 0088 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1363 008c 020053E3 		cmp	r3, #2
 1364 0090 0C00001A 		bne	.L68
 606:../CX3RDKOV5640.c **** 		{
 607:../CX3RDKOV5640.c **** 			/* Write VGA Settings */
 608:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1365              		.loc 1 608 0
 1366 0094 38019FE5 		ldr	r0, .L76+12
 1367 0098 0010A0E3 		mov	r1, #0
 1368 009c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1369 00a0 08000BE5 		str	r0, [fp, #-8]
 609:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1370              		.loc 1 609 0
 1371 00a4 08301BE5 		ldr	r3, [fp, #-8]
 1372 00a8 000053E3 		cmp	r3, #0
 1373 00ac 0300000A 		beq	.L69
 610:../CX3RDKOV5640.c **** 			{
 611:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1374              		.loc 1 611 0
 1375 00b0 0400A0E3 		mov	r0, #4
 1376 00b4 1C119FE5 		ldr	r1, .L76+16
 1377 00b8 08201BE5 		ldr	r2, [fp, #-8]
 1378 00bc FEFFFFEB 		bl	CyU3PDebugPrint
 1379              	.L69:
 612:../CX3RDKOV5640.c **** 			}
 613:../CX3RDKOV5640.c **** 			esOV5640_VGA_config(); //for experiment
 1380              		.loc 1 613 0
 1381 00c0 FEFFFFEB 		bl	esOV5640_VGA_config
 1382 00c4 3D0000EA 		b	.L63
 1383              	.L68:
 614:../CX3RDKOV5640.c **** 		}
 615:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x03)
 1384              		.loc 1 615 0
 1385 00c8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1386 00cc 030053E3 		cmp	r3, #3
 1387 00d0 0C00001A 		bne	.L70
 616:../CX3RDKOV5640.c **** 		{
 617:../CX3RDKOV5640.c **** 			/* Write 720pSettings */
 618:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc720p60NoMclk, CyFalse);
 1388              		.loc 1 618 0
 1389 00d4 00019FE5 		ldr	r0, .L76+20
 1390 00d8 0010A0E3 		mov	r1, #0
 1391 00dc FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1392 00e0 08000BE5 		str	r0, [fp, #-8]
 619:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1393              		.loc 1 619 0
 1394 00e4 08301BE5 		ldr	r3, [fp, #-8]
 1395 00e8 000053E3 		cmp	r3, #0
 1396 00ec 0300000A 		beq	.L71
 620:../CX3RDKOV5640.c **** 			{
 621:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1397              		.loc 1 621 0
 1398 00f0 0400A0E3 		mov	r0, #4
 1399 00f4 E4109FE5 		ldr	r1, .L76+24
 1400 00f8 08201BE5 		ldr	r2, [fp, #-8]
 1401 00fc FEFFFFEB 		bl	CyU3PDebugPrint
 1402              	.L71:
 622:../CX3RDKOV5640.c **** 			}
 623:../CX3RDKOV5640.c **** 			esOV5640_VGA_config();//esOV5640_720P_config(); //for experiment
 1403              		.loc 1 623 0
 1404 0100 FEFFFFEB 		bl	esOV5640_VGA_config
 1405 0104 2D0000EA 		b	.L63
 1406              	.L70:
 624:../CX3RDKOV5640.c **** 		}
 625:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x04)
 1407              		.loc 1 625 0
 1408 0108 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1409 010c 040053E3 		cmp	r3, #4
 1410 0110 2A00001A 		bne	.L63
 626:../CX3RDKOV5640.c **** 		{
 627:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc5Mp15NoMclk, CyFalse);
 1411              		.loc 1 627 0
 1412 0114 C8009FE5 		ldr	r0, .L76+28
 1413 0118 0010A0E3 		mov	r1, #0
 1414 011c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1415 0120 08000BE5 		str	r0, [fp, #-8]
 628:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1416              		.loc 1 628 0
 1417 0124 08301BE5 		ldr	r3, [fp, #-8]
 1418 0128 000053E3 		cmp	r3, #0
 1419 012c 0300000A 		beq	.L72
 629:../CX3RDKOV5640.c **** 			{
 630:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1420              		.loc 1 630 0
 1421 0130 0400A0E3 		mov	r0, #4
 1422 0134 A4109FE5 		ldr	r1, .L76+24
 1423 0138 08201BE5 		ldr	r2, [fp, #-8]
 1424 013c FEFFFFEB 		bl	CyU3PDebugPrint
 1425              	.L72:
 631:../CX3RDKOV5640.c **** 			}
 632:../CX3RDKOV5640.c **** 			esOV5640_5MP_config();
 1426              		.loc 1 632 0
 1427 0140 FEFFFFEB 		bl	esOV5640_5MP_config
 1428 0144 1D0000EA 		b	.L63
 1429              	.L64:
 633:../CX3RDKOV5640.c **** 		}
 634:../CX3RDKOV5640.c **** 	}
 635:../CX3RDKOV5640.c **** 	/* High Speed USB Streams*/
 636:../CX3RDKOV5640.c **** 	else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1430              		.loc 1 636 0
 1431 0148 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1432 014c 0030A0E1 		mov	r3, r0
 1433 0150 020053E3 		cmp	r3, #2
 1434 0154 0D00001A 		bne	.L74
 637:../CX3RDKOV5640.c **** 	{
 638:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 639:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1435              		.loc 1 639 0
 1436 0158 74009FE5 		ldr	r0, .L76+12
 1437 015c 0010A0E3 		mov	r1, #0
 1438 0160 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1439 0164 08000BE5 		str	r0, [fp, #-8]
 640:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1440              		.loc 1 640 0
 1441 0168 08301BE5 		ldr	r3, [fp, #-8]
 1442 016c 000053E3 		cmp	r3, #0
 1443 0170 0300000A 		beq	.L75
 641:../CX3RDKOV5640.c **** 		{
 642:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams HS Err = 0x%x", status);
 1444              		.loc 1 642 0
 1445 0174 0400A0E3 		mov	r0, #4
 1446 0178 68109FE5 		ldr	r1, .L76+32
 1447 017c 08201BE5 		ldr	r2, [fp, #-8]
 1448 0180 FEFFFFEB 		bl	CyU3PDebugPrint
 1449              	.L75:
 643:../CX3RDKOV5640.c **** 		}
 644:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1450              		.loc 1 644 0
 1451 0184 FEFFFFEB 		bl	esOV5640_VGA_config
 645:../CX3RDKOV5640.c **** 		esOV5640_VGA_HS_config();
 1452              		.loc 1 645 0
 1453 0188 FEFFFFEB 		bl	esOV5640_VGA_HS_config
 1454 018c 0B0000EA 		b	.L63
 1455              	.L74:
 646:../CX3RDKOV5640.c **** 	}
 647:../CX3RDKOV5640.c **** 	/* Full Speed USB Streams*/
 648:../CX3RDKOV5640.c **** 	else
 649:../CX3RDKOV5640.c **** 	{
 650:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 651:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1456              		.loc 1 651 0
 1457 0190 FEFFFFEB 		bl	esOV5640_VGA_config
 652:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1458              		.loc 1 652 0
 1459 0194 38009FE5 		ldr	r0, .L76+12
 1460 0198 0010A0E3 		mov	r1, #0
 1461 019c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1462 01a0 08000BE5 		str	r0, [fp, #-8]
 653:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1463              		.loc 1 653 0
 1464 01a4 08301BE5 		ldr	r3, [fp, #-8]
 1465 01a8 000053E3 		cmp	r3, #0
 1466 01ac 0300000A 		beq	.L63
 654:../CX3RDKOV5640.c **** 		{
 655:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1467              		.loc 1 655 0
 1468 01b0 0400A0E3 		mov	r0, #4
 1469 01b4 1C109FE5 		ldr	r1, .L76+16
 1470 01b8 08201BE5 		ldr	r2, [fp, #-8]
 1471 01bc FEFFFFEB 		bl	CyU3PDebugPrint
 1472              	.L63:
 656:../CX3RDKOV5640.c **** 		}
 657:../CX3RDKOV5640.c **** 	}
 658:../CX3RDKOV5640.c **** }
 1473              		.loc 1 658 0
 1474 01c0 04D04BE2 		sub	sp, fp, #4
 1475              		@ sp needed
 1476 01c4 0088BDE8 		ldmfd	sp!, {fp, pc}
 1477              	.L77:
 1478              		.align	2
 1479              	.L76:
 1480 01c8 A8000000 		.word	.LC5
 1481 01cc 00000000 		.word	cfgUvc1080p30NoMclk
 1482 01d0 C4000000 		.word	.LC6
 1483 01d4 00000000 		.word	cfgUvcVga30NoMclk
 1484 01d8 EC000000 		.word	.LC7
 1485 01dc 00000000 		.word	cfgUvc720p60NoMclk
 1486 01e0 14010000 		.word	.LC8
 1487 01e4 00000000 		.word	cfgUvc5Mp15NoMclk
 1488 01e8 3C010000 		.word	.LC9
 1489              		.cfi_endproc
 1490              	.LFE9:
 1492              		.section	.rodata
 1493 0163 00       		.align	2
 1494              	.LC10:
 1495 0164 0A0D6252 		.ascii	"\012\015bRType = 0x%x, bRequest = 0x%x, wValue = 0x"
 1495      54797065 
 1495      203D2030 
 1495      7825782C 
 1495      20625265 
 1496 0191 25782C20 		.ascii	"%x, wIndex = 0x%x, wLength= 0x%x\000"
 1496      77496E64 
 1496      6578203D 
 1496      20307825 
 1496      782C2077 
 1497 01b2 0000     		.align	2
 1498              	.LC11:
 1499 01b4 0A0D4675 		.ascii	"\012\015Full Speed Not Supported!\000"
 1499      6C6C2053 
 1499      70656564 
 1499      204E6F74 
 1499      20537570 
 1500              		.align	2
 1501              	.LC12:
 1502 01d0 0A0D5553 		.ascii	"\012\015USBStpCB:GET_CUR:SendEP0Data Err = 0x%x\000"
 1502      42537470 
 1502      43423A47 
 1502      45545F43 
 1502      55523A53 
 1503 01fa 0000     		.align	2
 1504              	.LC13:
 1505 01fc 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:GetEP0Data Err = 0x%x.\000"
 1505      42537470 
 1505      43423A53 
 1505      45545F43 
 1505      55523A47 
 1506 0226 0000     		.align	2
 1507              	.LC14:
 1508 0228 0A0D5553 		.ascii	"\012\015USBStpCB:Invalid SET_CUR Rqt Len.\000"
 1508      42537470 
 1508      43423A49 
 1508      6E76616C 
 1508      69642053 
 1509              		.align	2
 1510              	.LC15:
 1511 024c 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:still = 0x%x.\000"
 1511      42537470 
 1511      43423A53 
 1511      45545F43 
 1511      55523A73 
 1512 026d 000000   		.align	2
 1513              	.LC16:
 1514 0270 0A0D2025 		.ascii	"\012\015 %d %d %d %d %d %d %d %d %d %d %d\015\012\000"
 1514      64202564 
 1514      20256420 
 1514      25642025 
 1514      64202564 
 1515 0296 0000     		.align	2
 1516              	.LC17:
 1517 0298 0A0D5553 		.ascii	"\012\015USBStpCB:VCI SendEP0Data = %d\000"
 1517      42537470 
 1517      43423A56 
 1517      43492053 
 1517      656E6445 
 1518              		.align	2
 1519              	.LC18:
 1520 02b8 0A0D4175 		.ascii	"\012\015Auto Focus\000"
 1520      746F2046 
 1520      6F637573 
 1520      00
 1521              		.section	.text.esUVCUvcApplnUSBSetupCB,"ax",%progbits
 1522              		.align	2
 1524              	esUVCUvcApplnUSBSetupCB:
 1525              	.LFB10:
 659:../CX3RDKOV5640.c **** 
 660:../CX3RDKOV5640.c **** /* Callback to handle the USB Setup Requests and UVC Class events */
 661:../CX3RDKOV5640.c ****     static CyBool_t
 662:../CX3RDKOV5640.c **** esUVCUvcApplnUSBSetupCB (
 663:../CX3RDKOV5640.c ****         uint32_t setupdat0,     /* SETUP Data 0 */
 664:../CX3RDKOV5640.c ****         uint32_t setupdat1      /* SETUP Data 1 */
 665:../CX3RDKOV5640.c ****         )
 666:../CX3RDKOV5640.c **** {
 1526              		.loc 1 666 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 40
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530 0000 F0492DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, lr}
 1531              	.LCFI20:
 1532              		.cfi_def_cfa_offset 28
 1533              		.cfi_offset 4, -28
 1534              		.cfi_offset 5, -24
 1535              		.cfi_offset 6, -20
 1536              		.cfi_offset 7, -16
 1537              		.cfi_offset 8, -12
 1538              		.cfi_offset 11, -8
 1539              		.cfi_offset 14, -4
 1540 0004 18B08DE2 		add	fp, sp, #24
 1541              	.LCFI21:
 1542              		.cfi_def_cfa 11, 4
 1543 0008 54D04DE2 		sub	sp, sp, #84
 1544 000c 40000BE5 		str	r0, [fp, #-64]
 1545 0010 44100BE5 		str	r1, [fp, #-68]
 667:../CX3RDKOV5640.c ****     uint8_t  bRequest, bType,bRType, bTarget;
 668:../CX3RDKOV5640.c ****     uint16_t wValue, wIndex, wLength;
 669:../CX3RDKOV5640.c ****     uint16_t readCount = 0;
 1546              		.loc 1 669 0
 1547 0014 0030A0E3 		mov	r3, #0
 1548 0018 B2334BE1 		strh	r3, [fp, #-50]	@ movhi
 670:../CX3RDKOV5640.c ****     uint8_t  ep0Buf[2];
 671:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1549              		.loc 1 671 0
 1550 001c 0030A0E3 		mov	r3, #0
 1551 0020 24300BE5 		str	r3, [fp, #-36]
 672:../CX3RDKOV5640.c ****     uint8_t temp = 0;
 1552              		.loc 1 672 0
 1553 0024 0030A0E3 		mov	r3, #0
 1554 0028 35304BE5 		strb	r3, [fp, #-53]
 673:../CX3RDKOV5640.c ****     CyBool_t isHandled = CyFalse;
 1555              		.loc 1 673 0
 1556 002c 0030A0E3 		mov	r3, #0
 1557 0030 20300BE5 		str	r3, [fp, #-32]
 674:../CX3RDKOV5640.c ****     uint8_t RequestOption = 0;
 1558              		.loc 1 674 0
 1559 0034 0030A0E3 		mov	r3, #0
 1560 0038 25304BE5 		strb	r3, [fp, #-37]
 675:../CX3RDKOV5640.c **** 
 676:../CX3RDKOV5640.c ****     /* Decode the fields from the setup request. */
 677:../CX3RDKOV5640.c ****     bRType = (setupdat0 & CY_U3P_USB_REQUEST_TYPE_MASK);
 1561              		.loc 1 677 0
 1562 003c 40301BE5 		ldr	r3, [fp, #-64]
 1563 0040 26304BE5 		strb	r3, [fp, #-38]
 678:../CX3RDKOV5640.c ****     bType    = (bRType & CY_U3P_USB_TYPE_MASK);
 1564              		.loc 1 678 0
 1565 0044 26305BE5 		ldrb	r3, [fp, #-38]
 1566 0048 603003E2 		and	r3, r3, #96
 1567 004c 27304BE5 		strb	r3, [fp, #-39]
 679:../CX3RDKOV5640.c ****     bTarget  = (bRType & CY_U3P_USB_TARGET_MASK);
 1568              		.loc 1 679 0
 1569 0050 26305BE5 		ldrb	r3, [fp, #-38]
 1570 0054 033003E2 		and	r3, r3, #3
 1571 0058 28304BE5 		strb	r3, [fp, #-40]
 680:../CX3RDKOV5640.c ****     bRequest = ((setupdat0 & CY_U3P_USB_REQUEST_MASK) >> CY_U3P_USB_REQUEST_POS);
 1572              		.loc 1 680 0
 1573 005c 40301BE5 		ldr	r3, [fp, #-64]
 1574 0060 FF3C03E2 		and	r3, r3, #65280
 1575 0064 2334A0E1 		mov	r3, r3, lsr #8
 1576 0068 29304BE5 		strb	r3, [fp, #-41]
 681:../CX3RDKOV5640.c ****     wValue   = ((setupdat0 & CY_U3P_USB_VALUE_MASK)   >> CY_U3P_USB_VALUE_POS);
 1577              		.loc 1 681 0
 1578 006c 40301BE5 		ldr	r3, [fp, #-64]
 1579 0070 2338A0E1 		mov	r3, r3, lsr #16
 1580 0074 BC324BE1 		strh	r3, [fp, #-44]	@ movhi
 682:../CX3RDKOV5640.c ****     wIndex   = ((setupdat1 & CY_U3P_USB_INDEX_MASK)   >> CY_U3P_USB_INDEX_POS);
 1581              		.loc 1 682 0
 1582 0078 44301BE5 		ldr	r3, [fp, #-68]
 1583 007c BE324BE1 		strh	r3, [fp, #-46]	@ movhi
 683:../CX3RDKOV5640.c ****     wLength  = ((setupdat1 & CY_U3P_USB_LENGTH_MASK)  >> CY_U3P_USB_LENGTH_POS);
 1584              		.loc 1 683 0
 1585 0080 44301BE5 		ldr	r3, [fp, #-68]
 1586 0084 2338A0E1 		mov	r3, r3, lsr #16
 1587 0088 B0334BE1 		strh	r3, [fp, #-48]	@ movhi
 684:../CX3RDKOV5640.c **** 
 685:../CX3RDKOV5640.c **** #if 1
 686:../CX3RDKOV5640.c ****    	CyU3PDebugPrint(4, "\n\rbRType = 0x%x, bRequest = 0x%x, wValue = 0x%x, wIndex = 0x%x, wLength= 
 1588              		.loc 1 686 0
 1589 008c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1590 0090 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1591 0094 BCC25BE1 		ldrh	ip, [fp, #-44]
 1592 0098 BE025BE1 		ldrh	r0, [fp, #-46]
 1593 009c B0135BE1 		ldrh	r1, [fp, #-48]
 1594 00a0 00C08DE5 		str	ip, [sp]
 1595 00a4 04008DE5 		str	r0, [sp, #4]
 1596 00a8 08108DE5 		str	r1, [sp, #8]
 1597 00ac 0400A0E3 		mov	r0, #4
 1598 00b0 D41F9FE5 		ldr	r1, .L229
 1599 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 687:../CX3RDKOV5640.c **** #endif
 688:../CX3RDKOV5640.c **** 
 689:../CX3RDKOV5640.c ****     /* ClearFeature(Endpoint_Halt) received on the Streaming Endpoint. Stop Streaming */
 690:../CX3RDKOV5640.c ****     if((bTarget == CY_U3P_USB_TARGET_ENDPT) && (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
 1600              		.loc 1 690 0
 1601 00b8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1602 00bc 020053E3 		cmp	r3, #2
 1603 00c0 1C00001A 		bne	.L79
 1604              		.loc 1 690 0 is_stmt 0 discriminator 1
 1605 00c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1606 00c8 010053E3 		cmp	r3, #1
 1607 00cc 1900001A 		bne	.L79
 691:../CX3RDKOV5640.c ****             && (wIndex == ES_UVC_EP_BULK_VIDEO) && (wValue == CY_U3P_USBX_FS_EP_HALT))
 1608              		.loc 1 691 0 is_stmt 1
 1609 00d0 BE325BE1 		ldrh	r3, [fp, #-46]
 1610 00d4 830053E3 		cmp	r3, #131
 1611 00d8 1600001A 		bne	.L79
 1612              		.loc 1 691 0 is_stmt 0 discriminator 1
 1613 00dc BC325BE1 		ldrh	r3, [fp, #-44]
 1614 00e0 000053E3 		cmp	r3, #0
 1615 00e4 1300001A 		bne	.L79
 692:../CX3RDKOV5640.c ****     {
 693:../CX3RDKOV5640.c ****         if ((glIsApplnActive) && (glIsStreamingStarted))
 1616              		.loc 1 693 0 is_stmt 1
 1617 00e8 A03F9FE5 		ldr	r3, .L229+4
 1618 00ec 003093E5 		ldr	r3, [r3]
 1619 00f0 000053E3 		cmp	r3, #0
 1620 00f4 0D00000A 		beq	.L80
 1621              		.loc 1 693 0 is_stmt 0 discriminator 1
 1622 00f8 943F9FE5 		ldr	r3, .L229+8
 1623 00fc 003093E5 		ldr	r3, [r3]
 1624 0100 000053E3 		cmp	r3, #0
 1625 0104 0900000A 		beq	.L80
 694:../CX3RDKOV5640.c ****         {
 695:../CX3RDKOV5640.c ****         	glPreviewStarted = CyFalse;
 1626              		.loc 1 695 0 is_stmt 1
 1627 0108 883F9FE5 		ldr	r3, .L229+12
 1628 010c 0020A0E3 		mov	r2, #0
 1629 0110 002083E5 		str	r2, [r3]
 696:../CX3RDKOV5640.c ****             glIsClearFeature = CyTrue;
 1630              		.loc 1 696 0
 1631 0114 803F9FE5 		ldr	r3, .L229+16
 1632 0118 0120A0E3 		mov	r2, #1
 1633 011c 002083E5 		str	r2, [r3]
 697:../CX3RDKOV5640.c ****             esUVCUvcApplnStop();
 1634              		.loc 1 697 0
 1635 0120 FEFFFFEB 		bl	esUVCUvcApplnStop
 698:../CX3RDKOV5640.c ****             glcommitcount = 0;
 1636              		.loc 1 698 0
 1637 0124 743F9FE5 		ldr	r3, .L229+20
 1638 0128 0020A0E3 		mov	r2, #0
 1639 012c 0020C3E5 		strb	r2, [r3]
 1640              	.L80:
 699:../CX3RDKOV5640.c **** #ifdef VISDebug
 700:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB: esUVCUvcApplnStop");
 701:../CX3RDKOV5640.c **** #endif
 702:../CX3RDKOV5640.c ****         }
 703:../CX3RDKOV5640.c ****         return CyFalse;
 1641              		.loc 1 703 0
 1642 0130 0030A0E3 		mov	r3, #0
 1643 0134 420500EA 		b	.L228
 1644              	.L79:
 704:../CX3RDKOV5640.c ****     }
 705:../CX3RDKOV5640.c **** 
 706:../CX3RDKOV5640.c ****     if( bRType == CY_U3P_USB_GS_DEVICE)
 1645              		.loc 1 706 0
 1646 0138 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1647 013c 800053E3 		cmp	r3, #128
 1648 0140 0500001A 		bne	.L82
 707:../CX3RDKOV5640.c ****     {
 708:../CX3RDKOV5640.c ****         /* Make sure that we bring the link back to U0, so that the ERDY can be sent. */
 709:../CX3RDKOV5640.c ****         if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1649              		.loc 1 709 0
 1650 0144 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1651 0148 0030A0E1 		mov	r3, r0
 1652 014c 030053E3 		cmp	r3, #3
 1653 0150 0100001A 		bne	.L82
 710:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 1654              		.loc 1 710 0
 1655 0154 0000A0E3 		mov	r0, #0
 1656 0158 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 1657              	.L82:
 711:../CX3RDKOV5640.c ****     }
 712:../CX3RDKOV5640.c **** 
 713:../CX3RDKOV5640.c ****     if ((bTarget == CY_U3P_USB_TARGET_INTF) && ((bRequest == CY_U3P_USB_SC_SET_FEATURE)
 1658              		.loc 1 713 0
 1659 015c 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1660 0160 010053E3 		cmp	r3, #1
 1661 0164 1400001A 		bne	.L83
 1662              		.loc 1 713 0 is_stmt 0 discriminator 1
 1663 0168 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1664 016c 030053E3 		cmp	r3, #3
 1665 0170 0200000A 		beq	.L84
 714:../CX3RDKOV5640.c ****                 || (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)) && (wValue == 0))
 1666              		.loc 1 714 0 is_stmt 1
 1667 0174 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1668 0178 010053E3 		cmp	r3, #1
 1669 017c 0E00001A 		bne	.L83
 1670              	.L84:
 1671              		.loc 1 714 0 is_stmt 0 discriminator 1
 1672 0180 BC325BE1 		ldrh	r3, [fp, #-44]
 1673 0184 000053E3 		cmp	r3, #0
 1674 0188 0B00001A 		bne	.L83
 715:../CX3RDKOV5640.c ****     {
 716:../CX3RDKOV5640.c ****         if (glIsConfigured)
 1675              		.loc 1 716 0 is_stmt 1
 1676 018c 103F9FE5 		ldr	r3, .L229+24
 1677 0190 003093E5 		ldr	r3, [r3]
 1678 0194 000053E3 		cmp	r3, #0
 1679 0198 0100000A 		beq	.L85
 717:../CX3RDKOV5640.c ****         {
 718:../CX3RDKOV5640.c ****             CyU3PUsbAckSetup ();
 1680              		.loc 1 718 0
 1681 019c FEFFFFEB 		bl	CyU3PUsbAckSetup
 1682 01a0 030000EA 		b	.L86
 1683              	.L85:
 719:../CX3RDKOV5640.c ****         }
 720:../CX3RDKOV5640.c ****         else
 721:../CX3RDKOV5640.c ****         {
 722:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1684              		.loc 1 722 0
 1685 01a4 0000A0E3 		mov	r0, #0
 1686 01a8 0110A0E3 		mov	r1, #1
 1687 01ac 0020A0E3 		mov	r2, #0
 1688 01b0 FEFFFFEB 		bl	CyU3PUsbStall
 1689              	.L86:
 723:../CX3RDKOV5640.c ****         }
 724:../CX3RDKOV5640.c ****         return CyTrue;
 1690              		.loc 1 724 0
 1691 01b4 0130A0E3 		mov	r3, #1
 1692 01b8 210500EA 		b	.L228
 1693              	.L83:
 725:../CX3RDKOV5640.c ****     }
 726:../CX3RDKOV5640.c **** 
 727:../CX3RDKOV5640.c ****     if ((bRequest == CY_U3P_USB_SC_GET_STATUS) &&
 1694              		.loc 1 727 0
 1695 01bc 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1696 01c0 000053E3 		cmp	r3, #0
 1697 01c4 1400001A 		bne	.L87
 1698              		.loc 1 727 0 is_stmt 0 discriminator 1
 1699 01c8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1700 01cc 010053E3 		cmp	r3, #1
 1701 01d0 1100001A 		bne	.L87
 728:../CX3RDKOV5640.c ****             (bTarget == CY_U3P_USB_TARGET_INTF))
 729:../CX3RDKOV5640.c ****     {
 730:../CX3RDKOV5640.c ****         /* We support only interface 0. */
 731:../CX3RDKOV5640.c ****         if (wIndex == 0)
 1702              		.loc 1 731 0 is_stmt 1
 1703 01d4 BE325BE1 		ldrh	r3, [fp, #-46]
 1704 01d8 000053E3 		cmp	r3, #0
 1705 01dc 0800001A 		bne	.L88
 732:../CX3RDKOV5640.c ****         {
 733:../CX3RDKOV5640.c ****             ep0Buf[0] = 0;
 1706              		.loc 1 733 0
 1707 01e0 0030A0E3 		mov	r3, #0
 1708 01e4 34304BE5 		strb	r3, [fp, #-52]
 734:../CX3RDKOV5640.c ****             ep0Buf[1] = 0;
 1709              		.loc 1 734 0
 1710 01e8 0030A0E3 		mov	r3, #0
 1711 01ec 33304BE5 		strb	r3, [fp, #-51]
 735:../CX3RDKOV5640.c ****             CyU3PUsbSendEP0Data (0x02, ep0Buf);
 1712              		.loc 1 735 0
 1713 01f0 34304BE2 		sub	r3, fp, #52
 1714 01f4 0200A0E3 		mov	r0, #2
 1715 01f8 0310A0E1 		mov	r1, r3
 1716 01fc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1717 0200 030000EA 		b	.L89
 1718              	.L88:
 736:../CX3RDKOV5640.c ****         }
 737:../CX3RDKOV5640.c ****         else
 738:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1719              		.loc 1 738 0
 1720 0204 0000A0E3 		mov	r0, #0
 1721 0208 0110A0E3 		mov	r1, #1
 1722 020c 0020A0E3 		mov	r2, #0
 1723 0210 FEFFFFEB 		bl	CyU3PUsbStall
 1724              	.L89:
 739:../CX3RDKOV5640.c ****         return CyTrue;
 1725              		.loc 1 739 0
 1726 0214 0130A0E3 		mov	r3, #1
 1727 0218 090500EA 		b	.L228
 1728              	.L87:
 740:../CX3RDKOV5640.c ****     }
 741:../CX3RDKOV5640.c **** 
 742:../CX3RDKOV5640.c ****     /* Check for UVC Class Requests */
 743:../CX3RDKOV5640.c ****     if (bType == CY_U3P_USB_CLASS_RQT)
 1729              		.loc 1 743 0
 1730 021c 27305BE5 		ldrb	r3, [fp, #-39]	@ zero_extendqisi2
 1731 0220 200053E3 		cmp	r3, #32
 1732 0224 0505001A 		bne	.L90
 744:../CX3RDKOV5640.c ****     {
 745:../CX3RDKOV5640.c **** 
 746:../CX3RDKOV5640.c ****         /* UVC Class Requests */
 747:../CX3RDKOV5640.c ****         /* Requests to the Video Streaming Interface (IF 1) */
 748:../CX3RDKOV5640.c ****         if((wIndex & 0x00FF) == ES_UVC_STREAM_INTERFACE)
 1733              		.loc 1 748 0
 1734 0228 BE325BE1 		ldrh	r3, [fp, #-46]
 1735 022c FF3003E2 		and	r3, r3, #255
 1736 0230 010053E3 		cmp	r3, #1
 1737 0234 4D01001A 		bne	.L91
 749:../CX3RDKOV5640.c ****         {
 750:../CX3RDKOV5640.c ****             /* GET_CUR Request Handling Probe/Commit Controls*/
 751:../CX3RDKOV5640.c ****             if ((bRequest == ES_UVC_USB_GET_CUR_REQ)||(bRequest == ES_UVC_USB_GET_MIN_REQ) || (bReq
 1738              		.loc 1 751 0
 1739 0238 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1740 023c 810053E3 		cmp	r3, #129
 1741 0240 0800000A 		beq	.L92
 1742              		.loc 1 751 0 is_stmt 0 discriminator 1
 1743 0244 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1744 0248 820053E3 		cmp	r3, #130
 1745 024c 0500000A 		beq	.L92
 1746 0250 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1747 0254 830053E3 		cmp	r3, #131
 1748 0258 0200000A 		beq	.L92
 1749 025c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1750 0260 870053E3 		cmp	r3, #135
 1751 0264 5F00001A 		bne	.L93
 1752              	.L92:
 752:../CX3RDKOV5640.c ****             {
 753:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1753              		.loc 1 753 0 is_stmt 1
 1754 0268 0130A0E3 		mov	r3, #1
 1755 026c 20300BE5 		str	r3, [fp, #-32]
 754:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1756              		.loc 1 754 0
 1757 0270 BC325BE1 		ldrh	r3, [fp, #-44]
 1758 0274 010C53E3 		cmp	r3, #256
 1759 0278 0200000A 		beq	.L94
 1760              		.loc 1 754 0 is_stmt 0 discriminator 1
 1761 027c BC325BE1 		ldrh	r3, [fp, #-44]
 1762 0280 020C53E3 		cmp	r3, #512
 1763 0284 4000001A 		bne	.L95
 1764              	.L94:
 755:../CX3RDKOV5640.c ****                 {
 756:../CX3RDKOV5640.c ****                 	//TODO Modify this "glProbeCtrl" according to the Supported Preview Resolutions th
 757:../CX3RDKOV5640.c **** 
 758:../CX3RDKOV5640.c **** 					/* Host requests for probe data of 34 bytes (UVC 1.1) or 26 Bytes (UVC1.0). Send it over EP0. 
 759:../CX3RDKOV5640.c **** 					if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1765              		.loc 1 759 0 is_stmt 1
 1766 0288 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1767 028c 0030A0E1 		mov	r3, r0
 1768 0290 030053E3 		cmp	r3, #3
 1769 0294 2300001A 		bne	.L96
 760:../CX3RDKOV5640.c **** 					{
 761:../CX3RDKOV5640.c **** 						if(glCurrentFrameIndex == 4)
 1770              		.loc 1 761 0
 1771 0298 083E9FE5 		ldr	r3, .L229+28
 1772 029c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 02a0 040053E3 		cmp	r3, #4
 1774 02a4 0400001A 		bne	.L97
 762:../CX3RDKOV5640.c **** 						{
 763:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl5MpProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1775              		.loc 1 763 0
 1776 02a8 FC0D9FE5 		ldr	r0, .L229+32
 1777 02ac FC1D9FE5 		ldr	r1, .L229+36
 1778 02b0 1A20A0E3 		mov	r2, #26
 1779 02b4 FEFFFFEB 		bl	CyU3PMemCopy
 1780 02b8 260000EA 		b	.L101
 1781              	.L97:
 764:../CX3RDKOV5640.c **** 						}
 765:../CX3RDKOV5640.c **** 						/* Probe Control for 1280x720 stream*/
 766:../CX3RDKOV5640.c **** 						else if(glCurrentFrameIndex == 3)
 1782              		.loc 1 766 0
 1783 02bc E43D9FE5 		ldr	r3, .L229+28
 1784 02c0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1785 02c4 030053E3 		cmp	r3, #3
 1786 02c8 0400001A 		bne	.L99
 767:../CX3RDKOV5640.c **** 						{
 768:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl720pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1787              		.loc 1 768 0
 1788 02cc D80D9FE5 		ldr	r0, .L229+32
 1789 02d0 DC1D9FE5 		ldr	r1, .L229+40
 1790 02d4 1A20A0E3 		mov	r2, #26
 1791 02d8 FEFFFFEB 		bl	CyU3PMemCopy
 1792 02dc 1D0000EA 		b	.L101
 1793              	.L99:
 769:../CX3RDKOV5640.c **** 						}
 770:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 771:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 2)
 1794              		.loc 1 771 0
 1795 02e0 C03D9FE5 		ldr	r3, .L229+28
 1796 02e4 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 02e8 020053E3 		cmp	r3, #2
 1798 02ec 0400001A 		bne	.L100
 772:../CX3RDKOV5640.c **** 						{
 773:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga60ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1799              		.loc 1 773 0
 1800 02f0 B40D9FE5 		ldr	r0, .L229+32
 1801 02f4 BC1D9FE5 		ldr	r1, .L229+44
 1802 02f8 1A20A0E3 		mov	r2, #26
 1803 02fc FEFFFFEB 		bl	CyU3PMemCopy
 1804 0300 140000EA 		b	.L101
 1805              	.L100:
 774:../CX3RDKOV5640.c **** 						}
 775:../CX3RDKOV5640.c **** 						/* Probe Control for 1920x1080 stream*/
 776:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 1)
 1806              		.loc 1 776 0
 1807 0304 9C3D9FE5 		ldr	r3, .L229+28
 1808 0308 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 030c 010053E3 		cmp	r3, #1
 1810 0310 1000001A 		bne	.L101
 777:../CX3RDKOV5640.c **** 						{
 778:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl1080pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1811              		.loc 1 778 0
 1812 0314 900D9FE5 		ldr	r0, .L229+32
 1813 0318 9C1D9FE5 		ldr	r1, .L229+48
 1814 031c 1A20A0E3 		mov	r2, #26
 1815 0320 FEFFFFEB 		bl	CyU3PMemCopy
 1816 0324 0B0000EA 		b	.L101
 1817              	.L96:
 779:../CX3RDKOV5640.c **** 						}
 780:../CX3RDKOV5640.c **** 
 781:../CX3RDKOV5640.c **** 					}
 782:../CX3RDKOV5640.c **** 					else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1818              		.loc 1 782 0
 1819 0328 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1820 032c 0030A0E1 		mov	r3, r0
 1821 0330 020053E3 		cmp	r3, #2
 1822 0334 0400001A 		bne	.L102
 783:../CX3RDKOV5640.c **** 					{
 784:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 785:../CX3RDKOV5640.c **** 						CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga30ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1823              		.loc 1 785 0
 1824 0338 6C0D9FE5 		ldr	r0, .L229+32
 1825 033c 7C1D9FE5 		ldr	r1, .L229+52
 1826 0340 1A20A0E3 		mov	r2, #26
 1827 0344 FEFFFFEB 		bl	CyU3PMemCopy
 1828 0348 020000EA 		b	.L101
 1829              	.L102:
 786:../CX3RDKOV5640.c **** 					}
 787:../CX3RDKOV5640.c **** 					else /* FULL-Speed*/
 788:../CX3RDKOV5640.c **** 					{
 789:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rFull Speed Not Supported!");
 1830              		.loc 1 789 0
 1831 034c 0400A0E3 		mov	r0, #4
 1832 0350 6C1D9FE5 		ldr	r1, .L229+56
 1833 0354 FEFFFFEB 		bl	CyU3PDebugPrint
 1834              	.L101:
 790:../CX3RDKOV5640.c **** 					}
 791:../CX3RDKOV5640.c **** 
 792:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(ES_UVC_MAX_PROBE_SETTING, glProbeCtrl);
 1835              		.loc 1 792 0
 1836 0358 1A00A0E3 		mov	r0, #26
 1837 035c 481D9FE5 		ldr	r1, .L229+32
 1838 0360 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1839 0364 24000BE5 		str	r0, [fp, #-36]
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1840              		.loc 1 793 0
 1841 0368 24301BE5 		ldr	r3, [fp, #-36]
 1842 036c 000053E3 		cmp	r3, #0
 1843 0370 0400000A 		beq	.L103
 794:../CX3RDKOV5640.c **** 					{
 795:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1844              		.loc 1 795 0
 1845 0374 0400A0E3 		mov	r0, #4
 1846 0378 481D9FE5 		ldr	r1, .L229+60
 1847 037c 24201BE5 		ldr	r2, [fp, #-36]
 1848 0380 FEFFFFEB 		bl	CyU3PDebugPrint
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1849              		.loc 1 793 0
 1850 0384 160000EA 		b	.L104
 1851              	.L103:
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1852              		.loc 1 793 0 is_stmt 0 discriminator 1
 1853 0388 150000EA 		b	.L104
 1854              	.L95:
 796:../CX3RDKOV5640.c **** 					}
 797:../CX3RDKOV5640.c ****                 }
 798:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 1855              		.loc 1 798 0 is_stmt 1
 1856 038c BC325BE1 		ldrh	r3, [fp, #-44]
 1857 0390 030C53E3 		cmp	r3, #768
 1858 0394 0200000A 		beq	.L105
 1859              		.loc 1 798 0 is_stmt 0 discriminator 1
 1860 0398 BC325BE1 		ldrh	r3, [fp, #-44]
 1861 039c 010B53E3 		cmp	r3, #1024
 1862 03a0 0F00001A 		bne	.L104
 1863              	.L105:
 799:../CX3RDKOV5640.c ****                 {
 800:../CX3RDKOV5640.c ****                 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1864              		.loc 1 800 0 is_stmt 1
 1865 03a4 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1866 03a8 0030A0E1 		mov	r3, r0
 1867 03ac 030053E3 		cmp	r3, #3
 1868 03b0 0B00001A 		bne	.L104
 801:../CX3RDKOV5640.c ****                 	{
 802:../CX3RDKOV5640.c **** 						status = CyU3PUsbSendEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING, glStillProbeCtrl);
 1869              		.loc 1 802 0
 1870 03b4 0B00A0E3 		mov	r0, #11
 1871 03b8 0C1D9FE5 		ldr	r1, .L229+64
 1872 03bc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1873 03c0 24000BE5 		str	r0, [fp, #-36]
 803:../CX3RDKOV5640.c **** 						if (status != CY_U3P_SUCCESS)
 1874              		.loc 1 803 0
 1875 03c4 24301BE5 		ldr	r3, [fp, #-36]
 1876 03c8 000053E3 		cmp	r3, #0
 1877 03cc 0400000A 		beq	.L104
 804:../CX3RDKOV5640.c **** 						{
 805:../CX3RDKOV5640.c **** 							CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1878              		.loc 1 805 0
 1879 03d0 0400A0E3 		mov	r0, #4
 1880 03d4 EC1C9FE5 		ldr	r1, .L229+60
 1881 03d8 24201BE5 		ldr	r2, [fp, #-36]
 1882 03dc FEFFFFEB 		bl	CyU3PDebugPrint
 754:../CX3RDKOV5640.c ****                 {
 1883              		.loc 1 754 0
 1884 03e0 E10000EA 		b	.L106
 1885              	.L104:
 1886 03e4 E00000EA 		b	.L106
 1887              	.L93:
 806:../CX3RDKOV5640.c **** 						}
 807:../CX3RDKOV5640.c ****                 	}
 808:../CX3RDKOV5640.c ****                 }
 809:../CX3RDKOV5640.c ****             }
 810:../CX3RDKOV5640.c ****             /* SET_CUR request handling Probe/Commit controls */
 811:../CX3RDKOV5640.c ****             else if (bRequest == ES_UVC_USB_SET_CUR_REQ)
 1888              		.loc 1 811 0
 1889 03e8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1890 03ec 010053E3 		cmp	r3, #1
 1891 03f0 DA00001A 		bne	.L107
 812:../CX3RDKOV5640.c ****             {
 813:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1892              		.loc 1 813 0
 1893 03f4 0130A0E3 		mov	r3, #1
 1894 03f8 20300BE5 		str	r3, [fp, #-32]
 814:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1895              		.loc 1 814 0
 1896 03fc BC325BE1 		ldrh	r3, [fp, #-44]
 1897 0400 010C53E3 		cmp	r3, #256
 1898 0404 0200000A 		beq	.L108
 1899              		.loc 1 814 0 is_stmt 0 discriminator 1
 1900 0408 BC325BE1 		ldrh	r3, [fp, #-44]
 1901 040c 020C53E3 		cmp	r3, #512
 1902 0410 5400001A 		bne	.L109
 1903              	.L108:
 815:../CX3RDKOV5640.c ****                 {
 816:../CX3RDKOV5640.c **** 					/* Get the UVC probe/commit control data from EP0 */
 817:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_PROBE_SETTING_ALIGNED,
 1904              		.loc 1 817 0 is_stmt 1
 1905 0414 32304BE2 		sub	r3, fp, #50
 1906 0418 2000A0E3 		mov	r0, #32
 1907 041c AC1C9FE5 		ldr	r1, .L229+68
 1908 0420 0320A0E1 		mov	r2, r3
 1909 0424 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 1910 0428 24000BE5 		str	r0, [fp, #-36]
 818:../CX3RDKOV5640.c **** 							glCommitCtrl, &readCount);
 819:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1911              		.loc 1 819 0
 1912 042c 24301BE5 		ldr	r3, [fp, #-36]
 1913 0430 000053E3 		cmp	r3, #0
 1914 0434 0300000A 		beq	.L110
 820:../CX3RDKOV5640.c **** 					{
 821:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 1915              		.loc 1 821 0
 1916 0438 0400A0E3 		mov	r0, #4
 1917 043c 901C9FE5 		ldr	r1, .L229+72
 1918 0440 24201BE5 		ldr	r2, [fp, #-36]
 1919 0444 FEFFFFEB 		bl	CyU3PDebugPrint
 1920              	.L110:
 822:../CX3RDKOV5640.c **** 					}
 823:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 824:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_PROBE_SETTING)
 1921              		.loc 1 824 0
 1922 0448 B2335BE1 		ldrh	r3, [fp, #-50]
 1923 044c 1A0053E3 		cmp	r3, #26
 1924 0450 0300009A 		bls	.L111
 825:../CX3RDKOV5640.c **** 					{
 826:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 1925              		.loc 1 826 0
 1926 0454 0400A0E3 		mov	r0, #4
 1927 0458 781C9FE5 		ldr	r1, .L229+76
 1928 045c FEFFFFEB 		bl	CyU3PDebugPrint
 1929 0460 3F0000EA 		b	.L112
 1930              	.L111:
 827:../CX3RDKOV5640.c **** 					}
 828:../CX3RDKOV5640.c **** 					else
 829:../CX3RDKOV5640.c **** 					{
 830:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 831:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_VS_PROBE_CONTROL)
 1931              		.loc 1 831 0
 1932 0464 BC325BE1 		ldrh	r3, [fp, #-44]
 1933 0468 010C53E3 		cmp	r3, #256
 1934 046c 0400001A 		bne	.L113
 832:../CX3RDKOV5640.c **** 						{
 833:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 1935              		.loc 1 833 0
 1936 0470 583C9FE5 		ldr	r3, .L229+68
 1937 0474 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1938 0478 283C9FE5 		ldr	r3, .L229+28
 1939 047c 0020C3E5 		strb	r2, [r3]
 1940 0480 370000EA 		b	.L112
 1941              	.L113:
 834:../CX3RDKOV5640.c **** 						}
 835:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 836:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_VS_COMMIT_CONTROL)
 1942              		.loc 1 836 0
 1943 0484 BC325BE1 		ldrh	r3, [fp, #-44]
 1944 0488 020C53E3 		cmp	r3, #512
 1945 048c 3400001A 		bne	.L112
 837:../CX3RDKOV5640.c **** 						{
 838:../CX3RDKOV5640.c **** 
 839:../CX3RDKOV5640.c **** 							if((glcommitcount==0)||(glcheckframe!=glCommitCtrl[3]))
 1946              		.loc 1 839 0
 1947 0490 083C9FE5 		ldr	r3, .L229+20
 1948 0494 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1949 0498 000053E3 		cmp	r3, #0
 1950 049c 0500000A 		beq	.L114
 1951              		.loc 1 839 0 is_stmt 0 discriminator 1
 1952 04a0 283C9FE5 		ldr	r3, .L229+68
 1953 04a4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1954 04a8 2C3C9FE5 		ldr	r3, .L229+80
 1955 04ac 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 04b0 030052E1 		cmp	r2, r3
 1957 04b4 2A00000A 		beq	.L112
 1958              	.L114:
 840:../CX3RDKOV5640.c **** 							{
 841:../CX3RDKOV5640.c **** 								glcommitcount++;
 1959              		.loc 1 841 0 is_stmt 1
 1960 04b8 E03B9FE5 		ldr	r3, .L229+20
 1961 04bc 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1962 04c0 013083E2 		add	r3, r3, #1
 1963 04c4 FF2003E2 		and	r2, r3, #255
 1964 04c8 D03B9FE5 		ldr	r3, .L229+20
 1965 04cc 0020C3E5 		strb	r2, [r3]
 842:../CX3RDKOV5640.c **** 								glcheckframe=glCommitCtrl[3];
 1966              		.loc 1 842 0
 1967 04d0 F83B9FE5 		ldr	r3, .L229+68
 1968 04d4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1969 04d8 FC3B9FE5 		ldr	r3, .L229+80
 1970 04dc 0020C3E5 		strb	r2, [r3]
 843:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 1971              		.loc 1 843 0
 1972 04e0 E83B9FE5 		ldr	r3, .L229+68
 1973 04e4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1974 04e8 B83B9FE5 		ldr	r3, .L229+28
 1975 04ec 0020C3E5 		strb	r2, [r3]
 844:../CX3RDKOV5640.c **** 							glFrameIndexToSet = glCurrentFrameIndex;
 1976              		.loc 1 844 0
 1977 04f0 B03B9FE5 		ldr	r3, .L229+28
 1978 04f4 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 1979 04f8 E03B9FE5 		ldr	r3, .L229+84
 1980 04fc 0020C3E5 		strb	r2, [r3]
 845:../CX3RDKOV5640.c **** 							glPreviewStarted = CyTrue;
 1981              		.loc 1 845 0
 1982 0500 903B9FE5 		ldr	r3, .L229+12
 1983 0504 0120A0E3 		mov	r2, #1
 1984 0508 002083E5 		str	r2, [r3]
 846:../CX3RDKOV5640.c **** 
 847:../CX3RDKOV5640.c **** 							//TODO Change this function with "Sensor Specific" function to write the sensor settings & c
 848:../CX3RDKOV5640.c **** 						//	esSetCameraResolution(glCurrentFrameIndex);
 849:../CX3RDKOV5640.c **** 							esSetCameraResolution(glCommitCtrl[3]);
 1985              		.loc 1 849 0
 1986 050c BC3B9FE5 		ldr	r3, .L229+68
 1987 0510 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1988 0514 0300A0E1 		mov	r0, r3
 1989 0518 FEFFFFEB 		bl	esSetCameraResolution
 850:../CX3RDKOV5640.c **** 
 851:../CX3RDKOV5640.c **** 							if (glIsApplnActive)
 1990              		.loc 1 851 0
 1991 051c 6C3B9FE5 		ldr	r3, .L229+4
 1992 0520 003093E5 		ldr	r3, [r3]
 1993 0524 000053E3 		cmp	r3, #0
 1994 0528 0B00000A 		beq	.L115
 852:../CX3RDKOV5640.c **** 							{
 853:../CX3RDKOV5640.c **** 								if(glcommitcount)
 1995              		.loc 1 853 0
 1996 052c 6C3B9FE5 		ldr	r3, .L229+20
 1997 0530 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 0534 000053E3 		cmp	r3, #0
 1999 0538 0300000A 		beq	.L116
 854:../CX3RDKOV5640.c **** 									glIsClearFeature = CyFalse;
 2000              		.loc 1 854 0
 2001 053c 583B9FE5 		ldr	r3, .L229+16
 2002 0540 0020A0E3 		mov	r2, #0
 2003 0544 002083E5 		str	r2, [r3]
 2004 0548 020000EA 		b	.L117
 2005              	.L116:
 855:../CX3RDKOV5640.c **** 								else
 856:../CX3RDKOV5640.c **** 									glIsClearFeature = CyTrue;
 2006              		.loc 1 856 0
 2007 054c 483B9FE5 		ldr	r3, .L229+16
 2008 0550 0120A0E3 		mov	r2, #1
 2009 0554 002083E5 		str	r2, [r3]
 2010              	.L117:
 857:../CX3RDKOV5640.c **** 
 858:../CX3RDKOV5640.c **** 								esUVCUvcApplnStop();
 2011              		.loc 1 858 0
 2012 0558 FEFFFFEB 		bl	esUVCUvcApplnStop
 2013              	.L115:
 859:../CX3RDKOV5640.c **** #ifdef VISDebug
 860:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStop");
 861:../CX3RDKOV5640.c **** #endif
 862:../CX3RDKOV5640.c **** 							}
 863:../CX3RDKOV5640.c **** 							esUVCUvcApplnStart();
 2014              		.loc 1 863 0
 2015 055c FEFFFFEB 		bl	esUVCUvcApplnStart
 824:../CX3RDKOV5640.c **** 					{
 2016              		.loc 1 824 0
 2017 0560 7D0000EA 		b	.L118
 2018              	.L112:
 2019 0564 7C0000EA 		b	.L118
 2020              	.L109:
 864:../CX3RDKOV5640.c **** #ifdef VISDebug
 865:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStart");
 866:../CX3RDKOV5640.c **** #endif
 867:../CX3RDKOV5640.c **** 							}
 868:../CX3RDKOV5640.c **** 						}
 869:../CX3RDKOV5640.c **** 					}
 870:../CX3RDKOV5640.c ****                 }
 871:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 2021              		.loc 1 871 0
 2022 0568 BC325BE1 		ldrh	r3, [fp, #-44]
 2023 056c 030C53E3 		cmp	r3, #768
 2024 0570 0200000A 		beq	.L119
 2025              		.loc 1 871 0 is_stmt 0 discriminator 1
 2026 0574 BC325BE1 		ldrh	r3, [fp, #-44]
 2027 0578 010B53E3 		cmp	r3, #1024
 2028 057c 5400001A 		bne	.L120
 2029              	.L119:
 872:../CX3RDKOV5640.c ****                 {
 873:../CX3RDKOV5640.c ****                 	/* Get the UVC STILL probe/commit control data from EP0 */
 874:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED,glStillCommitCtrl, &readCou
 2030              		.loc 1 874 0 is_stmt 1
 2031 0580 32304BE2 		sub	r3, fp, #50
 2032 0584 2000A0E3 		mov	r0, #32
 2033 0588 541B9FE5 		ldr	r1, .L229+88
 2034 058c 0320A0E1 		mov	r2, r3
 2035 0590 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2036 0594 24000BE5 		str	r0, [fp, #-36]
 875:../CX3RDKOV5640.c **** 					CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:still = 0x%x.", wValue);
 2037              		.loc 1 875 0
 2038 0598 BC325BE1 		ldrh	r3, [fp, #-44]
 2039 059c 0400A0E3 		mov	r0, #4
 2040 05a0 401B9FE5 		ldr	r1, .L229+92
 2041 05a4 0320A0E1 		mov	r2, r3
 2042 05a8 FEFFFFEB 		bl	CyU3PDebugPrint
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 877:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[0], glStillCommitCtrl[1],  glStillCommitCtrl[2], glStillCom
 2043              		.loc 1 877 0
 2044 05ac 303B9FE5 		ldr	r3, .L229+88
 2045 05b0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2046              		.loc 1 876 0
 2047 05b4 0320A0E1 		mov	r2, r3
 2048              		.loc 1 877 0
 2049 05b8 243B9FE5 		ldr	r3, .L229+88
 2050 05bc 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2051 05c0 1C1B9FE5 		ldr	r1, .L229+88
 2052 05c4 0210D1E5 		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2053              		.loc 1 876 0
 2054 05c8 0180A0E1 		mov	r8, r1
 2055              		.loc 1 877 0
 2056 05cc 101B9FE5 		ldr	r1, .L229+88
 2057 05d0 0310D1E5 		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2058              		.loc 1 876 0
 2059 05d4 0170A0E1 		mov	r7, r1
 878:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[4], glStillCommitCtrl[5],  glStillCommitCtrl[6], glStillCom
 2060              		.loc 1 878 0
 2061 05d8 041B9FE5 		ldr	r1, .L229+88
 2062 05dc 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2063              		.loc 1 876 0
 2064 05e0 0160A0E1 		mov	r6, r1
 2065              		.loc 1 878 0
 2066 05e4 F81A9FE5 		ldr	r1, .L229+88
 2067 05e8 0510D1E5 		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2068              		.loc 1 876 0
 2069 05ec 0150A0E1 		mov	r5, r1
 2070              		.loc 1 878 0
 2071 05f0 EC1A9FE5 		ldr	r1, .L229+88
 2072 05f4 0610D1E5 		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2073              		.loc 1 876 0
 2074 05f8 0140A0E1 		mov	r4, r1
 2075              		.loc 1 878 0
 2076 05fc E01A9FE5 		ldr	r1, .L229+88
 2077 0600 0710D1E5 		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2078              		.loc 1 876 0
 2079 0604 01E0A0E1 		mov	lr, r1
 879:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[8], glStillCommitCtrl[9], glStillCommitCtrl[10]);
 2080              		.loc 1 879 0
 2081 0608 D41A9FE5 		ldr	r1, .L229+88
 2082 060c 0810D1E5 		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2083              		.loc 1 876 0
 2084 0610 01C0A0E1 		mov	ip, r1
 2085              		.loc 1 879 0
 2086 0614 C81A9FE5 		ldr	r1, .L229+88
 2087 0618 0910D1E5 		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2088              		.loc 1 876 0
 2089 061c 0100A0E1 		mov	r0, r1
 2090              		.loc 1 879 0
 2091 0620 BC1A9FE5 		ldr	r1, .L229+88
 2092 0624 0A10D1E5 		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2093              		.loc 1 876 0
 2094 0628 00808DE5 		str	r8, [sp]
 2095 062c 04708DE5 		str	r7, [sp, #4]
 2096 0630 08608DE5 		str	r6, [sp, #8]
 2097 0634 0C508DE5 		str	r5, [sp, #12]
 2098 0638 10408DE5 		str	r4, [sp, #16]
 2099 063c 14E08DE5 		str	lr, [sp, #20]
 2100 0640 18C08DE5 		str	ip, [sp, #24]
 2101 0644 1C008DE5 		str	r0, [sp, #28]
 2102 0648 20108DE5 		str	r1, [sp, #32]
 2103 064c 0400A0E3 		mov	r0, #4
 2104 0650 941A9FE5 		ldr	r1, .L229+96
 2105 0654 FEFFFFEB 		bl	CyU3PDebugPrint
 880:../CX3RDKOV5640.c **** 
 881:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2106              		.loc 1 881 0
 2107 0658 24301BE5 		ldr	r3, [fp, #-36]
 2108 065c 000053E3 		cmp	r3, #0
 2109 0660 0300000A 		beq	.L121
 882:../CX3RDKOV5640.c **** 					{
 883:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2110              		.loc 1 883 0
 2111 0664 0400A0E3 		mov	r0, #4
 2112 0668 641A9FE5 		ldr	r1, .L229+72
 2113 066c 24201BE5 		ldr	r2, [fp, #-36]
 2114 0670 FEFFFFEB 		bl	CyU3PDebugPrint
 2115              	.L121:
 884:../CX3RDKOV5640.c **** 					}
 885:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 886:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_STILL_PROBE_SETTING)
 2116              		.loc 1 886 0
 2117 0674 B2335BE1 		ldrh	r3, [fp, #-50]
 2118 0678 0B0053E3 		cmp	r3, #11
 2119 067c 0300009A 		bls	.L122
 887:../CX3RDKOV5640.c **** 					{
 888:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2120              		.loc 1 888 0
 2121 0680 0400A0E3 		mov	r0, #4
 2122 0684 4C1A9FE5 		ldr	r1, .L229+76
 2123 0688 FEFFFFEB 		bl	CyU3PDebugPrint
 2124 068c 0F0000EA 		b	.L123
 2125              	.L122:
 889:../CX3RDKOV5640.c **** 					}
 890:../CX3RDKOV5640.c **** 					else
 891:../CX3RDKOV5640.c **** 					{
 892:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 893:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_STILL_PROBE_CONTROL)
 2126              		.loc 1 893 0
 2127 0690 BC325BE1 		ldrh	r3, [fp, #-44]
 2128 0694 030C53E3 		cmp	r3, #768
 2129 0698 0400001A 		bne	.L124
 894:../CX3RDKOV5640.c **** 						{
 895:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2130              		.loc 1 895 0
 2131 069c 403A9FE5 		ldr	r3, .L229+88
 2132 06a0 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2133 06a4 443A9FE5 		ldr	r3, .L229+100
 2134 06a8 0020C3E5 		strb	r2, [r3]
 2135 06ac 070000EA 		b	.L123
 2136              	.L124:
 896:../CX3RDKOV5640.c **** 						}
 897:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 898:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_STILL_COMMIT_CONTROL)
 2137              		.loc 1 898 0
 2138 06b0 BC325BE1 		ldrh	r3, [fp, #-44]
 2139 06b4 010B53E3 		cmp	r3, #1024
 2140 06b8 0400001A 		bne	.L123
 899:../CX3RDKOV5640.c **** 						{
 900:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2141              		.loc 1 900 0
 2142 06bc 203A9FE5 		ldr	r3, .L229+88
 2143 06c0 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2144 06c4 243A9FE5 		ldr	r3, .L229+100
 2145 06c8 0020C3E5 		strb	r2, [r3]
 886:../CX3RDKOV5640.c **** 					{
 2146              		.loc 1 886 0
 2147 06cc 220000EA 		b	.L118
 2148              	.L123:
 2149 06d0 210000EA 		b	.L118
 2150              	.L120:
 901:../CX3RDKOV5640.c **** 						}
 902:../CX3RDKOV5640.c **** 					}
 903:../CX3RDKOV5640.c **** 
 904:../CX3RDKOV5640.c ****                 }
 905:../CX3RDKOV5640.c ****                 else if(wValue == ES_UVC_STILL_TRIGGER)
 2151              		.loc 1 905 0
 2152 06d4 BC325BE1 		ldrh	r3, [fp, #-44]
 2153 06d8 050C53E3 		cmp	r3, #1280
 2154 06dc D703001A 		bne	.L90
 906:../CX3RDKOV5640.c ****                 {
 907:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_STILL_TRIGGER_ALIGNED,&glStillTriggerCtrl, &readCount);
 2155              		.loc 1 907 0
 2156 06e0 32304BE2 		sub	r3, fp, #50
 2157 06e4 1000A0E3 		mov	r0, #16
 2158 06e8 041A9FE5 		ldr	r1, .L229+104
 2159 06ec 0320A0E1 		mov	r2, r3
 2160 06f0 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2161 06f4 24000BE5 		str	r0, [fp, #-36]
 908:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2162              		.loc 1 908 0
 2163 06f8 24301BE5 		ldr	r3, [fp, #-36]
 2164 06fc 000053E3 		cmp	r3, #0
 2165 0700 0300000A 		beq	.L125
 909:../CX3RDKOV5640.c **** 					{
 910:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2166              		.loc 1 910 0
 2167 0704 0400A0E3 		mov	r0, #4
 2168 0708 C4199FE5 		ldr	r1, .L229+72
 2169 070c 24201BE5 		ldr	r2, [fp, #-36]
 2170 0710 FEFFFFEB 		bl	CyU3PDebugPrint
 2171              	.L125:
 911:../CX3RDKOV5640.c **** 					}
 912:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 913:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_STILL_TRIGGER_COUNT)
 2172              		.loc 1 913 0
 2173 0714 B2335BE1 		ldrh	r3, [fp, #-50]
 2174 0718 010053E3 		cmp	r3, #1
 2175 071c 0300009A 		bls	.L126
 914:../CX3RDKOV5640.c **** 					{
 915:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2176              		.loc 1 915 0
 2177 0720 0400A0E3 		mov	r0, #4
 2178 0724 AC199FE5 		ldr	r1, .L229+76
 2179 0728 FEFFFFEB 		bl	CyU3PDebugPrint
 2180 072c C30300EA 		b	.L90
 2181              	.L126:
 916:../CX3RDKOV5640.c **** 					}
 917:../CX3RDKOV5640.c **** 					else
 918:../CX3RDKOV5640.c **** 					{
 919:../CX3RDKOV5640.c **** 						if(glStillTriggerCtrl == 0x01)
 2182              		.loc 1 919 0
 2183 0730 BC399FE5 		ldr	r3, .L229+104
 2184 0734 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2185 0738 010053E3 		cmp	r3, #1
 2186 073c BF03001A 		bne	.L90
 920:../CX3RDKOV5640.c **** 						{
 921:../CX3RDKOV5640.c **** 							glStillSkip = 3;
 2187              		.loc 1 921 0
 2188 0740 B0399FE5 		ldr	r3, .L229+108
 2189 0744 0320A0E3 		mov	r2, #3
 2190 0748 0020C3E5 		strb	r2, [r3]
 922:../CX3RDKOV5640.c **** 							glStillCaptureStart = CyTrue;
 2191              		.loc 1 922 0
 2192 074c A8399FE5 		ldr	r3, .L229+112
 2193 0750 0120A0E3 		mov	r2, #1
 2194 0754 002083E5 		str	r2, [r3]
 2195 0758 B80300EA 		b	.L90
 2196              	.L118:
 2197 075c B70300EA 		b	.L90
 2198              	.L107:
 923:../CX3RDKOV5640.c **** 						}
 924:../CX3RDKOV5640.c **** 					}
 925:../CX3RDKOV5640.c ****                 }
 926:../CX3RDKOV5640.c ****             }
 927:../CX3RDKOV5640.c ****             else
 928:../CX3RDKOV5640.c ****             {
 929:../CX3RDKOV5640.c ****                 /* Mark with error. */
 930:../CX3RDKOV5640.c ****                 status = CY_U3P_ERROR_FAILURE;
 2199              		.loc 1 930 0
 2200 0760 4A30A0E3 		mov	r3, #74
 2201 0764 24300BE5 		str	r3, [fp, #-36]
 2202 0768 B40300EA 		b	.L90
 2203              	.L106:
 2204 076c B30300EA 		b	.L90
 2205              	.L91:
 931:../CX3RDKOV5640.c ****             }
 932:../CX3RDKOV5640.c ****         }
 933:../CX3RDKOV5640.c ****         else if((wIndex & 0x00FF) == ES_UVC_CONTROL_INTERFACE) /* Video Control Interface */
 2206              		.loc 1 933 0
 2207 0770 BE325BE1 		ldrh	r3, [fp, #-46]
 2208 0774 FF3003E2 		and	r3, r3, #255
 2209 0778 000053E3 		cmp	r3, #0
 2210 077c AF03001A 		bne	.L90
 934:../CX3RDKOV5640.c ****         {
 935:../CX3RDKOV5640.c ****             isHandled = CyTrue;
 2211              		.loc 1 935 0
 2212 0780 0130A0E3 		mov	r3, #1
 2213 0784 20300BE5 		str	r3, [fp, #-32]
 936:../CX3RDKOV5640.c ****             /* Respond to VC_REQUEST_ERROR_CODE_CONTROL and stall every other request as this examp
 937:../CX3RDKOV5640.c ****                any of the Video Control features */
 938:../CX3RDKOV5640.c ****             if((wIndex == 0x200) && (wValue == 0x200))/*Brightness*/
 2214              		.loc 1 938 0
 2215 0788 BE325BE1 		ldrh	r3, [fp, #-46]
 2216 078c 020C53E3 		cmp	r3, #512
 2217 0790 4D00001A 		bne	.L127
 2218              		.loc 1 938 0 is_stmt 0 discriminator 1
 2219 0794 BC325BE1 		ldrh	r3, [fp, #-44]
 2220 0798 020C53E3 		cmp	r3, #512
 2221 079c 4A00001A 		bne	.L127
 939:../CX3RDKOV5640.c ****             {
 940:../CX3RDKOV5640.c ****             	switch(bRequest)
 2222              		.loc 1 940 0 is_stmt 1
 2223 07a0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2224 07a4 840053E3 		cmp	r3, #132
 2225 07a8 040000CA 		bgt	.L129
 2226 07ac 810053E3 		cmp	r3, #129
 2227 07b0 170000AA 		bge	.L130
 2228 07b4 010053E3 		cmp	r3, #1
 2229 07b8 2D00000A 		beq	.L131
 941:../CX3RDKOV5640.c ****             	{
 942:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_INFO_REQ:
 943:../CX3RDKOV5640.c ****             		glGet_Info=0x03;
 944:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 945:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 946:../CX3RDKOV5640.c **** 					{
 947:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 948:../CX3RDKOV5640.c **** 					}
 949:../CX3RDKOV5640.c **** 					break;
 950:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 951:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MAX_REQ:
 952:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_RES_REQ:
 953:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_CUR_REQ:
 954:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_DEF_REQ:
 955:../CX3RDKOV5640.c ****             		RequestOption = (bRequest & 0x0F);
 956:../CX3RDKOV5640.c **** 
 957:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service all the GE
 958:../CX3RDKOV5640.c ****             		gl16GetControl = esOV5640_GetBrightness(RequestOption);
 959:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 960:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 961:../CX3RDKOV5640.c **** 					{
 962:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 963:../CX3RDKOV5640.c **** 					}
 964:../CX3RDKOV5640.c ****             		break;
 965:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 966:../CX3RDKOV5640.c ****             		status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
 967:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 968:../CX3RDKOV5640.c **** 					{
 969:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 970:../CX3RDKOV5640.c **** 					}
 971:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service the SET re
 972:../CX3RDKOV5640.c **** 					esOV5640_SetBrightness((int8_t)gl16SetControl);
 973:../CX3RDKOV5640.c **** 					break;
 974:../CX3RDKOV5640.c ****             	}
 975:../CX3RDKOV5640.c ****             }
 2230              		.loc 1 975 0
 2231 07bc 9F0300EA 		b	.L90
 2232              	.L129:
 940:../CX3RDKOV5640.c ****             	{
 2233              		.loc 1 940 0
 2234 07c0 860053E3 		cmp	r3, #134
 2235 07c4 0200000A 		beq	.L132
 2236 07c8 870053E3 		cmp	r3, #135
 2237 07cc 1000000A 		beq	.L130
 2238              		.loc 1 975 0
 2239 07d0 9A0300EA 		b	.L90
 2240              	.L132:
 943:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2241              		.loc 1 943 0
 2242 07d4 3C399FE5 		ldr	r3, .L229+140
 2243 07d8 0320A0E3 		mov	r2, #3
 2244 07dc 0020C3E5 		strb	r2, [r3]
 944:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2245              		.loc 1 944 0
 2246 07e0 0100A0E3 		mov	r0, #1
 2247 07e4 2C199FE5 		ldr	r1, .L229+140
 2248 07e8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2249 07ec 24000BE5 		str	r0, [fp, #-36]
 945:../CX3RDKOV5640.c **** 					{
 2250              		.loc 1 945 0
 2251 07f0 24301BE5 		ldr	r3, [fp, #-36]
 2252 07f4 000053E3 		cmp	r3, #0
 2253 07f8 0400000A 		beq	.L133
 947:../CX3RDKOV5640.c **** 					}
 2254              		.loc 1 947 0
 2255 07fc 0400A0E3 		mov	r0, #4
 2256 0800 1C199FE5 		ldr	r1, .L229+152
 2257 0804 24201BE5 		ldr	r2, [fp, #-36]
 2258 0808 FEFFFFEB 		bl	CyU3PDebugPrint
 949:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 2259              		.loc 1 949 0
 2260 080c 2D0000EA 		b	.L128
 2261              	.L133:
 2262 0810 2C0000EA 		b	.L128
 2263              	.L130:
 955:../CX3RDKOV5640.c **** 
 2264              		.loc 1 955 0
 2265 0814 29305BE5 		ldrb	r3, [fp, #-41]
 2266 0818 0F3003E2 		and	r3, r3, #15
 2267 081c 25304BE5 		strb	r3, [fp, #-37]
 958:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2268              		.loc 1 958 0
 2269 0820 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2270 0824 0300A0E1 		mov	r0, r3
 2271 0828 FEFFFFEB 		bl	esOV5640_GetBrightness
 2272 082c 0030A0E1 		mov	r3, r0
 2273 0830 0338A0E1 		mov	r3, r3, asl #16
 2274 0834 2328A0E1 		mov	r2, r3, lsr #16
 2275 0838 DC389FE5 		ldr	r3, .L229+144
 2276 083c B020C3E1 		strh	r2, [r3]	@ movhi
 959:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2277              		.loc 1 959 0
 2278 0840 0200A0E3 		mov	r0, #2
 2279 0844 D0189FE5 		ldr	r1, .L229+144
 2280 0848 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2281 084c 24000BE5 		str	r0, [fp, #-36]
 960:../CX3RDKOV5640.c **** 					{
 2282              		.loc 1 960 0
 2283 0850 24301BE5 		ldr	r3, [fp, #-36]
 2284 0854 000053E3 		cmp	r3, #0
 2285 0858 0400000A 		beq	.L134
 962:../CX3RDKOV5640.c **** 					}
 2286              		.loc 1 962 0
 2287 085c 0400A0E3 		mov	r0, #4
 2288 0860 BC189FE5 		ldr	r1, .L229+152
 2289 0864 24201BE5 		ldr	r2, [fp, #-36]
 2290 0868 FEFFFFEB 		bl	CyU3PDebugPrint
 964:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 2291              		.loc 1 964 0
 2292 086c 150000EA 		b	.L128
 2293              	.L134:
 2294 0870 140000EA 		b	.L128
 2295              	.L131:
 966:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 2296              		.loc 1 966 0
 2297 0874 32304BE2 		sub	r3, fp, #50
 2298 0878 1000A0E3 		mov	r0, #16
 2299 087c 9C189FE5 		ldr	r1, .L229+148
 2300 0880 0320A0E1 		mov	r2, r3
 2301 0884 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2302 0888 24000BE5 		str	r0, [fp, #-36]
 967:../CX3RDKOV5640.c **** 					{
 2303              		.loc 1 967 0
 2304 088c 24301BE5 		ldr	r3, [fp, #-36]
 2305 0890 000053E3 		cmp	r3, #0
 2306 0894 0300000A 		beq	.L135
 969:../CX3RDKOV5640.c **** 					}
 2307              		.loc 1 969 0
 2308 0898 0400A0E3 		mov	r0, #4
 2309 089c 80189FE5 		ldr	r1, .L229+152
 2310 08a0 24201BE5 		ldr	r2, [fp, #-36]
 2311 08a4 FEFFFFEB 		bl	CyU3PDebugPrint
 2312              	.L135:
 972:../CX3RDKOV5640.c **** 					break;
 2313              		.loc 1 972 0
 2314 08a8 70389FE5 		ldr	r3, .L229+148
 2315 08ac B030D3E1 		ldrh	r3, [r3]
 2316 08b0 FF3003E2 		and	r3, r3, #255
 2317 08b4 033CA0E1 		mov	r3, r3, asl #24
 2318 08b8 433CA0E1 		mov	r3, r3, asr #24
 2319 08bc 0300A0E1 		mov	r0, r3
 2320 08c0 FEFFFFEB 		bl	esOV5640_SetBrightness
 973:../CX3RDKOV5640.c ****             	}
 2321              		.loc 1 973 0
 2322 08c4 0000A0E1 		mov	r0, r0	@ nop
 2323              	.L128:
 2324              		.loc 1 975 0
 2325 08c8 5C0300EA 		b	.L90
 2326              	.L127:
 976:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x200))/*Auto Exposure*/
 2327              		.loc 1 976 0
 2328 08cc BE325BE1 		ldrh	r3, [fp, #-46]
 2329 08d0 010C53E3 		cmp	r3, #256
 2330 08d4 4A00001A 		bne	.L136
 2331              		.loc 1 976 0 is_stmt 0 discriminator 1
 2332 08d8 BC325BE1 		ldrh	r3, [fp, #-44]
 2333 08dc 020C53E3 		cmp	r3, #512
 2334 08e0 4700001A 		bne	.L136
 977:../CX3RDKOV5640.c **** 			{
 978:../CX3RDKOV5640.c ****             //	CyU3PDebugPrint (4, "\n\rAuto Exposure");
 979:../CX3RDKOV5640.c **** 				switch(bRequest)
 2335              		.loc 1 979 0 is_stmt 1
 2336 08e4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2337 08e8 840053E3 		cmp	r3, #132
 2338 08ec 040000CA 		bgt	.L138
 2339 08f0 810053E3 		cmp	r3, #129
 2340 08f4 170000AA 		bge	.L139
 2341 08f8 010053E3 		cmp	r3, #1
 2342 08fc 2C00000A 		beq	.L140
 980:../CX3RDKOV5640.c **** 				{
 981:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 982:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 983:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 984:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 985:../CX3RDKOV5640.c **** 					{
 986:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 987:../CX3RDKOV5640.c **** 					}
 988:../CX3RDKOV5640.c **** 					break;
 989:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 990:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 991:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 992:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 993:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 994:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 995:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 996:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutoExposure(RequestOption);
 997:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 998:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 999:../CX3RDKOV5640.c **** 					{
1000:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1001:../CX3RDKOV5640.c **** 					}
1002:../CX3RDKOV5640.c **** 					break;
1003:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1004:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1005:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1006:../CX3RDKOV5640.c **** 					{
1007:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1008:../CX3RDKOV5640.c **** 					}
1009:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1010:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Exposure= %d",gl8SetControl);
1011:../CX3RDKOV5640.c **** 					esOV5640_SetAutoExposure(gl8SetControl);
1012:../CX3RDKOV5640.c **** 					break;
1013:../CX3RDKOV5640.c **** 				}
1014:../CX3RDKOV5640.c **** 			}
 2343              		.loc 1 1014 0
 2344 0900 4E0300EA 		b	.L90
 2345              	.L138:
 979:../CX3RDKOV5640.c **** 				{
 2346              		.loc 1 979 0
 2347 0904 860053E3 		cmp	r3, #134
 2348 0908 0200000A 		beq	.L141
 2349 090c 870053E3 		cmp	r3, #135
 2350 0910 1000000A 		beq	.L139
 2351              		.loc 1 1014 0
 2352 0914 490300EA 		b	.L90
 2353              	.L141:
 982:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2354              		.loc 1 982 0
 2355 0918 F8379FE5 		ldr	r3, .L229+140
 2356 091c 0320A0E3 		mov	r2, #3
 2357 0920 0020C3E5 		strb	r2, [r3]
 983:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2358              		.loc 1 983 0
 2359 0924 0100A0E3 		mov	r0, #1
 2360 0928 E8179FE5 		ldr	r1, .L229+140
 2361 092c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2362 0930 24000BE5 		str	r0, [fp, #-36]
 984:../CX3RDKOV5640.c **** 					{
 2363              		.loc 1 984 0
 2364 0934 24301BE5 		ldr	r3, [fp, #-36]
 2365 0938 000053E3 		cmp	r3, #0
 2366 093c 0400000A 		beq	.L142
 986:../CX3RDKOV5640.c **** 					}
 2367              		.loc 1 986 0
 2368 0940 0400A0E3 		mov	r0, #4
 2369 0944 D8179FE5 		ldr	r1, .L229+152
 2370 0948 24201BE5 		ldr	r2, [fp, #-36]
 2371 094c FEFFFFEB 		bl	CyU3PDebugPrint
 988:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2372              		.loc 1 988 0
 2373 0950 2A0000EA 		b	.L137
 2374              	.L142:
 2375 0954 290000EA 		b	.L137
 2376              	.L139:
 994:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2377              		.loc 1 994 0
 2378 0958 29305BE5 		ldrb	r3, [fp, #-41]
 2379 095c 0F3003E2 		and	r3, r3, #15
 2380 0960 25304BE5 		strb	r3, [fp, #-37]
 996:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 2381              		.loc 1 996 0
 2382 0964 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2383 0968 0300A0E1 		mov	r0, r3
 2384 096c FEFFFFEB 		bl	esOV5640_GetAutoExposure
 2385 0970 0030A0E1 		mov	r3, r0
 2386 0974 0320A0E1 		mov	r2, r3
 2387 0978 8C379FE5 		ldr	r3, .L229+128
 2388 097c B020C3E1 		strh	r2, [r3]	@ movhi
 997:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2389              		.loc 1 997 0
 2390 0980 0100A0E3 		mov	r0, #1
 2391 0984 80179FE5 		ldr	r1, .L229+128
 2392 0988 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2393 098c 24000BE5 		str	r0, [fp, #-36]
 998:../CX3RDKOV5640.c **** 					{
 2394              		.loc 1 998 0
 2395 0990 24301BE5 		ldr	r3, [fp, #-36]
 2396 0994 000053E3 		cmp	r3, #0
 2397 0998 0400000A 		beq	.L143
1000:../CX3RDKOV5640.c **** 					}
 2398              		.loc 1 1000 0
 2399 099c 0400A0E3 		mov	r0, #4
 2400 09a0 7C179FE5 		ldr	r1, .L229+152
 2401 09a4 24201BE5 		ldr	r2, [fp, #-36]
 2402 09a8 FEFFFFEB 		bl	CyU3PDebugPrint
1002:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2403              		.loc 1 1002 0
 2404 09ac 130000EA 		b	.L137
 2405              	.L143:
 2406 09b0 120000EA 		b	.L137
 2407              	.L140:
1004:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2408              		.loc 1 1004 0
 2409 09b4 32304BE2 		sub	r3, fp, #50
 2410 09b8 1000A0E3 		mov	r0, #16
 2411 09bc 4C179FE5 		ldr	r1, .L229+132
 2412 09c0 0320A0E1 		mov	r2, r3
 2413 09c4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2414 09c8 24000BE5 		str	r0, [fp, #-36]
1005:../CX3RDKOV5640.c **** 					{
 2415              		.loc 1 1005 0
 2416 09cc 24301BE5 		ldr	r3, [fp, #-36]
 2417 09d0 000053E3 		cmp	r3, #0
 2418 09d4 0300000A 		beq	.L144
1007:../CX3RDKOV5640.c **** 					}
 2419              		.loc 1 1007 0
 2420 09d8 0400A0E3 		mov	r0, #4
 2421 09dc 40179FE5 		ldr	r1, .L229+152
 2422 09e0 24201BE5 		ldr	r2, [fp, #-36]
 2423 09e4 FEFFFFEB 		bl	CyU3PDebugPrint
 2424              	.L144:
1011:../CX3RDKOV5640.c **** 					break;
 2425              		.loc 1 1011 0
 2426 09e8 20379FE5 		ldr	r3, .L229+132
 2427 09ec B030D3E1 		ldrh	r3, [r3]
 2428 09f0 FF3003E2 		and	r3, r3, #255
 2429 09f4 0300A0E1 		mov	r0, r3
 2430 09f8 FEFFFFEB 		bl	esOV5640_SetAutoExposure
1012:../CX3RDKOV5640.c **** 				}
 2431              		.loc 1 1012 0
 2432 09fc 0000A0E1 		mov	r0, r0	@ nop
 2433              	.L137:
 2434              		.loc 1 1014 0
 2435 0a00 0E0300EA 		b	.L90
 2436              	.L136:
1015:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x300))/*Contrast*/
 2437              		.loc 1 1015 0
 2438 0a04 BE325BE1 		ldrh	r3, [fp, #-46]
 2439 0a08 020C53E3 		cmp	r3, #512
 2440 0a0c 4D00001A 		bne	.L145
 2441              		.loc 1 1015 0 is_stmt 0 discriminator 1
 2442 0a10 BC325BE1 		ldrh	r3, [fp, #-44]
 2443 0a14 030C53E3 		cmp	r3, #768
 2444 0a18 4A00001A 		bne	.L145
1016:../CX3RDKOV5640.c ****             {
1017:../CX3RDKOV5640.c ****             	switch(bRequest)
 2445              		.loc 1 1017 0 is_stmt 1
 2446 0a1c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2447 0a20 840053E3 		cmp	r3, #132
 2448 0a24 040000CA 		bgt	.L147
 2449 0a28 810053E3 		cmp	r3, #129
 2450 0a2c 170000AA 		bge	.L148
 2451 0a30 010053E3 		cmp	r3, #1
 2452 0a34 2D00000A 		beq	.L149
1018:../CX3RDKOV5640.c **** 				{
1019:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1020:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1021:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1022:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1023:../CX3RDKOV5640.c **** 					{
1024:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1025:../CX3RDKOV5640.c **** 					}
1026:../CX3RDKOV5640.c **** 					break;
1027:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1028:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1029:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1030:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1031:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1032:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1033:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1034:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetContrast(RequestOption);
1035:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1036:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1037:../CX3RDKOV5640.c **** 					{
1038:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1039:../CX3RDKOV5640.c **** 					}
1040:../CX3RDKOV5640.c **** 					break;
1041:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1042:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1043:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1044:../CX3RDKOV5640.c **** 					{
1045:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1046:../CX3RDKOV5640.c **** 					}
1047:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1048:../CX3RDKOV5640.c **** 					esOV5640_SetContrast((int8_t)gl16SetControl);
1049:../CX3RDKOV5640.c **** 					break;
1050:../CX3RDKOV5640.c **** 				}
1051:../CX3RDKOV5640.c ****             }
 2453              		.loc 1 1051 0
 2454 0a38 000300EA 		b	.L90
 2455              	.L147:
1017:../CX3RDKOV5640.c **** 				{
 2456              		.loc 1 1017 0
 2457 0a3c 860053E3 		cmp	r3, #134
 2458 0a40 0200000A 		beq	.L150
 2459 0a44 870053E3 		cmp	r3, #135
 2460 0a48 1000000A 		beq	.L148
 2461              		.loc 1 1051 0
 2462 0a4c FB0200EA 		b	.L90
 2463              	.L150:
1020:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2464              		.loc 1 1020 0
 2465 0a50 C0369FE5 		ldr	r3, .L229+140
 2466 0a54 0320A0E3 		mov	r2, #3
 2467 0a58 0020C3E5 		strb	r2, [r3]
1021:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2468              		.loc 1 1021 0
 2469 0a5c 0100A0E3 		mov	r0, #1
 2470 0a60 B0169FE5 		ldr	r1, .L229+140
 2471 0a64 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2472 0a68 24000BE5 		str	r0, [fp, #-36]
1022:../CX3RDKOV5640.c **** 					{
 2473              		.loc 1 1022 0
 2474 0a6c 24301BE5 		ldr	r3, [fp, #-36]
 2475 0a70 000053E3 		cmp	r3, #0
 2476 0a74 0400000A 		beq	.L151
1024:../CX3RDKOV5640.c **** 					}
 2477              		.loc 1 1024 0
 2478 0a78 0400A0E3 		mov	r0, #4
 2479 0a7c A0169FE5 		ldr	r1, .L229+152
 2480 0a80 24201BE5 		ldr	r2, [fp, #-36]
 2481 0a84 FEFFFFEB 		bl	CyU3PDebugPrint
1026:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2482              		.loc 1 1026 0
 2483 0a88 2D0000EA 		b	.L146
 2484              	.L151:
 2485 0a8c 2C0000EA 		b	.L146
 2486              	.L148:
1032:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2487              		.loc 1 1032 0
 2488 0a90 29305BE5 		ldrb	r3, [fp, #-41]
 2489 0a94 0F3003E2 		and	r3, r3, #15
 2490 0a98 25304BE5 		strb	r3, [fp, #-37]
1034:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2491              		.loc 1 1034 0
 2492 0a9c 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2493 0aa0 0300A0E1 		mov	r0, r3
 2494 0aa4 FEFFFFEB 		bl	esOV5640_GetContrast
 2495 0aa8 0030A0E1 		mov	r3, r0
 2496 0aac 0338A0E1 		mov	r3, r3, asl #16
 2497 0ab0 2328A0E1 		mov	r2, r3, lsr #16
 2498 0ab4 60369FE5 		ldr	r3, .L229+144
 2499 0ab8 B020C3E1 		strh	r2, [r3]	@ movhi
1035:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2500              		.loc 1 1035 0
 2501 0abc 0200A0E3 		mov	r0, #2
 2502 0ac0 54169FE5 		ldr	r1, .L229+144
 2503 0ac4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2504 0ac8 24000BE5 		str	r0, [fp, #-36]
1036:../CX3RDKOV5640.c **** 					{
 2505              		.loc 1 1036 0
 2506 0acc 24301BE5 		ldr	r3, [fp, #-36]
 2507 0ad0 000053E3 		cmp	r3, #0
 2508 0ad4 0400000A 		beq	.L152
1038:../CX3RDKOV5640.c **** 					}
 2509              		.loc 1 1038 0
 2510 0ad8 0400A0E3 		mov	r0, #4
 2511 0adc 40169FE5 		ldr	r1, .L229+152
 2512 0ae0 24201BE5 		ldr	r2, [fp, #-36]
 2513 0ae4 FEFFFFEB 		bl	CyU3PDebugPrint
1040:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2514              		.loc 1 1040 0
 2515 0ae8 150000EA 		b	.L146
 2516              	.L152:
 2517 0aec 140000EA 		b	.L146
 2518              	.L149:
1042:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2519              		.loc 1 1042 0
 2520 0af0 32304BE2 		sub	r3, fp, #50
 2521 0af4 1000A0E3 		mov	r0, #16
 2522 0af8 20169FE5 		ldr	r1, .L229+148
 2523 0afc 0320A0E1 		mov	r2, r3
 2524 0b00 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2525 0b04 24000BE5 		str	r0, [fp, #-36]
1043:../CX3RDKOV5640.c **** 					{
 2526              		.loc 1 1043 0
 2527 0b08 24301BE5 		ldr	r3, [fp, #-36]
 2528 0b0c 000053E3 		cmp	r3, #0
 2529 0b10 0300000A 		beq	.L153
1045:../CX3RDKOV5640.c **** 					}
 2530              		.loc 1 1045 0
 2531 0b14 0400A0E3 		mov	r0, #4
 2532 0b18 04169FE5 		ldr	r1, .L229+152
 2533 0b1c 24201BE5 		ldr	r2, [fp, #-36]
 2534 0b20 FEFFFFEB 		bl	CyU3PDebugPrint
 2535              	.L153:
1048:../CX3RDKOV5640.c **** 					break;
 2536              		.loc 1 1048 0
 2537 0b24 F4359FE5 		ldr	r3, .L229+148
 2538 0b28 B030D3E1 		ldrh	r3, [r3]
 2539 0b2c FF3003E2 		and	r3, r3, #255
 2540 0b30 033CA0E1 		mov	r3, r3, asl #24
 2541 0b34 433CA0E1 		mov	r3, r3, asr #24
 2542 0b38 0300A0E1 		mov	r0, r3
 2543 0b3c FEFFFFEB 		bl	esOV5640_SetContrast
1049:../CX3RDKOV5640.c **** 				}
 2544              		.loc 1 1049 0
 2545 0b40 0000A0E1 		mov	r0, r0	@ nop
 2546              	.L146:
 2547              		.loc 1 1051 0
 2548 0b44 BD0200EA 		b	.L90
 2549              	.L145:
1052:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x400))/*Manual Exposure*/
 2550              		.loc 1 1052 0
 2551 0b48 BE325BE1 		ldrh	r3, [fp, #-46]
 2552 0b4c 010C53E3 		cmp	r3, #256
 2553 0b50 4800001A 		bne	.L154
 2554              		.loc 1 1052 0 is_stmt 0 discriminator 1
 2555 0b54 BC325BE1 		ldrh	r3, [fp, #-44]
 2556 0b58 010B53E3 		cmp	r3, #1024
 2557 0b5c 4500001A 		bne	.L154
1053:../CX3RDKOV5640.c **** 			{
1054:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Exposure ");
1055:../CX3RDKOV5640.c **** 				switch(bRequest)
 2558              		.loc 1 1055 0 is_stmt 1
 2559 0b60 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2560 0b64 840053E3 		cmp	r3, #132
 2561 0b68 040000CA 		bgt	.L156
 2562 0b6c 810053E3 		cmp	r3, #129
 2563 0b70 170000AA 		bge	.L157
 2564 0b74 010053E3 		cmp	r3, #1
 2565 0b78 2B00000A 		beq	.L158
1056:../CX3RDKOV5640.c **** 				{
1057:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1058:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1059:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1060:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1061:../CX3RDKOV5640.c **** 					{
1062:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1063:../CX3RDKOV5640.c **** 					}
1064:../CX3RDKOV5640.c **** 					break;
1065:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1066:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1067:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1068:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1069:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1070:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1071:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1072:../CX3RDKOV5640.c **** 					gl32GetControl = esOV5640_GetExposure(RequestOption);
1073:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1074:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1075:../CX3RDKOV5640.c **** 					{
1076:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1077:../CX3RDKOV5640.c **** 					}
1078:../CX3RDKOV5640.c **** 					break;
1079:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1080:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1081:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1082:../CX3RDKOV5640.c **** 					{
1083:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1084:../CX3RDKOV5640.c **** 					}
1085:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1086:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Exposure = %d", gl32SetControl);
1087:../CX3RDKOV5640.c **** 					esOV5640_SetExposure(gl32SetControl);
1088:../CX3RDKOV5640.c **** 					break;
1089:../CX3RDKOV5640.c **** 				}
1090:../CX3RDKOV5640.c **** 			}
 2566              		.loc 1 1090 0
 2567 0b7c AF0200EA 		b	.L90
 2568              	.L156:
1055:../CX3RDKOV5640.c **** 				{
 2569              		.loc 1 1055 0
 2570 0b80 860053E3 		cmp	r3, #134
 2571 0b84 0200000A 		beq	.L159
 2572 0b88 870053E3 		cmp	r3, #135
 2573 0b8c 1000000A 		beq	.L157
 2574              		.loc 1 1090 0
 2575 0b90 AA0200EA 		b	.L90
 2576              	.L159:
1058:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2577              		.loc 1 1058 0
 2578 0b94 7C359FE5 		ldr	r3, .L229+140
 2579 0b98 0320A0E3 		mov	r2, #3
 2580 0b9c 0020C3E5 		strb	r2, [r3]
1059:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2581              		.loc 1 1059 0
 2582 0ba0 0100A0E3 		mov	r0, #1
 2583 0ba4 6C159FE5 		ldr	r1, .L229+140
 2584 0ba8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2585 0bac 24000BE5 		str	r0, [fp, #-36]
1060:../CX3RDKOV5640.c **** 					{
 2586              		.loc 1 1060 0
 2587 0bb0 24301BE5 		ldr	r3, [fp, #-36]
 2588 0bb4 000053E3 		cmp	r3, #0
 2589 0bb8 0400000A 		beq	.L160
1062:../CX3RDKOV5640.c **** 					}
 2590              		.loc 1 1062 0
 2591 0bbc 0400A0E3 		mov	r0, #4
 2592 0bc0 5C159FE5 		ldr	r1, .L229+152
 2593 0bc4 24201BE5 		ldr	r2, [fp, #-36]
 2594 0bc8 FEFFFFEB 		bl	CyU3PDebugPrint
1064:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2595              		.loc 1 1064 0
 2596 0bcc 280000EA 		b	.L155
 2597              	.L160:
 2598 0bd0 270000EA 		b	.L155
 2599              	.L157:
1070:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2600              		.loc 1 1070 0
 2601 0bd4 29305BE5 		ldrb	r3, [fp, #-41]
 2602 0bd8 0F3003E2 		and	r3, r3, #15
 2603 0bdc 25304BE5 		strb	r3, [fp, #-37]
1072:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2604              		.loc 1 1072 0
 2605 0be0 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2606 0be4 0300A0E1 		mov	r0, r3
 2607 0be8 FEFFFFEB 		bl	esOV5640_GetExposure
 2608 0bec 0020A0E1 		mov	r2, r0
 2609 0bf0 08359FE5 		ldr	r3, .L229+116
 2610 0bf4 002083E5 		str	r2, [r3]
1073:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2611              		.loc 1 1073 0
 2612 0bf8 0400A0E3 		mov	r0, #4
 2613 0bfc FC149FE5 		ldr	r1, .L229+116
 2614 0c00 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2615 0c04 24000BE5 		str	r0, [fp, #-36]
1074:../CX3RDKOV5640.c **** 					{
 2616              		.loc 1 1074 0
 2617 0c08 24301BE5 		ldr	r3, [fp, #-36]
 2618 0c0c 000053E3 		cmp	r3, #0
 2619 0c10 0400000A 		beq	.L161
1076:../CX3RDKOV5640.c **** 					}
 2620              		.loc 1 1076 0
 2621 0c14 0400A0E3 		mov	r0, #4
 2622 0c18 04159FE5 		ldr	r1, .L229+152
 2623 0c1c 24201BE5 		ldr	r2, [fp, #-36]
 2624 0c20 FEFFFFEB 		bl	CyU3PDebugPrint
1078:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2625              		.loc 1 1078 0
 2626 0c24 120000EA 		b	.L155
 2627              	.L161:
 2628 0c28 110000EA 		b	.L155
 2629              	.L158:
1080:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2630              		.loc 1 1080 0
 2631 0c2c 32304BE2 		sub	r3, fp, #50
 2632 0c30 1000A0E3 		mov	r0, #16
 2633 0c34 C8149FE5 		ldr	r1, .L229+120
 2634 0c38 0320A0E1 		mov	r2, r3
 2635 0c3c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2636 0c40 24000BE5 		str	r0, [fp, #-36]
1081:../CX3RDKOV5640.c **** 					{
 2637              		.loc 1 1081 0
 2638 0c44 24301BE5 		ldr	r3, [fp, #-36]
 2639 0c48 000053E3 		cmp	r3, #0
 2640 0c4c 0300000A 		beq	.L162
1083:../CX3RDKOV5640.c **** 					}
 2641              		.loc 1 1083 0
 2642 0c50 0400A0E3 		mov	r0, #4
 2643 0c54 C8149FE5 		ldr	r1, .L229+152
 2644 0c58 24201BE5 		ldr	r2, [fp, #-36]
 2645 0c5c FEFFFFEB 		bl	CyU3PDebugPrint
 2646              	.L162:
1087:../CX3RDKOV5640.c **** 					break;
 2647              		.loc 1 1087 0
 2648 0c60 9C349FE5 		ldr	r3, .L229+120
 2649 0c64 003093E5 		ldr	r3, [r3]
 2650 0c68 0300A0E1 		mov	r0, r3
 2651 0c6c FEFFFFEB 		bl	esOV5640_SetExposure
1088:../CX3RDKOV5640.c **** 				}
 2652              		.loc 1 1088 0
 2653 0c70 0000A0E1 		mov	r0, r0	@ nop
 2654              	.L155:
 2655              		.loc 1 1090 0
 2656 0c74 710200EA 		b	.L90
 2657              	.L154:
1091:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x600))/*Hue*/
 2658              		.loc 1 1091 0
 2659 0c78 BE325BE1 		ldrh	r3, [fp, #-46]
 2660 0c7c 020C53E3 		cmp	r3, #512
 2661 0c80 4B00001A 		bne	.L163
 2662              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2663 0c84 BC325BE1 		ldrh	r3, [fp, #-44]
 2664 0c88 060C53E3 		cmp	r3, #1536
 2665 0c8c 4800001A 		bne	.L163
1092:../CX3RDKOV5640.c **** 			{
1093:../CX3RDKOV5640.c **** 				switch(bRequest)
 2666              		.loc 1 1093 0 is_stmt 1
 2667 0c90 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2668 0c94 840053E3 		cmp	r3, #132
 2669 0c98 040000CA 		bgt	.L165
 2670 0c9c 810053E3 		cmp	r3, #129
 2671 0ca0 170000AA 		bge	.L166
 2672 0ca4 010053E3 		cmp	r3, #1
 2673 0ca8 2B00000A 		beq	.L167
1094:../CX3RDKOV5640.c **** 				{
1095:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1096:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1097:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1098:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1099:../CX3RDKOV5640.c **** 					{
1100:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1101:../CX3RDKOV5640.c **** 					}
1102:../CX3RDKOV5640.c **** 					break;
1103:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1104:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1105:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1106:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1107:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1108:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1109:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1110:../CX3RDKOV5640.c **** 					gl32GetControl = (int32_t)esOV5640_GetHue(RequestOption);
1111:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1112:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1113:../CX3RDKOV5640.c **** 					{
1114:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1115:../CX3RDKOV5640.c **** 					}
1116:../CX3RDKOV5640.c **** 					break;
1117:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1118:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1119:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1120:../CX3RDKOV5640.c **** 					{
1121:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1122:../CX3RDKOV5640.c **** 					}
1123:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1124:../CX3RDKOV5640.c **** 					esOV5640_SetHue((int8_t)gl32SetControl);
1125:../CX3RDKOV5640.c **** 					break;
1126:../CX3RDKOV5640.c **** 				}
1127:../CX3RDKOV5640.c **** 			}
 2674              		.loc 1 1127 0
 2675 0cac 630200EA 		b	.L90
 2676              	.L165:
1093:../CX3RDKOV5640.c **** 				{
 2677              		.loc 1 1093 0
 2678 0cb0 860053E3 		cmp	r3, #134
 2679 0cb4 0200000A 		beq	.L168
 2680 0cb8 870053E3 		cmp	r3, #135
 2681 0cbc 1000000A 		beq	.L166
 2682              		.loc 1 1127 0
 2683 0cc0 5E0200EA 		b	.L90
 2684              	.L168:
1096:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2685              		.loc 1 1096 0
 2686 0cc4 4C349FE5 		ldr	r3, .L229+140
 2687 0cc8 0320A0E3 		mov	r2, #3
 2688 0ccc 0020C3E5 		strb	r2, [r3]
1097:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2689              		.loc 1 1097 0
 2690 0cd0 0100A0E3 		mov	r0, #1
 2691 0cd4 3C149FE5 		ldr	r1, .L229+140
 2692 0cd8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2693 0cdc 24000BE5 		str	r0, [fp, #-36]
1098:../CX3RDKOV5640.c **** 					{
 2694              		.loc 1 1098 0
 2695 0ce0 24301BE5 		ldr	r3, [fp, #-36]
 2696 0ce4 000053E3 		cmp	r3, #0
 2697 0ce8 0400000A 		beq	.L169
1100:../CX3RDKOV5640.c **** 					}
 2698              		.loc 1 1100 0
 2699 0cec 0400A0E3 		mov	r0, #4
 2700 0cf0 2C149FE5 		ldr	r1, .L229+152
 2701 0cf4 24201BE5 		ldr	r2, [fp, #-36]
 2702 0cf8 FEFFFFEB 		bl	CyU3PDebugPrint
1102:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2703              		.loc 1 1102 0
 2704 0cfc 2B0000EA 		b	.L164
 2705              	.L169:
 2706 0d00 2A0000EA 		b	.L164
 2707              	.L166:
1108:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2708              		.loc 1 1108 0
 2709 0d04 29305BE5 		ldrb	r3, [fp, #-41]
 2710 0d08 0F3003E2 		and	r3, r3, #15
 2711 0d0c 25304BE5 		strb	r3, [fp, #-37]
1110:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2712              		.loc 1 1110 0
 2713 0d10 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2714 0d14 0300A0E1 		mov	r0, r3
 2715 0d18 FEFFFFEB 		bl	esOV5640_GetHue
 2716 0d1c 0020A0E1 		mov	r2, r0
 2717 0d20 D8339FE5 		ldr	r3, .L229+116
 2718 0d24 002083E5 		str	r2, [r3]
1111:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2719              		.loc 1 1111 0
 2720 0d28 0400A0E3 		mov	r0, #4
 2721 0d2c CC139FE5 		ldr	r1, .L229+116
 2722 0d30 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2723 0d34 24000BE5 		str	r0, [fp, #-36]
1112:../CX3RDKOV5640.c **** 					{
 2724              		.loc 1 1112 0
 2725 0d38 24301BE5 		ldr	r3, [fp, #-36]
 2726 0d3c 000053E3 		cmp	r3, #0
 2727 0d40 0400000A 		beq	.L170
1114:../CX3RDKOV5640.c **** 					}
 2728              		.loc 1 1114 0
 2729 0d44 0400A0E3 		mov	r0, #4
 2730 0d48 D4139FE5 		ldr	r1, .L229+152
 2731 0d4c 24201BE5 		ldr	r2, [fp, #-36]
 2732 0d50 FEFFFFEB 		bl	CyU3PDebugPrint
1116:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2733              		.loc 1 1116 0
 2734 0d54 150000EA 		b	.L164
 2735              	.L170:
 2736 0d58 140000EA 		b	.L164
 2737              	.L167:
1118:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2738              		.loc 1 1118 0
 2739 0d5c 32304BE2 		sub	r3, fp, #50
 2740 0d60 1000A0E3 		mov	r0, #16
 2741 0d64 98139FE5 		ldr	r1, .L229+120
 2742 0d68 0320A0E1 		mov	r2, r3
 2743 0d6c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2744 0d70 24000BE5 		str	r0, [fp, #-36]
1119:../CX3RDKOV5640.c **** 					{
 2745              		.loc 1 1119 0
 2746 0d74 24301BE5 		ldr	r3, [fp, #-36]
 2747 0d78 000053E3 		cmp	r3, #0
 2748 0d7c 0300000A 		beq	.L171
1121:../CX3RDKOV5640.c **** 					}
 2749              		.loc 1 1121 0
 2750 0d80 0400A0E3 		mov	r0, #4
 2751 0d84 98139FE5 		ldr	r1, .L229+152
 2752 0d88 24201BE5 		ldr	r2, [fp, #-36]
 2753 0d8c FEFFFFEB 		bl	CyU3PDebugPrint
 2754              	.L171:
1124:../CX3RDKOV5640.c **** 					break;
 2755              		.loc 1 1124 0
 2756 0d90 6C339FE5 		ldr	r3, .L229+120
 2757 0d94 003093E5 		ldr	r3, [r3]
 2758 0d98 FF3003E2 		and	r3, r3, #255
 2759 0d9c 033CA0E1 		mov	r3, r3, asl #24
 2760 0da0 433CA0E1 		mov	r3, r3, asr #24
 2761 0da4 0300A0E1 		mov	r0, r3
 2762 0da8 FEFFFFEB 		bl	esOV5640_SetHue
1125:../CX3RDKOV5640.c **** 				}
 2763              		.loc 1 1125 0
 2764 0dac 0000A0E1 		mov	r0, r0	@ nop
 2765              	.L164:
 2766              		.loc 1 1127 0
 2767 0db0 220200EA 		b	.L90
 2768              	.L163:
1128:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x600))/*Manual Focus*/
 2769              		.loc 1 1128 0
 2770 0db4 BE325BE1 		ldrh	r3, [fp, #-46]
 2771 0db8 010C53E3 		cmp	r3, #256
 2772 0dbc 4F00001A 		bne	.L172
 2773              		.loc 1 1128 0 is_stmt 0 discriminator 1
 2774 0dc0 BC325BE1 		ldrh	r3, [fp, #-44]
 2775 0dc4 060C53E3 		cmp	r3, #1536
 2776 0dc8 4C00001A 		bne	.L172
1129:../CX3RDKOV5640.c **** 			{
1130:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Focus ");
1131:../CX3RDKOV5640.c **** 				switch(bRequest)
 2777              		.loc 1 1131 0 is_stmt 1
 2778 0dcc 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2779 0dd0 840053E3 		cmp	r3, #132
 2780 0dd4 040000CA 		bgt	.L174
 2781 0dd8 810053E3 		cmp	r3, #129
 2782 0ddc 170000AA 		bge	.L175
 2783 0de0 010053E3 		cmp	r3, #1
 2784 0de4 2D00000A 		beq	.L176
1132:../CX3RDKOV5640.c **** 				{
1133:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1134:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1135:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1136:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1137:../CX3RDKOV5640.c **** 					{
1138:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1139:../CX3RDKOV5640.c **** 					}
1140:../CX3RDKOV5640.c **** 					break;
1141:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1142:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1143:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1144:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1145:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1146:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1147:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1148:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
1149:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1150:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1151:../CX3RDKOV5640.c **** 					{
1152:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1153:../CX3RDKOV5640.c **** 					}
1154:../CX3RDKOV5640.c **** 					break;
1155:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1156:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1157:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1158:../CX3RDKOV5640.c **** 					{
1159:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1160:../CX3RDKOV5640.c **** 					}
1161:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1162:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Focus= %d",gl16SetControl);
1163:../CX3RDKOV5640.c **** 					esOV5640_SetManualfocus((uint16_t)gl16SetControl);
1164:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
1165:../CX3RDKOV5640.c **** 					break;
1166:../CX3RDKOV5640.c **** 				}
1167:../CX3RDKOV5640.c **** 			}
 2785              		.loc 1 1167 0
 2786 0de8 140200EA 		b	.L90
 2787              	.L174:
1131:../CX3RDKOV5640.c **** 				{
 2788              		.loc 1 1131 0
 2789 0dec 860053E3 		cmp	r3, #134
 2790 0df0 0200000A 		beq	.L177
 2791 0df4 870053E3 		cmp	r3, #135
 2792 0df8 1000000A 		beq	.L175
 2793              		.loc 1 1167 0
 2794 0dfc 0F0200EA 		b	.L90
 2795              	.L177:
1134:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2796              		.loc 1 1134 0
 2797 0e00 10339FE5 		ldr	r3, .L229+140
 2798 0e04 0320A0E3 		mov	r2, #3
 2799 0e08 0020C3E5 		strb	r2, [r3]
1135:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2800              		.loc 1 1135 0
 2801 0e0c 0100A0E3 		mov	r0, #1
 2802 0e10 00139FE5 		ldr	r1, .L229+140
 2803 0e14 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2804 0e18 24000BE5 		str	r0, [fp, #-36]
1136:../CX3RDKOV5640.c **** 					{
 2805              		.loc 1 1136 0
 2806 0e1c 24301BE5 		ldr	r3, [fp, #-36]
 2807 0e20 000053E3 		cmp	r3, #0
 2808 0e24 0400000A 		beq	.L178
1138:../CX3RDKOV5640.c **** 					}
 2809              		.loc 1 1138 0
 2810 0e28 0400A0E3 		mov	r0, #4
 2811 0e2c F0129FE5 		ldr	r1, .L229+152
 2812 0e30 24201BE5 		ldr	r2, [fp, #-36]
 2813 0e34 FEFFFFEB 		bl	CyU3PDebugPrint
1140:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2814              		.loc 1 1140 0
 2815 0e38 2F0000EA 		b	.L173
 2816              	.L178:
 2817 0e3c 2E0000EA 		b	.L173
 2818              	.L175:
1147:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
 2819              		.loc 1 1147 0
 2820 0e40 29305BE5 		ldrb	r3, [fp, #-41]
 2821 0e44 0F3003E2 		and	r3, r3, #15
 2822 0e48 25304BE5 		strb	r3, [fp, #-37]
1148:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2823              		.loc 1 1148 0
 2824 0e4c 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2825 0e50 0300A0E1 		mov	r0, r3
 2826 0e54 FEFFFFEB 		bl	esOV5640_GetManualfocus
 2827 0e58 0030A0E1 		mov	r3, r0
 2828 0e5c 0338A0E1 		mov	r3, r3, asl #16
 2829 0e60 2328A0E1 		mov	r2, r3, lsr #16
 2830 0e64 B0329FE5 		ldr	r3, .L229+144
 2831 0e68 B020C3E1 		strh	r2, [r3]	@ movhi
1149:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2832              		.loc 1 1149 0
 2833 0e6c 0200A0E3 		mov	r0, #2
 2834 0e70 A4129FE5 		ldr	r1, .L229+144
 2835 0e74 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2836 0e78 24000BE5 		str	r0, [fp, #-36]
1150:../CX3RDKOV5640.c **** 					{
 2837              		.loc 1 1150 0
 2838 0e7c 24301BE5 		ldr	r3, [fp, #-36]
 2839 0e80 000053E3 		cmp	r3, #0
 2840 0e84 0400000A 		beq	.L179
1152:../CX3RDKOV5640.c **** 					}
 2841              		.loc 1 1152 0
 2842 0e88 0400A0E3 		mov	r0, #4
 2843 0e8c 90129FE5 		ldr	r1, .L229+152
 2844 0e90 24201BE5 		ldr	r2, [fp, #-36]
 2845 0e94 FEFFFFEB 		bl	CyU3PDebugPrint
1154:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2846              		.loc 1 1154 0
 2847 0e98 170000EA 		b	.L173
 2848              	.L179:
 2849 0e9c 160000EA 		b	.L173
 2850              	.L176:
1156:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2851              		.loc 1 1156 0
 2852 0ea0 32304BE2 		sub	r3, fp, #50
 2853 0ea4 1000A0E3 		mov	r0, #16
 2854 0ea8 70129FE5 		ldr	r1, .L229+148
 2855 0eac 0320A0E1 		mov	r2, r3
 2856 0eb0 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2857 0eb4 24000BE5 		str	r0, [fp, #-36]
1157:../CX3RDKOV5640.c **** 					{
 2858              		.loc 1 1157 0
 2859 0eb8 24301BE5 		ldr	r3, [fp, #-36]
 2860 0ebc 000053E3 		cmp	r3, #0
 2861 0ec0 0300000A 		beq	.L180
1159:../CX3RDKOV5640.c **** 					}
 2862              		.loc 1 1159 0
 2863 0ec4 0400A0E3 		mov	r0, #4
 2864 0ec8 54129FE5 		ldr	r1, .L229+152
 2865 0ecc 24201BE5 		ldr	r2, [fp, #-36]
 2866 0ed0 FEFFFFEB 		bl	CyU3PDebugPrint
 2867              	.L180:
1163:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
 2868              		.loc 1 1163 0
 2869 0ed4 44329FE5 		ldr	r3, .L229+148
 2870 0ed8 B030D3E1 		ldrh	r3, [r3]
 2871 0edc 0338A0E1 		mov	r3, r3, asl #16
 2872 0ee0 2338A0E1 		mov	r3, r3, lsr #16
 2873 0ee4 0300A0E1 		mov	r0, r3
 2874 0ee8 FEFFFFEB 		bl	esOV5640_SetManualfocus
1164:../CX3RDKOV5640.c **** 					break;
 2875              		.loc 1 1164 0
 2876 0eec 20329FE5 		ldr	r3, .L229+136
 2877 0ef0 0020A0E3 		mov	r2, #0
 2878 0ef4 0020C3E5 		strb	r2, [r3]
1165:../CX3RDKOV5640.c **** 				}
 2879              		.loc 1 1165 0
 2880 0ef8 0000A0E1 		mov	r0, r0	@ nop
 2881              	.L173:
 2882              		.loc 1 1167 0
 2883 0efc CF0100EA 		b	.L90
 2884              	.L172:
1168:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x700))/*Saturation*/
 2885              		.loc 1 1168 0
 2886 0f00 BE325BE1 		ldrh	r3, [fp, #-46]
 2887 0f04 020C53E3 		cmp	r3, #512
 2888 0f08 4C00001A 		bne	.L181
 2889              		.loc 1 1168 0 is_stmt 0 discriminator 1
 2890 0f0c BC325BE1 		ldrh	r3, [fp, #-44]
 2891 0f10 070C53E3 		cmp	r3, #1792
 2892 0f14 4900001A 		bne	.L181
1169:../CX3RDKOV5640.c **** 			{
1170:../CX3RDKOV5640.c **** 				switch(bRequest)
 2893              		.loc 1 1170 0 is_stmt 1
 2894 0f18 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2895 0f1c 840053E3 		cmp	r3, #132
 2896 0f20 040000CA 		bgt	.L183
 2897 0f24 810053E3 		cmp	r3, #129
 2898 0f28 170000AA 		bge	.L184
 2899 0f2c 010053E3 		cmp	r3, #1
 2900 0f30 2D00000A 		beq	.L185
1171:../CX3RDKOV5640.c **** 				{
1172:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1173:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1174:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1175:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1176:../CX3RDKOV5640.c **** 					{
1177:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1178:../CX3RDKOV5640.c **** 					}
1179:../CX3RDKOV5640.c **** 					break;
1180:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1181:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1182:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1183:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1184:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1185:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1186:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1187:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSaturation(RequestOption);
1188:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1189:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1190:../CX3RDKOV5640.c **** 					{
1191:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1192:../CX3RDKOV5640.c **** 					}
1193:../CX3RDKOV5640.c **** 					break;
1194:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1195:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1196:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1197:../CX3RDKOV5640.c **** 					{
1198:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1199:../CX3RDKOV5640.c **** 					}
1200:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1201:../CX3RDKOV5640.c **** 					esOV5640_SetSaturation((uint32_t)gl16SetControl);
1202:../CX3RDKOV5640.c **** 					break;
1203:../CX3RDKOV5640.c **** 				}
1204:../CX3RDKOV5640.c **** 			}
 2901              		.loc 1 1204 0
 2902 0f34 C10100EA 		b	.L90
 2903              	.L183:
1170:../CX3RDKOV5640.c **** 				{
 2904              		.loc 1 1170 0
 2905 0f38 860053E3 		cmp	r3, #134
 2906 0f3c 0200000A 		beq	.L186
 2907 0f40 870053E3 		cmp	r3, #135
 2908 0f44 1000000A 		beq	.L184
 2909              		.loc 1 1204 0
 2910 0f48 BC0100EA 		b	.L90
 2911              	.L186:
1173:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2912              		.loc 1 1173 0
 2913 0f4c C4319FE5 		ldr	r3, .L229+140
 2914 0f50 0320A0E3 		mov	r2, #3
 2915 0f54 0020C3E5 		strb	r2, [r3]
1174:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2916              		.loc 1 1174 0
 2917 0f58 0100A0E3 		mov	r0, #1
 2918 0f5c B4119FE5 		ldr	r1, .L229+140
 2919 0f60 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2920 0f64 24000BE5 		str	r0, [fp, #-36]
1175:../CX3RDKOV5640.c **** 					{
 2921              		.loc 1 1175 0
 2922 0f68 24301BE5 		ldr	r3, [fp, #-36]
 2923 0f6c 000053E3 		cmp	r3, #0
 2924 0f70 0400000A 		beq	.L187
1177:../CX3RDKOV5640.c **** 					}
 2925              		.loc 1 1177 0
 2926 0f74 0400A0E3 		mov	r0, #4
 2927 0f78 A4119FE5 		ldr	r1, .L229+152
 2928 0f7c 24201BE5 		ldr	r2, [fp, #-36]
 2929 0f80 FEFFFFEB 		bl	CyU3PDebugPrint
1179:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2930              		.loc 1 1179 0
 2931 0f84 2C0000EA 		b	.L182
 2932              	.L187:
 2933 0f88 2B0000EA 		b	.L182
 2934              	.L184:
1185:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2935              		.loc 1 1185 0
 2936 0f8c 29305BE5 		ldrb	r3, [fp, #-41]
 2937 0f90 0F3003E2 		and	r3, r3, #15
 2938 0f94 25304BE5 		strb	r3, [fp, #-37]
1187:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2939              		.loc 1 1187 0
 2940 0f98 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2941 0f9c 0300A0E1 		mov	r0, r3
 2942 0fa0 FEFFFFEB 		bl	esOV5640_GetSaturation
 2943 0fa4 0030A0E1 		mov	r3, r0
 2944 0fa8 0338A0E1 		mov	r3, r3, asl #16
 2945 0fac 2328A0E1 		mov	r2, r3, lsr #16
 2946 0fb0 64319FE5 		ldr	r3, .L229+144
 2947 0fb4 B020C3E1 		strh	r2, [r3]	@ movhi
1188:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2948              		.loc 1 1188 0
 2949 0fb8 0200A0E3 		mov	r0, #2
 2950 0fbc 58119FE5 		ldr	r1, .L229+144
 2951 0fc0 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2952 0fc4 24000BE5 		str	r0, [fp, #-36]
1189:../CX3RDKOV5640.c **** 					{
 2953              		.loc 1 1189 0
 2954 0fc8 24301BE5 		ldr	r3, [fp, #-36]
 2955 0fcc 000053E3 		cmp	r3, #0
 2956 0fd0 0400000A 		beq	.L188
1191:../CX3RDKOV5640.c **** 					}
 2957              		.loc 1 1191 0
 2958 0fd4 0400A0E3 		mov	r0, #4
 2959 0fd8 44119FE5 		ldr	r1, .L229+152
 2960 0fdc 24201BE5 		ldr	r2, [fp, #-36]
 2961 0fe0 FEFFFFEB 		bl	CyU3PDebugPrint
1193:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2962              		.loc 1 1193 0
 2963 0fe4 140000EA 		b	.L182
 2964              	.L188:
 2965 0fe8 130000EA 		b	.L182
 2966              	.L185:
1195:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2967              		.loc 1 1195 0
 2968 0fec 32304BE2 		sub	r3, fp, #50
 2969 0ff0 1000A0E3 		mov	r0, #16
 2970 0ff4 24119FE5 		ldr	r1, .L229+148
 2971 0ff8 0320A0E1 		mov	r2, r3
 2972 0ffc FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2973 1000 24000BE5 		str	r0, [fp, #-36]
1196:../CX3RDKOV5640.c **** 					{
 2974              		.loc 1 1196 0
 2975 1004 24301BE5 		ldr	r3, [fp, #-36]
 2976 1008 000053E3 		cmp	r3, #0
 2977 100c 0300000A 		beq	.L189
1198:../CX3RDKOV5640.c **** 					}
 2978              		.loc 1 1198 0
 2979 1010 0400A0E3 		mov	r0, #4
 2980 1014 08119FE5 		ldr	r1, .L229+152
 2981 1018 24201BE5 		ldr	r2, [fp, #-36]
 2982 101c FEFFFFEB 		bl	CyU3PDebugPrint
 2983              	.L189:
1201:../CX3RDKOV5640.c **** 					break;
 2984              		.loc 1 1201 0
 2985 1020 F8309FE5 		ldr	r3, .L229+148
 2986 1024 B030D3E1 		ldrh	r3, [r3]
 2987 1028 0338A0E1 		mov	r3, r3, asl #16
 2988 102c 4338A0E1 		mov	r3, r3, asr #16
 2989 1030 0300A0E1 		mov	r0, r3
 2990 1034 FEFFFFEB 		bl	esOV5640_SetSaturation
1202:../CX3RDKOV5640.c **** 				}
 2991              		.loc 1 1202 0
 2992 1038 0000A0E1 		mov	r0, r0	@ nop
 2993              	.L182:
 2994              		.loc 1 1204 0
 2995 103c 7F0100EA 		b	.L90
 2996              	.L181:
1205:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x800))/*Sharpness*/
 2997              		.loc 1 1205 0
 2998 1040 BE325BE1 		ldrh	r3, [fp, #-46]
 2999 1044 020C53E3 		cmp	r3, #512
 3000 1048 7200001A 		bne	.L190
 3001              		.loc 1 1205 0 is_stmt 0 discriminator 1
 3002 104c BC325BE1 		ldrh	r3, [fp, #-44]
 3003 1050 020B53E3 		cmp	r3, #2048
 3004 1054 6F00001A 		bne	.L190
1206:../CX3RDKOV5640.c **** 			{
1207:../CX3RDKOV5640.c **** 				switch(bRequest)
 3005              		.loc 1 1207 0 is_stmt 1
 3006 1058 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3007 105c 840053E3 		cmp	r3, #132
 3008 1060 040000CA 		bgt	.L192
 3009 1064 810053E3 		cmp	r3, #129
 3010 1068 3E0000AA 		bge	.L193
 3011 106c 010053E3 		cmp	r3, #1
 3012 1070 5400000A 		beq	.L194
1208:../CX3RDKOV5640.c **** 				{
1209:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1210:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1211:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1212:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1213:../CX3RDKOV5640.c **** 					{
1214:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1215:../CX3RDKOV5640.c **** 					}
1216:../CX3RDKOV5640.c **** 					break;
1217:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1218:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1219:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1220:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1221:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1222:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1223:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1224:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSharpness(RequestOption);
1225:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1226:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1227:../CX3RDKOV5640.c **** 					{
1228:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1229:../CX3RDKOV5640.c **** 					}
1230:../CX3RDKOV5640.c **** 					break;
1231:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1232:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1233:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1234:../CX3RDKOV5640.c **** 					{
1235:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1236:../CX3RDKOV5640.c **** 					}
1237:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1238:../CX3RDKOV5640.c **** 					esOV5640_SetSharpness((uint8_t)gl16SetControl);
1239:../CX3RDKOV5640.c **** 					break;
1240:../CX3RDKOV5640.c **** 				}
1241:../CX3RDKOV5640.c **** 			}
 3013              		.loc 1 1241 0
 3014 1074 710100EA 		b	.L90
 3015              	.L192:
1207:../CX3RDKOV5640.c **** 				{
 3016              		.loc 1 1207 0
 3017 1078 860053E3 		cmp	r3, #134
 3018 107c 2900000A 		beq	.L195
 3019 1080 870053E3 		cmp	r3, #135
 3020 1084 3700000A 		beq	.L193
 3021              		.loc 1 1241 0
 3022 1088 6C0100EA 		b	.L90
 3023              	.L230:
 3024              		.align	2
 3025              	.L229:
 3026 108c 64010000 		.word	.LC10
 3027 1090 00000000 		.word	glIsApplnActive
 3028 1094 00000000 		.word	glIsStreamingStarted
 3029 1098 00000000 		.word	glPreviewStarted
 3030 109c 00000000 		.word	glIsClearFeature
 3031 10a0 00000000 		.word	glcommitcount
 3032 10a4 00000000 		.word	glIsConfigured
 3033 10a8 00000000 		.word	glCurrentFrameIndex
 3034 10ac 00000000 		.word	glProbeCtrl
 3035 10b0 00000000 		.word	gl5MpProbeCtrl
 3036 10b4 00000000 		.word	gl720pProbeCtrl
 3037 10b8 00000000 		.word	glVga60ProbeCtrl
 3038 10bc 00000000 		.word	gl1080pProbeCtrl
 3039 10c0 00000000 		.word	glVga30ProbeCtrl
 3040 10c4 B4010000 		.word	.LC11
 3041 10c8 D0010000 		.word	.LC12
 3042 10cc 00000000 		.word	glStillProbeCtrl
 3043 10d0 00000000 		.word	glCommitCtrl
 3044 10d4 FC010000 		.word	.LC13
 3045 10d8 28020000 		.word	.LC14
 3046 10dc 00000000 		.word	glcheckframe
 3047 10e0 00000000 		.word	glFrameIndexToSet
 3048 10e4 00000000 		.word	glStillCommitCtrl
 3049 10e8 4C020000 		.word	.LC15
 3050 10ec 70020000 		.word	.LC16
 3051 10f0 00000000 		.word	glCurrentStillFrameIndex
 3052 10f4 00000000 		.word	glStillTriggerCtrl
 3053 10f8 00000000 		.word	glStillSkip
 3054 10fc 00000000 		.word	glStillCaptureStart
 3055 1100 00000000 		.word	gl32GetControl
 3056 1104 00000000 		.word	gl32SetControl
 3057 1108 B8020000 		.word	.LC18
 3058 110c 00000000 		.word	gl8GetControl
 3059 1110 00000000 		.word	gl8SetControl
 3060 1114 00000000 		.word	g_IsAutoFocus
 3061 1118 00000000 		.word	glGet_Info
 3062 111c 00000000 		.word	gl16GetControl
 3063 1120 00000000 		.word	gl16SetControl
 3064 1124 98020000 		.word	.LC17
 3065              	.L195:
1210:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3066              		.loc 1 1210 0
 3067 1128 18301FE5 		ldr	r3, .L229+140
 3068 112c 0320A0E3 		mov	r2, #3
 3069 1130 0020C3E5 		strb	r2, [r3]
1211:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3070              		.loc 1 1211 0
 3071 1134 0100A0E3 		mov	r0, #1
 3072 1138 28101FE5 		ldr	r1, .L229+140
 3073 113c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3074 1140 24000BE5 		str	r0, [fp, #-36]
1212:../CX3RDKOV5640.c **** 					{
 3075              		.loc 1 1212 0
 3076 1144 24301BE5 		ldr	r3, [fp, #-36]
 3077 1148 000053E3 		cmp	r3, #0
 3078 114c 0400000A 		beq	.L196
1214:../CX3RDKOV5640.c **** 					}
 3079              		.loc 1 1214 0
 3080 1150 0400A0E3 		mov	r0, #4
 3081 1154 38101FE5 		ldr	r1, .L229+152
 3082 1158 24201BE5 		ldr	r2, [fp, #-36]
 3083 115c FEFFFFEB 		bl	CyU3PDebugPrint
1216:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3084              		.loc 1 1216 0
 3085 1160 2B0000EA 		b	.L191
 3086              	.L196:
 3087 1164 2A0000EA 		b	.L191
 3088              	.L193:
1222:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3089              		.loc 1 1222 0
 3090 1168 29305BE5 		ldrb	r3, [fp, #-41]
 3091 116c 0F3003E2 		and	r3, r3, #15
 3092 1170 25304BE5 		strb	r3, [fp, #-37]
1224:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3093              		.loc 1 1224 0
 3094 1174 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3095 1178 0300A0E1 		mov	r0, r3
 3096 117c FEFFFFEB 		bl	esOV5640_GetSharpness
 3097 1180 0030A0E1 		mov	r3, r0
 3098 1184 0338A0E1 		mov	r3, r3, asl #16
 3099 1188 2328A0E1 		mov	r2, r3, lsr #16
 3100 118c 78301FE5 		ldr	r3, .L229+144
 3101 1190 B020C3E1 		strh	r2, [r3]	@ movhi
1225:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3102              		.loc 1 1225 0
 3103 1194 0200A0E3 		mov	r0, #2
 3104 1198 84101FE5 		ldr	r1, .L229+144
 3105 119c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3106 11a0 24000BE5 		str	r0, [fp, #-36]
1226:../CX3RDKOV5640.c **** 					{
 3107              		.loc 1 1226 0
 3108 11a4 24301BE5 		ldr	r3, [fp, #-36]
 3109 11a8 000053E3 		cmp	r3, #0
 3110 11ac 0400000A 		beq	.L197
1228:../CX3RDKOV5640.c **** 					}
 3111              		.loc 1 1228 0
 3112 11b0 0400A0E3 		mov	r0, #4
 3113 11b4 98101FE5 		ldr	r1, .L229+152
 3114 11b8 24201BE5 		ldr	r2, [fp, #-36]
 3115 11bc FEFFFFEB 		bl	CyU3PDebugPrint
1230:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3116              		.loc 1 1230 0
 3117 11c0 130000EA 		b	.L191
 3118              	.L197:
 3119 11c4 120000EA 		b	.L191
 3120              	.L194:
1232:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3121              		.loc 1 1232 0
 3122 11c8 32304BE2 		sub	r3, fp, #50
 3123 11cc 1000A0E3 		mov	r0, #16
 3124 11d0 B8101FE5 		ldr	r1, .L229+148
 3125 11d4 0320A0E1 		mov	r2, r3
 3126 11d8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3127 11dc 24000BE5 		str	r0, [fp, #-36]
1233:../CX3RDKOV5640.c **** 					{
 3128              		.loc 1 1233 0
 3129 11e0 24301BE5 		ldr	r3, [fp, #-36]
 3130 11e4 000053E3 		cmp	r3, #0
 3131 11e8 0300000A 		beq	.L198
1235:../CX3RDKOV5640.c **** 					}
 3132              		.loc 1 1235 0
 3133 11ec 0400A0E3 		mov	r0, #4
 3134 11f0 D4101FE5 		ldr	r1, .L229+152
 3135 11f4 24201BE5 		ldr	r2, [fp, #-36]
 3136 11f8 FEFFFFEB 		bl	CyU3PDebugPrint
 3137              	.L198:
1238:../CX3RDKOV5640.c **** 					break;
 3138              		.loc 1 1238 0
 3139 11fc E4301FE5 		ldr	r3, .L229+148
 3140 1200 B030D3E1 		ldrh	r3, [r3]
 3141 1204 FF3003E2 		and	r3, r3, #255
 3142 1208 0300A0E1 		mov	r0, r3
 3143 120c FEFFFFEB 		bl	esOV5640_SetSharpness
1239:../CX3RDKOV5640.c **** 				}
 3144              		.loc 1 1239 0
 3145 1210 0000A0E1 		mov	r0, r0	@ nop
 3146              	.L191:
 3147              		.loc 1 1241 0
 3148 1214 090100EA 		b	.L90
 3149              	.L190:
1242:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x800))/*Auto Focus*/
 3150              		.loc 1 1242 0
 3151 1218 BE325BE1 		ldrh	r3, [fp, #-46]
 3152 121c 010C53E3 		cmp	r3, #256
 3153 1220 5000001A 		bne	.L199
 3154              		.loc 1 1242 0 is_stmt 0 discriminator 1
 3155 1224 BC325BE1 		ldrh	r3, [fp, #-44]
 3156 1228 020B53E3 		cmp	r3, #2048
 3157 122c 4D00001A 		bne	.L199
1243:../CX3RDKOV5640.c **** 			{
1244:../CX3RDKOV5640.c ****             	CyU3PDebugPrint (4, "\n\rAuto Focus");
 3158              		.loc 1 1244 0 is_stmt 1
 3159 1230 0400A0E3 		mov	r0, #4
 3160 1234 34111FE5 		ldr	r1, .L229+124
 3161 1238 FEFFFFEB 		bl	CyU3PDebugPrint
1245:../CX3RDKOV5640.c **** 				switch(bRequest)
 3162              		.loc 1 1245 0
 3163 123c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3164 1240 840053E3 		cmp	r3, #132
 3165 1244 040000CA 		bgt	.L201
 3166 1248 810053E3 		cmp	r3, #129
 3167 124c 170000AA 		bge	.L202
 3168 1250 010053E3 		cmp	r3, #1
 3169 1254 2C00000A 		beq	.L203
1246:../CX3RDKOV5640.c **** 				{
1247:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1248:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1249:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1250:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1251:../CX3RDKOV5640.c **** 					{
1252:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1253:../CX3RDKOV5640.c **** 					}
1254:../CX3RDKOV5640.c **** 					break;
1255:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1256:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1257:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1258:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1259:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1260:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1261:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1262:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutofocus(RequestOption);
1263:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
1264:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1265:../CX3RDKOV5640.c **** 					{
1266:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1267:../CX3RDKOV5640.c **** 					}
1268:../CX3RDKOV5640.c **** 					break;
1269:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1270:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1271:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1272:../CX3RDKOV5640.c **** 					{
1273:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1274:../CX3RDKOV5640.c **** 					}
1275:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1276:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Focus =%d",gl8SetControl);
1277:../CX3RDKOV5640.c **** 					esOV5640_SetAutofocus((uint8_t)gl8SetControl);
1278:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
1279:../CX3RDKOV5640.c **** 					break;
1280:../CX3RDKOV5640.c **** 				}
1281:../CX3RDKOV5640.c **** 			}
 3170              		.loc 1 1281 0
 3171 1258 F80000EA 		b	.L90
 3172              	.L201:
1245:../CX3RDKOV5640.c **** 				switch(bRequest)
 3173              		.loc 1 1245 0
 3174 125c 860053E3 		cmp	r3, #134
 3175 1260 0200000A 		beq	.L204
 3176 1264 870053E3 		cmp	r3, #135
 3177 1268 1000000A 		beq	.L202
 3178              		.loc 1 1281 0
 3179 126c F30000EA 		b	.L90
 3180              	.L204:
1248:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3181              		.loc 1 1248 0
 3182 1270 60311FE5 		ldr	r3, .L229+140
 3183 1274 0320A0E3 		mov	r2, #3
 3184 1278 0020C3E5 		strb	r2, [r3]
1249:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3185              		.loc 1 1249 0
 3186 127c 0100A0E3 		mov	r0, #1
 3187 1280 70111FE5 		ldr	r1, .L229+140
 3188 1284 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3189 1288 24000BE5 		str	r0, [fp, #-36]
1250:../CX3RDKOV5640.c **** 					{
 3190              		.loc 1 1250 0
 3191 128c 24301BE5 		ldr	r3, [fp, #-36]
 3192 1290 000053E3 		cmp	r3, #0
 3193 1294 0400000A 		beq	.L205
1252:../CX3RDKOV5640.c **** 					}
 3194              		.loc 1 1252 0
 3195 1298 0400A0E3 		mov	r0, #4
 3196 129c 80111FE5 		ldr	r1, .L229+152
 3197 12a0 24201BE5 		ldr	r2, [fp, #-36]
 3198 12a4 FEFFFFEB 		bl	CyU3PDebugPrint
1254:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3199              		.loc 1 1254 0
 3200 12a8 2D0000EA 		b	.L200
 3201              	.L205:
 3202 12ac 2C0000EA 		b	.L200
 3203              	.L202:
1260:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3204              		.loc 1 1260 0
 3205 12b0 29305BE5 		ldrb	r3, [fp, #-41]
 3206 12b4 0F3003E2 		and	r3, r3, #15
 3207 12b8 25304BE5 		strb	r3, [fp, #-37]
1262:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
 3208              		.loc 1 1262 0
 3209 12bc 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3210 12c0 0300A0E1 		mov	r0, r3
 3211 12c4 FEFFFFEB 		bl	esOV5640_GetAutofocus
 3212 12c8 0030A0E1 		mov	r3, r0
 3213 12cc 0320A0E1 		mov	r2, r3
 3214 12d0 CC311FE5 		ldr	r3, .L229+128
 3215 12d4 B020C3E1 		strh	r2, [r3]	@ movhi
1263:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3216              		.loc 1 1263 0
 3217 12d8 0200A0E3 		mov	r0, #2
 3218 12dc D8111FE5 		ldr	r1, .L229+128
 3219 12e0 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3220 12e4 24000BE5 		str	r0, [fp, #-36]
1264:../CX3RDKOV5640.c **** 					{
 3221              		.loc 1 1264 0
 3222 12e8 24301BE5 		ldr	r3, [fp, #-36]
 3223 12ec 000053E3 		cmp	r3, #0
 3224 12f0 0400000A 		beq	.L206
1266:../CX3RDKOV5640.c **** 					}
 3225              		.loc 1 1266 0
 3226 12f4 0400A0E3 		mov	r0, #4
 3227 12f8 DC111FE5 		ldr	r1, .L229+152
 3228 12fc 24201BE5 		ldr	r2, [fp, #-36]
 3229 1300 FEFFFFEB 		bl	CyU3PDebugPrint
1268:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3230              		.loc 1 1268 0
 3231 1304 160000EA 		b	.L200
 3232              	.L206:
 3233 1308 150000EA 		b	.L200
 3234              	.L203:
1270:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3235              		.loc 1 1270 0
 3236 130c 32304BE2 		sub	r3, fp, #50
 3237 1310 1000A0E3 		mov	r0, #16
 3238 1314 0C121FE5 		ldr	r1, .L229+132
 3239 1318 0320A0E1 		mov	r2, r3
 3240 131c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3241 1320 24000BE5 		str	r0, [fp, #-36]
1271:../CX3RDKOV5640.c **** 					{
 3242              		.loc 1 1271 0
 3243 1324 24301BE5 		ldr	r3, [fp, #-36]
 3244 1328 000053E3 		cmp	r3, #0
 3245 132c 0300000A 		beq	.L207
1273:../CX3RDKOV5640.c **** 					}
 3246              		.loc 1 1273 0
 3247 1330 0400A0E3 		mov	r0, #4
 3248 1334 18121FE5 		ldr	r1, .L229+152
 3249 1338 24201BE5 		ldr	r2, [fp, #-36]
 3250 133c FEFFFFEB 		bl	CyU3PDebugPrint
 3251              	.L207:
1277:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
 3252              		.loc 1 1277 0
 3253 1340 38321FE5 		ldr	r3, .L229+132
 3254 1344 B030D3E1 		ldrh	r3, [r3]
 3255 1348 FF3003E2 		and	r3, r3, #255
 3256 134c 0300A0E1 		mov	r0, r3
 3257 1350 FEFFFFEB 		bl	esOV5640_SetAutofocus
1278:../CX3RDKOV5640.c **** 					break;
 3258              		.loc 1 1278 0
 3259 1354 48321FE5 		ldr	r3, .L229+136
 3260 1358 0120A0E3 		mov	r2, #1
 3261 135c 0020C3E5 		strb	r2, [r3]
1279:../CX3RDKOV5640.c **** 				}
 3262              		.loc 1 1279 0
 3263 1360 0000A0E1 		mov	r0, r0	@ nop
 3264              	.L200:
 3265              		.loc 1 1281 0
 3266 1364 B50000EA 		b	.L90
 3267              	.L199:
1282:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xA00))/*White Balance manual*/
 3268              		.loc 1 1282 0
 3269 1368 BE325BE1 		ldrh	r3, [fp, #-46]
 3270 136c 020C53E3 		cmp	r3, #512
 3271 1370 4A00001A 		bne	.L208
 3272              		.loc 1 1282 0 is_stmt 0 discriminator 1
 3273 1374 BC325BE1 		ldrh	r3, [fp, #-44]
 3274 1378 0A0C53E3 		cmp	r3, #2560
 3275 137c 4700001A 		bne	.L208
1283:../CX3RDKOV5640.c **** 			{
1284:../CX3RDKOV5640.c **** 				switch(bRequest)
 3276              		.loc 1 1284 0 is_stmt 1
 3277 1380 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3278 1384 840053E3 		cmp	r3, #132
 3279 1388 040000CA 		bgt	.L210
 3280 138c 810053E3 		cmp	r3, #129
 3281 1390 170000AA 		bge	.L211
 3282 1394 010053E3 		cmp	r3, #1
 3283 1398 2C00000A 		beq	.L212
1285:../CX3RDKOV5640.c **** 				{
1286:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1287:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1288:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1289:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1290:../CX3RDKOV5640.c **** 					{
1291:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1292:../CX3RDKOV5640.c **** 					}
1293:../CX3RDKOV5640.c **** 					break;
1294:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1295:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1296:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1297:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1298:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1299:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1300:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1301:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetWhiteBalance(RequestOption);
1302:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1303:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1304:../CX3RDKOV5640.c **** 					{
1305:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1306:../CX3RDKOV5640.c **** 					}
1307:../CX3RDKOV5640.c **** 					break;
1308:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1309:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1310:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1311:../CX3RDKOV5640.c **** 					{
1312:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1313:../CX3RDKOV5640.c **** 					}
1314:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1315:../CX3RDKOV5640.c **** 					esOV5640_SetWhiteBalance((uint8_t)gl16SetControl);
1316:../CX3RDKOV5640.c **** 					break;
1317:../CX3RDKOV5640.c **** 				}
1318:../CX3RDKOV5640.c **** 			}
 3284              		.loc 1 1318 0
 3285 139c A70000EA 		b	.L90
 3286              	.L210:
1284:../CX3RDKOV5640.c **** 				{
 3287              		.loc 1 1284 0
 3288 13a0 860053E3 		cmp	r3, #134
 3289 13a4 0200000A 		beq	.L213
 3290 13a8 870053E3 		cmp	r3, #135
 3291 13ac 1000000A 		beq	.L211
 3292              		.loc 1 1318 0
 3293 13b0 A20000EA 		b	.L90
 3294              	.L213:
1287:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3295              		.loc 1 1287 0
 3296 13b4 A4321FE5 		ldr	r3, .L229+140
 3297 13b8 0320A0E3 		mov	r2, #3
 3298 13bc 0020C3E5 		strb	r2, [r3]
1288:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3299              		.loc 1 1288 0
 3300 13c0 0100A0E3 		mov	r0, #1
 3301 13c4 B4121FE5 		ldr	r1, .L229+140
 3302 13c8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3303 13cc 24000BE5 		str	r0, [fp, #-36]
1289:../CX3RDKOV5640.c **** 					{
 3304              		.loc 1 1289 0
 3305 13d0 24301BE5 		ldr	r3, [fp, #-36]
 3306 13d4 000053E3 		cmp	r3, #0
 3307 13d8 0400000A 		beq	.L214
1291:../CX3RDKOV5640.c **** 					}
 3308              		.loc 1 1291 0
 3309 13dc 0400A0E3 		mov	r0, #4
 3310 13e0 C4121FE5 		ldr	r1, .L229+152
 3311 13e4 24201BE5 		ldr	r2, [fp, #-36]
 3312 13e8 FEFFFFEB 		bl	CyU3PDebugPrint
1293:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3313              		.loc 1 1293 0
 3314 13ec 2A0000EA 		b	.L209
 3315              	.L214:
 3316 13f0 290000EA 		b	.L209
 3317              	.L211:
1299:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3318              		.loc 1 1299 0
 3319 13f4 29305BE5 		ldrb	r3, [fp, #-41]
 3320 13f8 0F3003E2 		and	r3, r3, #15
 3321 13fc 25304BE5 		strb	r3, [fp, #-37]
1301:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3322              		.loc 1 1301 0
 3323 1400 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3324 1404 0300A0E1 		mov	r0, r3
 3325 1408 FEFFFFEB 		bl	esOV5640_GetWhiteBalance
 3326 140c 0030A0E1 		mov	r3, r0
 3327 1410 0320A0E1 		mov	r2, r3
 3328 1414 00331FE5 		ldr	r3, .L229+144
 3329 1418 B020C3E1 		strh	r2, [r3]	@ movhi
1302:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3330              		.loc 1 1302 0
 3331 141c 0200A0E3 		mov	r0, #2
 3332 1420 0C131FE5 		ldr	r1, .L229+144
 3333 1424 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3334 1428 24000BE5 		str	r0, [fp, #-36]
1303:../CX3RDKOV5640.c **** 					{
 3335              		.loc 1 1303 0
 3336 142c 24301BE5 		ldr	r3, [fp, #-36]
 3337 1430 000053E3 		cmp	r3, #0
 3338 1434 0400000A 		beq	.L215
1305:../CX3RDKOV5640.c **** 					}
 3339              		.loc 1 1305 0
 3340 1438 0400A0E3 		mov	r0, #4
 3341 143c 20131FE5 		ldr	r1, .L229+152
 3342 1440 24201BE5 		ldr	r2, [fp, #-36]
 3343 1444 FEFFFFEB 		bl	CyU3PDebugPrint
1307:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3344              		.loc 1 1307 0
 3345 1448 130000EA 		b	.L209
 3346              	.L215:
 3347 144c 120000EA 		b	.L209
 3348              	.L212:
1309:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3349              		.loc 1 1309 0
 3350 1450 32304BE2 		sub	r3, fp, #50
 3351 1454 1000A0E3 		mov	r0, #16
 3352 1458 40131FE5 		ldr	r1, .L229+148
 3353 145c 0320A0E1 		mov	r2, r3
 3354 1460 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3355 1464 24000BE5 		str	r0, [fp, #-36]
1310:../CX3RDKOV5640.c **** 					{
 3356              		.loc 1 1310 0
 3357 1468 24301BE5 		ldr	r3, [fp, #-36]
 3358 146c 000053E3 		cmp	r3, #0
 3359 1470 0300000A 		beq	.L216
1312:../CX3RDKOV5640.c **** 					}
 3360              		.loc 1 1312 0
 3361 1474 0400A0E3 		mov	r0, #4
 3362 1478 5C131FE5 		ldr	r1, .L229+152
 3363 147c 24201BE5 		ldr	r2, [fp, #-36]
 3364 1480 FEFFFFEB 		bl	CyU3PDebugPrint
 3365              	.L216:
1315:../CX3RDKOV5640.c **** 					break;
 3366              		.loc 1 1315 0
 3367 1484 6C331FE5 		ldr	r3, .L229+148
 3368 1488 B030D3E1 		ldrh	r3, [r3]
 3369 148c FF3003E2 		and	r3, r3, #255
 3370 1490 0300A0E1 		mov	r0, r3
 3371 1494 FEFFFFEB 		bl	esOV5640_SetWhiteBalance
1316:../CX3RDKOV5640.c **** 				}
 3372              		.loc 1 1316 0
 3373 1498 0000A0E1 		mov	r0, r0	@ nop
 3374              	.L209:
 3375              		.loc 1 1318 0
 3376 149c 670000EA 		b	.L90
 3377              	.L208:
1319:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xB00))/*White Balance Auto*/
 3378              		.loc 1 1319 0
 3379 14a0 BE325BE1 		ldrh	r3, [fp, #-46]
 3380 14a4 020C53E3 		cmp	r3, #512
 3381 14a8 4A00001A 		bne	.L217
 3382              		.loc 1 1319 0 is_stmt 0 discriminator 1
 3383 14ac BC325BE1 		ldrh	r3, [fp, #-44]
 3384 14b0 0B0C53E3 		cmp	r3, #2816
 3385 14b4 4700001A 		bne	.L217
1320:../CX3RDKOV5640.c **** 			{
1321:../CX3RDKOV5640.c **** 				switch(bRequest)
 3386              		.loc 1 1321 0 is_stmt 1
 3387 14b8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3388 14bc 840053E3 		cmp	r3, #132
 3389 14c0 040000CA 		bgt	.L219
 3390 14c4 810053E3 		cmp	r3, #129
 3391 14c8 170000AA 		bge	.L220
 3392 14cc 010053E3 		cmp	r3, #1
 3393 14d0 2C00000A 		beq	.L221
1322:../CX3RDKOV5640.c **** 				{
1323:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1324:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1325:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1326:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1327:../CX3RDKOV5640.c **** 					{
1328:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1329:../CX3RDKOV5640.c **** 					}
1330:../CX3RDKOV5640.c **** 					break;
1331:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1332:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1333:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1334:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1335:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1336:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1337:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1338:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetAutoWhiteBalance(RequestOption);
1339:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1340:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1341:../CX3RDKOV5640.c **** 					{
1342:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1343:../CX3RDKOV5640.c **** 					}
1344:../CX3RDKOV5640.c **** 					break;
1345:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1346:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1347:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1348:../CX3RDKOV5640.c **** 					{
1349:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1350:../CX3RDKOV5640.c **** 					}
1351:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1352:../CX3RDKOV5640.c **** 					esOV5640_SetAutoWhiteBalance((uint8_t)gl16SetControl);
1353:../CX3RDKOV5640.c **** 					break;
1354:../CX3RDKOV5640.c **** 				}
1355:../CX3RDKOV5640.c **** 			}
 3394              		.loc 1 1355 0
 3395 14d4 590000EA 		b	.L90
 3396              	.L219:
1321:../CX3RDKOV5640.c **** 				{
 3397              		.loc 1 1321 0
 3398 14d8 860053E3 		cmp	r3, #134
 3399 14dc 0200000A 		beq	.L222
 3400 14e0 870053E3 		cmp	r3, #135
 3401 14e4 1000000A 		beq	.L220
 3402              		.loc 1 1355 0
 3403 14e8 540000EA 		b	.L90
 3404              	.L222:
1324:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3405              		.loc 1 1324 0
 3406 14ec DC331FE5 		ldr	r3, .L229+140
 3407 14f0 0320A0E3 		mov	r2, #3
 3408 14f4 0020C3E5 		strb	r2, [r3]
1325:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3409              		.loc 1 1325 0
 3410 14f8 0100A0E3 		mov	r0, #1
 3411 14fc EC131FE5 		ldr	r1, .L229+140
 3412 1500 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3413 1504 24000BE5 		str	r0, [fp, #-36]
1326:../CX3RDKOV5640.c **** 					{
 3414              		.loc 1 1326 0
 3415 1508 24301BE5 		ldr	r3, [fp, #-36]
 3416 150c 000053E3 		cmp	r3, #0
 3417 1510 0400000A 		beq	.L223
1328:../CX3RDKOV5640.c **** 					}
 3418              		.loc 1 1328 0
 3419 1514 0400A0E3 		mov	r0, #4
 3420 1518 FC131FE5 		ldr	r1, .L229+152
 3421 151c 24201BE5 		ldr	r2, [fp, #-36]
 3422 1520 FEFFFFEB 		bl	CyU3PDebugPrint
1330:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3423              		.loc 1 1330 0
 3424 1524 2A0000EA 		b	.L218
 3425              	.L223:
 3426 1528 290000EA 		b	.L218
 3427              	.L220:
1336:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3428              		.loc 1 1336 0
 3429 152c 29305BE5 		ldrb	r3, [fp, #-41]
 3430 1530 0F3003E2 		and	r3, r3, #15
 3431 1534 25304BE5 		strb	r3, [fp, #-37]
1338:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3432              		.loc 1 1338 0
 3433 1538 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3434 153c 0300A0E1 		mov	r0, r3
 3435 1540 FEFFFFEB 		bl	esOV5640_GetAutoWhiteBalance
 3436 1544 0030A0E1 		mov	r3, r0
 3437 1548 0320A0E1 		mov	r2, r3
 3438 154c 38341FE5 		ldr	r3, .L229+144
 3439 1550 B020C3E1 		strh	r2, [r3]	@ movhi
1339:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3440              		.loc 1 1339 0
 3441 1554 0200A0E3 		mov	r0, #2
 3442 1558 44141FE5 		ldr	r1, .L229+144
 3443 155c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3444 1560 24000BE5 		str	r0, [fp, #-36]
1340:../CX3RDKOV5640.c **** 					{
 3445              		.loc 1 1340 0
 3446 1564 24301BE5 		ldr	r3, [fp, #-36]
 3447 1568 000053E3 		cmp	r3, #0
 3448 156c 0400000A 		beq	.L224
1342:../CX3RDKOV5640.c **** 					}
 3449              		.loc 1 1342 0
 3450 1570 0400A0E3 		mov	r0, #4
 3451 1574 58141FE5 		ldr	r1, .L229+152
 3452 1578 24201BE5 		ldr	r2, [fp, #-36]
 3453 157c FEFFFFEB 		bl	CyU3PDebugPrint
1344:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3454              		.loc 1 1344 0
 3455 1580 130000EA 		b	.L218
 3456              	.L224:
 3457 1584 120000EA 		b	.L218
 3458              	.L221:
1346:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3459              		.loc 1 1346 0
 3460 1588 32304BE2 		sub	r3, fp, #50
 3461 158c 1000A0E3 		mov	r0, #16
 3462 1590 78141FE5 		ldr	r1, .L229+148
 3463 1594 0320A0E1 		mov	r2, r3
 3464 1598 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3465 159c 24000BE5 		str	r0, [fp, #-36]
1347:../CX3RDKOV5640.c **** 					{
 3466              		.loc 1 1347 0
 3467 15a0 24301BE5 		ldr	r3, [fp, #-36]
 3468 15a4 000053E3 		cmp	r3, #0
 3469 15a8 0300000A 		beq	.L225
1349:../CX3RDKOV5640.c **** 					}
 3470              		.loc 1 1349 0
 3471 15ac 0400A0E3 		mov	r0, #4
 3472 15b0 94141FE5 		ldr	r1, .L229+152
 3473 15b4 24201BE5 		ldr	r2, [fp, #-36]
 3474 15b8 FEFFFFEB 		bl	CyU3PDebugPrint
 3475              	.L225:
1352:../CX3RDKOV5640.c **** 					break;
 3476              		.loc 1 1352 0
 3477 15bc A4341FE5 		ldr	r3, .L229+148
 3478 15c0 B030D3E1 		ldrh	r3, [r3]
 3479 15c4 FF3003E2 		and	r3, r3, #255
 3480 15c8 0300A0E1 		mov	r0, r3
 3481 15cc FEFFFFEB 		bl	esOV5640_SetAutoWhiteBalance
1353:../CX3RDKOV5640.c **** 				}
 3482              		.loc 1 1353 0
 3483 15d0 0000A0E1 		mov	r0, r0	@ nop
 3484              	.L218:
 3485              		.loc 1 1355 0
 3486 15d4 190000EA 		b	.L90
 3487              	.L217:
1356:../CX3RDKOV5640.c ****             else if((wValue == ES_UVC_VC_REQUEST_ERROR_CODE_CONTROL) && (wIndex == 0x00))
 3488              		.loc 1 1356 0
 3489 15d8 BC325BE1 		ldrh	r3, [fp, #-44]
 3490 15dc 020C53E3 		cmp	r3, #512
 3491 15e0 1200001A 		bne	.L226
 3492              		.loc 1 1356 0 is_stmt 0 discriminator 1
 3493 15e4 BE325BE1 		ldrh	r3, [fp, #-46]
 3494 15e8 000053E3 		cmp	r3, #0
 3495 15ec 0F00001A 		bne	.L226
1357:../CX3RDKOV5640.c ****             {
1358:../CX3RDKOV5640.c ****                 temp = ES_UVC_ERROR_INVALID_CONTROL;
 3496              		.loc 1 1358 0 is_stmt 1
 3497 15f0 0630A0E3 		mov	r3, #6
 3498 15f4 35304BE5 		strb	r3, [fp, #-53]
1359:../CX3RDKOV5640.c ****                 status = CyU3PUsbSendEP0Data(0x01, &temp);
 3499              		.loc 1 1359 0
 3500 15f8 35304BE2 		sub	r3, fp, #53
 3501 15fc 0100A0E3 		mov	r0, #1
 3502 1600 0310A0E1 		mov	r1, r3
 3503 1604 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3504 1608 24000BE5 		str	r0, [fp, #-36]
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3505              		.loc 1 1360 0
 3506 160c 24301BE5 		ldr	r3, [fp, #-36]
 3507 1610 000053E3 		cmp	r3, #0
 3508 1614 0400000A 		beq	.L227
1361:../CX3RDKOV5640.c ****                 {
1362:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 3509              		.loc 1 1362 0
 3510 1618 0400A0E3 		mov	r0, #4
 3511 161c 00151FE5 		ldr	r1, .L229+152
 3512 1620 24201BE5 		ldr	r2, [fp, #-36]
 3513 1624 FEFFFFEB 		bl	CyU3PDebugPrint
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3514              		.loc 1 1360 0
 3515 1628 040000EA 		b	.L90
 3516              	.L227:
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3517              		.loc 1 1360 0 is_stmt 0 discriminator 1
 3518 162c 030000EA 		b	.L90
 3519              	.L226:
1363:../CX3RDKOV5640.c ****                 }
1364:../CX3RDKOV5640.c ****             }
1365:../CX3RDKOV5640.c ****             else
1366:../CX3RDKOV5640.c ****                 CyU3PUsbStall(0,CyTrue, CyTrue);
 3520              		.loc 1 1366 0 is_stmt 1
 3521 1630 0000A0E3 		mov	r0, #0
 3522 1634 0110A0E3 		mov	r1, #1
 3523 1638 0120A0E3 		mov	r2, #1
 3524 163c FEFFFFEB 		bl	CyU3PUsbStall
 3525              	.L90:
1367:../CX3RDKOV5640.c ****         }
1368:../CX3RDKOV5640.c ****     }
1369:../CX3RDKOV5640.c ****     return isHandled;
 3526              		.loc 1 1369 0
 3527 1640 20301BE5 		ldr	r3, [fp, #-32]
 3528              	.L228:
1370:../CX3RDKOV5640.c **** }
 3529              		.loc 1 1370 0
 3530 1644 0300A0E1 		mov	r0, r3
 3531 1648 18D04BE2 		sub	sp, fp, #24
 3532              		@ sp needed
 3533 164c F089BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, fp, pc}
 3534              		.cfi_endproc
 3535              	.LFE10:
 3537              		.section	.rodata
 3538 02c5 000000   		.align	2
 3539              	.LC19:
 3540 02c8 0A0D4170 		.ascii	"\012\015AppInit:I2CInit Err = 0x%x.\000"
 3540      70496E69 
 3540      743A4932 
 3540      43496E69 
 3540      74204572 
 3541 02e6 0000     		.align	2
 3542              	.LC20:
 3543 02e8 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit Err = 0x%x\000"
 3543      70496E69 
 3543      743A4750 
 3543      494F496E 
 3543      69742045 
 3544 0306 0000     		.align	2
 3545              	.LC21:
 3546 0308 0A0D4170 		.ascii	"\012\015AppInit:PIBInit Err = 0x%x\000"
 3546      70496E69 
 3546      743A5049 
 3546      42496E69 
 3546      74204572 
 3547 0325 000000   		.align	2
 3548              	.LC22:
 3549 0328 0A0D4170 		.ascii	"\012\015AppInit:UsbStart Err = 0x%x\000"
 3549      70496E69 
 3549      743A5573 
 3549      62537461 
 3549      72742045 
 3550 0346 0000     		.align	2
 3551              	.LC23:
 3552 0348 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr Err = 0x%x\000"
 3552      70496E69 
 3552      743A5365 
 3552      745F5353 
 3552      5F446576 
 3553              		.align	2
 3554              	.LC24:
 3555 0370 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr Err = 0x%x\000"
 3555      70496E69 
 3555      743A5365 
 3555      745F4853 
 3555      5F446576 
 3556              		.align	2
 3557              	.LC25:
 3558 0398 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr Err = 0x%x\000"
 3558      70496E69 
 3558      743A5365 
 3558      745F424F 
 3558      535F4473 
 3559 03ba 0000     		.align	2
 3560              	.LC26:
 3561 03bc 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr Err = 0x%x\000"
 3561      70496E69 
 3561      743A5365 
 3561      745F4445 
 3561      56515541 
 3562 03e2 0000     		.align	2
 3563              	.LC27:
 3564 03e4 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr Err = 0x%x\000"
 3564      70496E69 
 3564      743A5365 
 3564      745F5353 
 3564      5F434647 
 3565 0409 000000   		.align	2
 3566              	.LC28:
 3567 040c 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr Err = 0x%x\000"
 3567      70496E69 
 3567      743A5365 
 3567      745F4853 
 3567      5F434647 
 3568 0431 000000   		.align	2
 3569              	.LC29:
 3570 0434 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr Err = 0x%x\000"
 3570      70496E69 
 3570      743A5365 
 3570      745F4653 
 3570      5F434647 
 3571 0459 000000   		.align	2
 3572              	.LC30:
 3573 045c 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr0 Err = 0x%x\000"
 3573      70496E69 
 3573      743A5365 
 3573      745F5354 
 3573      524E475F 
 3574 0481 000000   		.align	2
 3575              	.LC31:
 3576 0484 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr1 Err = 0x%x\000"
 3576      70496E69 
 3576      743A5365 
 3576      745F5354 
 3576      524E475F 
 3577 04a9 000000   		.align	2
 3578              	.LC32:
 3579 04ac 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr2 Err = 0x%x\000"
 3579      70496E69 
 3579      743A5365 
 3579      745F5354 
 3579      524E475F 
 3580 04d1 000000   		.align	2
 3581              	.LC33:
 3582 04d4 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr3 Err = 0x%x\000"
 3582      70496E69 
 3582      743A5365 
 3582      745F5354 
 3582      524E475F 
 3583 04f9 000000   		.align	2
 3584              	.LC34:
 3585 04fc 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr4 Err = 0x%x\000"
 3585      70496E69 
 3585      743A5365 
 3585      745F5354 
 3585      524E475F 
 3586 0521 000000   		.align	2
 3587              	.LC35:
 3588 0524 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr5 Err = 0x%x\000"
 3588      70496E69 
 3588      743A5365 
 3588      745F5354 
 3588      524E475F 
 3589 0549 000000   		.align	2
 3590              	.LC36:
 3591 054c 0A0D4170 		.ascii	"\012\015AppInit:ConnectState Err = 0x%x\000"
 3591      70496E69 
 3591      743A436F 
 3591      6E6E6563 
 3591      74537461 
 3592 056e 0000     		.align	2
 3593              	.LC37:
 3594 0570 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x\000"
 3594      70496E69 
 3594      743A4379 
 3594      55335053 
 3594      65744570 
 3595 059d 000000   		.align	2
 3596              	.LC38:
 3597 05a0 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp Err = 0x%x\000"
 3597      70496E69 
 3597      743A4379 
 3597      55335053 
 3597      65744570 
 3598 05cd 000000   		.align	2
 3599              	.LC39:
 3600 05d0 0A0D4170 		.ascii	"\012\015AppInit:DmaMultiChannelCreate Err = 0x%x\000"
 3600      70496E69 
 3600      743A446D 
 3600      614D756C 
 3600      74694368 
 3601 05fb 00       		.align	2
 3602              	.LC40:
 3603 05fc 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset Err = 0x%x\000"
 3603      70496E69 
 3603      743A4D75 
 3603      6C746943 
 3603      68616E6E 
 3604 0623 00       		.align	2
 3605              	.LC41:
 3606 0624 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad Err = 0x%x\000"
 3606      70496E69 
 3606      743A4D69 
 3606      70696373 
 3606      69477069 
 3607 0649 000000   		.align	2
 3608              	.LC42:
 3609 064c 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart Err = 0x%x\000"
 3609      70496E69 
 3609      743A4770 
 3609      6966534D 
 3609      53746172 
 3610 066d 000000   		.align	2
 3611              	.LC43:
 3612 0670 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit Err = 0x%x\000"
 3612      70496E69 
 3612      743A4D69 
 3612      70696373 
 3612      69496E69 
 3613 0691 000000   		.align	2
 3614              	.LC44:
 3615 0694 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams Err = 0x%x\000"
 3615      70496E69 
 3615      743A4D69 
 3615      70696373 
 3615      69536574 
 3616 06be 0000     		.align	2
 3617              	.LC45:
 3618 06c0 0A0D4669 		.ascii	"\012\015Firmware Version: %d.%d.%d.%d\000"
 3618      726D7761 
 3618      72652056 
 3618      65727369 
 3618      6F6E3A20 
 3619              		.section	.text.esUVCUvcApplnInit,"ax",%progbits
 3620              		.align	2
 3621              		.global	esUVCUvcApplnInit
 3623              	esUVCUvcApplnInit:
 3624              	.LFB11:
1371:../CX3RDKOV5640.c **** 
1372:../CX3RDKOV5640.c **** 
1373:../CX3RDKOV5640.c **** /* This function initializes the USB Module, creates event group,
1374:../CX3RDKOV5640.c ****    sets the enumeration descriptors, configures the Endpoints and
1375:../CX3RDKOV5640.c ****    configures the DMA module for the UVC Application */
1376:../CX3RDKOV5640.c ****     void
1377:../CX3RDKOV5640.c **** esUVCUvcApplnInit (void)
1378:../CX3RDKOV5640.c **** {
 3625              		.loc 1 1378 0
 3626              		.cfi_startproc
 3627              		@ args = 0, pretend = 0, frame = 56
 3628              		@ frame_needed = 1, uses_anonymous_args = 0
 3629 0000 00482DE9 		stmfd	sp!, {fp, lr}
 3630              	.LCFI22:
 3631              		.cfi_def_cfa_offset 8
 3632              		.cfi_offset 11, -8
 3633              		.cfi_offset 14, -4
 3634 0004 04B08DE2 		add	fp, sp, #4
 3635              	.LCFI23:
 3636              		.cfi_def_cfa 11, 4
 3637 0008 48D04DE2 		sub	sp, sp, #72
1379:../CX3RDKOV5640.c ****     CyU3PEpConfig_t endPointConfig;
1380:../CX3RDKOV5640.c ****     CyU3PDmaMultiChannelConfig_t dmaCfg;
1381:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 3638              		.loc 1 1381 0
 3639 000c 0030A0E3 		mov	r3, #0
 3640 0010 08300BE5 		str	r3, [fp, #-8]
1382:../CX3RDKOV5640.c **** 
1383:../CX3RDKOV5640.c ****     /* Initialize the I2C interface for Mipi Block Usage and Camera. */
1384:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeI2c (CY_U3P_MIPICSI_I2C_400KHZ);
 3641              		.loc 1 1384 0
 3642 0014 0100A0E3 		mov	r0, #1
 3643 0018 FEFFFFEB 		bl	CyU3PMipicsiInitializeI2c
 3644 001c 08000BE5 		str	r0, [fp, #-8]
1385:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3645              		.loc 1 1385 0
 3646 0020 08301BE5 		ldr	r3, [fp, #-8]
 3647 0024 000053E3 		cmp	r3, #0
 3648 0028 0500000A 		beq	.L232
1386:../CX3RDKOV5640.c ****     {
1387:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:I2CInit Err = 0x%x.",status);
 3649              		.loc 1 1387 0
 3650 002c 0400A0E3 		mov	r0, #4
 3651 0030 70179FE5 		ldr	r1, .L263
 3652 0034 08201BE5 		ldr	r2, [fp, #-8]
 3653 0038 FEFFFFEB 		bl	CyU3PDebugPrint
1388:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3654              		.loc 1 1388 0
 3655 003c 08001BE5 		ldr	r0, [fp, #-8]
 3656 0040 FEFFFFEB 		bl	esUVCAppErrorHandler
 3657              	.L232:
1389:../CX3RDKOV5640.c ****     }
1390:../CX3RDKOV5640.c **** #ifdef VISDebug
1391:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:I2CInit");
1392:../CX3RDKOV5640.c **** #endif
1393:../CX3RDKOV5640.c ****     /* Initialize GPIO module. */
1394:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeGPIO ();
 3658              		.loc 1 1394 0
 3659 0044 FEFFFFEB 		bl	CyU3PMipicsiInitializeGPIO
 3660 0048 08000BE5 		str	r0, [fp, #-8]
1395:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3661              		.loc 1 1395 0
 3662 004c 08301BE5 		ldr	r3, [fp, #-8]
 3663 0050 000053E3 		cmp	r3, #0
 3664 0054 0500000A 		beq	.L233
1396:../CX3RDKOV5640.c ****     {
1397:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit Err = 0x%x",status);
 3665              		.loc 1 1397 0
 3666 0058 0400A0E3 		mov	r0, #4
 3667 005c 48179FE5 		ldr	r1, .L263+4
 3668 0060 08201BE5 		ldr	r2, [fp, #-8]
 3669 0064 FEFFFFEB 		bl	CyU3PDebugPrint
1398:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3670              		.loc 1 1398 0
 3671 0068 08001BE5 		ldr	r0, [fp, #-8]
 3672 006c FEFFFFEB 		bl	esUVCAppErrorHandler
 3673              	.L233:
1399:../CX3RDKOV5640.c ****     }
1400:../CX3RDKOV5640.c **** #ifdef VISDebug
1401:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit");
1402:../CX3RDKOV5640.c **** #endif
1403:../CX3RDKOV5640.c ****     /* Initialize the PIB block */
1404:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializePIB ();
 3674              		.loc 1 1404 0
 3675 0070 FEFFFFEB 		bl	CyU3PMipicsiInitializePIB
 3676 0074 08000BE5 		str	r0, [fp, #-8]
1405:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3677              		.loc 1 1405 0
 3678 0078 08301BE5 		ldr	r3, [fp, #-8]
 3679 007c 000053E3 		cmp	r3, #0
 3680 0080 0500000A 		beq	.L234
1406:../CX3RDKOV5640.c ****     {
1407:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:PIBInit Err = 0x%x",status);
 3681              		.loc 1 1407 0
 3682 0084 0400A0E3 		mov	r0, #4
 3683 0088 20179FE5 		ldr	r1, .L263+8
 3684 008c 08201BE5 		ldr	r2, [fp, #-8]
 3685 0090 FEFFFFEB 		bl	CyU3PDebugPrint
1408:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3686              		.loc 1 1408 0
 3687 0094 08001BE5 		ldr	r0, [fp, #-8]
 3688 0098 FEFFFFEB 		bl	esUVCAppErrorHandler
 3689              	.L234:
1409:../CX3RDKOV5640.c ****     }
1410:../CX3RDKOV5640.c **** #ifdef VISDebug
1411:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:PIBInit");
1412:../CX3RDKOV5640.c **** #endif
1413:../CX3RDKOV5640.c ****     /* Start the USB functionality */
1414:../CX3RDKOV5640.c ****     status = CyU3PUsbStart();
 3690              		.loc 1 1414 0
 3691 009c FEFFFFEB 		bl	CyU3PUsbStart
 3692 00a0 08000BE5 		str	r0, [fp, #-8]
1415:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3693              		.loc 1 1415 0
 3694 00a4 08301BE5 		ldr	r3, [fp, #-8]
 3695 00a8 000053E3 		cmp	r3, #0
 3696 00ac 0500000A 		beq	.L235
1416:../CX3RDKOV5640.c ****     {
1417:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:UsbStart Err = 0x%x",status);
 3697              		.loc 1 1417 0
 3698 00b0 0400A0E3 		mov	r0, #4
 3699 00b4 F8169FE5 		ldr	r1, .L263+12
 3700 00b8 08201BE5 		ldr	r2, [fp, #-8]
 3701 00bc FEFFFFEB 		bl	CyU3PDebugPrint
1418:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3702              		.loc 1 1418 0
 3703 00c0 08001BE5 		ldr	r0, [fp, #-8]
 3704 00c4 FEFFFFEB 		bl	esUVCAppErrorHandler
 3705              	.L235:
1419:../CX3RDKOV5640.c ****     }
1420:../CX3RDKOV5640.c **** #ifdef VISDebug
1421:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:UsbStart");
1422:../CX3RDKOV5640.c **** #endif
1423:../CX3RDKOV5640.c ****     /* The fast enumeration is the easiest way to setup a USB connection,
1424:../CX3RDKOV5640.c ****      * where all enumeration phase is handled by the library. Only the
1425:../CX3RDKOV5640.c ****      * class / vendor requests need to be handled by the application. */
1426:../CX3RDKOV5640.c ****     CyU3PUsbRegisterSetupCallback(esUVCUvcApplnUSBSetupCB, CyTrue);
 3706              		.loc 1 1426 0
 3707 00c8 E8069FE5 		ldr	r0, .L263+16
 3708 00cc 0110A0E3 		mov	r1, #1
 3709 00d0 FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
1427:../CX3RDKOV5640.c **** 
1428:../CX3RDKOV5640.c ****     /* Setup the callback to handle the USB events */
1429:../CX3RDKOV5640.c ****     CyU3PUsbRegisterEventCallback(esUVCUvcApplnUSBEventCB);
 3710              		.loc 1 1429 0
 3711 00d4 E0069FE5 		ldr	r0, .L263+20
 3712 00d8 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
1430:../CX3RDKOV5640.c **** 
1431:../CX3RDKOV5640.c ****     /* Register a callback to handle LPM requests from the USB 3.0 host. */
1432:../CX3RDKOV5640.c ****     CyU3PUsbRegisterLPMRequestCallback (esUVCApplnLPMRqtCB);
 3713              		.loc 1 1432 0
 3714 00dc DC069FE5 		ldr	r0, .L263+24
 3715 00e0 FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
1433:../CX3RDKOV5640.c **** 
1434:../CX3RDKOV5640.c ****     /* Set the USB Enumeration descriptors */
1435:../CX3RDKOV5640.c **** 
1436:../CX3RDKOV5640.c ****     /* Super speed device descriptor. */
1437:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB30DeviceDscr);
 3716              		.loc 1 1437 0
 3717 00e4 0000A0E3 		mov	r0, #0
 3718 00e8 0010A0E3 		mov	r1, #0
 3719 00ec D0269FE5 		ldr	r2, .L263+28
 3720 00f0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3721 00f4 08000BE5 		str	r0, [fp, #-8]
1438:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3722              		.loc 1 1438 0
 3723 00f8 08301BE5 		ldr	r3, [fp, #-8]
 3724 00fc 000053E3 		cmp	r3, #0
 3725 0100 0500000A 		beq	.L236
1439:../CX3RDKOV5640.c ****     {
1440:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr Err = 0x%x", status);
 3726              		.loc 1 1440 0
 3727 0104 0400A0E3 		mov	r0, #4
 3728 0108 B8169FE5 		ldr	r1, .L263+32
 3729 010c 08201BE5 		ldr	r2, [fp, #-8]
 3730 0110 FEFFFFEB 		bl	CyU3PDebugPrint
1441:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3731              		.loc 1 1441 0
 3732 0114 08001BE5 		ldr	r0, [fp, #-8]
 3733 0118 FEFFFFEB 		bl	esUVCAppErrorHandler
 3734              	.L236:
1442:../CX3RDKOV5640.c ****     }
1443:../CX3RDKOV5640.c **** #ifdef VISDebug
1444:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr");
1445:../CX3RDKOV5640.c **** #endif
1446:../CX3RDKOV5640.c ****     /* High speed device descriptor. */
1447:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB20DeviceDscr);
 3735              		.loc 1 1447 0
 3736 011c 0100A0E3 		mov	r0, #1
 3737 0120 0010A0E3 		mov	r1, #0
 3738 0124 A0269FE5 		ldr	r2, .L263+36
 3739 0128 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3740 012c 08000BE5 		str	r0, [fp, #-8]
1448:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3741              		.loc 1 1448 0
 3742 0130 08301BE5 		ldr	r3, [fp, #-8]
 3743 0134 000053E3 		cmp	r3, #0
 3744 0138 0500000A 		beq	.L237
1449:../CX3RDKOV5640.c ****     {
1450:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr Err = 0x%x", status);
 3745              		.loc 1 1450 0
 3746 013c 0400A0E3 		mov	r0, #4
 3747 0140 88169FE5 		ldr	r1, .L263+40
 3748 0144 08201BE5 		ldr	r2, [fp, #-8]
 3749 0148 FEFFFFEB 		bl	CyU3PDebugPrint
1451:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3750              		.loc 1 1451 0
 3751 014c 08001BE5 		ldr	r0, [fp, #-8]
 3752 0150 FEFFFFEB 		bl	esUVCAppErrorHandler
 3753              	.L237:
1452:../CX3RDKOV5640.c ****     }
1453:../CX3RDKOV5640.c **** #ifdef VISDebug
1454:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr");
1455:../CX3RDKOV5640.c **** #endif
1456:../CX3RDKOV5640.c ****     /* BOS descriptor */
1457:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, 0, (uint8_t *)esUVCUSBBOSDscr);
 3754              		.loc 1 1457 0
 3755 0154 0700A0E3 		mov	r0, #7
 3756 0158 0010A0E3 		mov	r1, #0
 3757 015c 70269FE5 		ldr	r2, .L263+44
 3758 0160 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3759 0164 08000BE5 		str	r0, [fp, #-8]
1458:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3760              		.loc 1 1458 0
 3761 0168 08301BE5 		ldr	r3, [fp, #-8]
 3762 016c 000053E3 		cmp	r3, #0
 3763 0170 0500000A 		beq	.L238
1459:../CX3RDKOV5640.c ****     {
1460:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr Err = 0x%x", status);
 3764              		.loc 1 1460 0
 3765 0174 0400A0E3 		mov	r0, #4
 3766 0178 58169FE5 		ldr	r1, .L263+48
 3767 017c 08201BE5 		ldr	r2, [fp, #-8]
 3768 0180 FEFFFFEB 		bl	CyU3PDebugPrint
1461:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3769              		.loc 1 1461 0
 3770 0184 08001BE5 		ldr	r0, [fp, #-8]
 3771 0188 FEFFFFEB 		bl	esUVCAppErrorHandler
 3772              	.L238:
1462:../CX3RDKOV5640.c ****     }
1463:../CX3RDKOV5640.c **** #ifdef VISDebug
1464:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr");
1465:../CX3RDKOV5640.c **** #endif
1466:../CX3RDKOV5640.c ****     /* Device qualifier descriptor */
1467:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, 0, (uint8_t *)esUVCUSBDeviceQualDscr);
 3773              		.loc 1 1467 0
 3774 018c 0200A0E3 		mov	r0, #2
 3775 0190 0010A0E3 		mov	r1, #0
 3776 0194 40269FE5 		ldr	r2, .L263+52
 3777 0198 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3778 019c 08000BE5 		str	r0, [fp, #-8]
1468:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3779              		.loc 1 1468 0
 3780 01a0 08301BE5 		ldr	r3, [fp, #-8]
 3781 01a4 000053E3 		cmp	r3, #0
 3782 01a8 0500000A 		beq	.L239
1469:../CX3RDKOV5640.c ****     {
1470:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr Err = 0x%x", status);
 3783              		.loc 1 1470 0
 3784 01ac 0400A0E3 		mov	r0, #4
 3785 01b0 28169FE5 		ldr	r1, .L263+56
 3786 01b4 08201BE5 		ldr	r2, [fp, #-8]
 3787 01b8 FEFFFFEB 		bl	CyU3PDebugPrint
1471:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3788              		.loc 1 1471 0
 3789 01bc 08001BE5 		ldr	r0, [fp, #-8]
 3790 01c0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3791              	.L239:
1472:../CX3RDKOV5640.c ****     }
1473:../CX3RDKOV5640.c **** #ifdef VISDebug
1474:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr");
1475:../CX3RDKOV5640.c **** #endif
1476:../CX3RDKOV5640.c ****     /* Super speed configuration descriptor */
1477:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBSSConfigDscr);
 3792              		.loc 1 1477 0
 3793 01c4 0600A0E3 		mov	r0, #6
 3794 01c8 0010A0E3 		mov	r1, #0
 3795 01cc 10269FE5 		ldr	r2, .L263+60
 3796 01d0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3797 01d4 08000BE5 		str	r0, [fp, #-8]
1478:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3798              		.loc 1 1478 0
 3799 01d8 08301BE5 		ldr	r3, [fp, #-8]
 3800 01dc 000053E3 		cmp	r3, #0
 3801 01e0 0500000A 		beq	.L240
1479:../CX3RDKOV5640.c ****     {
1480:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr Err = 0x%x", status);
 3802              		.loc 1 1480 0
 3803 01e4 0400A0E3 		mov	r0, #4
 3804 01e8 F8159FE5 		ldr	r1, .L263+64
 3805 01ec 08201BE5 		ldr	r2, [fp, #-8]
 3806 01f0 FEFFFFEB 		bl	CyU3PDebugPrint
1481:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3807              		.loc 1 1481 0
 3808 01f4 08001BE5 		ldr	r0, [fp, #-8]
 3809 01f8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3810              	.L240:
1482:../CX3RDKOV5640.c ****     }
1483:../CX3RDKOV5640.c **** #ifdef VISDebug
1484:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr");
1485:../CX3RDKOV5640.c **** #endif
1486:../CX3RDKOV5640.c ****     /* High speed configuration descriptor */
1487:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBHSConfigDscr);
 3811              		.loc 1 1487 0
 3812 01fc 0400A0E3 		mov	r0, #4
 3813 0200 0010A0E3 		mov	r1, #0
 3814 0204 E0259FE5 		ldr	r2, .L263+68
 3815 0208 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3816 020c 08000BE5 		str	r0, [fp, #-8]
1488:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3817              		.loc 1 1488 0
 3818 0210 08301BE5 		ldr	r3, [fp, #-8]
 3819 0214 000053E3 		cmp	r3, #0
 3820 0218 0500000A 		beq	.L241
1489:../CX3RDKOV5640.c ****     {
1490:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr Err = 0x%x", status);
 3821              		.loc 1 1490 0
 3822 021c 0400A0E3 		mov	r0, #4
 3823 0220 C8159FE5 		ldr	r1, .L263+72
 3824 0224 08201BE5 		ldr	r2, [fp, #-8]
 3825 0228 FEFFFFEB 		bl	CyU3PDebugPrint
1491:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3826              		.loc 1 1491 0
 3827 022c 08001BE5 		ldr	r0, [fp, #-8]
 3828 0230 FEFFFFEB 		bl	esUVCAppErrorHandler
 3829              	.L241:
1492:../CX3RDKOV5640.c ****     }
1493:../CX3RDKOV5640.c **** #ifdef VISDebug
1494:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr");
1495:../CX3RDKOV5640.c **** #endif
1496:../CX3RDKOV5640.c ****     /* Full speed configuration descriptor */
1497:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBFSConfigDscr);
 3830              		.loc 1 1497 0
 3831 0234 0300A0E3 		mov	r0, #3
 3832 0238 0010A0E3 		mov	r1, #0
 3833 023c B0259FE5 		ldr	r2, .L263+76
 3834 0240 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3835 0244 08000BE5 		str	r0, [fp, #-8]
1498:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3836              		.loc 1 1498 0
 3837 0248 08301BE5 		ldr	r3, [fp, #-8]
 3838 024c 000053E3 		cmp	r3, #0
 3839 0250 0500000A 		beq	.L242
1499:../CX3RDKOV5640.c ****     {
1500:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr Err = 0x%x", status);
 3840              		.loc 1 1500 0
 3841 0254 0400A0E3 		mov	r0, #4
 3842 0258 98159FE5 		ldr	r1, .L263+80
 3843 025c 08201BE5 		ldr	r2, [fp, #-8]
 3844 0260 FEFFFFEB 		bl	CyU3PDebugPrint
1501:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3845              		.loc 1 1501 0
 3846 0264 08001BE5 		ldr	r0, [fp, #-8]
 3847 0268 FEFFFFEB 		bl	esUVCAppErrorHandler
 3848              	.L242:
1502:../CX3RDKOV5640.c ****     }
1503:../CX3RDKOV5640.c **** #ifdef VISDebug
1504:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr");
1505:../CX3RDKOV5640.c **** #endif
1506:../CX3RDKOV5640.c ****     /* String descriptor 0 */
1507:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)esUVCUSBStringLangIDDscr);
 3849              		.loc 1 1507 0
 3850 026c 0500A0E3 		mov	r0, #5
 3851 0270 0010A0E3 		mov	r1, #0
 3852 0274 80259FE5 		ldr	r2, .L263+84
 3853 0278 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3854 027c 08000BE5 		str	r0, [fp, #-8]
1508:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3855              		.loc 1 1508 0
 3856 0280 08301BE5 		ldr	r3, [fp, #-8]
 3857 0284 000053E3 		cmp	r3, #0
 3858 0288 0500000A 		beq	.L243
1509:../CX3RDKOV5640.c ****     {
1510:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr0 Err = 0x%x", status);
 3859              		.loc 1 1510 0
 3860 028c 0400A0E3 		mov	r0, #4
 3861 0290 68159FE5 		ldr	r1, .L263+88
 3862 0294 08201BE5 		ldr	r2, [fp, #-8]
 3863 0298 FEFFFFEB 		bl	CyU3PDebugPrint
1511:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3864              		.loc 1 1511 0
 3865 029c 08001BE5 		ldr	r0, [fp, #-8]
 3866 02a0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3867              	.L243:
1512:../CX3RDKOV5640.c ****     }
1513:../CX3RDKOV5640.c **** 
1514:../CX3RDKOV5640.c ****     /* String descriptor 1 */
1515:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)esUVCUSBManufactureDscr);
 3868              		.loc 1 1515 0
 3869 02a4 0500A0E3 		mov	r0, #5
 3870 02a8 0110A0E3 		mov	r1, #1
 3871 02ac 50259FE5 		ldr	r2, .L263+92
 3872 02b0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3873 02b4 08000BE5 		str	r0, [fp, #-8]
1516:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3874              		.loc 1 1516 0
 3875 02b8 08301BE5 		ldr	r3, [fp, #-8]
 3876 02bc 000053E3 		cmp	r3, #0
 3877 02c0 0500000A 		beq	.L244
1517:../CX3RDKOV5640.c ****     {
1518:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr1 Err = 0x%x", status);
 3878              		.loc 1 1518 0
 3879 02c4 0400A0E3 		mov	r0, #4
 3880 02c8 38159FE5 		ldr	r1, .L263+96
 3881 02cc 08201BE5 		ldr	r2, [fp, #-8]
 3882 02d0 FEFFFFEB 		bl	CyU3PDebugPrint
1519:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3883              		.loc 1 1519 0
 3884 02d4 08001BE5 		ldr	r0, [fp, #-8]
 3885 02d8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3886              	.L244:
1520:../CX3RDKOV5640.c ****     }
1521:../CX3RDKOV5640.c **** 
1522:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1523:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)esUVCUSBProductDscr);
 3887              		.loc 1 1523 0
 3888 02dc 0500A0E3 		mov	r0, #5
 3889 02e0 0210A0E3 		mov	r1, #2
 3890 02e4 20259FE5 		ldr	r2, .L263+100
 3891 02e8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3892 02ec 08000BE5 		str	r0, [fp, #-8]
1524:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3893              		.loc 1 1524 0
 3894 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3895 02f4 000053E3 		cmp	r3, #0
 3896 02f8 0500000A 		beq	.L245
1525:../CX3RDKOV5640.c ****     {
1526:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr2 Err = 0x%x", status);
 3897              		.loc 1 1526 0
 3898 02fc 0400A0E3 		mov	r0, #4
 3899 0300 08159FE5 		ldr	r1, .L263+104
 3900 0304 08201BE5 		ldr	r2, [fp, #-8]
 3901 0308 FEFFFFEB 		bl	CyU3PDebugPrint
1527:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3902              		.loc 1 1527 0
 3903 030c 08001BE5 		ldr	r0, [fp, #-8]
 3904 0310 FEFFFFEB 		bl	esUVCAppErrorHandler
 3905              	.L245:
1528:../CX3RDKOV5640.c ****     }
1529:../CX3RDKOV5640.c ****     /* String descriptor 3 */
1530:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 3, (uint8_t *)esUVCUSBConfigSSDscr);
 3906              		.loc 1 1530 0
 3907 0314 0500A0E3 		mov	r0, #5
 3908 0318 0310A0E3 		mov	r1, #3
 3909 031c F0249FE5 		ldr	r2, .L263+108
 3910 0320 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3911 0324 08000BE5 		str	r0, [fp, #-8]
1531:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3912              		.loc 1 1531 0
 3913 0328 08301BE5 		ldr	r3, [fp, #-8]
 3914 032c 000053E3 		cmp	r3, #0
 3915 0330 0500000A 		beq	.L246
1532:../CX3RDKOV5640.c ****     {
1533:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr3 Err = 0x%x", status);
 3916              		.loc 1 1533 0
 3917 0334 0400A0E3 		mov	r0, #4
 3918 0338 D8149FE5 		ldr	r1, .L263+112
 3919 033c 08201BE5 		ldr	r2, [fp, #-8]
 3920 0340 FEFFFFEB 		bl	CyU3PDebugPrint
1534:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3921              		.loc 1 1534 0
 3922 0344 08001BE5 		ldr	r0, [fp, #-8]
 3923 0348 FEFFFFEB 		bl	esUVCAppErrorHandler
 3924              	.L246:
1535:../CX3RDKOV5640.c ****     }
1536:../CX3RDKOV5640.c **** 
1537:../CX3RDKOV5640.c ****     /* String descriptor 4 */
1538:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 4, (uint8_t *)esUVCUSBConfigHSDscr);
 3925              		.loc 1 1538 0
 3926 034c 0500A0E3 		mov	r0, #5
 3927 0350 0410A0E3 		mov	r1, #4
 3928 0354 C0249FE5 		ldr	r2, .L263+116
 3929 0358 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3930 035c 08000BE5 		str	r0, [fp, #-8]
1539:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3931              		.loc 1 1539 0
 3932 0360 08301BE5 		ldr	r3, [fp, #-8]
 3933 0364 000053E3 		cmp	r3, #0
 3934 0368 0500000A 		beq	.L247
1540:../CX3RDKOV5640.c ****     {
1541:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr4 Err = 0x%x", status);
 3935              		.loc 1 1541 0
 3936 036c 0400A0E3 		mov	r0, #4
 3937 0370 A8149FE5 		ldr	r1, .L263+120
 3938 0374 08201BE5 		ldr	r2, [fp, #-8]
 3939 0378 FEFFFFEB 		bl	CyU3PDebugPrint
1542:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3940              		.loc 1 1542 0
 3941 037c 08001BE5 		ldr	r0, [fp, #-8]
 3942 0380 FEFFFFEB 		bl	esUVCAppErrorHandler
 3943              	.L247:
1543:../CX3RDKOV5640.c ****     }
1544:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1545:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 5, (uint8_t *)esUVCUSBConfigFSDscr);
 3944              		.loc 1 1545 0
 3945 0384 0500A0E3 		mov	r0, #5
 3946 0388 0510A0E3 		mov	r1, #5
 3947 038c 90249FE5 		ldr	r2, .L263+124
 3948 0390 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3949 0394 08000BE5 		str	r0, [fp, #-8]
1546:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3950              		.loc 1 1546 0
 3951 0398 08301BE5 		ldr	r3, [fp, #-8]
 3952 039c 000053E3 		cmp	r3, #0
 3953 03a0 0500000A 		beq	.L248
1547:../CX3RDKOV5640.c ****     {
1548:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr5 Err = 0x%x", status);
 3954              		.loc 1 1548 0
 3955 03a4 0400A0E3 		mov	r0, #4
 3956 03a8 78149FE5 		ldr	r1, .L263+128
 3957 03ac 08201BE5 		ldr	r2, [fp, #-8]
 3958 03b0 FEFFFFEB 		bl	CyU3PDebugPrint
1549:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3959              		.loc 1 1549 0
 3960 03b4 08001BE5 		ldr	r0, [fp, #-8]
 3961 03b8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3962              	.L248:
1550:../CX3RDKOV5640.c ****     }
1551:../CX3RDKOV5640.c **** 
1552:../CX3RDKOV5640.c ****     CyU3PUsbVBattEnable (CyTrue);
 3963              		.loc 1 1552 0
 3964 03bc 0100A0E3 		mov	r0, #1
 3965 03c0 FEFFFFEB 		bl	CyU3PUsbVBattEnable
1553:../CX3RDKOV5640.c ****     CyU3PUsbControlVBusDetect (CyFalse, CyTrue);
 3966              		.loc 1 1553 0
 3967 03c4 0000A0E3 		mov	r0, #0
 3968 03c8 0110A0E3 		mov	r1, #1
 3969 03cc FEFFFFEB 		bl	CyU3PUsbControlVBusDetect
1554:../CX3RDKOV5640.c **** 
1555:../CX3RDKOV5640.c ****     //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings 
1556:../CX3RDKOV5640.c ****     /* Setup Image Sensor */
1557:../CX3RDKOV5640.c **** 	//esOV5640_Base_Config();
1558:../CX3RDKOV5640.c **** 	 //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings fo
1559:../CX3RDKOV5640.c **** 	//esOV5640_Auto_Focus_Config();
1560:../CX3RDKOV5640.c **** 	//TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
1561:../CX3RDKOV5640.c **** 	//esCamera_Power_Down();
1562:../CX3RDKOV5640.c **** 
1563:../CX3RDKOV5640.c ****     /* Connect the USB pins and enable super speed operation */
1564:../CX3RDKOV5640.c ****     status = CyU3PConnectState(CyTrue, CyTrue);
 3970              		.loc 1 1564 0
 3971 03d0 0100A0E3 		mov	r0, #1
 3972 03d4 0110A0E3 		mov	r1, #1
 3973 03d8 FEFFFFEB 		bl	CyU3PConnectState
 3974 03dc 08000BE5 		str	r0, [fp, #-8]
1565:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3975              		.loc 1 1565 0
 3976 03e0 08301BE5 		ldr	r3, [fp, #-8]
 3977 03e4 000053E3 		cmp	r3, #0
 3978 03e8 0500000A 		beq	.L249
1566:../CX3RDKOV5640.c ****     {
1567:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:ConnectState Err = 0x%x", status);
 3979              		.loc 1 1567 0
 3980 03ec 0400A0E3 		mov	r0, #4
 3981 03f0 34149FE5 		ldr	r1, .L263+132
 3982 03f4 08201BE5 		ldr	r2, [fp, #-8]
 3983 03f8 FEFFFFEB 		bl	CyU3PDebugPrint
1568:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3984              		.loc 1 1568 0
 3985 03fc 08001BE5 		ldr	r0, [fp, #-8]
 3986 0400 FEFFFFEB 		bl	esUVCAppErrorHandler
 3987              	.L249:
1569:../CX3RDKOV5640.c ****     }
1570:../CX3RDKOV5640.c **** #ifdef VISDebug
1571:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "n\rAppInit:ConnectState");
1572:../CX3RDKOV5640.c **** #endif
1573:../CX3RDKOV5640.c ****     /* Since the status interrupt endpoint is not used in this application,
1574:../CX3RDKOV5640.c ****      * just enable the EP in the beginning. */
1575:../CX3RDKOV5640.c ****     /* Control status interrupt endpoint configuration */
1576:../CX3RDKOV5640.c ****     endPointConfig.enable = 1;
 3988              		.loc 1 1576 0
 3989 0404 0130A0E3 		mov	r3, #1
 3990 0408 14300BE5 		str	r3, [fp, #-20]
1577:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_INTR;
 3991              		.loc 1 1577 0
 3992 040c 0330A0E3 		mov	r3, #3
 3993 0410 10304BE5 		strb	r3, [fp, #-16]
1578:../CX3RDKOV5640.c ****     endPointConfig.pcktSize = 64;
 3994              		.loc 1 1578 0
 3995 0414 4030A0E3 		mov	r3, #64
 3996 0418 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1579:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 1;
 3997              		.loc 1 1579 0
 3998 041c 0130A0E3 		mov	r3, #1
 3999 0420 09304BE5 		strb	r3, [fp, #-9]
1580:../CX3RDKOV5640.c ****     endPointConfig.burstLen = 1;
 4000              		.loc 1 1580 0
 4001 0424 0130A0E3 		mov	r3, #1
 4002 0428 0A304BE5 		strb	r3, [fp, #-10]
1581:../CX3RDKOV5640.c **** 
1582:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_CONTROL_STATUS, &endPointConfig);
 4003              		.loc 1 1582 0
 4004 042c 14304BE2 		sub	r3, fp, #20
 4005 0430 8200A0E3 		mov	r0, #130
 4006 0434 0310A0E1 		mov	r1, r3
 4007 0438 FEFFFFEB 		bl	CyU3PSetEpConfig
 4008 043c 08000BE5 		str	r0, [fp, #-8]
1583:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4009              		.loc 1 1583 0
 4010 0440 08301BE5 		ldr	r3, [fp, #-8]
 4011 0444 000053E3 		cmp	r3, #0
 4012 0448 0500000A 		beq	.L250
1584:../CX3RDKOV5640.c ****     {
1585:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x", status);
 4013              		.loc 1 1585 0
 4014 044c 0400A0E3 		mov	r0, #4
 4015 0450 D8139FE5 		ldr	r1, .L263+136
 4016 0454 08201BE5 		ldr	r2, [fp, #-8]
 4017 0458 FEFFFFEB 		bl	CyU3PDebugPrint
1586:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4018              		.loc 1 1586 0
 4019 045c 08001BE5 		ldr	r0, [fp, #-8]
 4020 0460 FEFFFFEB 		bl	esUVCAppErrorHandler
 4021              	.L250:
1587:../CX3RDKOV5640.c ****     }
1588:../CX3RDKOV5640.c **** 
1589:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_CONTROL_STATUS);
 4022              		.loc 1 1589 0
 4023 0464 8200A0E3 		mov	r0, #130
 4024 0468 FEFFFFEB 		bl	CyU3PUsbFlushEp
1590:../CX3RDKOV5640.c **** 
1591:../CX3RDKOV5640.c ****     /* Setup the Bulk endpoint used for Video Streaming */
1592:../CX3RDKOV5640.c ****     endPointConfig.enable = CyTrue;
 4025              		.loc 1 1592 0
 4026 046c 0130A0E3 		mov	r3, #1
 4027 0470 14300BE5 		str	r3, [fp, #-20]
1593:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_BULK;
 4028              		.loc 1 1593 0
 4029 0474 0230A0E3 		mov	r3, #2
 4030 0478 10304BE5 		strb	r3, [fp, #-16]
1594:../CX3RDKOV5640.c **** 
1595:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 0;
 4031              		.loc 1 1595 0
 4032 047c 0030A0E3 		mov	r3, #0
 4033 0480 09304BE5 		strb	r3, [fp, #-9]
1596:../CX3RDKOV5640.c ****     endPointConfig.streams = 0;
 4034              		.loc 1 1596 0
 4035 0484 0030A0E3 		mov	r3, #0
 4036 0488 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1597:../CX3RDKOV5640.c **** 
1598:../CX3RDKOV5640.c ****     CyU3PThreadSleep(1000);
 4037              		.loc 1 1598 0
 4038 048c FA0FA0E3 		mov	r0, #1000
 4039 0490 FEFFFFEB 		bl	_tx_thread_sleep
1599:../CX3RDKOV5640.c **** 
1600:../CX3RDKOV5640.c ****     switch(CyU3PUsbGetSpeed())
 4040              		.loc 1 1600 0
 4041 0494 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 4042 0498 0030A0E1 		mov	r3, r0
 4043 049c 010053E3 		cmp	r3, #1
 4044 04a0 0F00000A 		beq	.L252
 4045 04a4 020053E3 		cmp	r3, #2
 4046 04a8 1200001A 		bne	.L262
1601:../CX3RDKOV5640.c ****     {
1602:../CX3RDKOV5640.c ****         case CY_U3P_HIGH_SPEED:
1603:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x200;
 4047              		.loc 1 1603 0
 4048 04ac 023CA0E3 		mov	r3, #512
 4049 04b0 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1604:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4050              		.loc 1 1604 0
 4051 04b4 0130A0E3 		mov	r3, #1
 4052 04b8 0A304BE5 		strb	r3, [fp, #-10]
1605:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_HS_STREAM_BUF_SIZE;
 4053              		.loc 1 1605 0
 4054 04bc 70339FE5 		ldr	r3, .L263+140
 4055 04c0 032BA0E3 		mov	r2, #3072
 4056 04c4 B020C3E1 		strh	r2, [r3]	@ movhi
1606:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_HS_DATA_BUF_SIZE;
 4057              		.loc 1 1606 0
 4058 04c8 68339FE5 		ldr	r3, .L263+144
 4059 04cc BF2EA0E3 		mov	r2, #3056
 4060 04d0 B020C3E1 		strh	r2, [r3]	@ movhi
1607:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_HS_STREAM_BUF_COUNT;
 4061              		.loc 1 1607 0
 4062 04d4 60339FE5 		ldr	r3, .L263+148
 4063 04d8 0820A0E3 		mov	r2, #8
 4064 04dc 0020C3E5 		strb	r2, [r3]
1608:../CX3RDKOV5640.c ****             break;
 4065              		.loc 1 1608 0
 4066 04e0 120000EA 		b	.L254
 4067              	.L252:
1609:../CX3RDKOV5640.c **** 
1610:../CX3RDKOV5640.c ****         case CY_U3P_FULL_SPEED:
1611:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x40;
 4068              		.loc 1 1611 0
 4069 04e4 4030A0E3 		mov	r3, #64
 4070 04e8 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1612:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4071              		.loc 1 1612 0
 4072 04ec 0130A0E3 		mov	r3, #1
 4073 04f0 0A304BE5 		strb	r3, [fp, #-10]
1613:../CX3RDKOV5640.c ****             break;
 4074              		.loc 1 1613 0
 4075 04f4 0D0000EA 		b	.L254
 4076              	.L262:
1614:../CX3RDKOV5640.c **** 
1615:../CX3RDKOV5640.c ****         case CY_U3P_SUPER_SPEED:
1616:../CX3RDKOV5640.c ****         default:
1617:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = ES_UVC_EP_BULK_VIDEO_PKT_SIZE;
 4077              		.loc 1 1617 0
 4078 04f8 013BA0E3 		mov	r3, #1024
 4079 04fc BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1618:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 16;
 4080              		.loc 1 1618 0
 4081 0500 1030A0E3 		mov	r3, #16
 4082 0504 0A304BE5 		strb	r3, [fp, #-10]
1619:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_SS_STREAM_BUF_SIZE;
 4083              		.loc 1 1619 0
 4084 0508 24339FE5 		ldr	r3, .L263+140
 4085 050c 062AA0E3 		mov	r2, #24576
 4086 0510 B020C3E1 		strh	r2, [r3]	@ movhi
1620:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_SS_DATA_BUF_SIZE;
 4087              		.loc 1 1620 0
 4088 0514 1C339FE5 		ldr	r3, .L263+144
 4089 0518 20239FE5 		ldr	r2, .L263+152
 4090 051c B020C3E1 		strh	r2, [r3]	@ movhi
1621:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_SS_STREAM_BUF_COUNT;
 4091              		.loc 1 1621 0
 4092 0520 14339FE5 		ldr	r3, .L263+148
 4093 0524 0420A0E3 		mov	r2, #4
 4094 0528 0020C3E5 		strb	r2, [r3]
1622:../CX3RDKOV5640.c ****             break;
 4095              		.loc 1 1622 0
 4096 052c 0000A0E1 		mov	r0, r0	@ nop
 4097              	.L254:
1623:../CX3RDKOV5640.c ****     }
1624:../CX3RDKOV5640.c **** 
1625:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_BULK_VIDEO, &endPointConfig);
 4098              		.loc 1 1625 0
 4099 0530 14304BE2 		sub	r3, fp, #20
 4100 0534 8300A0E3 		mov	r0, #131
 4101 0538 0310A0E1 		mov	r1, r3
 4102 053c FEFFFFEB 		bl	CyU3PSetEpConfig
 4103 0540 08000BE5 		str	r0, [fp, #-8]
1626:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4104              		.loc 1 1626 0
 4105 0544 08301BE5 		ldr	r3, [fp, #-8]
 4106 0548 000053E3 		cmp	r3, #0
 4107 054c 0500000A 		beq	.L255
1627:../CX3RDKOV5640.c ****     {
1628:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp Err = 0x%x", status);
 4108              		.loc 1 1628 0
 4109 0550 0400A0E3 		mov	r0, #4
 4110 0554 E8129FE5 		ldr	r1, .L263+156
 4111 0558 08201BE5 		ldr	r2, [fp, #-8]
 4112 055c FEFFFFEB 		bl	CyU3PDebugPrint
1629:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4113              		.loc 1 1629 0
 4114 0560 08001BE5 		ldr	r0, [fp, #-8]
 4115 0564 FEFFFFEB 		bl	esUVCAppErrorHandler
 4116              	.L255:
1630:../CX3RDKOV5640.c ****     }
1631:../CX3RDKOV5640.c **** #ifdef VISDebug
1632:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp");
1633:../CX3RDKOV5640.c **** #endif
1634:../CX3RDKOV5640.c ****     CyU3PUsbEPSetBurstMode (ES_UVC_EP_BULK_VIDEO, CyTrue);
 4117              		.loc 1 1634 0
 4118 0568 8300A0E3 		mov	r0, #131
 4119 056c 0110A0E3 		mov	r1, #1
 4120 0570 FEFFFFEB 		bl	CyU3PUsbEPSetBurstMode
1635:../CX3RDKOV5640.c **** 
1636:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
1637:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 4121              		.loc 1 1637 0
 4122 0574 8300A0E3 		mov	r0, #131
 4123 0578 FEFFFFEB 		bl	CyU3PUsbFlushEp
1638:../CX3RDKOV5640.c **** 
1639:../CX3RDKOV5640.c ****     /* Create a DMA Manual OUT channel for streaming data */
1640:../CX3RDKOV5640.c ****     /* Video streaming Channel is not active till a stream request is received */
1641:../CX3RDKOV5640.c ****     dmaCfg.size                 = ES_UVC_STREAM_BUF_SIZE;
 4124              		.loc 1 1641 0
 4125 057c B0329FE5 		ldr	r3, .L263+140
 4126 0580 B030D3E1 		ldrh	r3, [r3]
 4127 0584 BC334BE1 		strh	r3, [fp, #-60]	@ movhi
1642:../CX3RDKOV5640.c ****     dmaCfg.count                = ES_UVC_STREAM_BUF_COUNT;
 4128              		.loc 1 1642 0
 4129 0588 AC329FE5 		ldr	r3, .L263+148
 4130 058c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4131 0590 BA334BE1 		strh	r3, [fp, #-58]	@ movhi
1643:../CX3RDKOV5640.c ****     dmaCfg.validSckCount        = 2;
 4132              		.loc 1 1643 0
 4133 0594 0230A0E3 		mov	r3, #2
 4134 0598 B8334BE1 		strh	r3, [fp, #-56]	@ movhi
1644:../CX3RDKOV5640.c **** 
1645:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[0]         = ES_UVC_PRODUCER_PPORT_SOCKET_0;
 4135              		.loc 1 1645 0
 4136 059c 013CA0E3 		mov	r3, #256
 4137 05a0 B6334BE1 		strh	r3, [fp, #-54]	@ movhi
1646:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[1]         = ES_UVC_PRODUCER_PPORT_SOCKET_1;
 4138              		.loc 1 1646 0
 4139 05a4 9C329FE5 		ldr	r3, .L263+160
 4140 05a8 B4334BE1 		strh	r3, [fp, #-52]	@ movhi
1647:../CX3RDKOV5640.c **** 
1648:../CX3RDKOV5640.c ****     dmaCfg.consSckId[0]         = ES_UVC_EP_VIDEO_CONS_SOCKET;
 4141              		.loc 1 1648 0
 4142 05ac 98329FE5 		ldr	r3, .L263+164
 4143 05b0 BE324BE1 		strh	r3, [fp, #-46]	@ movhi
1649:../CX3RDKOV5640.c ****     dmaCfg.dmaMode              = CY_U3P_DMA_MODE_BYTE;
 4144              		.loc 1 1649 0
 4145 05b4 0030A0E3 		mov	r3, #0
 4146 05b8 1E304BE5 		strb	r3, [fp, #-30]
1650:../CX3RDKOV5640.c ****     dmaCfg.notification         = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
 4147              		.loc 1 1650 0
 4148 05bc 1830A0E3 		mov	r3, #24
 4149 05c0 1C300BE5 		str	r3, [fp, #-28]
1651:../CX3RDKOV5640.c ****     dmaCfg.cb                   = esUVCUvcAppDmaCallback;
 4150              		.loc 1 1651 0
 4151 05c4 84329FE5 		ldr	r3, .L263+168
 4152 05c8 18300BE5 		str	r3, [fp, #-24]
1652:../CX3RDKOV5640.c ****     dmaCfg.prodHeader           = ES_UVC_PROD_HEADER;
 4153              		.loc 1 1652 0
 4154 05cc 0C30A0E3 		mov	r3, #12
 4155 05d0 B4324BE1 		strh	r3, [fp, #-36]	@ movhi
1653:../CX3RDKOV5640.c ****     dmaCfg.prodFooter           = ES_UVC_PROD_FOOTER;
 4156              		.loc 1 1653 0
 4157 05d4 0430A0E3 		mov	r3, #4
 4158 05d8 B2324BE1 		strh	r3, [fp, #-34]	@ movhi
1654:../CX3RDKOV5640.c ****     dmaCfg.consHeader           = 0;
 4159              		.loc 1 1654 0
 4160 05dc 0030A0E3 		mov	r3, #0
 4161 05e0 B0324BE1 		strh	r3, [fp, #-32]	@ movhi
1655:../CX3RDKOV5640.c ****     dmaCfg.prodAvailCount       = 0;
 4162              		.loc 1 1655 0
 4163 05e4 0030A0E3 		mov	r3, #0
 4164 05e8 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
1656:../CX3RDKOV5640.c **** 
1657:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE ,
 4165              		.loc 1 1657 0
 4166 05ec 3C304BE2 		sub	r3, fp, #60
 4167 05f0 5C029FE5 		ldr	r0, .L263+172
 4168 05f4 0710A0E3 		mov	r1, #7
 4169 05f8 0320A0E1 		mov	r2, r3
 4170 05fc FEFFFFEB 		bl	CyU3PDmaMultiChannelCreate
 4171 0600 08000BE5 		str	r0, [fp, #-8]
1658:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4172              		.loc 1 1658 0
 4173 0604 08301BE5 		ldr	r3, [fp, #-8]
 4174 0608 000053E3 		cmp	r3, #0
 4175 060c 0300000A 		beq	.L256
1659:../CX3RDKOV5640.c ****     {
1660:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:DmaMultiChannelCreate Err = 0x%x", status);
 4176              		.loc 1 1660 0
 4177 0610 0400A0E3 		mov	r0, #4
 4178 0614 3C129FE5 		ldr	r1, .L263+176
 4179 0618 08201BE5 		ldr	r2, [fp, #-8]
 4180 061c FEFFFFEB 		bl	CyU3PDebugPrint
 4181              	.L256:
1661:../CX3RDKOV5640.c ****     }
1662:../CX3RDKOV5640.c ****     CyU3PThreadSleep(100);
 4182              		.loc 1 1662 0
 4183 0620 6400A0E3 		mov	r0, #100
 4184 0624 FEFFFFEB 		bl	_tx_thread_sleep
1663:../CX3RDKOV5640.c **** 
1664:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set
1665:../CX3RDKOV5640.c ****        DSCR_SIZE field in DSCR memory */
1666:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);  //-TODO the glChHandleUVCStream
 4185              		.loc 1 1666 0
 4186 0628 24029FE5 		ldr	r0, .L263+172
 4187 062c FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 4188 0630 08000BE5 		str	r0, [fp, #-8]
1667:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4189              		.loc 1 1667 0
 4190 0634 08301BE5 		ldr	r3, [fp, #-8]
 4191 0638 000053E3 		cmp	r3, #0
 4192 063c 0300000A 		beq	.L257
1668:../CX3RDKOV5640.c ****     {
1669:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAppInit:MultiChannelReset Err = 0x%x", status);
 4193              		.loc 1 1669 0
 4194 0640 0400A0E3 		mov	r0, #4
 4195 0644 10129FE5 		ldr	r1, .L263+180
 4196 0648 08201BE5 		ldr	r2, [fp, #-8]
 4197 064c FEFFFFEB 		bl	CyU3PDebugPrint
 4198              	.L257:
1670:../CX3RDKOV5640.c ****     }
1671:../CX3RDKOV5640.c **** #ifdef VISDebug
1672:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MultiChannelReset");
1673:../CX3RDKOV5640.c **** #endif
1674:../CX3RDKOV5640.c ****     /* Configure the Fixed Function GPIF on the CX3 to use a 16 bit bus, and
1675:../CX3RDKOV5640.c ****      * a DMA Buffer of size CX3_UVC_DATA_BUF_SIZE
1676:../CX3RDKOV5640.c ****      */
1677:../CX3RDKOV5640.c ****     status = CyU3PMipicsiGpifLoad(CY_U3P_MIPICSI_BUS_16, ES_UVC_DATA_BUF_SIZE);
 4199              		.loc 1 1677 0
 4200 0650 E0319FE5 		ldr	r3, .L263+144
 4201 0654 B030D3E1 		ldrh	r3, [r3]
 4202 0658 0100A0E3 		mov	r0, #1
 4203 065c 0310A0E1 		mov	r1, r3
 4204 0660 FEFFFFEB 		bl	CyU3PMipicsiGpifLoad
 4205 0664 08000BE5 		str	r0, [fp, #-8]
1678:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4206              		.loc 1 1678 0
 4207 0668 08301BE5 		ldr	r3, [fp, #-8]
 4208 066c 000053E3 		cmp	r3, #0
 4209 0670 0500000A 		beq	.L258
1679:../CX3RDKOV5640.c ****     {
1680:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad Err = 0x%x", status);
 4210              		.loc 1 1680 0
 4211 0674 0400A0E3 		mov	r0, #4
 4212 0678 E0119FE5 		ldr	r1, .L263+184
 4213 067c 08201BE5 		ldr	r2, [fp, #-8]
 4214 0680 FEFFFFEB 		bl	CyU3PDebugPrint
1681:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4215              		.loc 1 1681 0
 4216 0684 08001BE5 		ldr	r0, [fp, #-8]
 4217 0688 FEFFFFEB 		bl	esUVCAppErrorHandler
 4218              	.L258:
1682:../CX3RDKOV5640.c ****     }
1683:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4219              		.loc 1 1683 0
 4220 068c 3200A0E3 		mov	r0, #50
 4221 0690 FEFFFFEB 		bl	_tx_thread_sleep
1684:../CX3RDKOV5640.c **** #ifdef VISDebug
1685:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad");
1686:../CX3RDKOV5640.c **** #endif
1687:../CX3RDKOV5640.c ****     CyU3PGpifRegisterCallback(esUVCGpifCB);
 4222              		.loc 1 1687 0
 4223 0694 C8019FE5 		ldr	r0, .L263+188
 4224 0698 FEFFFFEB 		bl	CyU3PGpifRegisterCallback
1688:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4225              		.loc 1 1688 0
 4226 069c 3200A0E3 		mov	r0, #50
 4227 06a0 FEFFFFEB 		bl	_tx_thread_sleep
1689:../CX3RDKOV5640.c **** 
1690:../CX3RDKOV5640.c ****     /* Start the state machine. */
1691:../CX3RDKOV5640.c ****     status = CyU3PGpifSMStart (CX3_START_SCK0, ALPHA_CX3_START_SCK0);
 4228              		.loc 1 1691 0
 4229 06a4 0000A0E3 		mov	r0, #0
 4230 06a8 0010A0E3 		mov	r1, #0
 4231 06ac FEFFFFEB 		bl	CyU3PGpifSMStart
 4232 06b0 08000BE5 		str	r0, [fp, #-8]
1692:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4233              		.loc 1 1692 0
 4234 06b4 08301BE5 		ldr	r3, [fp, #-8]
 4235 06b8 000053E3 		cmp	r3, #0
 4236 06bc 0500000A 		beq	.L259
1693:../CX3RDKOV5640.c ****     {
1694:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart Err = 0x%x", status);
 4237              		.loc 1 1694 0
 4238 06c0 0400A0E3 		mov	r0, #4
 4239 06c4 9C119FE5 		ldr	r1, .L263+192
 4240 06c8 08201BE5 		ldr	r2, [fp, #-8]
 4241 06cc FEFFFFEB 		bl	CyU3PDebugPrint
1695:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4242              		.loc 1 1695 0
 4243 06d0 08001BE5 		ldr	r0, [fp, #-8]
 4244 06d4 FEFFFFEB 		bl	esUVCAppErrorHandler
 4245              	.L259:
1696:../CX3RDKOV5640.c ****     }
1697:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4246              		.loc 1 1697 0
 4247 06d8 3200A0E3 		mov	r0, #50
 4248 06dc FEFFFFEB 		bl	_tx_thread_sleep
1698:../CX3RDKOV5640.c **** #ifdef VISDebug
1699:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart");
1700:../CX3RDKOV5640.c **** #endif
1701:../CX3RDKOV5640.c ****     /* Pause the GPIF*/
1702:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 4249              		.loc 1 1702 0
 4250 06e0 0100A0E3 		mov	r0, #1
 4251 06e4 FEFFFFEB 		bl	CyU3PGpifSMControl
1703:../CX3RDKOV5640.c **** 
1704:../CX3RDKOV5640.c ****     /* Initialize the MIPI block */
1705:../CX3RDKOV5640.c ****     status =  CyU3PMipicsiInit();
 4252              		.loc 1 1705 0
 4253 06e8 FEFFFFEB 		bl	CyU3PMipicsiInit
 4254 06ec 08000BE5 		str	r0, [fp, #-8]
1706:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4255              		.loc 1 1706 0
 4256 06f0 08301BE5 		ldr	r3, [fp, #-8]
 4257 06f4 000053E3 		cmp	r3, #0
 4258 06f8 0500000A 		beq	.L260
1707:../CX3RDKOV5640.c ****     {
1708:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit Err = 0x%x", status);
 4259              		.loc 1 1708 0
 4260 06fc 0400A0E3 		mov	r0, #4
 4261 0700 64119FE5 		ldr	r1, .L263+196
 4262 0704 08201BE5 		ldr	r2, [fp, #-8]
 4263 0708 FEFFFFEB 		bl	CyU3PDebugPrint
1709:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4264              		.loc 1 1709 0
 4265 070c 08001BE5 		ldr	r0, [fp, #-8]
 4266 0710 FEFFFFEB 		bl	esUVCAppErrorHandler
 4267              	.L260:
1710:../CX3RDKOV5640.c ****     }
1711:../CX3RDKOV5640.c **** #ifdef VISDebug
1712:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit");
1713:../CX3RDKOV5640.c **** #endif
1714:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSetIntfParams(&cfgUvcVgaNoMclk, CyFalse);
 4268              		.loc 1 1714 0
 4269 0714 54019FE5 		ldr	r0, .L263+200
 4270 0718 0010A0E3 		mov	r1, #0
 4271 071c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 4272 0720 08000BE5 		str	r0, [fp, #-8]
1715:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4273              		.loc 1 1715 0
 4274 0724 08301BE5 		ldr	r3, [fp, #-8]
 4275 0728 000053E3 		cmp	r3, #0
 4276 072c 0500000A 		beq	.L261
1716:../CX3RDKOV5640.c ****     {
1717:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams Err = 0x%x",status);
 4277              		.loc 1 1717 0
 4278 0730 0400A0E3 		mov	r0, #4
 4279 0734 38119FE5 		ldr	r1, .L263+204
 4280 0738 08201BE5 		ldr	r2, [fp, #-8]
 4281 073c FEFFFFEB 		bl	CyU3PDebugPrint
1718:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4282              		.loc 1 1718 0
 4283 0740 08001BE5 		ldr	r0, [fp, #-8]
 4284 0744 FEFFFFEB 		bl	esUVCAppErrorHandler
 4285              	.L261:
1719:../CX3RDKOV5640.c ****     }
1720:../CX3RDKOV5640.c **** #ifdef VISDebug
1721:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams");
1722:../CX3RDKOV5640.c **** #endif
1723:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1724:../CX3RDKOV5640.c ****     CyU3PTimerCreate (&UvcTimer, UvcAppProgressTimer, 0x00, TIMER_PERIOD, 0, CYU3P_NO_ACTIVATE);
 4286              		.loc 1 1724 0
 4287 0748 7D3FA0E3 		mov	r3, #500
 4288 074c 00308DE5 		str	r3, [sp]
 4289 0750 0030A0E3 		mov	r3, #0
 4290 0754 04308DE5 		str	r3, [sp, #4]
 4291 0758 0030A0E3 		mov	r3, #0
 4292 075c 08308DE5 		str	r3, [sp, #8]
 4293 0760 2C30A0E3 		mov	r3, #44
 4294 0764 0C308DE5 		str	r3, [sp, #12]
 4295 0768 08019FE5 		ldr	r0, .L263+208
 4296 076c 0010A0E3 		mov	r1, #0
 4297 0770 04219FE5 		ldr	r2, .L263+212
 4298 0774 0030A0E3 		mov	r3, #0
 4299 0778 FEFFFFEB 		bl	_txe_timer_create
1725:../CX3RDKOV5640.c **** #endif
1726:../CX3RDKOV5640.c **** 
1727:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rFirmware Version: %d.%d.%d.%d",MajorVersion,MinorVersion,SubVersion,Su
 4300              		.loc 1 1727 0
 4301 077c 8530A0E3 		mov	r3, #133
 4302 0780 00308DE5 		str	r3, [sp]
 4303 0784 F4309FE5 		ldr	r3, .L263+216
 4304 0788 04308DE5 		str	r3, [sp, #4]
 4305 078c 0400A0E3 		mov	r0, #4
 4306 0790 EC109FE5 		ldr	r1, .L263+220
 4307 0794 0120A0E3 		mov	r2, #1
 4308 0798 0330A0E3 		mov	r3, #3
 4309 079c FEFFFFEB 		bl	CyU3PDebugPrint
1728:../CX3RDKOV5640.c **** }
 4310              		.loc 1 1728 0
 4311 07a0 04D04BE2 		sub	sp, fp, #4
 4312              		@ sp needed
 4313 07a4 0088BDE8 		ldmfd	sp!, {fp, pc}
 4314              	.L264:
 4315              		.align	2
 4316              	.L263:
 4317 07a8 C8020000 		.word	.LC19
 4318 07ac E8020000 		.word	.LC20
 4319 07b0 08030000 		.word	.LC21
 4320 07b4 28030000 		.word	.LC22
 4321 07b8 00000000 		.word	esUVCUvcApplnUSBSetupCB
 4322 07bc 00000000 		.word	esUVCUvcApplnUSBEventCB
 4323 07c0 00000000 		.word	esUVCApplnLPMRqtCB
 4324 07c4 00000000 		.word	esUVCUSB30DeviceDscr
 4325 07c8 48030000 		.word	.LC23
 4326 07cc 00000000 		.word	esUVCUSB20DeviceDscr
 4327 07d0 70030000 		.word	.LC24
 4328 07d4 00000000 		.word	esUVCUSBBOSDscr
 4329 07d8 98030000 		.word	.LC25
 4330 07dc 00000000 		.word	esUVCUSBDeviceQualDscr
 4331 07e0 BC030000 		.word	.LC26
 4332 07e4 00000000 		.word	esUVCUSBSSConfigDscr
 4333 07e8 E4030000 		.word	.LC27
 4334 07ec 00000000 		.word	esUVCUSBHSConfigDscr
 4335 07f0 0C040000 		.word	.LC28
 4336 07f4 00000000 		.word	esUVCUSBFSConfigDscr
 4337 07f8 34040000 		.word	.LC29
 4338 07fc 00000000 		.word	esUVCUSBStringLangIDDscr
 4339 0800 5C040000 		.word	.LC30
 4340 0804 00000000 		.word	esUVCUSBManufactureDscr
 4341 0808 84040000 		.word	.LC31
 4342 080c 00000000 		.word	esUVCUSBProductDscr
 4343 0810 AC040000 		.word	.LC32
 4344 0814 00000000 		.word	esUVCUSBConfigSSDscr
 4345 0818 D4040000 		.word	.LC33
 4346 081c 00000000 		.word	esUVCUSBConfigHSDscr
 4347 0820 FC040000 		.word	.LC34
 4348 0824 00000000 		.word	esUVCUSBConfigFSDscr
 4349 0828 24050000 		.word	.LC35
 4350 082c 4C050000 		.word	.LC36
 4351 0830 70050000 		.word	.LC37
 4352 0834 00000000 		.word	ES_UVC_STREAM_BUF_SIZE
 4353 0838 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 4354 083c 00000000 		.word	ES_UVC_STREAM_BUF_COUNT
 4355 0840 F05F0000 		.word	24560
 4356 0844 A0050000 		.word	.LC38
 4357 0848 01010000 		.word	257
 4358 084c 03030000 		.word	771
 4359 0850 00000000 		.word	esUVCUvcAppDmaCallback
 4360 0854 00000000 		.word	glChHandleUVCStream
 4361 0858 D0050000 		.word	.LC39
 4362 085c FC050000 		.word	.LC40
 4363 0860 24060000 		.word	.LC41
 4364 0864 00000000 		.word	esUVCGpifCB
 4365 0868 4C060000 		.word	.LC42
 4366 086c 70060000 		.word	.LC43
 4367 0870 00000000 		.word	cfgUvcVgaNoMclk
 4368 0874 94060000 		.word	.LC44
 4369 0878 00000000 		.word	UvcTimer
 4370 087c 00000000 		.word	UvcAppProgressTimer
 4371 0880 35010000 		.word	309
 4372 0884 C0060000 		.word	.LC45
 4373              		.cfi_endproc
 4374              	.LFE11:
 4376              		.section	.rodata
 4377              		.align	2
 4378              	.LC46:
 4379 06e0 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartInit failed"
 4379      55564355 
 4379      76634170 
 4379      706C6E44 
 4379      65627567 
 4380 070d 20457272 		.ascii	" Error = 0x%x\000"
 4380      6F72203D 
 4380      20307825 
 4380      7800
 4381 071b 00       		.align	2
 4382              	.LC47:
 4383 071c 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartSetConfig f"
 4383      55564355 
 4383      76634170 
 4383      706C6E44 
 4383      65627567 
 4384 0749 61696C65 		.ascii	"ailed Error = 0x%x\000"
 4384      64204572 
 4384      726F7220 
 4384      3D203078 
 4384      257800
 4385              		.align	2
 4386              	.LC48:
 4387 075c 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartTxSetBlockX"
 4387      55564355 
 4387      76634170 
 4387      706C6E44 
 4387      65627567 
 4388 0789 66657220 		.ascii	"fer failed Error = 0x%x\000"
 4388      6661696C 
 4388      65642045 
 4388      72726F72 
 4388      203D2030 
 4389 07a1 000000   		.align	2
 4390              	.LC49:
 4391 07a4 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PDebugInit faile"
 4391      55564355 
 4391      76634170 
 4391      706C6E44 
 4391      65627567 
 4392 07d1 64204572 		.ascii	"d Error = 0x%x\000"
 4392      726F7220 
 4392      3D203078 
 4392      257800
 4393              		.section	.text.esUVCUvcApplnDebugInit,"ax",%progbits
 4394              		.align	2
 4395              		.global	esUVCUvcApplnDebugInit
 4397              	esUVCUvcApplnDebugInit:
 4398              	.LFB12:
1729:../CX3RDKOV5640.c **** 
1730:../CX3RDKOV5640.c **** /* This function initializes the debug module for the UVC application */
1731:../CX3RDKOV5640.c ****     void
1732:../CX3RDKOV5640.c **** esUVCUvcApplnDebugInit (void)
1733:../CX3RDKOV5640.c **** {
 4399              		.loc 1 1733 0
 4400              		.cfi_startproc
 4401              		@ args = 0, pretend = 0, frame = 32
 4402              		@ frame_needed = 1, uses_anonymous_args = 0
 4403 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4404              	.LCFI24:
 4405              		.cfi_def_cfa_offset 8
 4406              		.cfi_offset 11, -8
 4407              		.cfi_offset 14, -4
 4408 0004 04B08DE2 		add	fp, sp, #4
 4409              	.LCFI25:
 4410              		.cfi_def_cfa 11, 4
 4411 0008 20D04DE2 		sub	sp, sp, #32
1734:../CX3RDKOV5640.c ****     CyU3PUartConfig_t uartConfig;
1735:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4412              		.loc 1 1735 0
 4413 000c 0030A0E3 		mov	r3, #0
 4414 0010 08300BE5 		str	r3, [fp, #-8]
1736:../CX3RDKOV5640.c **** 
1737:../CX3RDKOV5640.c ****     /* Initialize the UART for printing debug messages */
1738:../CX3RDKOV5640.c ****     status = CyU3PUartInit();
 4415              		.loc 1 1738 0
 4416 0014 FEFFFFEB 		bl	CyU3PUartInit
 4417 0018 08000BE5 		str	r0, [fp, #-8]
1739:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4418              		.loc 1 1739 0
 4419 001c 08301BE5 		ldr	r3, [fp, #-8]
 4420 0020 000053E3 		cmp	r3, #0
 4421 0024 0300000A 		beq	.L266
1740:../CX3RDKOV5640.c ****     {
1741:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartInit failed Error = 0x%x",status);
 4422              		.loc 1 1741 0
 4423 0028 0400A0E3 		mov	r0, #4
 4424 002c D0109FE5 		ldr	r1, .L270
 4425 0030 08201BE5 		ldr	r2, [fp, #-8]
 4426 0034 FEFFFFEB 		bl	CyU3PDebugPrint
 4427              	.L266:
1742:../CX3RDKOV5640.c ****     }
1743:../CX3RDKOV5640.c **** 
1744:../CX3RDKOV5640.c ****     /* Set UART Configuration */
1745:../CX3RDKOV5640.c ****     uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 4428              		.loc 1 1745 0
 4429 0038 C8309FE5 		ldr	r3, .L270+4
 4430 003c 10300BE5 		str	r3, [fp, #-16]
1746:../CX3RDKOV5640.c ****     uartConfig.stopBit = CY_U3P_UART_ONE_STOP_BIT;
 4431              		.loc 1 1746 0
 4432 0040 0130A0E3 		mov	r3, #1
 4433 0044 0C304BE5 		strb	r3, [fp, #-12]
1747:../CX3RDKOV5640.c ****     uartConfig.parity = CY_U3P_UART_NO_PARITY;
 4434              		.loc 1 1747 0
 4435 0048 0030A0E3 		mov	r3, #0
 4436 004c 0B304BE5 		strb	r3, [fp, #-11]
1748:../CX3RDKOV5640.c ****     uartConfig.txEnable = CyTrue;
 4437              		.loc 1 1748 0
 4438 0050 0130A0E3 		mov	r3, #1
 4439 0054 20300BE5 		str	r3, [fp, #-32]
1749:../CX3RDKOV5640.c ****     uartConfig.rxEnable = CyFalse;
 4440              		.loc 1 1749 0
 4441 0058 0030A0E3 		mov	r3, #0
 4442 005c 1C300BE5 		str	r3, [fp, #-28]
1750:../CX3RDKOV5640.c ****     uartConfig.flowCtrl = CyFalse;
 4443              		.loc 1 1750 0
 4444 0060 0030A0E3 		mov	r3, #0
 4445 0064 18300BE5 		str	r3, [fp, #-24]
1751:../CX3RDKOV5640.c ****     uartConfig.isDma = CyTrue;
 4446              		.loc 1 1751 0
 4447 0068 0130A0E3 		mov	r3, #1
 4448 006c 14300BE5 		str	r3, [fp, #-20]
1752:../CX3RDKOV5640.c **** 
1753:../CX3RDKOV5640.c ****     /* Set the UART configuration */
1754:../CX3RDKOV5640.c ****     status = CyU3PUartSetConfig (&uartConfig, NULL);
 4449              		.loc 1 1754 0
 4450 0070 20304BE2 		sub	r3, fp, #32
 4451 0074 0300A0E1 		mov	r0, r3
 4452 0078 0010A0E3 		mov	r1, #0
 4453 007c FEFFFFEB 		bl	CyU3PUartSetConfig
 4454 0080 08000BE5 		str	r0, [fp, #-8]
1755:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4455              		.loc 1 1755 0
 4456 0084 08301BE5 		ldr	r3, [fp, #-8]
 4457 0088 000053E3 		cmp	r3, #0
 4458 008c 0300000A 		beq	.L267
1756:../CX3RDKOV5640.c ****     {
1757:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartSetConfig failed Error = 0x%x",sta
 4459              		.loc 1 1757 0
 4460 0090 0400A0E3 		mov	r0, #4
 4461 0094 70109FE5 		ldr	r1, .L270+8
 4462 0098 08201BE5 		ldr	r2, [fp, #-8]
 4463 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4464              	.L267:
1758:../CX3RDKOV5640.c ****     }
1759:../CX3RDKOV5640.c **** 
1760:../CX3RDKOV5640.c ****     /* Set the UART transfer */
1761:../CX3RDKOV5640.c ****     status = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
 4465              		.loc 1 1761 0
 4466 00a0 0000E0E3 		mvn	r0, #0
 4467 00a4 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 4468 00a8 08000BE5 		str	r0, [fp, #-8]
1762:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4469              		.loc 1 1762 0
 4470 00ac 08301BE5 		ldr	r3, [fp, #-8]
 4471 00b0 000053E3 		cmp	r3, #0
 4472 00b4 0300000A 		beq	.L268
1763:../CX3RDKOV5640.c ****     {
1764:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartTxSetBlockXfer failed Error = 0x%x
 4473              		.loc 1 1764 0
 4474 00b8 0400A0E3 		mov	r0, #4
 4475 00bc 4C109FE5 		ldr	r1, .L270+12
 4476 00c0 08201BE5 		ldr	r2, [fp, #-8]
 4477 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4478              	.L268:
1765:../CX3RDKOV5640.c ****     }
1766:../CX3RDKOV5640.c **** 
1767:../CX3RDKOV5640.c ****     /* Initialize the debug application */
1768:../CX3RDKOV5640.c ****     status = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 8);
 4479              		.loc 1 1768 0
 4480 00c8 0300A0E3 		mov	r0, #3
 4481 00cc 0810A0E3 		mov	r1, #8
 4482 00d0 FEFFFFEB 		bl	CyU3PDebugInit
 4483 00d4 08000BE5 		str	r0, [fp, #-8]
1769:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4484              		.loc 1 1769 0
 4485 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4486 00dc 000053E3 		cmp	r3, #0
 4487 00e0 0300000A 		beq	.L269
1770:../CX3RDKOV5640.c ****     {
1771:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PDebugInit failed Error = 0x%x",status)
 4488              		.loc 1 1771 0
 4489 00e4 0400A0E3 		mov	r0, #4
 4490 00e8 24109FE5 		ldr	r1, .L270+16
 4491 00ec 08201BE5 		ldr	r2, [fp, #-8]
 4492 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
 4493              	.L269:
1772:../CX3RDKOV5640.c ****     }
1773:../CX3RDKOV5640.c ****     CyU3PDebugPreamble (CyFalse);
 4494              		.loc 1 1773 0
 4495 00f4 0000A0E3 		mov	r0, #0
 4496 00f8 FEFFFFEB 		bl	CyU3PDebugPreamble
1774:../CX3RDKOV5640.c **** 
1775:../CX3RDKOV5640.c **** }
 4497              		.loc 1 1775 0
 4498 00fc 04D04BE2 		sub	sp, fp, #4
 4499              		@ sp needed
 4500 0100 0088BDE8 		ldmfd	sp!, {fp, pc}
 4501              	.L271:
 4502              		.align	2
 4503              	.L270:
 4504 0104 E0060000 		.word	.LC46
 4505 0108 00C20100 		.word	115200
 4506 010c 1C070000 		.word	.LC47
 4507 0110 5C070000 		.word	.LC48
 4508 0114 A4070000 		.word	.LC49
 4509              		.cfi_endproc
 4510              	.LFE12:
 4512              		.section	.text.esUVCUvcAppThread_Entry,"ax",%progbits
 4513              		.align	2
 4514              		.global	esUVCUvcAppThread_Entry
 4516              	esUVCUvcAppThread_Entry:
 4517              	.LFB13:
1776:../CX3RDKOV5640.c **** 
1777:../CX3RDKOV5640.c **** /* Entry function for the UVC application thread. */
1778:../CX3RDKOV5640.c ****     void
1779:../CX3RDKOV5640.c **** esUVCUvcAppThread_Entry (
1780:../CX3RDKOV5640.c ****         uint32_t input)
1781:../CX3RDKOV5640.c **** {
 4518              		.loc 1 1781 0
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 16
 4521              		@ frame_needed = 1, uses_anonymous_args = 0
 4522 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4523              	.LCFI26:
 4524              		.cfi_def_cfa_offset 8
 4525              		.cfi_offset 11, -8
 4526              		.cfi_offset 14, -4
 4527 0004 04B08DE2 		add	fp, sp, #4
 4528              	.LCFI27:
 4529              		.cfi_def_cfa 11, 4
 4530 0008 18D04DE2 		sub	sp, sp, #24
 4531 000c 10000BE5 		str	r0, [fp, #-16]
1782:../CX3RDKOV5640.c ****     uint16_t wakeReason;
1783:../CX3RDKOV5640.c ****     uint32_t eventFlag;
1784:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status;
1785:../CX3RDKOV5640.c **** 
1786:../CX3RDKOV5640.c ****     /* Initialize the Debug Module */
1787:../CX3RDKOV5640.c ****     esUVCUvcApplnDebugInit();
 4532              		.loc 1 1787 0
 4533 0010 FEFFFFEB 		bl	esUVCUvcApplnDebugInit
1788:../CX3RDKOV5640.c **** 
1789:../CX3RDKOV5640.c ****     /* Initialize the UVC Application */
1790:../CX3RDKOV5640.c ****     esUVCUvcApplnInit();
 4534              		.loc 1 1790 0
 4535 0014 FEFFFFEB 		bl	esUVCUvcApplnInit
 4536              	.L278:
1791:../CX3RDKOV5640.c **** 
1792:../CX3RDKOV5640.c ****     for (;;)
1793:../CX3RDKOV5640.c ****     {
1794:../CX3RDKOV5640.c ****         CyU3PEventGet (&glTimerEvent,ES_USB_SUSP_EVENT_FLAG|ES_TIMER_RESET_EVENT, CYU3P_EVENT_OR_CL
 4537              		.loc 1 1794 0
 4538 0018 08304BE2 		sub	r3, fp, #8
 4539 001c 0020E0E3 		mvn	r2, #0
 4540 0020 00208DE5 		str	r2, [sp]
 4541 0024 A0009FE5 		ldr	r0, .L280
 4542 0028 3010A0E3 		mov	r1, #48
 4543 002c 0120A0E3 		mov	r2, #1
 4544 0030 FEFFFFEB 		bl	_txe_event_flags_get
1795:../CX3RDKOV5640.c **** 
1796:../CX3RDKOV5640.c ****         /* Handle TimerReset Event*/
1797:../CX3RDKOV5640.c ****         if( eventFlag & ES_TIMER_RESET_EVENT)
 4545              		.loc 1 1797 0
 4546 0034 08301BE5 		ldr	r3, [fp, #-8]
 4547 0038 103003E2 		and	r3, r3, #16
 4548 003c 000053E3 		cmp	r3, #0
 4549 0040 1400000A 		beq	.L273
1798:../CX3RDKOV5640.c ****         {
1799:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 4550              		.loc 1 1799 0
 4551 0044 84309FE5 		ldr	r3, .L280+4
 4552 0048 003093E5 		ldr	r3, [r3]
 4553 004c 000053E3 		cmp	r3, #0
 4554 0050 0300000A 		beq	.L274
1800:../CX3RDKOV5640.c ****             {
1801:../CX3RDKOV5640.c ****             	glIsClearFeature = CyFalse;
 4555              		.loc 1 1801 0
 4556 0054 78309FE5 		ldr	r3, .L280+8
 4557 0058 0020A0E3 		mov	r2, #0
 4558 005c 002083E5 		str	r2, [r3]
1802:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop();
 4559              		.loc 1 1802 0
 4560 0060 FEFFFFEB 		bl	esUVCUvcApplnStop
 4561              	.L274:
1803:../CX3RDKOV5640.c **** #ifdef VISDebug
1804:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStop");
1805:../CX3RDKOV5640.c **** #endif
1806:../CX3RDKOV5640.c ****             }
1807:../CX3RDKOV5640.c ****             if(glPreviewStarted == CyTrue)
 4562              		.loc 1 1807 0
 4563 0064 6C309FE5 		ldr	r3, .L280+12
 4564 0068 003093E5 		ldr	r3, [r3]
 4565 006c 010053E3 		cmp	r3, #1
 4566 0070 0400001A 		bne	.L275
1808:../CX3RDKOV5640.c ****             {
1809:../CX3RDKOV5640.c ****             	//TODO Change this function with "Sensor Specific" function to write the sensor settin
1810:../CX3RDKOV5640.c ****             	esSetCameraResolution(glFrameIndexToSet);
 4567              		.loc 1 1810 0
 4568 0074 60309FE5 		ldr	r3, .L280+16
 4569 0078 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4570 007c 0300A0E1 		mov	r0, r3
 4571 0080 FEFFFFEB 		bl	esSetCameraResolution
1811:../CX3RDKOV5640.c ****             	esUVCUvcApplnStart();
 4572              		.loc 1 1811 0
 4573 0084 FEFFFFEB 		bl	esUVCUvcApplnStart
 4574              	.L275:
1812:../CX3RDKOV5640.c **** #ifdef VISDebug
1813:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStart");
1814:../CX3RDKOV5640.c **** #endif
1815:../CX3RDKOV5640.c ****             }
1816:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1817:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 4575              		.loc 1 1817 0
 4576 0088 50009FE5 		ldr	r0, .L280+20
 4577 008c 7D1FA0E3 		mov	r1, #500
 4578 0090 0020A0E3 		mov	r2, #0
 4579 0094 FEFFFFEB 		bl	_txe_timer_change
 4580              	.L273:
1818:../CX3RDKOV5640.c **** #endif
1819:../CX3RDKOV5640.c ****         }
1820:../CX3RDKOV5640.c ****         /* Handle Suspend Event*/
1821:../CX3RDKOV5640.c ****         if(eventFlag & ES_USB_SUSP_EVENT_FLAG)
 4581              		.loc 1 1821 0
 4582 0098 08301BE5 		ldr	r3, [fp, #-8]
 4583 009c 203003E2 		and	r3, r3, #32
 4584 00a0 000053E3 		cmp	r3, #0
 4585 00a4 0700000A 		beq	.L276
1822:../CX3RDKOV5640.c ****         {
1823:../CX3RDKOV5640.c ****             /* Place CX3 in Low Power Suspend mode, with USB bus activity as the wakeup source. */
1824:../CX3RDKOV5640.c ****             //CyU3PMipicsiSleep();
1825:../CX3RDKOV5640.c ****             //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the 
1826:../CX3RDKOV5640.c ****             //esCamera_Power_Down();
1827:../CX3RDKOV5640.c **** 
1828:../CX3RDKOV5640.c ****             //status = CyU3PSysEnterSuspendMode (CY_U3P_SYS_USB_BUS_ACTVTY_WAKEUP_SRC, 0, &wakeReas
1829:../CX3RDKOV5640.c **** #ifdef VISDebug
1830:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG %x", status);
1831:../CX3RDKOV5640.c **** #endif
1832:../CX3RDKOV5640.c ****     		if(glMipiActive)
 4586              		.loc 1 1832 0
 4587 00a8 34309FE5 		ldr	r3, .L280+24
 4588 00ac 003093E5 		ldr	r3, [r3]
 4589 00b0 000053E3 		cmp	r3, #0
 4590 00b4 0200000A 		beq	.L277
1833:../CX3RDKOV5640.c ****             {
1834:../CX3RDKOV5640.c ****                 CyU3PMipicsiWakeup();
 4591              		.loc 1 1834 0
 4592 00b8 FEFFFFEB 		bl	CyU3PMipicsiWakeup
1835:../CX3RDKOV5640.c ****                 //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the 
1836:../CX3RDKOV5640.c ****                 esCamera_Power_Up();
 4593              		.loc 1 1836 0
 4594 00bc FEFFFFEB 		bl	esCamera_Power_Up
1837:../CX3RDKOV5640.c **** #ifdef VISDebug
1838:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG: esCamera_Power_Up");
1839:../CX3RDKOV5640.c **** #endif
1840:../CX3RDKOV5640.c ****             }
1841:../CX3RDKOV5640.c ****             continue;
 4595              		.loc 1 1841 0
 4596 00c0 FFFFFFEA 		b	.L279
 4597              	.L277:
 4598              	.L279:
 4599 00c4 0000A0E1 		mov	r0, r0	@ nop
 4600              	.L276:
1842:../CX3RDKOV5640.c ****         }
1843:../CX3RDKOV5640.c **** #ifdef VISDebug
1844:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApp Thread Loop");
1845:../CX3RDKOV5640.c **** #endif
1846:../CX3RDKOV5640.c ****     } /* End of for(;;) */
 4601              		.loc 1 1846 0
 4602 00c8 D2FFFFEA 		b	.L278
 4603              	.L281:
 4604              		.align	2
 4605              	.L280:
 4606 00cc 00000000 		.word	glTimerEvent
 4607 00d0 00000000 		.word	glIsApplnActive
 4608 00d4 00000000 		.word	glIsClearFeature
 4609 00d8 00000000 		.word	glPreviewStarted
 4610 00dc 00000000 		.word	glFrameIndexToSet
 4611 00e0 00000000 		.word	UvcTimer
 4612 00e4 00000000 		.word	glMipiActive
 4613              		.cfi_endproc
 4614              	.LFE13:
 4616              		.section	.rodata
 4617              		.align	2
 4618              	.LC50:
 4619 07e0 33303A55 		.ascii	"30:UVC_app_thread\000"
 4619      56435F61 
 4619      70705F74 
 4619      68726561 
 4619      6400
 4620 07f2 0000     		.section	.text.CyFxApplicationDefine,"ax",%progbits
 4621              		.align	2
 4622              		.global	CyFxApplicationDefine
 4624              	CyFxApplicationDefine:
 4625              	.LFB14:
1847:../CX3RDKOV5640.c **** }
1848:../CX3RDKOV5640.c **** 
1849:../CX3RDKOV5640.c **** 
1850:../CX3RDKOV5640.c **** /* Application define function which creates the threads. */
1851:../CX3RDKOV5640.c ****     void
1852:../CX3RDKOV5640.c **** CyFxApplicationDefine (
1853:../CX3RDKOV5640.c ****         void)
1854:../CX3RDKOV5640.c **** {
 4626              		.loc 1 1854 0
 4627              		.cfi_startproc
 4628              		@ args = 0, pretend = 0, frame = 8
 4629              		@ frame_needed = 1, uses_anonymous_args = 0
 4630 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4631              	.LCFI28:
 4632              		.cfi_def_cfa_offset 8
 4633              		.cfi_offset 11, -8
 4634              		.cfi_offset 14, -4
 4635 0004 04B08DE2 		add	fp, sp, #4
 4636              	.LCFI29:
 4637              		.cfi_def_cfa 11, 4
 4638 0008 28D04DE2 		sub	sp, sp, #40
1855:../CX3RDKOV5640.c ****     void *ptr = NULL;
 4639              		.loc 1 1855 0
 4640 000c 0030A0E3 		mov	r3, #0
 4641 0010 08300BE5 		str	r3, [fp, #-8]
1856:../CX3RDKOV5640.c ****     uint32_t retThrdCreate = CY_U3P_SUCCESS;
 4642              		.loc 1 1856 0
 4643 0014 0030A0E3 		mov	r3, #0
 4644 0018 0C300BE5 		str	r3, [fp, #-12]
1857:../CX3RDKOV5640.c **** 
1858:../CX3RDKOV5640.c ****     /* Allocate the memory for the thread and create the thread */
1859:../CX3RDKOV5640.c ****     ptr = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
 4645              		.loc 1 1859 0
 4646 001c 010AA0E3 		mov	r0, #4096
 4647 0020 FEFFFFEB 		bl	CyU3PMemAlloc
 4648 0024 08000BE5 		str	r0, [fp, #-8]
1860:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
 4649              		.loc 1 1860 0
 4650 0028 08301BE5 		ldr	r3, [fp, #-8]
 4651 002c 00308DE5 		str	r3, [sp]
 4652 0030 013AA0E3 		mov	r3, #4096
 4653 0034 04308DE5 		str	r3, [sp, #4]
 4654 0038 0830A0E3 		mov	r3, #8
 4655 003c 08308DE5 		str	r3, [sp, #8]
 4656 0040 0830A0E3 		mov	r3, #8
 4657 0044 0C308DE5 		str	r3, [sp, #12]
 4658 0048 0030A0E3 		mov	r3, #0
 4659 004c 10308DE5 		str	r3, [sp, #16]
 4660 0050 0130A0E3 		mov	r3, #1
 4661 0054 14308DE5 		str	r3, [sp, #20]
 4662 0058 A830A0E3 		mov	r3, #168
 4663 005c 18308DE5 		str	r3, [sp, #24]
 4664 0060 4C009FE5 		ldr	r0, .L287
 4665 0064 4C109FE5 		ldr	r1, .L287+4
 4666 0068 4C209FE5 		ldr	r2, .L287+8
 4667 006c 0030A0E3 		mov	r3, #0
 4668 0070 FEFFFFEB 		bl	_txe_thread_create
 4669 0074 0C000BE5 		str	r0, [fp, #-12]
1861:../CX3RDKOV5640.c ****             "30:UVC_app_thread",         /* Thread Id and name */
1862:../CX3RDKOV5640.c ****             esUVCUvcAppThread_Entry,          /* UVC Application Thread Entry function */
1863:../CX3RDKOV5640.c ****             0,                           /* No input parameter to thread */
1864:../CX3RDKOV5640.c ****             ptr,                         /* Pointer to the allocated thread stack */
1865:../CX3RDKOV5640.c ****             UVC_APP_THREAD_STACK,        /* UVC Application Thread stack size */
1866:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* UVC Application Thread priority */
1867:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* Pre-emption threshold */
1868:../CX3RDKOV5640.c ****             CYU3P_NO_TIME_SLICE,         /* No time slice for the application thread */
1869:../CX3RDKOV5640.c ****             CYU3P_AUTO_START             /* Start the Thread immediately */
1870:../CX3RDKOV5640.c ****             );
1871:../CX3RDKOV5640.c **** 
1872:../CX3RDKOV5640.c ****     /* Check the return code */
1873:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4670              		.loc 1 1873 0
 4671 0078 0C301BE5 		ldr	r3, [fp, #-12]
 4672 007c 000053E3 		cmp	r3, #0
 4673 0080 0000000A 		beq	.L283
 4674              	.L284:
1874:../CX3RDKOV5640.c ****     {
1875:../CX3RDKOV5640.c ****         /* Thread Creation failed with the error code retThrdCreate */
1876:../CX3RDKOV5640.c **** 
1877:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1878:../CX3RDKOV5640.c **** 
1879:../CX3RDKOV5640.c ****         /* Application cannot continue */
1880:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1881:../CX3RDKOV5640.c ****         while(1);
 4675              		.loc 1 1881 0 discriminator 1
 4676 0084 FEFFFFEA 		b	.L284
 4677              	.L283:
1882:../CX3RDKOV5640.c ****     }
1883:../CX3RDKOV5640.c **** 
1884:../CX3RDKOV5640.c ****     /* Create GPIO application event group */
1885:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PEventCreate(&glTimerEvent);
 4678              		.loc 1 1885 0
 4679 0088 30009FE5 		ldr	r0, .L287+12
 4680 008c 0010A0E3 		mov	r1, #0
 4681 0090 2820A0E3 		mov	r2, #40
 4682 0094 FEFFFFEB 		bl	_txe_event_flags_create
 4683 0098 0C000BE5 		str	r0, [fp, #-12]
1886:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4684              		.loc 1 1886 0
 4685 009c 0C301BE5 		ldr	r3, [fp, #-12]
 4686 00a0 000053E3 		cmp	r3, #0
 4687 00a4 0000000A 		beq	.L282
 4688              	.L286:
1887:../CX3RDKOV5640.c ****     {
1888:../CX3RDKOV5640.c ****         /* Event group creation failed with the error code retThrdCreate */
1889:../CX3RDKOV5640.c **** 
1890:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1891:../CX3RDKOV5640.c **** 
1892:../CX3RDKOV5640.c ****         /* Application cannot continue */
1893:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1894:../CX3RDKOV5640.c ****         while(1);
 4689              		.loc 1 1894 0 discriminator 1
 4690 00a8 FEFFFFEA 		b	.L286
 4691              	.L282:
1895:../CX3RDKOV5640.c ****     }
1896:../CX3RDKOV5640.c **** }
 4692              		.loc 1 1896 0
 4693 00ac 04D04BE2 		sub	sp, fp, #4
 4694              		@ sp needed
 4695 00b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4696              	.L288:
 4697              		.align	2
 4698              	.L287:
 4699 00b4 00000000 		.word	uvcAppThread
 4700 00b8 E0070000 		.word	.LC50
 4701 00bc 00000000 		.word	esUVCUvcAppThread_Entry
 4702 00c0 00000000 		.word	glTimerEvent
 4703              		.cfi_endproc
 4704              	.LFE14:
 4706              		.section	.text.main,"ax",%progbits
 4707              		.align	2
 4708              		.global	main
 4710              	main:
 4711              	.LFB15:
1897:../CX3RDKOV5640.c **** 
1898:../CX3RDKOV5640.c **** /*
1899:../CX3RDKOV5640.c ****  * Main function
1900:../CX3RDKOV5640.c ****  */
1901:../CX3RDKOV5640.c **** 
1902:../CX3RDKOV5640.c ****     int
1903:../CX3RDKOV5640.c **** main (void)
1904:../CX3RDKOV5640.c **** {
 4712              		.loc 1 1904 0
 4713              		.cfi_startproc
 4714              		@ args = 0, pretend = 0, frame = 48
 4715              		@ frame_needed = 1, uses_anonymous_args = 0
 4716 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4717              	.LCFI30:
 4718              		.cfi_def_cfa_offset 8
 4719              		.cfi_offset 11, -8
 4720              		.cfi_offset 14, -4
 4721 0004 04B08DE2 		add	fp, sp, #4
 4722              	.LCFI31:
 4723              		.cfi_def_cfa 11, 4
 4724 0008 30D04DE2 		sub	sp, sp, #48
1905:../CX3RDKOV5640.c ****     CyU3PIoMatrixConfig_t io_cfg;
1906:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4725              		.loc 1 1906 0
 4726 000c 0030A0E3 		mov	r3, #0
 4727 0010 08300BE5 		str	r3, [fp, #-8]
1907:../CX3RDKOV5640.c **** 
1908:../CX3RDKOV5640.c ****     /* Initialize the device */
1909:../CX3RDKOV5640.c ****     status = CyU3PDeviceInit (NULL);
 4728              		.loc 1 1909 0
 4729 0014 0000A0E3 		mov	r0, #0
 4730 0018 FEFFFFEB 		bl	CyU3PDeviceInit
 4731 001c 08000BE5 		str	r0, [fp, #-8]
1910:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4732              		.loc 1 1910 0
 4733 0020 08301BE5 		ldr	r3, [fp, #-8]
 4734 0024 000053E3 		cmp	r3, #0
 4735 0028 0000000A 		beq	.L290
1911:../CX3RDKOV5640.c ****     {
1912:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4736              		.loc 1 1912 0
 4737 002c 270000EA 		b	.L291
 4738              	.L290:
1913:../CX3RDKOV5640.c ****     }
1914:../CX3RDKOV5640.c **** 
1915:../CX3RDKOV5640.c ****     /* Initialize the caches. Enable instruction cache and keep data cache disabled.
1916:../CX3RDKOV5640.c ****      * The data cache is useful only when there is a large amount of CPU based memory
1917:../CX3RDKOV5640.c ****      * accesses. When used in simple cases, it can decrease performance due to large
1918:../CX3RDKOV5640.c ****      * number of cache flushes and cleans and also it adds to the complexity of the
1919:../CX3RDKOV5640.c ****      * code. */
1920:../CX3RDKOV5640.c ****     status = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
 4739              		.loc 1 1920 0
 4740 0030 0100A0E3 		mov	r0, #1
 4741 0034 0010A0E3 		mov	r1, #0
 4742 0038 0020A0E3 		mov	r2, #0
 4743 003c FEFFFFEB 		bl	CyU3PDeviceCacheControl
 4744 0040 08000BE5 		str	r0, [fp, #-8]
1921:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4745              		.loc 1 1921 0
 4746 0044 08301BE5 		ldr	r3, [fp, #-8]
 4747 0048 000053E3 		cmp	r3, #0
 4748 004c 0000000A 		beq	.L292
1922:../CX3RDKOV5640.c ****     {
1923:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4749              		.loc 1 1923 0
 4750 0050 1E0000EA 		b	.L291
 4751              	.L292:
1924:../CX3RDKOV5640.c ****     }
1925:../CX3RDKOV5640.c **** 
1926:../CX3RDKOV5640.c ****     /* Configure the IO matrix for the device.*/
1927:../CX3RDKOV5640.c ****     io_cfg.isDQ32Bit = CyFalse;
 4752              		.loc 1 1927 0
 4753 0054 0030A0E3 		mov	r3, #0
 4754 0058 30300BE5 		str	r3, [fp, #-48]
1928:../CX3RDKOV5640.c **** 
1929:../CX3RDKOV5640.c ****     io_cfg.useUart   = CyTrue;
 4755              		.loc 1 1929 0
 4756 005c 0130A0E3 		mov	r3, #1
 4757 0060 2C300BE5 		str	r3, [fp, #-44]
1930:../CX3RDKOV5640.c ****     io_cfg.useI2C    = CyTrue;
 4758              		.loc 1 1930 0
 4759 0064 0130A0E3 		mov	r3, #1
 4760 0068 28300BE5 		str	r3, [fp, #-40]
1931:../CX3RDKOV5640.c ****     io_cfg.useI2S    = CyFalse;
 4761              		.loc 1 1931 0
 4762 006c 0030A0E3 		mov	r3, #0
 4763 0070 24300BE5 		str	r3, [fp, #-36]
1932:../CX3RDKOV5640.c ****     io_cfg.useSpi    = CyFalse;
 4764              		.loc 1 1932 0
 4765 0074 0030A0E3 		mov	r3, #0
 4766 0078 20300BE5 		str	r3, [fp, #-32]
1933:../CX3RDKOV5640.c ****     io_cfg.lppMode   = CY_U3P_IO_MATRIX_LPP_DEFAULT;
 4767              		.loc 1 1933 0
 4768 007c 0030A0E3 		mov	r3, #0
 4769 0080 1A304BE5 		strb	r3, [fp, #-26]
1934:../CX3RDKOV5640.c ****     /* No GPIOs are enabled. */
1935:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[0]  = 0;
 4770              		.loc 1 1935 0
 4771 0084 0030A0E3 		mov	r3, #0
 4772 0088 18300BE5 		str	r3, [fp, #-24]
1936:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[1]  = 0;
 4773              		.loc 1 1936 0
 4774 008c 0030A0E3 		mov	r3, #0
 4775 0090 14300BE5 		str	r3, [fp, #-20]
1937:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[0] = 0;
 4776              		.loc 1 1937 0
 4777 0094 0030A0E3 		mov	r3, #0
 4778 0098 10300BE5 		str	r3, [fp, #-16]
1938:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[1] = 0;
 4779              		.loc 1 1938 0
 4780 009c 0030A0E3 		mov	r3, #0
 4781 00a0 0C300BE5 		str	r3, [fp, #-12]
1939:../CX3RDKOV5640.c ****     status = CyU3PDeviceConfigureIOMatrix (&io_cfg);
 4782              		.loc 1 1939 0
 4783 00a4 30304BE2 		sub	r3, fp, #48
 4784 00a8 0300A0E1 		mov	r0, r3
 4785 00ac FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
 4786 00b0 08000BE5 		str	r0, [fp, #-8]
1940:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4787              		.loc 1 1940 0
 4788 00b4 08301BE5 		ldr	r3, [fp, #-8]
 4789 00b8 000053E3 		cmp	r3, #0
 4790 00bc 0000000A 		beq	.L293
1941:../CX3RDKOV5640.c ****     {
1942:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4791              		.loc 1 1942 0
 4792 00c0 020000EA 		b	.L291
 4793              	.L293:
1943:../CX3RDKOV5640.c ****     }
1944:../CX3RDKOV5640.c **** 
1945:../CX3RDKOV5640.c ****     /* This is a non returnable call for initializing the RTOS kernel */
1946:../CX3RDKOV5640.c ****     CyU3PKernelEntry ();
 4794              		.loc 1 1946 0
 4795 00c4 FEFFFFEB 		bl	_tx_initialize_kernel_enter
1947:../CX3RDKOV5640.c **** 
1948:../CX3RDKOV5640.c ****     /* Dummy return to make the compiler happy */
1949:../CX3RDKOV5640.c ****     return 0;
 4796              		.loc 1 1949 0
 4797 00c8 0030A0E3 		mov	r3, #0
 4798 00cc 000000EA 		b	.L295
 4799              	.L291:
1950:../CX3RDKOV5640.c **** 
1951:../CX3RDKOV5640.c **** handle_fatal_error:
1952:../CX3RDKOV5640.c ****     /* Cannot recover from this error. */
1953:../CX3RDKOV5640.c ****     while (1);
 4800              		.loc 1 1953 0 discriminator 1
 4801 00d0 FEFFFFEA 		b	.L291
 4802              	.L295:
1954:../CX3RDKOV5640.c **** }
 4803              		.loc 1 1954 0
 4804 00d4 0300A0E1 		mov	r0, r3
 4805 00d8 04D04BE2 		sub	sp, fp, #4
 4806              		@ sp needed
 4807 00dc 0088BDE8 		ldmfd	sp!, {fp, pc}
 4808              		.cfi_endproc
 4809              	.LFE15:
 4811              		.text
 4812              	.Letext0:
 4813              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 4814              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4815              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 4816              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 4817              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 4818              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4819              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4820              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4821              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4822              		.file 11 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4823              		.file 12 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4824              		.file 13 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4825              		.file 14 "..\\..\\CX3OV5640LIB\\INC/CX3OV5640Lib.h"
 4826              		.file 15 "../CX3RDKOV5640.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CX3RDKOV5640.c
                            *COM*:00000004 gl32SetControl
                            *COM*:00000002 gl16SetControl
                            *COM*:000000a8 uvcAppThread
                            *COM*:00000028 glTimerEvent
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:21     .bss.UvcTimer:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:24     .bss.UvcTimer:00000000 UvcTimer
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:27     .text.UvcAppProgressTimer:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:29     .text.UvcAppProgressTimer:00000000 UvcAppProgressTimer
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:58     .text.UvcAppProgressTimer:00000028 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:67     .bss.glDMATxCount:00000000 glDMATxCount
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:64     .bss.glDMATxCount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:74     .bss.glDmaDone:00000000 glDmaDone
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:71     .bss.glDmaDone:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:80     .bss.glActiveSocket:00000000 glActiveSocket
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:81     .bss.glActiveSocket:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:87     .data.doLpmDisable:00000000 doLpmDisable
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:84     .data.doLpmDisable:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:94     .bss.glHitFV:00000000 glHitFV
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:91     .bss.glHitFV:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:101    .bss.glMipiActive:00000000 glMipiActive
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:98     .bss.glMipiActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:108    .bss.glIsClearFeature:00000000 glIsClearFeature
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:105    .bss.glIsClearFeature:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:115    .bss.glPreviewStarted:00000000 glPreviewStarted
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:112    .bss.glPreviewStarted:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:122    .data.glUVCHeader:00000000 glUVCHeader
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:119    .data.glUVCHeader:00000000 $d
                            *COM*:00000020 glCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:140    .data.glCurrentFrameIndex:00000000 glCurrentFrameIndex
                            *COM*:00000020 glStillCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:147    .data.glCurrentStillFrameIndex:00000000 glCurrentStillFrameIndex
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:153    .bss.glStillTriggerCtrl:00000000 glStillTriggerCtrl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:154    .bss.glStillTriggerCtrl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:159    .bss.glFrameIndexToSet:00000000 glFrameIndexToSet
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:160    .bss.glFrameIndexToSet:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:166    .bss.glStillCaptureStart:00000000 glStillCaptureStart
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:163    .bss.glStillCaptureStart:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:173    .bss.glStillCaptured:00000000 glStillCaptured
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:170    .bss.glStillCaptured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:179    .bss.glStillSkip:00000000 glStillSkip
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:180    .bss.glStillSkip:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:186    .bss.glIsApplnActive:00000000 glIsApplnActive
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:183    .bss.glIsApplnActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:193    .bss.glIsConfigured:00000000 glIsConfigured
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:190    .bss.glIsConfigured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:200    .bss.glIsStreamingStarted:00000000 glIsStreamingStarted
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:197    .bss.glIsStreamingStarted:00000000 $d
                            *COM*:000000e8 glChHandleUVCStream
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:208    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 ES_UVC_STREAM_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:205    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:215    .bss.ES_UVC_DATA_BUF_SIZE:00000000 ES_UVC_DATA_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:212    .bss.ES_UVC_DATA_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:221    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 ES_UVC_STREAM_BUF_COUNT
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:222    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:227    .data.g_IsAutoFocus:00000000 g_IsAutoFocus
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:233    .bss.glGet_Info:00000000 glGet_Info
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:234    .bss.glGet_Info:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:240    .bss.gl8GetControl:00000000 gl8GetControl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:237    .bss.gl8GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:247    .bss.gl8SetControl:00000000 gl8SetControl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:244    .bss.gl8SetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:254    .bss.gl16GetControl:00000000 gl16GetControl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:251    .bss.gl16GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:261    .bss.gl32GetControl:00000000 gl32GetControl
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:258    .bss.gl32GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:267    .bss.glcommitcount:00000000 glcommitcount
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:268    .bss.glcommitcount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:273    .data.glcheckframe:00000000 glcheckframe
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:276    .text.esUVCAppErrorHandler:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:279    .text.esUVCAppErrorHandler:00000000 esUVCAppErrorHandler
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:305    .text.esUVCUvcAddHeader:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:307    .text.esUVCUvcAddHeader:00000000 esUVCUvcAddHeader
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:358    .text.esUVCUvcAddHeader:00000074 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:363    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:370    .text.esUVCUvcApplnStart:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:373    .text.esUVCUvcApplnStart:00000000 esUVCUvcApplnStart
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:520    .text.esUVCUvcApplnStart:0000017c $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:542    .text.esUVCUvcApplnStop:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:545    .text.esUVCUvcApplnStop:00000000 esUVCUvcApplnStop
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:648    .text.esUVCUvcApplnStop:000000f8 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:667    .text.esUVCGpifCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:670    .text.esUVCGpifCB:00000000 esUVCGpifCB
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:742    .text.esUVCGpifCB:000000ac $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:749    .text.esUVCUvcAppDmaCallback:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:752    .text.esUVCUvcAppDmaCallback:00000000 esUVCUvcAppDmaCallback
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1059   .text.esUVCUvcAppDmaCallback:00000380 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1079   .text.esUVCUvcApplnUSBEventCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1081   .text.esUVCUvcApplnUSBEventCB:00000000 esUVCUvcApplnUSBEventCB
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1111   .text.esUVCUvcApplnUSBEventCB:0000003c $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1121   .text.esUVCUvcApplnUSBEventCB:0000005c $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1243   .text.esUVCUvcApplnUSBEventCB:00000198 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1254   .text.esUVCApplnLPMRqtCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1256   .text.esUVCApplnLPMRqtCB:00000000 esUVCApplnLPMRqtCB
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1301   .text.esSetCameraResolution:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1304   .text.esSetCameraResolution:00000000 esSetCameraResolution
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1480   .text.esSetCameraResolution:000001c8 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1522   .text.esUVCUvcApplnUSBSetupCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:1524   .text.esUVCUvcApplnUSBSetupCB:00000000 esUVCUvcApplnUSBSetupCB
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:3026   .text.esUVCUvcApplnUSBSetupCB:0000108c $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:3067   .text.esUVCUvcApplnUSBSetupCB:00001128 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:3620   .text.esUVCUvcApplnInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:3623   .text.esUVCUvcApplnInit:00000000 esUVCUvcApplnInit
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4317   .text.esUVCUvcApplnInit:000007a8 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4394   .text.esUVCUvcApplnDebugInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4397   .text.esUVCUvcApplnDebugInit:00000000 esUVCUvcApplnDebugInit
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4504   .text.esUVCUvcApplnDebugInit:00000104 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4513   .text.esUVCUvcAppThread_Entry:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4516   .text.esUVCUvcAppThread_Entry:00000000 esUVCUvcAppThread_Entry
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4606   .text.esUVCUvcAppThread_Entry:000000cc $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4621   .text.CyFxApplicationDefine:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4624   .text.CyFxApplicationDefine:00000000 CyFxApplicationDefine
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4699   .text.CyFxApplicationDefine:000000b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4707   .text.main:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccsUqHs6.s:4710   .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.29463082a45126943f020ea30bda05c8
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.219.8eb38badc3f446ace4f0fbbdc7b4e018
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.cyu3types.h.80.f5310e165127de2daf78c334a454267e
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.ec713094ff7b80200da61a1b94cca956
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.tx_port.h.95.54ef54ef950923016df123872c81f77f
                           .group:00000000 wm4.tx_api.h.90.d18ffa804751aa80b6d59c3d596c2234
                           .group:00000000 wm4.cyu3tx.h.61.421a5eac9b37f3e2677fcfe17ba1c9c3
                           .group:00000000 wm4.cyu3dma.h.569.521da17a880bb7dc9c063e240d18d9bc
                           .group:00000000 wm4.cyu3system.h.43.0fbd82548e591beefe95401c72410881
                           .group:00000000 wm4.cyu3usbconst.h.37.502980e110c2142a7316d50a53794397
                           .group:00000000 wm4.cyu3usb.h.302.ade7bb9b5b6e92c233eea1baf2851afa
                           .group:00000000 wm4.cyu3lpp.h.138.66435309bc2407b6684483dfed574450
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.cyu3utils.h.45.ea1b88089ccad3d50489f6f768ad8e9f
                           .group:00000000 wm4.cyu3pib.h.192.a1483c513c81c352d6719814a4b66283
                           .group:00000000 wm4.cyu3descriptor.h.104.486178ff96f7d84792762d8905519d09
                           .group:00000000 wm4.cyu3socket.h.153.0d077cd39632ba9c913ec648cfa0f9e9
                           .group:00000000 wm4.sock_regs.h.24.15d70ab2b2a99b01b4189217fc091bd3
                           .group:00000000 wm4.cyu3sib.h.59.b1cff9a75023363cc612aef2b2314b23
                           .group:00000000 wm4.cyu3gpif.h.52.b01ef1bece12652336136a0aaabab45b
                           .group:00000000 wm4.cyu3mipicsi.h.46.b99df5b141b2543db3c56d6e408e0c5e
                           .group:00000000 wm4.CX3OV5640Lib.h.18.ebed1e57f77d2633a42de60cae388313
                           .group:00000000 wm4.CX3RDKOV5640.h.34.16f03605a9abf281a0c637c9029be977

UNDEFINED SYMBOLS
_txe_event_flags_set
_tx_thread_sleep
CyU3PMemCopy
_txe_timer_deactivate
CyU3PUsbSetEpNak
CyFx3BusyWait
CyU3PUsbFlushEp
CyU3PDmaMultiChannelReset
CyU3PDebugPrint
CyU3PDmaMultiChannelSetXfer
CyU3PGpifSMControl
CyU3PGpifSMSwitch
CyU3PMipicsiWakeup
esCamera_Power_Up
esOV5640_SetAutofocus
CyU3PMipicsiSleep
esCamera_Power_Down
CyU3PUsbStall
CyU3PUsbLPMEnable
CyU3PDmaMultiChannelSetWrapUp
CyU3PUsbGetSpeed
CyU3PUsbLPMDisable
CyU3PUsbSetLinkPowerState
_txe_timer_activate
CyU3PDmaMultiChannelGetBuffer
CyU3PDmaMultiChannelCommitBuffer
_txe_timer_change
CyU3PMipicsiSetIntfParams
esOV5640_1080P_config
esOV5640_VGA_config
esOV5640_5MP_config
esOV5640_VGA_HS_config
cfgUvc1080p30NoMclk
cfgUvcVga30NoMclk
cfgUvc720p60NoMclk
cfgUvc5Mp15NoMclk
CyU3PUsbAckSetup
CyU3PUsbSendEP0Data
CyU3PUsbGetEP0Data
esOV5640_GetBrightness
esOV5640_SetBrightness
esOV5640_GetAutoExposure
esOV5640_SetAutoExposure
esOV5640_GetContrast
esOV5640_SetContrast
esOV5640_GetExposure
esOV5640_SetExposure
esOV5640_GetHue
esOV5640_SetHue
esOV5640_GetManualfocus
esOV5640_SetManualfocus
esOV5640_GetSaturation
esOV5640_SetSaturation
glProbeCtrl
gl5MpProbeCtrl
gl720pProbeCtrl
glVga60ProbeCtrl
gl1080pProbeCtrl
glVga30ProbeCtrl
glStillProbeCtrl
esOV5640_GetSharpness
esOV5640_SetSharpness
esOV5640_GetAutofocus
esOV5640_GetWhiteBalance
esOV5640_SetWhiteBalance
esOV5640_GetAutoWhiteBalance
esOV5640_SetAutoWhiteBalance
CyU3PMipicsiInitializeI2c
CyU3PMipicsiInitializeGPIO
CyU3PMipicsiInitializePIB
CyU3PUsbStart
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterEventCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbSetDesc
CyU3PUsbVBattEnable
CyU3PUsbControlVBusDetect
CyU3PConnectState
CyU3PSetEpConfig
CyU3PUsbEPSetBurstMode
CyU3PDmaMultiChannelCreate
CyU3PMipicsiGpifLoad
CyU3PGpifRegisterCallback
CyU3PGpifSMStart
CyU3PMipicsiInit
_txe_timer_create
esUVCUSB30DeviceDscr
esUVCUSB20DeviceDscr
esUVCUSBBOSDscr
esUVCUSBDeviceQualDscr
esUVCUSBSSConfigDscr
esUVCUSBHSConfigDscr
esUVCUSBFSConfigDscr
esUVCUSBStringLangIDDscr
esUVCUSBManufactureDscr
esUVCUSBProductDscr
esUVCUSBConfigSSDscr
esUVCUSBConfigHSDscr
esUVCUSBConfigFSDscr
cfgUvcVgaNoMclk
CyU3PUartInit
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
_txe_event_flags_get
CyU3PMemAlloc
_txe_thread_create
_txe_event_flags_create
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
