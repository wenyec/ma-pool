   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"CX3RDKOV5640.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	gl32SetControl,4,4
  17              		.comm	gl16SetControl,2,2
  18              		.comm	uvcAppThread,168,4
  19              		.comm	glTimerEvent,40,4
  20              		.section	.bss.UvcTimer,"aw",%nobits
  21              		.align	2
  24              	UvcTimer:
  25 0000 00000000 		.space	44
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.UvcAppProgressTimer,"ax",%progbits
  27              		.align	2
  29              	UvcAppProgressTimer:
  30              	.LFB0:
  31              		.file 1 "../CX3RDKOV5640.c"
   1:../CX3RDKOV5640.c **** /*
   2:../CX3RDKOV5640.c ****  ## e-con Systems USB UVC Stack – See3CAMCX3RDK Platform
   3:../CX3RDKOV5640.c **** 
   4:../CX3RDKOV5640.c ****  ## source file : CX3RDKOV5640.c
   5:../CX3RDKOV5640.c ****  ## ===========================
   6:../CX3RDKOV5640.c ****  ##
   7:../CX3RDKOV5640.c ****  ##  Copyright E-Con Systems, 2013-2014,
   8:../CX3RDKOV5640.c ****  ##  All Rights Reserved
   9:../CX3RDKOV5640.c ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
  10:../CX3RDKOV5640.c ****  ##
  11:../CX3RDKOV5640.c ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  12:../CX3RDKOV5640.c ****  ##  PROPERTY OF ECON SYSTEMS
  13:../CX3RDKOV5640.c **** 
  14:../CX3RDKOV5640.c ****  ## www.e-consystems.com
  15:../CX3RDKOV5640.c ****  ##
  16:../CX3RDKOV5640.c ****  ##
  17:../CX3RDKOV5640.c ****  ## ===========================
  18:../CX3RDKOV5640.c **** */
  19:../CX3RDKOV5640.c **** 
  20:../CX3RDKOV5640.c **** #include "cyu3system.h"
  21:../CX3RDKOV5640.c **** #include "cyu3os.h"
  22:../CX3RDKOV5640.c **** #include "cyu3dma.h"
  23:../CX3RDKOV5640.c **** #include "cyu3error.h"
  24:../CX3RDKOV5640.c **** #include "cyu3usb.h"
  25:../CX3RDKOV5640.c **** #include "cyu3i2c.h"
  26:../CX3RDKOV5640.c **** #include "cyu3uart.h"
  27:../CX3RDKOV5640.c **** #include "cyu3gpio.h"
  28:../CX3RDKOV5640.c **** #include "cyu3utils.h"
  29:../CX3RDKOV5640.c **** #include "cyu3pib.h"
  30:../CX3RDKOV5640.c **** #include "cyu3socket.h"
  31:../CX3RDKOV5640.c **** #include "sock_regs.h"
  32:../CX3RDKOV5640.c **** #include "cyu3mipicsi.h"
  33:../CX3RDKOV5640.c **** 
  34:../CX3RDKOV5640.c **** #include "CX3OV5640Lib.h"
  35:../CX3RDKOV5640.c **** #include "CX3RDKOV5640.h"
  36:../CX3RDKOV5640.c **** 
  37:../CX3RDKOV5640.c **** /* Event generated on Timer overflow*/
  38:../CX3RDKOV5640.c **** #define ES_TIMER_RESET_EVENT		(1<<4)
  39:../CX3RDKOV5640.c **** 
  40:../CX3RDKOV5640.c **** /* Event generated on a USB Suspend Request*/
  41:../CX3RDKOV5640.c **** #define ES_USB_SUSP_EVENT_FLAG		(1<<5)
  42:../CX3RDKOV5640.c **** 
  43:../CX3RDKOV5640.c **** /* Firmware version*/
  44:../CX3RDKOV5640.c **** #define MajorVersion 				1
  45:../CX3RDKOV5640.c **** #define MinorVersion 				3
  46:../CX3RDKOV5640.c **** #define SubVersion					133
  47:../CX3RDKOV5640.c **** #define SubVersion1					309
  48:../CX3RDKOV5640.c **** #define RESET_TIMER_ENABLE 1
  49:../CX3RDKOV5640.c **** 
  50:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
  51:../CX3RDKOV5640.c **** #define TIMER_PERIOD	(500)
  52:../CX3RDKOV5640.c **** 
  53:../CX3RDKOV5640.c **** static CyU3PTimer        UvcTimer;
  54:../CX3RDKOV5640.c **** 
  55:../CX3RDKOV5640.c **** static void UvcAppProgressTimer (uint32_t arg)
  56:../CX3RDKOV5640.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		stmfd	sp!, {fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              	.LCFI1:
  43              		.cfi_def_cfa 11, 4
  44 0008 08D04DE2 		sub	sp, sp, #8
  45 000c 08000BE5 		str	r0, [fp, #-8]
  57:../CX3RDKOV5640.c ****     /* This frame has taken too long to complete.
  58:../CX3RDKOV5640.c ****      * Abort it, so that the next frame can be started. */
  59:../CX3RDKOV5640.c ****     CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
  46              		.loc 1 59 0
  47 0010 10009FE5 		ldr	r0, .L2
  48 0014 1010A0E3 		mov	r1, #16
  49 0018 0020A0E3 		mov	r2, #0
  50 001c FEFFFFEB 		bl	_txe_event_flags_set
  60:../CX3RDKOV5640.c **** }
  51              		.loc 1 60 0
  52 0020 04D04BE2 		sub	sp, fp, #4
  53              		@ sp needed
  54 0024 0088BDE8 		ldmfd	sp!, {fp, pc}
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0028 00000000 		.word	glTimerEvent
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.global	glDMATxCount
  63              		.section	.bss.glDMATxCount,"aw",%nobits
  64              		.align	2
  67              	glDMATxCount:
  68 0000 00000000 		.space	4
  69              		.global	glDmaDone
  70              		.section	.bss.glDmaDone,"aw",%nobits
  71              		.align	2
  74              	glDmaDone:
  75 0000 00000000 		.space	4
  76              		.global	glActiveSocket
  77              		.section	.bss.glActiveSocket,"aw",%nobits
  80              	glActiveSocket:
  81 0000 00       		.space	1
  82              		.global	doLpmDisable
  83              		.section	.data.doLpmDisable,"aw",%progbits
  84              		.align	2
  87              	doLpmDisable:
  88 0000 01000000 		.word	1
  89              		.global	glHitFV
  90              		.section	.bss.glHitFV,"aw",%nobits
  91              		.align	2
  94              	glHitFV:
  95 0000 00000000 		.space	4
  96              		.global	glMipiActive
  97              		.section	.bss.glMipiActive,"aw",%nobits
  98              		.align	2
 101              	glMipiActive:
 102 0000 00000000 		.space	4
 103              		.global	glIsClearFeature
 104              		.section	.bss.glIsClearFeature,"aw",%nobits
 105              		.align	2
 108              	glIsClearFeature:
 109 0000 00000000 		.space	4
 110              		.global	glPreviewStarted
 111              		.section	.bss.glPreviewStarted,"aw",%nobits
 112              		.align	2
 115              	glPreviewStarted:
 116 0000 00000000 		.space	4
 117              		.global	glUVCHeader
 118              		.section	.data.glUVCHeader,"aw",%progbits
 119              		.align	2
 122              	glUVCHeader:
 123 0000 0C       		.byte	12
 124 0001 8C       		.byte	-116
 125 0002 00       		.byte	0
 126 0003 00       		.byte	0
 127 0004 00       		.byte	0
 128 0005 00       		.byte	0
 129 0006 00       		.byte	0
 130 0007 00       		.byte	0
 131 0008 00       		.byte	0
 132 0009 00       		.byte	0
 133 000a 00       		.byte	0
 134 000b 00       		.byte	0
 135              		.comm	glCommitCtrl,32,4
 136              		.global	glCurrentFrameIndex
 137              		.section	.data.glCurrentFrameIndex,"aw",%progbits
 140              	glCurrentFrameIndex:
 141 0000 01       		.byte	1
 142              		.comm	glStillCommitCtrl,32,4
 143              		.global	glCurrentStillFrameIndex
 144              		.section	.data.glCurrentStillFrameIndex,"aw",%progbits
 147              	glCurrentStillFrameIndex:
 148 0000 01       		.byte	1
 149              		.global	glStillTriggerCtrl
 150              		.section	.bss.glStillTriggerCtrl,"aw",%nobits
 153              	glStillTriggerCtrl:
 154 0000 00       		.space	1
 155              		.global	glFrameIndexToSet
 156              		.section	.bss.glFrameIndexToSet,"aw",%nobits
 159              	glFrameIndexToSet:
 160 0000 00       		.space	1
 161              		.global	glStillCaptureStart
 162              		.section	.bss.glStillCaptureStart,"aw",%nobits
 163              		.align	2
 166              	glStillCaptureStart:
 167 0000 00000000 		.space	4
 168              		.global	glStillCaptured
 169              		.section	.bss.glStillCaptured,"aw",%nobits
 170              		.align	2
 173              	glStillCaptured:
 174 0000 00000000 		.space	4
 175              		.global	glStillSkip
 176              		.section	.bss.glStillSkip,"aw",%nobits
 179              	glStillSkip:
 180 0000 00       		.space	1
 181              		.global	glIsApplnActive
 182              		.section	.bss.glIsApplnActive,"aw",%nobits
 183              		.align	2
 186              	glIsApplnActive:
 187 0000 00000000 		.space	4
 188              		.global	glIsConfigured
 189              		.section	.bss.glIsConfigured,"aw",%nobits
 190              		.align	2
 193              	glIsConfigured:
 194 0000 00000000 		.space	4
 195              		.global	glIsStreamingStarted
 196              		.section	.bss.glIsStreamingStarted,"aw",%nobits
 197              		.align	2
 200              	glIsStreamingStarted:
 201 0000 00000000 		.space	4
 202              		.comm	glChHandleUVCStream,232,4
 203              		.global	ES_UVC_STREAM_BUF_SIZE
 204              		.section	.bss.ES_UVC_STREAM_BUF_SIZE,"aw",%nobits
 205              		.align	1
 208              	ES_UVC_STREAM_BUF_SIZE:
 209 0000 0000     		.space	2
 210              		.global	ES_UVC_DATA_BUF_SIZE
 211              		.section	.bss.ES_UVC_DATA_BUF_SIZE,"aw",%nobits
 212              		.align	1
 215              	ES_UVC_DATA_BUF_SIZE:
 216 0000 0000     		.space	2
 217              		.global	ES_UVC_STREAM_BUF_COUNT
 218              		.section	.bss.ES_UVC_STREAM_BUF_COUNT,"aw",%nobits
 221              	ES_UVC_STREAM_BUF_COUNT:
 222 0000 00       		.space	1
 223              		.global	g_IsAutoFocus
 224              		.section	.data.g_IsAutoFocus,"aw",%progbits
 227              	g_IsAutoFocus:
 228 0000 01       		.byte	1
 229              		.global	glGet_Info
 230              		.section	.bss.glGet_Info,"aw",%nobits
 233              	glGet_Info:
 234 0000 00       		.space	1
 235              		.global	gl8GetControl
 236              		.section	.bss.gl8GetControl,"aw",%nobits
 237              		.align	1
 240              	gl8GetControl:
 241 0000 0000     		.space	2
 242              		.global	gl8SetControl
 243              		.section	.bss.gl8SetControl,"aw",%nobits
 244              		.align	1
 247              	gl8SetControl:
 248 0000 0000     		.space	2
 249              		.global	gl16GetControl
 250              		.section	.bss.gl16GetControl,"aw",%nobits
 251              		.align	1
 254              	gl16GetControl:
 255 0000 0000     		.space	2
 256              		.global	gl32GetControl
 257              		.section	.bss.gl32GetControl,"aw",%nobits
 258              		.align	2
 261              	gl32GetControl:
 262 0000 00000000 		.space	4
 263              		.global	glcommitcount
 264              		.section	.bss.glcommitcount,"aw",%nobits
 267              	glcommitcount:
 268 0000 00       		.space	1
 269              		.global	glcheckframe
 270              		.section	.data.glcheckframe,"aw",%progbits
 273              	glcheckframe:
 274 0000 01       		.byte	1
 275              		.section	.text.esUVCAppErrorHandler,"ax",%progbits
 276              		.align	2
 277              		.global	esUVCAppErrorHandler
 279              	esUVCAppErrorHandler:
 280              	.LFB1:
  61:../CX3RDKOV5640.c **** #endif
  62:../CX3RDKOV5640.c **** 
  63:../CX3RDKOV5640.c **** volatile int32_t glDMATxCount = 0;          /* Counter used to count the Dma Transfers */
  64:../CX3RDKOV5640.c **** volatile int32_t glDmaDone = 0;
  65:../CX3RDKOV5640.c **** volatile uint8_t glActiveSocket = 0;
  66:../CX3RDKOV5640.c **** volatile CyBool_t doLpmDisable = CyTrue;	/* Flag used to Enable/Disable low USB 3.0 LPM */
  67:../CX3RDKOV5640.c **** CyBool_t glHitFV = CyFalse;             	/* Flag used for state of FV signal. */
  68:../CX3RDKOV5640.c **** CyBool_t glMipiActive = CyFalse;        	/* Flag set to true when Mipi interface is active. Used fo
  69:../CX3RDKOV5640.c **** CyBool_t glIsClearFeature = CyFalse;    	/* Flag to signal when AppStop is called from the ClearFea
  70:../CX3RDKOV5640.c **** CyBool_t glPreviewStarted = CyFalse;		/* Flag to support Mac os */
  71:../CX3RDKOV5640.c **** 
  72:../CX3RDKOV5640.c **** /* UVC Header */
  73:../CX3RDKOV5640.c **** uint8_t glUVCHeader[ES_UVC_HEADER_LENGTH] =
  74:../CX3RDKOV5640.c **** {
  75:../CX3RDKOV5640.c ****     0x0C,                           /* Header Length */
  76:../CX3RDKOV5640.c ****     0x8C,                           /* Bit field header field */
  77:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,            /* Presentation time stamp field */
  78:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,0x00,0x00   /* Source clock reference field */
  79:../CX3RDKOV5640.c **** };
  80:../CX3RDKOV5640.c **** 
  81:../CX3RDKOV5640.c **** /* Video Probe Commit Control */
  82:../CX3RDKOV5640.c **** uint8_t glCommitCtrl[ES_UVC_MAX_PROBE_SETTING_ALIGNED];
  83:../CX3RDKOV5640.c **** uint8_t glCurrentFrameIndex = 1;
  84:../CX3RDKOV5640.c **** uint8_t glStillCommitCtrl[ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED];
  85:../CX3RDKOV5640.c **** uint8_t glCurrentStillFrameIndex = 1;
  86:../CX3RDKOV5640.c **** uint8_t glStillTriggerCtrl = 0;
  87:../CX3RDKOV5640.c **** uint8_t glFrameIndexToSet = 0;
  88:../CX3RDKOV5640.c **** CyBool_t glStillCaptureStart = CyFalse;
  89:../CX3RDKOV5640.c **** CyBool_t glStillCaptured = CyFalse;
  90:../CX3RDKOV5640.c **** uint8_t glStillSkip = 0;
  91:../CX3RDKOV5640.c **** 
  92:../CX3RDKOV5640.c **** CyBool_t glIsApplnActive = CyFalse;             /* Whether the Mipi->USB application is active or n
  93:../CX3RDKOV5640.c **** CyBool_t glIsConfigured = CyFalse;              /* Whether Application is in configured state or no
  94:../CX3RDKOV5640.c **** CyBool_t glIsStreamingStarted = CyFalse;        /* Whether streaming has started - Used for MAC OS 
  95:../CX3RDKOV5640.c **** 
  96:../CX3RDKOV5640.c **** /* DMA Channel */
  97:../CX3RDKOV5640.c **** CyU3PDmaMultiChannel glChHandleUVCStream;       /* DMA Channel Handle for UVC Stream  */
  98:../CX3RDKOV5640.c **** uint16_t ES_UVC_STREAM_BUF_SIZE=0;
  99:../CX3RDKOV5640.c **** uint16_t ES_UVC_DATA_BUF_SIZE=0;
 100:../CX3RDKOV5640.c **** uint8_t ES_UVC_STREAM_BUF_COUNT=0;
 101:../CX3RDKOV5640.c **** 
 102:../CX3RDKOV5640.c **** uint8_t g_IsAutoFocus=1;						/* Check the AutoFocus is Enabled or not*/
 103:../CX3RDKOV5640.c **** 
 104:../CX3RDKOV5640.c **** /* USB control request processing variables*/
 105:../CX3RDKOV5640.c **** #if 1
 106:../CX3RDKOV5640.c **** 
 107:../CX3RDKOV5640.c **** uint8_t glGet_Info = 0;
 108:../CX3RDKOV5640.c **** int16_t gl8GetControl = 0;
 109:../CX3RDKOV5640.c **** int16_t gl8SetControl = 0;
 110:../CX3RDKOV5640.c **** int16_t gl16GetControl = 0;
 111:../CX3RDKOV5640.c **** 
 112:../CX3RDKOV5640.c **** int32_t gl32GetControl = 0;
 113:../CX3RDKOV5640.c **** 
 114:../CX3RDKOV5640.c **** #endif
 115:../CX3RDKOV5640.c **** 
 116:../CX3RDKOV5640.c **** uint8_t glcommitcount=0,glcheckframe=1;
 117:../CX3RDKOV5640.c **** 
 118:../CX3RDKOV5640.c **** /* Application critical error handler */
 119:../CX3RDKOV5640.c ****     void
 120:../CX3RDKOV5640.c **** esUVCAppErrorHandler (
 121:../CX3RDKOV5640.c ****         CyU3PReturnStatus_t status        /* API return status */
 122:../CX3RDKOV5640.c ****         )
 123:../CX3RDKOV5640.c **** {
 281              		.loc 1 123 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 00482DE9 		stmfd	sp!, {fp, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 04B08DE2 		add	fp, sp, #4
 291              	.LCFI3:
 292              		.cfi_def_cfa 11, 4
 293 0008 08D04DE2 		sub	sp, sp, #8
 294 000c 08000BE5 		str	r0, [fp, #-8]
 295              	.L5:
 124:../CX3RDKOV5640.c ****     /* Application failed with the error code status */
 125:../CX3RDKOV5640.c **** 
 126:../CX3RDKOV5640.c ****     /* Add custom debug or recovery actions here */
 127:../CX3RDKOV5640.c **** 
 128:../CX3RDKOV5640.c ****     /* Loop indefinitely */
 129:../CX3RDKOV5640.c ****     for (;;)
 130:../CX3RDKOV5640.c ****     {
 131:../CX3RDKOV5640.c ****         /* Thread sleep : 100 ms */
 132:../CX3RDKOV5640.c ****         CyU3PThreadSleep (100);
 296              		.loc 1 132 0 discriminator 1
 297 0010 6400A0E3 		mov	r0, #100
 298 0014 FEFFFFEB 		bl	_tx_thread_sleep
 133:../CX3RDKOV5640.c ****     }
 299              		.loc 1 133 0 discriminator 1
 300 0018 FCFFFFEA 		b	.L5
 301              		.cfi_endproc
 302              	.LFE1:
 304              		.section	.text.esUVCUvcAddHeader,"ax",%progbits
 305              		.align	2
 307              	esUVCUvcAddHeader:
 308              	.LFB2:
 134:../CX3RDKOV5640.c **** }
 135:../CX3RDKOV5640.c **** 
 136:../CX3RDKOV5640.c **** 
 137:../CX3RDKOV5640.c **** /* UVC header addition function */
 138:../CX3RDKOV5640.c ****     static void
 139:../CX3RDKOV5640.c **** esUVCUvcAddHeader (
 140:../CX3RDKOV5640.c ****         uint8_t *buffer_p,      /* Buffer pointer */
 141:../CX3RDKOV5640.c ****         uint8_t frameInd        /* EOF or normal frame indication */
 142:../CX3RDKOV5640.c ****         )
 143:../CX3RDKOV5640.c **** {
 309              		.loc 1 143 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 00482DE9 		stmfd	sp!, {fp, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 11, -8
 317              		.cfi_offset 14, -4
 318 0004 04B08DE2 		add	fp, sp, #4
 319              	.LCFI5:
 320              		.cfi_def_cfa 11, 4
 321 0008 08D04DE2 		sub	sp, sp, #8
 322 000c 08000BE5 		str	r0, [fp, #-8]
 323 0010 0130A0E1 		mov	r3, r1
 324 0014 09304BE5 		strb	r3, [fp, #-9]
 144:../CX3RDKOV5640.c ****     /* Copy header to buffer */
 145:../CX3RDKOV5640.c ****     CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, ES_UVC_HEADER_LENGTH);
 325              		.loc 1 145 0
 326 0018 08001BE5 		ldr	r0, [fp, #-8]
 327 001c 50109FE5 		ldr	r1, .L8
 328 0020 0C20A0E3 		mov	r2, #12
 329 0024 FEFFFFEB 		bl	CyU3PMemCopy
 146:../CX3RDKOV5640.c **** 
 147:../CX3RDKOV5640.c ****     /* Check if last packet of the frame. */
 148:../CX3RDKOV5640.c ****     if (frameInd == ES_UVC_HEADER_EOF)
 330              		.loc 1 148 0
 331 0028 09305BE5 		ldrb	r3, [fp, #-9]	@ zero_extendqisi2
 332 002c 020053E3 		cmp	r3, #2
 333 0030 0D00001A 		bne	.L6
 149:../CX3RDKOV5640.c ****     {
 150:../CX3RDKOV5640.c ****         /* Modify UVC header to toggle Frame ID */
 151:../CX3RDKOV5640.c ****         glUVCHeader[1] ^= ES_UVC_HEADER_FRAME_ID;
 334              		.loc 1 151 0
 335 0034 38309FE5 		ldr	r3, .L8
 336 0038 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 337 003c 013023E2 		eor	r3, r3, #1
 338 0040 FF2003E2 		and	r2, r3, #255
 339 0044 28309FE5 		ldr	r3, .L8
 340 0048 0120C3E5 		strb	r2, [r3, #1]
 152:../CX3RDKOV5640.c **** 
 153:../CX3RDKOV5640.c ****         /* Indicate End of Frame in the buffer */
 154:../CX3RDKOV5640.c ****         buffer_p[1] |=  ES_UVC_HEADER_EOF;
 341              		.loc 1 154 0
 342 004c 08301BE5 		ldr	r3, [fp, #-8]
 343 0050 013083E2 		add	r3, r3, #1
 344 0054 08201BE5 		ldr	r2, [fp, #-8]
 345 0058 012082E2 		add	r2, r2, #1
 346 005c 0020D2E5 		ldrb	r2, [r2]	@ zero_extendqisi2
 347 0060 022082E3 		orr	r2, r2, #2
 348 0064 FF2002E2 		and	r2, r2, #255
 349 0068 0020C3E5 		strb	r2, [r3]
 350              	.L6:
 155:../CX3RDKOV5640.c ****     }
 156:../CX3RDKOV5640.c **** }
 351              		.loc 1 156 0
 352 006c 04D04BE2 		sub	sp, fp, #4
 353              		@ sp needed
 354 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
 355              	.L9:
 356              		.align	2
 357              	.L8:
 358 0074 00000000 		.word	glUVCHeader
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0A0D4170 		.ascii	"\012\015AplnStrt:ChannelReset Err = 0x%x\000"
 365      6C6E5374 
 365      72743A43 
 365      68616E6E 
 365      656C5265 
 366 0023 00       		.align	2
 367              	.LC1:
 368 0024 0A0D4170 		.ascii	"\012\015AplnStrt:SetXfer Err = 0x%x\000"
 368      6C6E5374 
 368      72743A53 
 368      65745866 
 368      65722045 
 369              		.section	.text.esUVCUvcApplnStart,"ax",%progbits
 370              		.align	2
 371              		.global	esUVCUvcApplnStart
 373              	esUVCUvcApplnStart:
 374              	.LFB3:
 157:../CX3RDKOV5640.c **** 
 158:../CX3RDKOV5640.c **** 
 159:../CX3RDKOV5640.c **** /* This function starts the video streaming application. It is called
 160:../CX3RDKOV5640.c ****  * when there is a SET_INTERFACE event for alternate interface 1
 161:../CX3RDKOV5640.c ****  * (in case of UVC over Isochronous Endpoint usage) or when a
 162:../CX3RDKOV5640.c ****  * COMMIT_CONTROL(SET_CUR) request is received (when using BULK only UVC).
 163:../CX3RDKOV5640.c ****  */
 164:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t
 165:../CX3RDKOV5640.c **** esUVCUvcApplnStart (void)
 166:../CX3RDKOV5640.c **** {
 375              		.loc 1 166 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 00482DE9 		stmfd	sp!, {fp, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 11, -8
 383              		.cfi_offset 14, -4
 384 0004 04B08DE2 		add	fp, sp, #4
 385              	.LCFI7:
 386              		.cfi_def_cfa 11, 4
 387 0008 10D04DE2 		sub	sp, sp, #16
 167:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 388              		.loc 1 167 0
 389 000c 0030A0E3 		mov	r3, #0
 390 0010 08300BE5 		str	r3, [fp, #-8]
 168:../CX3RDKOV5640.c **** 
 169:../CX3RDKOV5640.c ****     glIsApplnActive = CyTrue;
 391              		.loc 1 169 0
 392 0014 60319FE5 		ldr	r3, .L15
 393 0018 0120A0E3 		mov	r2, #1
 394 001c 002083E5 		str	r2, [r3]
 170:../CX3RDKOV5640.c ****     glDmaDone = 0;
 395              		.loc 1 170 0
 396 0020 58319FE5 		ldr	r3, .L15+4
 397 0024 0020A0E3 		mov	r2, #0
 398 0028 002083E5 		str	r2, [r3]
 171:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 399              		.loc 1 171 0
 400 002c 50319FE5 		ldr	r3, .L15+8
 401 0030 0020A0E3 		mov	r2, #0
 402 0034 002083E5 		str	r2, [r3]
 172:../CX3RDKOV5640.c ****     glHitFV = CyFalse;
 403              		.loc 1 172 0
 404 0038 48319FE5 		ldr	r3, .L15+12
 405 003c 0020A0E3 		mov	r2, #0
 406 0040 002083E5 		str	r2, [r3]
 173:../CX3RDKOV5640.c ****     doLpmDisable = CyTrue;
 407              		.loc 1 173 0
 408 0044 40319FE5 		ldr	r3, .L15+16
 409 0048 0120A0E3 		mov	r2, #1
 410 004c 002083E5 		str	r2, [r3]
 174:../CX3RDKOV5640.c **** 
 175:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 176:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 411              		.loc 1 176 0
 412 0050 38019FE5 		ldr	r0, .L15+20
 413 0054 FEFFFFEB 		bl	_txe_timer_deactivate
 177:../CX3RDKOV5640.c **** #endif
 178:../CX3RDKOV5640.c **** 
 179:../CX3RDKOV5640.c **** 
 180:../CX3RDKOV5640.c ****     /* Place the EP in NAK mode before cleaning up the pipe. */
 181:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 414              		.loc 1 181 0
 415 0058 8300A0E3 		mov	r0, #131
 416 005c 0110A0E3 		mov	r1, #1
 417 0060 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 182:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 418              		.loc 1 182 0
 419 0064 6400A0E3 		mov	r0, #100
 420 0068 FEFFFFEB 		bl	CyFx3BusyWait
 183:../CX3RDKOV5640.c **** 
 184:../CX3RDKOV5640.c ****     /* Reset USB EP and DMA */
 185:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 421              		.loc 1 185 0
 422 006c 8300A0E3 		mov	r0, #131
 423 0070 FEFFFFEB 		bl	CyU3PUsbFlushEp
 186:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 424              		.loc 1 186 0
 425 0074 18019FE5 		ldr	r0, .L15+24
 426 0078 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 427 007c 08000BE5 		str	r0, [fp, #-8]
 187:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 428              		.loc 1 187 0
 429 0080 08301BE5 		ldr	r3, [fp, #-8]
 430 0084 000053E3 		cmp	r3, #0
 431 0088 0500000A 		beq	.L11
 188:../CX3RDKOV5640.c ****     {
 189:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 432              		.loc 1 189 0
 433 008c 0400A0E3 		mov	r0, #4
 434 0090 00119FE5 		ldr	r1, .L15+28
 435 0094 08201BE5 		ldr	r2, [fp, #-8]
 436 0098 FEFFFFEB 		bl	CyU3PDebugPrint
 190:../CX3RDKOV5640.c ****         return status;
 437              		.loc 1 190 0
 438 009c 08301BE5 		ldr	r3, [fp, #-8]
 439 00a0 320000EA 		b	.L12
 440              	.L11:
 191:../CX3RDKOV5640.c ****     }
 192:../CX3RDKOV5640.c **** 
 193:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 441              		.loc 1 193 0
 442 00a4 E8009FE5 		ldr	r0, .L15+24
 443 00a8 0010A0E3 		mov	r1, #0
 444 00ac 0020A0E3 		mov	r2, #0
 445 00b0 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetXfer
 446 00b4 08000BE5 		str	r0, [fp, #-8]
 194:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 447              		.loc 1 194 0
 448 00b8 08301BE5 		ldr	r3, [fp, #-8]
 449 00bc 000053E3 		cmp	r3, #0
 450 00c0 0500000A 		beq	.L13
 195:../CX3RDKOV5640.c ****     {
 196:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 451              		.loc 1 196 0
 452 00c4 0400A0E3 		mov	r0, #4
 453 00c8 CC109FE5 		ldr	r1, .L15+32
 454 00cc 08201BE5 		ldr	r2, [fp, #-8]
 455 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 197:../CX3RDKOV5640.c ****         return status;
 456              		.loc 1 197 0
 457 00d4 08301BE5 		ldr	r3, [fp, #-8]
 458 00d8 240000EA 		b	.L12
 459              	.L13:
 198:../CX3RDKOV5640.c ****     }
 199:../CX3RDKOV5640.c **** 
 200:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 460              		.loc 1 200 0
 461 00dc 8300A0E3 		mov	r0, #131
 462 00e0 0010A0E3 		mov	r1, #0
 463 00e4 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 201:../CX3RDKOV5640.c ****     CyU3PBusyWait (200);
 464              		.loc 1 201 0
 465 00e8 C800A0E3 		mov	r0, #200
 466 00ec FEFFFFEB 		bl	CyFx3BusyWait
 202:../CX3RDKOV5640.c **** //
 203:../CX3RDKOV5640.c **** //    /* Place the EP in NAK mode before cleaning up the pipe. */
 204:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 205:../CX3RDKOV5640.c **** //    CyU3PBusyWait (100);
 206:../CX3RDKOV5640.c **** //
 207:../CX3RDKOV5640.c **** //    /* Reset USB EP and DMA */
 208:../CX3RDKOV5640.c **** //    CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 209:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 210:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 211:../CX3RDKOV5640.c **** //    {
 212:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 213:../CX3RDKOV5640.c **** //        return status;
 214:../CX3RDKOV5640.c **** //    }
 215:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 216:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 217:../CX3RDKOV5640.c **** //    {
 218:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 219:../CX3RDKOV5640.c **** //        return status;
 220:../CX3RDKOV5640.c **** //    }
 221:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 222:../CX3RDKOV5640.c **** //    CyU3PBusyWait (200);
 223:../CX3RDKOV5640.c **** 
 224:../CX3RDKOV5640.c **** 	 /* Night Mode function
 225:../CX3RDKOV5640.c **** 	 *  --------------------
 226:../CX3RDKOV5640.c **** 	 *  esOV5640_Nightmode API is used to enable the Nightmode
 227:../CX3RDKOV5640.c **** 	 *  of OV5640 sensor.
 228:../CX3RDKOV5640.c **** 	 *  Set Enable -- Cytrue to enable Nightmode
 229:../CX3RDKOV5640.c **** 	 * 				  CyFalse to Disable Nightmode
 230:../CX3RDKOV5640.c **** 	 *
 231:../CX3RDKOV5640.c **** 	 *  Set NightMode_option -- 1 to 6 to set different night modes
 232:../CX3RDKOV5640.c **** 	 *
 233:../CX3RDKOV5640.c **** 	 * To test different night modes, uncomment the below statement and build the firmware
 234:../CX3RDKOV5640.c **** 	 */
 235:../CX3RDKOV5640.c ****     //TODO Change this Function to "Sensor Specific" Nightmode Function to enable the nightmode(If 
 236:../CX3RDKOV5640.c **** 	/*esOV5640_Nightmode(CyTrue,3);*/
 237:../CX3RDKOV5640.c **** 
 238:../CX3RDKOV5640.c **** 
 239:../CX3RDKOV5640.c ****     /* Resume the Fixed Function GPIF State machine */
 240:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyFalse);
 467              		.loc 1 240 0
 468 00f0 0000A0E3 		mov	r0, #0
 469 00f4 FEFFFFEB 		bl	CyU3PGpifSMControl
 241:../CX3RDKOV5640.c **** 
 242:../CX3RDKOV5640.c ****     glActiveSocket = 0;
 470              		.loc 1 242 0
 471 00f8 A0309FE5 		ldr	r3, .L15+36
 472 00fc 0020A0E3 		mov	r2, #0
 473 0100 0020C3E5 		strb	r2, [r3]
 243:../CX3RDKOV5640.c ****     CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 474              		.loc 1 243 0
 475 0104 0230A0E3 		mov	r3, #2
 476 0108 00308DE5 		str	r3, [sp]
 477 010c 90009FE5 		ldr	r0, .L15+40
 478 0110 0010A0E3 		mov	r1, #0
 479 0114 88209FE5 		ldr	r2, .L15+40
 480 0118 0030A0E3 		mov	r3, #0
 481 011c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 244:../CX3RDKOV5640.c ****     		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 245:../CX3RDKOV5640.c **** 
 246:../CX3RDKOV5640.c ****     CyU3PThreadSleep(10);
 482              		.loc 1 246 0
 483 0120 0A00A0E3 		mov	r0, #10
 484 0124 FEFFFFEB 		bl	_tx_thread_sleep
 247:../CX3RDKOV5640.c **** 
 248:../CX3RDKOV5640.c ****     /* Wake Mipi interface and Image Sensor */
 249:../CX3RDKOV5640.c ****     CyU3PMipicsiWakeup();
 485              		.loc 1 249 0
 486 0128 FEFFFFEB 		bl	CyU3PMipicsiWakeup
 250:../CX3RDKOV5640.c **** 
 251:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the sensor
 252:../CX3RDKOV5640.c ****     esCamera_Power_Up();
 487              		.loc 1 252 0
 488 012c FEFFFFEB 		bl	esCamera_Power_Up
 253:../CX3RDKOV5640.c **** 
 254:../CX3RDKOV5640.c ****     glMipiActive = CyTrue;
 489              		.loc 1 254 0
 490 0130 70309FE5 		ldr	r3, .L15+44
 491 0134 0120A0E3 		mov	r2, #1
 492 0138 002083E5 		str	r2, [r3]
 255:../CX3RDKOV5640.c **** 
 256:../CX3RDKOV5640.c ****     //TODO Change this Function with "Sensor Specific" AutoFocus Function to Set the AutoFocus of t
 257:../CX3RDKOV5640.c **** 	if(glStillCaptureStart!= CyTrue)
 493              		.loc 1 257 0
 494 013c 68309FE5 		ldr	r3, .L15+48
 495 0140 003093E5 		ldr	r3, [r3]
 496 0144 010053E3 		cmp	r3, #1
 497 0148 0700000A 		beq	.L14
 258:../CX3RDKOV5640.c **** 	{
 259:../CX3RDKOV5640.c **** 		if(g_IsAutoFocus)
 498              		.loc 1 259 0
 499 014c 5C309FE5 		ldr	r3, .L15+52
 500 0150 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0154 000053E3 		cmp	r3, #0
 502 0158 0300000A 		beq	.L14
 260:../CX3RDKOV5640.c **** 			esOV5640_SetAutofocus(g_IsAutoFocus);
 503              		.loc 1 260 0
 504 015c 4C309FE5 		ldr	r3, .L15+52
 505 0160 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0164 0300A0E1 		mov	r0, r3
 507 0168 FEFFFFEB 		bl	esOV5640_SetAutofocus
 508              	.L14:
 261:../CX3RDKOV5640.c **** 	}
 262:../CX3RDKOV5640.c ****     return CY_U3P_SUCCESS;
 509              		.loc 1 262 0
 510 016c 0030A0E3 		mov	r3, #0
 511              	.L12:
 263:../CX3RDKOV5640.c **** }
 512              		.loc 1 263 0
 513 0170 0300A0E1 		mov	r0, r3
 514 0174 04D04BE2 		sub	sp, fp, #4
 515              		@ sp needed
 516 0178 0088BDE8 		ldmfd	sp!, {fp, pc}
 517              	.L16:
 518              		.align	2
 519              	.L15:
 520 017c 00000000 		.word	glIsApplnActive
 521 0180 00000000 		.word	glDmaDone
 522 0184 00000000 		.word	glDMATxCount
 523 0188 00000000 		.word	glHitFV
 524 018c 00000000 		.word	doLpmDisable
 525 0190 00000000 		.word	UvcTimer
 526 0194 00000000 		.word	glChHandleUVCStream
 527 0198 00000000 		.word	.LC0
 528 019c 24000000 		.word	.LC1
 529 01a0 00000000 		.word	glActiveSocket
 530 01a4 01010000 		.word	257
 531 01a8 00000000 		.word	glMipiActive
 532 01ac 00000000 		.word	glStillCaptureStart
 533 01b0 00000000 		.word	g_IsAutoFocus
 534              		.cfi_endproc
 535              	.LFE3:
 537              		.section	.rodata
 538 0042 0000     		.align	2
 539              	.LC2:
 540 0044 0A0D4170 		.ascii	"\012\015AplnStop:ChannelReset Err = 0x%x\000"
 540      6C6E5374 
 540      6F703A43 
 540      68616E6E 
 540      656C5265 
 541              		.section	.text.esUVCUvcApplnStop,"ax",%progbits
 542              		.align	2
 543              		.global	esUVCUvcApplnStop
 545              	esUVCUvcApplnStop:
 546              	.LFB4:
 264:../CX3RDKOV5640.c **** 
 265:../CX3RDKOV5640.c **** /* This function stops the video streaming. It is called from the USB event
 266:../CX3RDKOV5640.c ****  * handler, when there is a reset / disconnect or SET_INTERFACE for alternate
 267:../CX3RDKOV5640.c ****  * interface 0 in case of ischronous implementation or when a Clear Feature (Halt)
 268:../CX3RDKOV5640.c ****  * request is received (in case of bulk only implementation).
 269:../CX3RDKOV5640.c ****  */
 270:../CX3RDKOV5640.c ****     void
 271:../CX3RDKOV5640.c **** esUVCUvcApplnStop(void)
 272:../CX3RDKOV5640.c **** {
 547              		.loc 1 272 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 00482DE9 		stmfd	sp!, {fp, lr}
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 11, -8
 555              		.cfi_offset 14, -4
 556 0004 04B08DE2 		add	fp, sp, #4
 557              	.LCFI9:
 558              		.cfi_def_cfa 11, 4
 559 0008 08D04DE2 		sub	sp, sp, #8
 273:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 560              		.loc 1 273 0
 561 000c 0030A0E3 		mov	r3, #0
 562 0010 08300BE5 		str	r3, [fp, #-8]
 274:../CX3RDKOV5640.c **** 
 275:../CX3RDKOV5640.c ****     /* Update the flag so that the application thread is notified of this. */
 276:../CX3RDKOV5640.c ****     glIsApplnActive = CyFalse;
 563              		.loc 1 276 0
 564 0014 DC309FE5 		ldr	r3, .L20
 565 0018 0020A0E3 		mov	r2, #0
 566 001c 002083E5 		str	r2, [r3]
 277:../CX3RDKOV5640.c **** 
 278:../CX3RDKOV5640.c ****     /* Stop the image sensor and CX3 mipi interface */
 279:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSleep();
 567              		.loc 1 279 0
 568 0020 FEFFFFEB 		bl	CyU3PMipicsiSleep
 569 0024 08000BE5 		str	r0, [fp, #-8]
 280:../CX3RDKOV5640.c **** 
 281:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
 282:../CX3RDKOV5640.c ****     esCamera_Power_Down();
 570              		.loc 1 282 0
 571 0028 FEFFFFEB 		bl	esCamera_Power_Down
 283:../CX3RDKOV5640.c **** 
 284:../CX3RDKOV5640.c ****     glMipiActive = CyFalse;
 572              		.loc 1 284 0
 573 002c C8309FE5 		ldr	r3, .L20+4
 574 0030 0020A0E3 		mov	r2, #0
 575 0034 002083E5 		str	r2, [r3]
 285:../CX3RDKOV5640.c **** 
 286:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 287:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 576              		.loc 1 287 0
 577 0038 C0009FE5 		ldr	r0, .L20+8
 578 003c FEFFFFEB 		bl	_txe_timer_deactivate
 288:../CX3RDKOV5640.c **** #endif
 289:../CX3RDKOV5640.c **** 
 290:../CX3RDKOV5640.c ****     /* Pause the GPIF interface*/
 291:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 579              		.loc 1 291 0
 580 0040 0100A0E3 		mov	r0, #1
 581 0044 FEFFFFEB 		bl	CyU3PGpifSMControl
 292:../CX3RDKOV5640.c **** 
 293:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 582              		.loc 1 293 0
 583 0048 8300A0E3 		mov	r0, #131
 584 004c 0110A0E3 		mov	r1, #1
 585 0050 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 294:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 586              		.loc 1 294 0
 587 0054 6400A0E3 		mov	r0, #100
 588 0058 FEFFFFEB 		bl	CyFx3BusyWait
 295:../CX3RDKOV5640.c **** 
 296:../CX3RDKOV5640.c ****     /* Abort and destroy the video streaming channel */
 297:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set DSCR_SIZE field i
 298:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 589              		.loc 1 298 0
 590 005c A0009FE5 		ldr	r0, .L20+12
 591 0060 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 592 0064 08000BE5 		str	r0, [fp, #-8]
 299:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 593              		.loc 1 299 0
 594 0068 08301BE5 		ldr	r3, [fp, #-8]
 595 006c 000053E3 		cmp	r3, #0
 596 0070 0300000A 		beq	.L18
 300:../CX3RDKOV5640.c ****     {
 301:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStop:ChannelReset Err = 0x%x",status);
 597              		.loc 1 301 0
 598 0074 0400A0E3 		mov	r0, #4
 599 0078 88109FE5 		ldr	r1, .L20+16
 600 007c 08201BE5 		ldr	r2, [fp, #-8]
 601 0080 FEFFFFEB 		bl	CyU3PDebugPrint
 602              	.L18:
 302:../CX3RDKOV5640.c ****     }
 303:../CX3RDKOV5640.c ****     CyU3PThreadSleep(25);
 603              		.loc 1 303 0
 604 0084 1900A0E3 		mov	r0, #25
 605 0088 FEFFFFEB 		bl	_tx_thread_sleep
 304:../CX3RDKOV5640.c **** 
 305:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
 306:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 606              		.loc 1 306 0
 607 008c 8300A0E3 		mov	r0, #131
 608 0090 FEFFFFEB 		bl	CyU3PUsbFlushEp
 307:../CX3RDKOV5640.c ****     /* Clear the stall condition and sequence numbers if ClearFeature. */
 308:../CX3RDKOV5640.c ****     if (glIsClearFeature)
 609              		.loc 1 308 0
 610 0094 70309FE5 		ldr	r3, .L20+20
 611 0098 003093E5 		ldr	r3, [r3]
 612 009c 000053E3 		cmp	r3, #0
 613 00a0 0600000A 		beq	.L19
 309:../CX3RDKOV5640.c ****     {
 310:../CX3RDKOV5640.c ****         CyU3PUsbStall (ES_UVC_EP_BULK_VIDEO, CyFalse, CyTrue);
 614              		.loc 1 310 0
 615 00a4 8300A0E3 		mov	r0, #131
 616 00a8 0010A0E3 		mov	r1, #0
 617 00ac 0120A0E3 		mov	r2, #1
 618 00b0 FEFFFFEB 		bl	CyU3PUsbStall
 311:../CX3RDKOV5640.c ****         glIsClearFeature = CyFalse;
 619              		.loc 1 311 0
 620 00b4 50309FE5 		ldr	r3, .L20+20
 621 00b8 0020A0E3 		mov	r2, #0
 622 00bc 002083E5 		str	r2, [r3]
 623              	.L19:
 312:../CX3RDKOV5640.c ****     }
 313:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 624              		.loc 1 313 0
 625 00c0 8300A0E3 		mov	r0, #131
 626 00c4 0010A0E3 		mov	r1, #0
 627 00c8 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 314:../CX3RDKOV5640.c **** 	CyU3PBusyWait (200);
 628              		.loc 1 314 0
 629 00cc C800A0E3 		mov	r0, #200
 630 00d0 FEFFFFEB 		bl	CyFx3BusyWait
 315:../CX3RDKOV5640.c **** 
 316:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 631              		.loc 1 316 0
 632 00d4 34309FE5 		ldr	r3, .L20+24
 633 00d8 0020A0E3 		mov	r2, #0
 634 00dc 002083E5 		str	r2, [r3]
 317:../CX3RDKOV5640.c ****     glDmaDone = 0;
 635              		.loc 1 317 0
 636 00e0 2C309FE5 		ldr	r3, .L20+28
 637 00e4 0020A0E3 		mov	r2, #0
 638 00e8 002083E5 		str	r2, [r3]
 318:../CX3RDKOV5640.c **** 
 319:../CX3RDKOV5640.c ****     /* Enable USB 3.0 LPM */
 320:../CX3RDKOV5640.c ****     CyU3PUsbLPMEnable ();
 639              		.loc 1 320 0
 640 00ec FEFFFFEB 		bl	CyU3PUsbLPMEnable
 321:../CX3RDKOV5640.c **** }
 641              		.loc 1 321 0
 642 00f0 04D04BE2 		sub	sp, fp, #4
 643              		@ sp needed
 644 00f4 0088BDE8 		ldmfd	sp!, {fp, pc}
 645              	.L21:
 646              		.align	2
 647              	.L20:
 648 00f8 00000000 		.word	glIsApplnActive
 649 00fc 00000000 		.word	glMipiActive
 650 0100 00000000 		.word	UvcTimer
 651 0104 00000000 		.word	glChHandleUVCStream
 652 0108 44000000 		.word	.LC2
 653 010c 00000000 		.word	glIsClearFeature
 654 0110 00000000 		.word	glDMATxCount
 655 0114 00000000 		.word	glDmaDone
 656              		.cfi_endproc
 657              	.LFE4:
 659              		.section	.rodata
 660 0067 00       		.align	2
 661              	.LC3:
 662 0068 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK0 Err = 0x%x\000"
 662      69664342 
 662      3A577261 
 662      70557020 
 662      53434B30 
 663              		.align	2
 664              	.LC4:
 665 0088 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK1 Err = 0x%x\000"
 665      69664342 
 665      3A577261 
 665      70557020 
 665      53434B31 
 666              		.section	.text.esUVCGpifCB,"ax",%progbits
 667              		.align	2
 668              		.global	esUVCGpifCB
 670              	esUVCGpifCB:
 671              	.LFB5:
 322:../CX3RDKOV5640.c **** 
 323:../CX3RDKOV5640.c **** /* GpifCB callback function is invoked when FV triggers GPIF interrupt */
 324:../CX3RDKOV5640.c ****     void
 325:../CX3RDKOV5640.c **** esUVCGpifCB (
 326:../CX3RDKOV5640.c ****         CyU3PGpifEventType event,
 327:../CX3RDKOV5640.c ****         uint8_t currentState
 328:../CX3RDKOV5640.c ****         )
 329:../CX3RDKOV5640.c **** {
 672              		.loc 1 329 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 00482DE9 		stmfd	sp!, {fp, lr}
 677              	.LCFI10:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 11, -8
 680              		.cfi_offset 14, -4
 681 0004 04B08DE2 		add	fp, sp, #4
 682              	.LCFI11:
 683              		.cfi_def_cfa 11, 4
 684 0008 10D04DE2 		sub	sp, sp, #16
 685 000c 0020A0E1 		mov	r2, r0
 686 0010 0130A0E1 		mov	r3, r1
 687 0014 0D204BE5 		strb	r2, [fp, #-13]
 688 0018 0E304BE5 		strb	r3, [fp, #-14]
 330:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 689              		.loc 1 330 0
 690 001c 0030A0E3 		mov	r3, #0
 691 0020 08300BE5 		str	r3, [fp, #-8]
 331:../CX3RDKOV5640.c ****     /* Handle interrupt from the State Machine */
 332:../CX3RDKOV5640.c ****     if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
 692              		.loc 1 332 0
 693 0024 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 694 0028 010053E3 		cmp	r3, #1
 695 002c 1C00001A 		bne	.L22
 333:../CX3RDKOV5640.c ****     {
 334:../CX3RDKOV5640.c ****         /* Wrapup Socket 0*/
 335:../CX3RDKOV5640.c ****         if(currentState == CX3_PARTIAL_BUFFER_IN_SCK0)
 696              		.loc 1 335 0
 697 0030 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 698 0034 090053E3 		cmp	r3, #9
 699 0038 0B00001A 		bne	.L24
 336:../CX3RDKOV5640.c ****         {
 337:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,0);
 700              		.loc 1 337 0
 701 003c 68009FE5 		ldr	r0, .L26
 702 0040 0010A0E3 		mov	r1, #0
 703 0044 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 704 0048 08000BE5 		str	r0, [fp, #-8]
 338:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 705              		.loc 1 338 0
 706 004c 08301BE5 		ldr	r3, [fp, #-8]
 707 0050 000053E3 		cmp	r3, #0
 708 0054 1200000A 		beq	.L22
 339:../CX3RDKOV5640.c ****             {
 340:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK0 Err = 0x%x",status);
 709              		.loc 1 340 0
 710 0058 0400A0E3 		mov	r0, #4
 711 005c 4C109FE5 		ldr	r1, .L26+4
 712 0060 08201BE5 		ldr	r2, [fp, #-8]
 713 0064 FEFFFFEB 		bl	CyU3PDebugPrint
 714 0068 0D0000EA 		b	.L22
 715              	.L24:
 341:../CX3RDKOV5640.c ****             }
 342:../CX3RDKOV5640.c ****         }
 343:../CX3RDKOV5640.c ****         /* Wrapup Socket 1 */
 344:../CX3RDKOV5640.c ****         else if(currentState == CX3_PARTIAL_BUFFER_IN_SCK1)
 716              		.loc 1 344 0
 717 006c 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 718 0070 0A0053E3 		cmp	r3, #10
 719 0074 0A00001A 		bne	.L22
 345:../CX3RDKOV5640.c ****         {
 346:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,1);
 720              		.loc 1 346 0
 721 0078 2C009FE5 		ldr	r0, .L26
 722 007c 0110A0E3 		mov	r1, #1
 723 0080 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 724 0084 08000BE5 		str	r0, [fp, #-8]
 347:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 725              		.loc 1 347 0
 726 0088 08301BE5 		ldr	r3, [fp, #-8]
 727 008c 000053E3 		cmp	r3, #0
 728 0090 0300000A 		beq	.L22
 348:../CX3RDKOV5640.c ****             {
 349:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK1 Err = 0x%x",status);
 729              		.loc 1 349 0
 730 0094 0400A0E3 		mov	r0, #4
 731 0098 14109FE5 		ldr	r1, .L26+8
 732 009c 08201BE5 		ldr	r2, [fp, #-8]
 733 00a0 FEFFFFEB 		bl	CyU3PDebugPrint
 734              	.L22:
 350:../CX3RDKOV5640.c ****             }
 351:../CX3RDKOV5640.c ****         }
 352:../CX3RDKOV5640.c ****     }
 353:../CX3RDKOV5640.c **** }
 735              		.loc 1 353 0
 736 00a4 04D04BE2 		sub	sp, fp, #4
 737              		@ sp needed
 738 00a8 0088BDE8 		ldmfd	sp!, {fp, pc}
 739              	.L27:
 740              		.align	2
 741              	.L26:
 742 00ac 00000000 		.word	glChHandleUVCStream
 743 00b0 68000000 		.word	.LC3
 744 00b4 88000000 		.word	.LC4
 745              		.cfi_endproc
 746              	.LFE5:
 748              		.section	.text.esUVCUvcAppDmaCallback,"ax",%progbits
 749              		.align	2
 750              		.global	esUVCUvcAppDmaCallback
 752              	esUVCUvcAppDmaCallback:
 753              	.LFB6:
 354:../CX3RDKOV5640.c **** 
 355:../CX3RDKOV5640.c **** 
 356:../CX3RDKOV5640.c **** /* DMA callback function to handle the produce and consume events. */
 357:../CX3RDKOV5640.c ****     void
 358:../CX3RDKOV5640.c **** esUVCUvcAppDmaCallback (
 359:../CX3RDKOV5640.c ****         CyU3PDmaMultiChannel   *chHandle,
 360:../CX3RDKOV5640.c ****         CyU3PDmaCbType_t  type,
 361:../CX3RDKOV5640.c ****         CyU3PDmaCBInput_t *input
 362:../CX3RDKOV5640.c ****         )
 363:../CX3RDKOV5640.c **** {
 754              		.loc 1 363 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 32
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 00482DE9 		stmfd	sp!, {fp, lr}
 759              	.LCFI12:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 11, -8
 762              		.cfi_offset 14, -4
 763 0004 04B08DE2 		add	fp, sp, #4
 764              	.LCFI13:
 765              		.cfi_def_cfa 11, 4
 766 0008 28D04DE2 		sub	sp, sp, #40
 767 000c 18000BE5 		str	r0, [fp, #-24]
 768 0010 0130A0E1 		mov	r3, r1
 769 0014 20200BE5 		str	r2, [fp, #-32]
 770 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 364:../CX3RDKOV5640.c ****     CyU3PDmaBuffer_t DmaBuffer;
 365:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 771              		.loc 1 365 0
 772 001c 0030A0E3 		mov	r3, #0
 773 0020 08300BE5 		str	r3, [fp, #-8]
 366:../CX3RDKOV5640.c **** 
 367:../CX3RDKOV5640.c ****     if (type == CY_U3P_DMA_CB_PROD_EVENT)
 774              		.loc 1 367 0
 775 0024 BA315BE1 		ldrh	r3, [fp, #-26]
 776 0028 080053E3 		cmp	r3, #8
 777 002c 5800001A 		bne	.L29
 368:../CX3RDKOV5640.c ****     {
 369:../CX3RDKOV5640.c ****         /* This is a produce event notification to the CPU. This notification is
 370:../CX3RDKOV5640.c ****          * received upon reception of every buffer. The buffer will not be sent
 371:../CX3RDKOV5640.c ****          * out unless it is explicitly committed. The call shall fail if there
 372:../CX3RDKOV5640.c ****          * is a bus reset / usb disconnect or if there is any application error. */
 373:../CX3RDKOV5640.c **** 
 374:../CX3RDKOV5640.c ****         /* Disable USB 3.0 LPM while Buffer is being transmitted out*/
 375:../CX3RDKOV5640.c ****         if ((CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED) && (doLpmDisable))
 778              		.loc 1 375 0
 779 0030 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 780 0034 0030A0E1 		mov	r3, r0
 781 0038 030053E3 		cmp	r3, #3
 782 003c 0B00001A 		bne	.L30
 783              		.loc 1 375 0 is_stmt 0 discriminator 1
 784 0040 38339FE5 		ldr	r3, .L43
 785 0044 003093E5 		ldr	r3, [r3]
 786 0048 000053E3 		cmp	r3, #0
 787 004c 0700000A 		beq	.L30
 376:../CX3RDKOV5640.c ****         {
 377:../CX3RDKOV5640.c ****             CyU3PUsbLPMDisable ();
 788              		.loc 1 377 0 is_stmt 1
 789 0050 FEFFFFEB 		bl	CyU3PUsbLPMDisable
 378:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 790              		.loc 1 378 0
 791 0054 0000A0E3 		mov	r0, #0
 792 0058 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 379:../CX3RDKOV5640.c ****             CyU3PBusyWait (200);
 793              		.loc 1 379 0
 794 005c C800A0E3 		mov	r0, #200
 795 0060 FEFFFFEB 		bl	CyFx3BusyWait
 380:../CX3RDKOV5640.c **** 
 381:../CX3RDKOV5640.c ****             doLpmDisable = CyFalse;
 796              		.loc 1 381 0
 797 0064 14339FE5 		ldr	r3, .L43
 798 0068 0020A0E3 		mov	r2, #0
 799 006c 002083E5 		str	r2, [r3]
 800              	.L30:
 382:../CX3RDKOV5640.c ****         }
 383:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 384:../CX3RDKOV5640.c ****             CyU3PTimerStart (&UvcTimer);
 801              		.loc 1 384 0
 802 0070 0C039FE5 		ldr	r0, .L43+4
 803 0074 FEFFFFEB 		bl	_txe_timer_activate
 385:../CX3RDKOV5640.c **** #endif
 386:../CX3RDKOV5640.c **** 
 387:../CX3RDKOV5640.c ****         status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 804              		.loc 1 387 0
 805 0078 14304BE2 		sub	r3, fp, #20
 806 007c 18001BE5 		ldr	r0, [fp, #-24]
 807 0080 0310A0E1 		mov	r1, r3
 808 0084 0020A0E3 		mov	r2, #0
 809 0088 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 810 008c 08000BE5 		str	r0, [fp, #-8]
 388:../CX3RDKOV5640.c ****         while (status == CY_U3P_SUCCESS)
 811              		.loc 1 388 0
 812 0090 3B0000EA 		b	.L31
 813              	.L36:
 389:../CX3RDKOV5640.c ****         {
 390:../CX3RDKOV5640.c ****             /* Add Headers*/
 391:../CX3RDKOV5640.c ****             if(DmaBuffer.count < ES_UVC_DATA_BUF_SIZE)
 814              		.loc 1 391 0
 815 0094 B0215BE1 		ldrh	r2, [fp, #-16]
 816 0098 E8329FE5 		ldr	r3, .L43+8
 817 009c B030D3E1 		ldrh	r3, [r3]
 818 00a0 030052E1 		cmp	r2, r3
 819 00a4 0800002A 		bcs	.L32
 392:../CX3RDKOV5640.c ****             {
 393:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_EOF);
 820              		.loc 1 393 0
 821 00a8 14301BE5 		ldr	r3, [fp, #-20]
 822 00ac 0C3043E2 		sub	r3, r3, #12
 823 00b0 0300A0E1 		mov	r0, r3
 824 00b4 0210A0E3 		mov	r1, #2
 825 00b8 FEFFFFEB 		bl	esUVCUvcAddHeader
 394:../CX3RDKOV5640.c ****                 glHitFV = CyTrue;
 826              		.loc 1 394 0
 827 00bc C8329FE5 		ldr	r3, .L43+12
 828 00c0 0120A0E3 		mov	r2, #1
 829 00c4 002083E5 		str	r2, [r3]
 830 00c8 040000EA 		b	.L33
 831              	.L32:
 395:../CX3RDKOV5640.c ****             }
 396:../CX3RDKOV5640.c ****             else
 397:../CX3RDKOV5640.c ****             {
 398:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_FRAME);
 832              		.loc 1 398 0
 833 00cc 14301BE5 		ldr	r3, [fp, #-20]
 834 00d0 0C3043E2 		sub	r3, r3, #12
 835 00d4 0300A0E1 		mov	r0, r3
 836 00d8 0010A0E3 		mov	r1, #0
 837 00dc FEFFFFEB 		bl	esUVCUvcAddHeader
 838              	.L33:
 399:../CX3RDKOV5640.c ****             }
 400:../CX3RDKOV5640.c **** 
 401:../CX3RDKOV5640.c ****             /* Commit Buffer to USB*/
 402:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelCommitBuffer (chHandle, (DmaBuffer.count + 12), 0);
 839              		.loc 1 402 0
 840 00e0 B0315BE1 		ldrh	r3, [fp, #-16]
 841 00e4 0C3083E2 		add	r3, r3, #12
 842 00e8 0338A0E1 		mov	r3, r3, asl #16
 843 00ec 2338A0E1 		mov	r3, r3, lsr #16
 844 00f0 18001BE5 		ldr	r0, [fp, #-24]
 845 00f4 0310A0E1 		mov	r1, r3
 846 00f8 0020A0E3 		mov	r2, #0
 847 00fc FEFFFFEB 		bl	CyU3PDmaMultiChannelCommitBuffer
 848 0100 08000BE5 		str	r0, [fp, #-8]
 403:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 849              		.loc 1 403 0
 850 0104 08301BE5 		ldr	r3, [fp, #-8]
 851 0108 000053E3 		cmp	r3, #0
 852 010c 0500000A 		beq	.L34
 404:../CX3RDKOV5640.c ****             {
 405:../CX3RDKOV5640.c ****                    CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 853              		.loc 1 405 0
 854 0110 78029FE5 		ldr	r0, .L43+16
 855 0114 1010A0E3 		mov	r1, #16
 856 0118 0020A0E3 		mov	r2, #0
 857 011c FEFFFFEB 		bl	_txe_event_flags_set
 406:../CX3RDKOV5640.c ****                    break;
 858              		.loc 1 406 0
 859 0120 0000A0E1 		mov	r0, r0	@ nop
 860 0124 930000EA 		b	.L28
 861              	.L34:
 407:../CX3RDKOV5640.c ****             }
 408:../CX3RDKOV5640.c ****             else
 409:../CX3RDKOV5640.c ****             {
 410:../CX3RDKOV5640.c ****                 glDMATxCount++;
 862              		.loc 1 410 0
 863 0128 64329FE5 		ldr	r3, .L43+20
 864 012c 003093E5 		ldr	r3, [r3]
 865 0130 012083E2 		add	r2, r3, #1
 866 0134 58329FE5 		ldr	r3, .L43+20
 867 0138 002083E5 		str	r2, [r3]
 411:../CX3RDKOV5640.c ****                 glDmaDone++;
 868              		.loc 1 411 0
 869 013c 54329FE5 		ldr	r3, .L43+24
 870 0140 003093E5 		ldr	r3, [r3]
 871 0144 012083E2 		add	r2, r3, #1
 872 0148 48329FE5 		ldr	r3, .L43+24
 873 014c 002083E5 		str	r2, [r3]
 412:../CX3RDKOV5640.c ****             }
 413:../CX3RDKOV5640.c **** 
 414:../CX3RDKOV5640.c ****             glActiveSocket ^= 1; /* Toggle the Active Socket */
 874              		.loc 1 414 0
 875 0150 44329FE5 		ldr	r3, .L43+28
 876 0154 0030D3E5 		ldrb	r3, [r3]
 877 0158 FF3003E2 		and	r3, r3, #255
 878 015c 013023E2 		eor	r3, r3, #1
 879 0160 FF2003E2 		and	r2, r3, #255
 880 0164 30329FE5 		ldr	r3, .L43+28
 881 0168 0020C3E5 		strb	r2, [r3]
 415:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 882              		.loc 1 415 0
 883 016c 14304BE2 		sub	r3, fp, #20
 884 0170 18001BE5 		ldr	r0, [fp, #-24]
 885 0174 0310A0E1 		mov	r1, r3
 886 0178 0020A0E3 		mov	r2, #0
 887 017c FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 888 0180 08000BE5 		str	r0, [fp, #-8]
 889              	.L31:
 388:../CX3RDKOV5640.c ****         {
 890              		.loc 1 388 0 discriminator 1
 891 0184 08301BE5 		ldr	r3, [fp, #-8]
 892 0188 000053E3 		cmp	r3, #0
 893 018c C0FFFF0A 		beq	.L36
 894 0190 780000EA 		b	.L28
 895              	.L29:
 416:../CX3RDKOV5640.c ****         }
 417:../CX3RDKOV5640.c ****     }
 418:../CX3RDKOV5640.c ****     else if(type == CY_U3P_DMA_CB_CONS_EVENT)
 896              		.loc 1 418 0
 897 0194 BA315BE1 		ldrh	r3, [fp, #-26]
 898 0198 100053E3 		cmp	r3, #16
 899 019c 7500001A 		bne	.L28
 419:../CX3RDKOV5640.c ****     {
 420:../CX3RDKOV5640.c ****         glDmaDone--;
 900              		.loc 1 420 0
 901 01a0 F0319FE5 		ldr	r3, .L43+24
 902 01a4 003093E5 		ldr	r3, [r3]
 903 01a8 012043E2 		sub	r2, r3, #1
 904 01ac E4319FE5 		ldr	r3, .L43+24
 905 01b0 002083E5 		str	r2, [r3]
 421:../CX3RDKOV5640.c **** 
 422:../CX3RDKOV5640.c ****         /* Check if Frame is completely transferred */
 423:../CX3RDKOV5640.c ****         glIsStreamingStarted = CyTrue;
 906              		.loc 1 423 0
 907 01b4 E4319FE5 		ldr	r3, .L43+32
 908 01b8 0120A0E3 		mov	r2, #1
 909 01bc 002083E5 		str	r2, [r3]
 424:../CX3RDKOV5640.c **** 
 425:../CX3RDKOV5640.c ****         if((glHitFV == CyTrue) && (glDmaDone == 0))
 910              		.loc 1 425 0
 911 01c0 C4319FE5 		ldr	r3, .L43+12
 912 01c4 003093E5 		ldr	r3, [r3]
 913 01c8 010053E3 		cmp	r3, #1
 914 01cc 6900001A 		bne	.L28
 915              		.loc 1 425 0 is_stmt 0 discriminator 1
 916 01d0 C0319FE5 		ldr	r3, .L43+24
 917 01d4 003093E5 		ldr	r3, [r3]
 918 01d8 000053E3 		cmp	r3, #0
 919 01dc 6500001A 		bne	.L28
 426:../CX3RDKOV5640.c ****         {
 427:../CX3RDKOV5640.c ****             glHitFV = CyFalse;
 920              		.loc 1 427 0 is_stmt 1
 921 01e0 A4319FE5 		ldr	r3, .L43+12
 922 01e4 0020A0E3 		mov	r2, #0
 923 01e8 002083E5 		str	r2, [r3]
 428:../CX3RDKOV5640.c ****             glDMATxCount=0;
 924              		.loc 1 428 0
 925 01ec A0319FE5 		ldr	r3, .L43+20
 926 01f0 0020A0E3 		mov	r2, #0
 927 01f4 002083E5 		str	r2, [r3]
 429:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 430:../CX3RDKOV5640.c ****             CyU3PTimerStop (&UvcTimer);
 928              		.loc 1 430 0
 929 01f8 84019FE5 		ldr	r0, .L43+4
 930 01fc FEFFFFEB 		bl	_txe_timer_deactivate
 431:../CX3RDKOV5640.c **** #endif
 432:../CX3RDKOV5640.c **** 
 433:../CX3RDKOV5640.c ****             if (glActiveSocket)
 931              		.loc 1 433 0
 932 0200 94319FE5 		ldr	r3, .L43+28
 933 0204 0030D3E5 		ldrb	r3, [r3]
 934 0208 FF3003E2 		and	r3, r3, #255
 935 020c 000053E3 		cmp	r3, #0
 936 0210 0700000A 		beq	.L38
 434:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK1,
 937              		.loc 1 434 0
 938 0214 0230A0E3 		mov	r3, #2
 939 0218 00308DE5 		str	r3, [sp]
 940 021c 80019FE5 		ldr	r0, .L43+36
 941 0220 0D10A0E3 		mov	r1, #13
 942 0224 78219FE5 		ldr	r2, .L43+36
 943 0228 0030A0E3 		mov	r3, #0
 944 022c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 945 0230 060000EA 		b	.L39
 946              	.L38:
 435:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK1, ES_UVC_GPIF_SWITCH_TIMEOUT);
 436:../CX3RDKOV5640.c ****             else
 437:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 947              		.loc 1 437 0
 948 0234 0230A0E3 		mov	r3, #2
 949 0238 00308DE5 		str	r3, [sp]
 950 023c 60019FE5 		ldr	r0, .L43+36
 951 0240 0010A0E3 		mov	r1, #0
 952 0244 58219FE5 		ldr	r2, .L43+36
 953 0248 0030A0E3 		mov	r3, #0
 954 024c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 955              	.L39:
 438:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 439:../CX3RDKOV5640.c **** 
 440:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 956              		.loc 1 440 0
 957 0250 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 441:../CX3RDKOV5640.c ****             doLpmDisable = CyTrue;
 958              		.loc 1 441 0
 959 0254 24319FE5 		ldr	r3, .L43
 960 0258 0120A0E3 		mov	r2, #1
 961 025c 002083E5 		str	r2, [r3]
 442:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 443:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 962              		.loc 1 443 0
 963 0260 1C019FE5 		ldr	r0, .L43+4
 964 0264 7D1FA0E3 		mov	r1, #500
 965 0268 0020A0E3 		mov	r2, #0
 966 026c FEFFFFEB 		bl	_txe_timer_change
 444:../CX3RDKOV5640.c **** #endif
 445:../CX3RDKOV5640.c **** 
 446:../CX3RDKOV5640.c ****             if(glStillCaptured == CyTrue)
 967              		.loc 1 446 0
 968 0270 30319FE5 		ldr	r3, .L43+40
 969 0274 003093E5 		ldr	r3, [r3]
 970 0278 010053E3 		cmp	r3, #1
 971 027c 1000001A 		bne	.L40
 447:../CX3RDKOV5640.c ****             {
 448:../CX3RDKOV5640.c ****             	glStillCaptured = CyFalse;
 972              		.loc 1 448 0
 973 0280 20319FE5 		ldr	r3, .L43+40
 974 0284 0020A0E3 		mov	r2, #0
 975 0288 002083E5 		str	r2, [r3]
 449:../CX3RDKOV5640.c ****             	glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 976              		.loc 1 449 0
 977 028c 18319FE5 		ldr	r3, .L43+44
 978 0290 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 979 0294 203023E2 		eor	r3, r3, #32
 980 0298 FF2003E2 		and	r2, r3, #255
 981 029c 08319FE5 		ldr	r3, .L43+44
 982 02a0 0120C3E5 		strb	r2, [r3, #1]
 450:../CX3RDKOV5640.c ****             	glFrameIndexToSet = glCurrentFrameIndex;
 983              		.loc 1 450 0
 984 02a4 04319FE5 		ldr	r3, .L43+48
 985 02a8 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 986 02ac 00319FE5 		ldr	r3, .L43+52
 987 02b0 0020C3E5 		strb	r2, [r3]
 451:../CX3RDKOV5640.c ****             	CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 988              		.loc 1 451 0
 989 02b4 D4009FE5 		ldr	r0, .L43+16
 990 02b8 1010A0E3 		mov	r1, #16
 991 02bc 0020A0E3 		mov	r2, #0
 992 02c0 FEFFFFEB 		bl	_txe_event_flags_set
 993              	.L40:
 452:../CX3RDKOV5640.c ****             }
 453:../CX3RDKOV5640.c ****             if(glStillCaptureStart == CyTrue)
 994              		.loc 1 453 0
 995 02c4 EC309FE5 		ldr	r3, .L43+56
 996 02c8 003093E5 		ldr	r3, [r3]
 997 02cc 010053E3 		cmp	r3, #1
 998 02d0 2800001A 		bne	.L28
 454:../CX3RDKOV5640.c ****             {
 455:../CX3RDKOV5640.c ****             	if(glStillSkip == 3)
 999              		.loc 1 455 0
 1000 02d4 E0309FE5 		ldr	r3, .L43+60
 1001 02d8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1002 02dc 030053E3 		cmp	r3, #3
 1003 02e0 0D00001A 		bne	.L41
 456:../CX3RDKOV5640.c **** 				{
 457:../CX3RDKOV5640.c ****             		glStillSkip--;
 1004              		.loc 1 457 0
 1005 02e4 D0309FE5 		ldr	r3, .L43+60
 1006 02e8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 02ec 013043E2 		sub	r3, r3, #1
 1008 02f0 FF2003E2 		and	r2, r3, #255
 1009 02f4 C0309FE5 		ldr	r3, .L43+60
 1010 02f8 0020C3E5 		strb	r2, [r3]
 458:../CX3RDKOV5640.c ****             		glFrameIndexToSet = 4;
 1011              		.loc 1 458 0
 1012 02fc B0309FE5 		ldr	r3, .L43+52
 1013 0300 0420A0E3 		mov	r2, #4
 1014 0304 0020C3E5 		strb	r2, [r3]
 459:../CX3RDKOV5640.c **** 					CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1015              		.loc 1 459 0
 1016 0308 80009FE5 		ldr	r0, .L43+16
 1017 030c 1010A0E3 		mov	r1, #16
 1018 0310 0020A0E3 		mov	r2, #0
 1019 0314 FEFFFFEB 		bl	_txe_event_flags_set
 1020 0318 160000EA 		b	.L28
 1021              	.L41:
 460:../CX3RDKOV5640.c **** 				}
 461:../CX3RDKOV5640.c ****             	else if(glStillSkip == 0)
 1022              		.loc 1 461 0
 1023 031c 98309FE5 		ldr	r3, .L43+60
 1024 0320 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1025 0324 000053E3 		cmp	r3, #0
 1026 0328 0C00001A 		bne	.L42
 462:../CX3RDKOV5640.c ****             	{
 463:../CX3RDKOV5640.c ****             		glStillCaptureStart = CyFalse;
 1027              		.loc 1 463 0
 1028 032c 84309FE5 		ldr	r3, .L43+56
 1029 0330 0020A0E3 		mov	r2, #0
 1030 0334 002083E5 		str	r2, [r3]
 464:../CX3RDKOV5640.c **** 					glStillCaptured = CyTrue;
 1031              		.loc 1 464 0
 1032 0338 68309FE5 		ldr	r3, .L43+40
 1033 033c 0120A0E3 		mov	r2, #1
 1034 0340 002083E5 		str	r2, [r3]
 465:../CX3RDKOV5640.c **** 					glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1035              		.loc 1 465 0
 1036 0344 60309FE5 		ldr	r3, .L43+44
 1037 0348 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1038 034c 203023E2 		eor	r3, r3, #32
 1039 0350 FF2003E2 		and	r2, r3, #255
 1040 0354 50309FE5 		ldr	r3, .L43+44
 1041 0358 0120C3E5 		strb	r2, [r3, #1]
 1042 035c 050000EA 		b	.L28
 1043              	.L42:
 466:../CX3RDKOV5640.c ****             	}
 467:../CX3RDKOV5640.c ****             	else
 468:../CX3RDKOV5640.c ****             		glStillSkip--;
 1044              		.loc 1 468 0
 1045 0360 54309FE5 		ldr	r3, .L43+60
 1046 0364 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0368 013043E2 		sub	r3, r3, #1
 1048 036c FF2003E2 		and	r2, r3, #255
 1049 0370 44309FE5 		ldr	r3, .L43+60
 1050 0374 0020C3E5 		strb	r2, [r3]
 1051              	.L28:
 469:../CX3RDKOV5640.c ****             }
 470:../CX3RDKOV5640.c ****         }
 471:../CX3RDKOV5640.c ****     }
 472:../CX3RDKOV5640.c **** }
 1052              		.loc 1 472 0
 1053 0378 04D04BE2 		sub	sp, fp, #4
 1054              		@ sp needed
 1055 037c 0088BDE8 		ldmfd	sp!, {fp, pc}
 1056              	.L44:
 1057              		.align	2
 1058              	.L43:
 1059 0380 00000000 		.word	doLpmDisable
 1060 0384 00000000 		.word	UvcTimer
 1061 0388 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 1062 038c 00000000 		.word	glHitFV
 1063 0390 00000000 		.word	glTimerEvent
 1064 0394 00000000 		.word	glDMATxCount
 1065 0398 00000000 		.word	glDmaDone
 1066 039c 00000000 		.word	glActiveSocket
 1067 03a0 00000000 		.word	glIsStreamingStarted
 1068 03a4 01010000 		.word	257
 1069 03a8 00000000 		.word	glStillCaptured
 1070 03ac 00000000 		.word	glUVCHeader
 1071 03b0 00000000 		.word	glCurrentFrameIndex
 1072 03b4 00000000 		.word	glFrameIndexToSet
 1073 03b8 00000000 		.word	glStillCaptureStart
 1074 03bc 00000000 		.word	glStillSkip
 1075              		.cfi_endproc
 1076              	.LFE6:
 1078              		.section	.text.esUVCUvcApplnUSBEventCB,"ax",%progbits
 1079              		.align	2
 1081              	esUVCUvcApplnUSBEventCB:
 1082              	.LFB7:
 473:../CX3RDKOV5640.c **** 
 474:../CX3RDKOV5640.c **** /* This is the Callback function to handle the USB Events */
 475:../CX3RDKOV5640.c ****     static void
 476:../CX3RDKOV5640.c **** esUVCUvcApplnUSBEventCB (
 477:../CX3RDKOV5640.c ****         CyU3PUsbEventType_t evtype,     /* Event type */
 478:../CX3RDKOV5640.c ****         uint16_t            evdata      /* Event data */
 479:../CX3RDKOV5640.c ****         )
 480:../CX3RDKOV5640.c **** {
 1083              		.loc 1 480 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 16
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1088              	.LCFI14:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 11, -8
 1091              		.cfi_offset 14, -4
 1092 0004 04B08DE2 		add	fp, sp, #4
 1093              	.LCFI15:
 1094              		.cfi_def_cfa 11, 4
 1095 0008 10D04DE2 		sub	sp, sp, #16
 1096 000c 0020A0E1 		mov	r2, r0
 1097 0010 0130A0E1 		mov	r3, r1
 1098 0014 0D204BE5 		strb	r2, [fp, #-13]
 1099 0018 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 481:../CX3RDKOV5640.c ****     uint8_t interface = 0, altSetting = 0;
 1100              		.loc 1 481 0
 1101 001c 0030A0E3 		mov	r3, #0
 1102 0020 05304BE5 		strb	r3, [fp, #-5]
 1103 0024 0030A0E3 		mov	r3, #0
 1104 0028 06304BE5 		strb	r3, [fp, #-6]
 482:../CX3RDKOV5640.c **** 
 483:../CX3RDKOV5640.c ****     switch (evtype)
 1105              		.loc 1 483 0
 1106 002c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1107 0030 070053E3 		cmp	r3, #7
 1108 0034 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1109 0038 530000EA 		b	.L58
 1110              	.L48:
 1111 003c 2C010000 		.word	.L47
 1112 0040 2C010000 		.word	.L47
 1113 0044 5C000000 		.word	.L49
 1114 0048 8C010000 		.word	.L58
 1115 004c 2C010000 		.word	.L47
 1116 0050 2C010000 		.word	.L47
 1117 0054 8C010000 		.word	.L58
 1118 0058 7C000000 		.word	.L50
 1119              	.L49:
 484:../CX3RDKOV5640.c ****     {
 485:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SUSPEND:
 486:../CX3RDKOV5640.c ****             /* Suspend the device with Wake On Bus Activity set */
 487:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1120              		.loc 1 487 0
 1121 005c 34319FE5 		ldr	r3, .L59
 1122 0060 0020A0E3 		mov	r2, #0
 1123 0064 002083E5 		str	r2, [r3]
 488:../CX3RDKOV5640.c ****             CyU3PEventSet (&glTimerEvent, ES_USB_SUSP_EVENT_FLAG, CYU3P_EVENT_OR);
 1124              		.loc 1 488 0
 1125 0068 2C019FE5 		ldr	r0, .L59+4
 1126 006c 2010A0E3 		mov	r1, #32
 1127 0070 0020A0E3 		mov	r2, #0
 1128 0074 FEFFFFEB 		bl	_txe_event_flags_set
 489:../CX3RDKOV5640.c ****             break;
 1129              		.loc 1 489 0
 1130 0078 440000EA 		b	.L45
 1131              	.L50:
 490:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETINTF:
 491:../CX3RDKOV5640.c ****             /* Start the video streamer application if the
 492:../CX3RDKOV5640.c ****              * interface requested was 1. If not, stop the
 493:../CX3RDKOV5640.c ****              * streamer. */
 494:../CX3RDKOV5640.c ****             interface = CY_U3P_GET_MSB(evdata);
 1132              		.loc 1 494 0
 1133 007c B0315BE1 		ldrh	r3, [fp, #-16]
 1134 0080 2334A0E1 		mov	r3, r3, lsr #8
 1135 0084 0338A0E1 		mov	r3, r3, asl #16
 1136 0088 2338A0E1 		mov	r3, r3, lsr #16
 1137 008c 05304BE5 		strb	r3, [fp, #-5]
 495:../CX3RDKOV5640.c ****             altSetting = CY_U3P_GET_LSB(evdata);
 1138              		.loc 1 495 0
 1139 0090 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 1140 0094 06304BE5 		strb	r3, [fp, #-6]
 496:../CX3RDKOV5640.c **** 
 497:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1141              		.loc 1 497 0
 1142 0098 F8309FE5 		ldr	r3, .L59
 1143 009c 0020A0E3 		mov	r2, #0
 1144 00a0 002083E5 		str	r2, [r3]
 498:../CX3RDKOV5640.c **** 
 499:../CX3RDKOV5640.c ****             if ((altSetting == ES_UVC_STREAM_INTERFACE) && (interface == 1))
 1145              		.loc 1 499 0
 1146 00a4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1147 00a8 010053E3 		cmp	r3, #1
 1148 00ac 0C00001A 		bne	.L52
 1149              		.loc 1 499 0 is_stmt 0 discriminator 1
 1150 00b0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1151 00b4 010053E3 		cmp	r3, #1
 1152 00b8 0900001A 		bne	.L52
 500:../CX3RDKOV5640.c ****             {
 501:../CX3RDKOV5640.c ****                 /* Stop the application before re-starting. */
 502:../CX3RDKOV5640.c ****                 if (glIsApplnActive)
 1153              		.loc 1 502 0 is_stmt 1
 1154 00bc DC309FE5 		ldr	r3, .L59+8
 1155 00c0 003093E5 		ldr	r3, [r3]
 1156 00c4 000053E3 		cmp	r3, #0
 1157 00c8 0300000A 		beq	.L53
 503:../CX3RDKOV5640.c ****                 {
 504:../CX3RDKOV5640.c ****                 	glIsClearFeature = CyTrue;
 1158              		.loc 1 504 0
 1159 00cc D0309FE5 		ldr	r3, .L59+12
 1160 00d0 0120A0E3 		mov	r2, #1
 1161 00d4 002083E5 		str	r2, [r3]
 505:../CX3RDKOV5640.c ****                     esUVCUvcApplnStop ();
 1162              		.loc 1 505 0
 1163 00d8 FEFFFFEB 		bl	esUVCUvcApplnStop
 1164              	.L53:
 506:../CX3RDKOV5640.c ****                 }
 507:../CX3RDKOV5640.c ****                 esUVCUvcApplnStart ();
 1165              		.loc 1 507 0
 1166 00dc FEFFFFEB 		bl	esUVCUvcApplnStart
 1167 00e0 100000EA 		b	.L54
 1168              	.L52:
 508:../CX3RDKOV5640.c **** 
 509:../CX3RDKOV5640.c ****             }
 510:../CX3RDKOV5640.c ****             else if ((altSetting == 0x00) && (interface == 1))
 1169              		.loc 1 510 0
 1170 00e4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1171 00e8 000053E3 		cmp	r3, #0
 1172 00ec 0D00001A 		bne	.L54
 1173              		.loc 1 510 0 is_stmt 0 discriminator 1
 1174 00f0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1175 00f4 010053E3 		cmp	r3, #1
 1176 00f8 0A00001A 		bne	.L54
 511:../CX3RDKOV5640.c ****             {
 512:../CX3RDKOV5640.c ****             	glPreviewStarted = CyFalse;
 1177              		.loc 1 512 0 is_stmt 1
 1178 00fc A4309FE5 		ldr	r3, .L59+16
 1179 0100 0020A0E3 		mov	r2, #0
 1180 0104 002083E5 		str	r2, [r3]
 513:../CX3RDKOV5640.c ****             	/* Stop the application before re-starting. */
 514:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1181              		.loc 1 514 0
 1182 0108 94309FE5 		ldr	r3, .L59+12
 1183 010c 0120A0E3 		mov	r2, #1
 1184 0110 002083E5 		str	r2, [r3]
 515:../CX3RDKOV5640.c **** 				esUVCUvcApplnStop ();
 1185              		.loc 1 515 0
 1186 0114 FEFFFFEB 		bl	esUVCUvcApplnStop
 516:../CX3RDKOV5640.c **** 				glcommitcount = 0;
 1187              		.loc 1 516 0
 1188 0118 8C309FE5 		ldr	r3, .L59+20
 1189 011c 0020A0E3 		mov	r2, #0
 1190 0120 0020C3E5 		strb	r2, [r3]
 517:../CX3RDKOV5640.c ****             }
 518:../CX3RDKOV5640.c ****             break;
 1191              		.loc 1 518 0
 1192 0124 190000EA 		b	.L45
 1193              	.L54:
 1194 0128 180000EA 		b	.L45
 1195              	.L47:
 519:../CX3RDKOV5640.c **** 
 520:../CX3RDKOV5640.c ****             /* Fall-through. */
 521:../CX3RDKOV5640.c **** 
 522:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETCONF:
 523:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_RESET:
 524:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 525:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_CONNECT:
 526:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1196              		.loc 1 526 0
 1197 012c 64309FE5 		ldr	r3, .L59
 1198 0130 0020A0E3 		mov	r2, #0
 1199 0134 002083E5 		str	r2, [r3]
 527:../CX3RDKOV5640.c ****             if (evtype == CY_U3P_USB_EVENT_SETCONF)
 1200              		.loc 1 527 0
 1201 0138 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1202 013c 050053E3 		cmp	r3, #5
 1203 0140 0300001A 		bne	.L55
 528:../CX3RDKOV5640.c ****                 glIsConfigured = CyTrue;
 1204              		.loc 1 528 0
 1205 0144 64309FE5 		ldr	r3, .L59+24
 1206 0148 0120A0E3 		mov	r2, #1
 1207 014c 002083E5 		str	r2, [r3]
 1208 0150 020000EA 		b	.L56
 1209              	.L55:
 529:../CX3RDKOV5640.c ****             else
 530:../CX3RDKOV5640.c ****                 glIsConfigured = CyFalse;
 1210              		.loc 1 530 0
 1211 0154 54309FE5 		ldr	r3, .L59+24
 1212 0158 0020A0E3 		mov	r2, #0
 1213 015c 002083E5 		str	r2, [r3]
 1214              	.L56:
 531:../CX3RDKOV5640.c **** 
 532:../CX3RDKOV5640.c ****             /* Stop the video streamer application and enable LPM. */
 533:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 1215              		.loc 1 533 0
 1216 0160 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 534:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 1217              		.loc 1 534 0
 1218 0164 34309FE5 		ldr	r3, .L59+8
 1219 0168 003093E5 		ldr	r3, [r3]
 1220 016c 000053E3 		cmp	r3, #0
 1221 0170 0400000A 		beq	.L57
 535:../CX3RDKOV5640.c ****             {
 536:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1222              		.loc 1 536 0
 1223 0174 28309FE5 		ldr	r3, .L59+12
 1224 0178 0120A0E3 		mov	r2, #1
 1225 017c 002083E5 		str	r2, [r3]
 537:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop ();
 1226              		.loc 1 537 0
 1227 0180 FEFFFFEB 		bl	esUVCUvcApplnStop
 538:../CX3RDKOV5640.c ****             }
 539:../CX3RDKOV5640.c ****             break;
 1228              		.loc 1 539 0
 1229 0184 010000EA 		b	.L45
 1230              	.L57:
 1231 0188 000000EA 		b	.L45
 1232              	.L58:
 540:../CX3RDKOV5640.c ****         default:
 541:../CX3RDKOV5640.c ****             break;
 1233              		.loc 1 541 0
 1234 018c 0000A0E1 		mov	r0, r0	@ nop
 1235              	.L45:
 542:../CX3RDKOV5640.c ****     }
 543:../CX3RDKOV5640.c **** }
 1236              		.loc 1 543 0
 1237 0190 04D04BE2 		sub	sp, fp, #4
 1238              		@ sp needed
 1239 0194 0088BDE8 		ldmfd	sp!, {fp, pc}
 1240              	.L60:
 1241              		.align	2
 1242              	.L59:
 1243 0198 00000000 		.word	glIsStreamingStarted
 1244 019c 00000000 		.word	glTimerEvent
 1245 01a0 00000000 		.word	glIsApplnActive
 1246 01a4 00000000 		.word	glIsClearFeature
 1247 01a8 00000000 		.word	glPreviewStarted
 1248 01ac 00000000 		.word	glcommitcount
 1249 01b0 00000000 		.word	glIsConfigured
 1250              		.cfi_endproc
 1251              	.LFE7:
 1253              		.section	.text.esUVCApplnLPMRqtCB,"ax",%progbits
 1254              		.align	2
 1256              	esUVCApplnLPMRqtCB:
 1257              	.LFB8:
 544:../CX3RDKOV5640.c **** 
 545:../CX3RDKOV5640.c **** /* Callback for LPM requests. Always return true to allow host to transition device
 546:../CX3RDKOV5640.c ****  * into required LPM state U1/U2/U3. When data transmission is active LPM management
 547:../CX3RDKOV5640.c ****  * is explicitly disabled to prevent data transmission errors.
 548:../CX3RDKOV5640.c ****  */
 549:../CX3RDKOV5640.c **** static CyBool_t esUVCApplnLPMRqtCB (
 550:../CX3RDKOV5640.c ****         CyU3PUsbLinkPowerMode link_mode         /*USB 3.0 linkmode requested by Host */
 551:../CX3RDKOV5640.c ****         )
 552:../CX3RDKOV5640.c **** {
 1258              		.loc 1 552 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262              		@ link register save eliminated.
 1263 0000 04B02DE5 		str	fp, [sp, #-4]!
 1264              	.LCFI16:
 1265              		.cfi_def_cfa_offset 4
 1266              		.cfi_offset 11, -4
 1267 0004 00B08DE2 		add	fp, sp, #0
 1268              	.LCFI17:
 1269              		.cfi_def_cfa_register 11
 1270 0008 0CD04DE2 		sub	sp, sp, #12
 1271 000c 0030A0E1 		mov	r3, r0
 1272 0010 05304BE5 		strb	r3, [fp, #-5]
 553:../CX3RDKOV5640.c ****     return CyTrue;
 1273              		.loc 1 553 0
 1274 0014 0130A0E3 		mov	r3, #1
 554:../CX3RDKOV5640.c **** }
 1275              		.loc 1 554 0
 1276 0018 0300A0E1 		mov	r0, r3
 1277 001c 00D04BE2 		sub	sp, fp, #0
 1278              		@ sp needed
 1279 0020 04B09DE4 		ldr	fp, [sp], #4
 1280 0024 1EFF2FE1 		bx	lr
 1281              		.cfi_endproc
 1282              	.LFE8:
 1284              		.section	.rodata
 1285              		.align	2
 1286              	.LC5:
 1287 00a8 0A0D6573 		.ascii	"\012\015esSetCameraResolution\000"
 1287      53657443 
 1287      616D6572 
 1287      61526573 
 1287      6F6C7574 
 1288              		.align	2
 1289              	.LC6:
 1290 00c0 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS1 Err = 0x%x\000"
 1290      42537470 
 1290      43423A53 
 1290      6574496E 
 1290      74665061 
 1291              		.align	2
 1292              	.LC7:
 1293 00e8 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams FS Err = 0x%x\000"
 1293      42537470 
 1293      43423A53 
 1293      6574496E 
 1293      74665061 
 1294 010f 00       		.align	2
 1295              	.LC8:
 1296 0110 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS2 Err = 0x%x\000"
 1296      42537470 
 1296      43423A53 
 1296      6574496E 
 1296      74665061 
 1297              		.align	2
 1298              	.LC9:
 1299 0138 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams HS Err = 0x%x\000"
 1299      42537470 
 1299      43423A53 
 1299      6574496E 
 1299      74665061 
 1300              		.section	.text.esSetCameraResolution,"ax",%progbits
 1301              		.align	2
 1302              		.global	esSetCameraResolution
 1304              	esSetCameraResolution:
 1305              	.LFB9:
 555:../CX3RDKOV5640.c **** 
 556:../CX3RDKOV5640.c **** //TODO Change this function with "Sensor Specific" function to write the sensor settings & configur
 557:../CX3RDKOV5640.c **** void esSetCameraResolution(uint8_t FrameIndex)
 558:../CX3RDKOV5640.c **** {
 1306              		.loc 1 558 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1311              	.LCFI18:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 11, -8
 1314              		.cfi_offset 14, -4
 1315 0004 04B08DE2 		add	fp, sp, #4
 1316              	.LCFI19:
 1317              		.cfi_def_cfa 11, 4
 1318 0008 10D04DE2 		sub	sp, sp, #16
 1319 000c 0030A0E1 		mov	r3, r0
 1320 0010 0D304BE5 		strb	r3, [fp, #-13]
 559:../CX3RDKOV5640.c **** 	CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1321              		.loc 1 559 0
 1322 0014 0030A0E3 		mov	r3, #0
 1323 0018 08300BE5 		str	r3, [fp, #-8]
 560:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\resSetCameraResolution");
 1324              		.loc 1 560 0
 1325 001c 0400A0E3 		mov	r0, #4
 1326 0020 90119FE5 		ldr	r1, .L76
 1327 0024 FEFFFFEB 		bl	CyU3PDebugPrint
 561:../CX3RDKOV5640.c **** 	/* Super Speed USB Streams*/
 562:../CX3RDKOV5640.c **** 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1328              		.loc 1 562 0
 1329 0028 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1330 002c 0030A0E1 		mov	r3, r0
 1331 0030 030053E3 		cmp	r3, #3
 1332 0034 3F00001A 		bne	.L64
 563:../CX3RDKOV5640.c **** 	{
 564:../CX3RDKOV5640.c **** 		if(FrameIndex == 0x01)
 1333              		.loc 1 564 0
 1334 0038 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1335 003c 010053E3 		cmp	r3, #1
 1336 0040 0C00001A 		bne	.L65
 565:../CX3RDKOV5640.c **** 		{
 566:../CX3RDKOV5640.c **** 			/* Write 1080pSettings */
 567:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc1080p30NoMclk, CyFalse);
 1337              		.loc 1 567 0
 1338 0044 70019FE5 		ldr	r0, .L76+4
 1339 0048 0010A0E3 		mov	r1, #0
 1340 004c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1341 0050 08000BE5 		str	r0, [fp, #-8]
 568:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1342              		.loc 1 568 0
 1343 0054 08301BE5 		ldr	r3, [fp, #-8]
 1344 0058 000053E3 		cmp	r3, #0
 1345 005c 0300000A 		beq	.L66
 569:../CX3RDKOV5640.c **** 			{
 570:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS1 Err = 0x%x", status);
 1346              		.loc 1 570 0
 1347 0060 0400A0E3 		mov	r0, #4
 1348 0064 54119FE5 		ldr	r1, .L76+8
 1349 0068 08201BE5 		ldr	r2, [fp, #-8]
 1350 006c FEFFFFEB 		bl	CyU3PDebugPrint
 1351              	.L66:
 571:../CX3RDKOV5640.c **** 			}
 572:../CX3RDKOV5640.c **** 			esOV5640_1080P_config();
 1352              		.loc 1 572 0
 1353 0070 FEFFFFEB 		bl	esOV5640_1080P_config
 1354 0074 4D0000EA 		b	.L63
 1355              	.L65:
 573:../CX3RDKOV5640.c **** 		}
 574:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x02)
 1356              		.loc 1 574 0
 1357 0078 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1358 007c 020053E3 		cmp	r3, #2
 1359 0080 0C00001A 		bne	.L68
 575:../CX3RDKOV5640.c **** 		{
 576:../CX3RDKOV5640.c **** 			/* Write VGA Settings */
 577:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1360              		.loc 1 577 0
 1361 0084 38019FE5 		ldr	r0, .L76+12
 1362 0088 0010A0E3 		mov	r1, #0
 1363 008c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1364 0090 08000BE5 		str	r0, [fp, #-8]
 578:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1365              		.loc 1 578 0
 1366 0094 08301BE5 		ldr	r3, [fp, #-8]
 1367 0098 000053E3 		cmp	r3, #0
 1368 009c 0300000A 		beq	.L69
 579:../CX3RDKOV5640.c **** 			{
 580:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1369              		.loc 1 580 0
 1370 00a0 0400A0E3 		mov	r0, #4
 1371 00a4 1C119FE5 		ldr	r1, .L76+16
 1372 00a8 08201BE5 		ldr	r2, [fp, #-8]
 1373 00ac FEFFFFEB 		bl	CyU3PDebugPrint
 1374              	.L69:
 581:../CX3RDKOV5640.c **** 			}
 582:../CX3RDKOV5640.c **** 			esOV5640_VGA_config();
 1375              		.loc 1 582 0
 1376 00b0 FEFFFFEB 		bl	esOV5640_VGA_config
 1377 00b4 3D0000EA 		b	.L63
 1378              	.L68:
 583:../CX3RDKOV5640.c **** 		}
 584:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x03)
 1379              		.loc 1 584 0
 1380 00b8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1381 00bc 030053E3 		cmp	r3, #3
 1382 00c0 0C00001A 		bne	.L70
 585:../CX3RDKOV5640.c **** 		{
 586:../CX3RDKOV5640.c **** 			/* Write 720pSettings */
 587:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc720p60NoMclk, CyFalse);
 1383              		.loc 1 587 0
 1384 00c4 00019FE5 		ldr	r0, .L76+20
 1385 00c8 0010A0E3 		mov	r1, #0
 1386 00cc FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1387 00d0 08000BE5 		str	r0, [fp, #-8]
 588:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1388              		.loc 1 588 0
 1389 00d4 08301BE5 		ldr	r3, [fp, #-8]
 1390 00d8 000053E3 		cmp	r3, #0
 1391 00dc 0300000A 		beq	.L71
 589:../CX3RDKOV5640.c **** 			{
 590:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1392              		.loc 1 590 0
 1393 00e0 0400A0E3 		mov	r0, #4
 1394 00e4 E4109FE5 		ldr	r1, .L76+24
 1395 00e8 08201BE5 		ldr	r2, [fp, #-8]
 1396 00ec FEFFFFEB 		bl	CyU3PDebugPrint
 1397              	.L71:
 591:../CX3RDKOV5640.c **** 			}
 592:../CX3RDKOV5640.c **** 			esOV5640_720P_config();
 1398              		.loc 1 592 0
 1399 00f0 FEFFFFEB 		bl	esOV5640_720P_config
 1400 00f4 2D0000EA 		b	.L63
 1401              	.L70:
 593:../CX3RDKOV5640.c **** 		}
 594:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x04)
 1402              		.loc 1 594 0
 1403 00f8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1404 00fc 040053E3 		cmp	r3, #4
 1405 0100 2A00001A 		bne	.L63
 595:../CX3RDKOV5640.c **** 		{
 596:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc5Mp15NoMclk, CyFalse);
 1406              		.loc 1 596 0
 1407 0104 C8009FE5 		ldr	r0, .L76+28
 1408 0108 0010A0E3 		mov	r1, #0
 1409 010c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1410 0110 08000BE5 		str	r0, [fp, #-8]
 597:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1411              		.loc 1 597 0
 1412 0114 08301BE5 		ldr	r3, [fp, #-8]
 1413 0118 000053E3 		cmp	r3, #0
 1414 011c 0300000A 		beq	.L72
 598:../CX3RDKOV5640.c **** 			{
 599:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1415              		.loc 1 599 0
 1416 0120 0400A0E3 		mov	r0, #4
 1417 0124 A4109FE5 		ldr	r1, .L76+24
 1418 0128 08201BE5 		ldr	r2, [fp, #-8]
 1419 012c FEFFFFEB 		bl	CyU3PDebugPrint
 1420              	.L72:
 600:../CX3RDKOV5640.c **** 			}
 601:../CX3RDKOV5640.c **** 			esOV5640_5MP_config();
 1421              		.loc 1 601 0
 1422 0130 FEFFFFEB 		bl	esOV5640_5MP_config
 1423 0134 1D0000EA 		b	.L63
 1424              	.L64:
 602:../CX3RDKOV5640.c **** 		}
 603:../CX3RDKOV5640.c **** 	}
 604:../CX3RDKOV5640.c **** 	/* High Speed USB Streams*/
 605:../CX3RDKOV5640.c **** 	else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1425              		.loc 1 605 0
 1426 0138 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1427 013c 0030A0E1 		mov	r3, r0
 1428 0140 020053E3 		cmp	r3, #2
 1429 0144 0D00001A 		bne	.L74
 606:../CX3RDKOV5640.c **** 	{
 607:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 608:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1430              		.loc 1 608 0
 1431 0148 74009FE5 		ldr	r0, .L76+12
 1432 014c 0010A0E3 		mov	r1, #0
 1433 0150 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1434 0154 08000BE5 		str	r0, [fp, #-8]
 609:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1435              		.loc 1 609 0
 1436 0158 08301BE5 		ldr	r3, [fp, #-8]
 1437 015c 000053E3 		cmp	r3, #0
 1438 0160 0300000A 		beq	.L75
 610:../CX3RDKOV5640.c **** 		{
 611:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams HS Err = 0x%x", status);
 1439              		.loc 1 611 0
 1440 0164 0400A0E3 		mov	r0, #4
 1441 0168 68109FE5 		ldr	r1, .L76+32
 1442 016c 08201BE5 		ldr	r2, [fp, #-8]
 1443 0170 FEFFFFEB 		bl	CyU3PDebugPrint
 1444              	.L75:
 612:../CX3RDKOV5640.c **** 		}
 613:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1445              		.loc 1 613 0
 1446 0174 FEFFFFEB 		bl	esOV5640_VGA_config
 614:../CX3RDKOV5640.c **** 		esOV5640_VGA_HS_config();
 1447              		.loc 1 614 0
 1448 0178 FEFFFFEB 		bl	esOV5640_VGA_HS_config
 1449 017c 0B0000EA 		b	.L63
 1450              	.L74:
 615:../CX3RDKOV5640.c **** 	}
 616:../CX3RDKOV5640.c **** 	/* Full Speed USB Streams*/
 617:../CX3RDKOV5640.c **** 	else
 618:../CX3RDKOV5640.c **** 	{
 619:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 620:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1451              		.loc 1 620 0
 1452 0180 FEFFFFEB 		bl	esOV5640_VGA_config
 621:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1453              		.loc 1 621 0
 1454 0184 38009FE5 		ldr	r0, .L76+12
 1455 0188 0010A0E3 		mov	r1, #0
 1456 018c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1457 0190 08000BE5 		str	r0, [fp, #-8]
 622:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1458              		.loc 1 622 0
 1459 0194 08301BE5 		ldr	r3, [fp, #-8]
 1460 0198 000053E3 		cmp	r3, #0
 1461 019c 0300000A 		beq	.L63
 623:../CX3RDKOV5640.c **** 		{
 624:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1462              		.loc 1 624 0
 1463 01a0 0400A0E3 		mov	r0, #4
 1464 01a4 1C109FE5 		ldr	r1, .L76+16
 1465 01a8 08201BE5 		ldr	r2, [fp, #-8]
 1466 01ac FEFFFFEB 		bl	CyU3PDebugPrint
 1467              	.L63:
 625:../CX3RDKOV5640.c **** 		}
 626:../CX3RDKOV5640.c **** 	}
 627:../CX3RDKOV5640.c **** }
 1468              		.loc 1 627 0
 1469 01b0 04D04BE2 		sub	sp, fp, #4
 1470              		@ sp needed
 1471 01b4 0088BDE8 		ldmfd	sp!, {fp, pc}
 1472              	.L77:
 1473              		.align	2
 1474              	.L76:
 1475 01b8 A8000000 		.word	.LC5
 1476 01bc 00000000 		.word	cfgUvc1080p30NoMclk
 1477 01c0 C0000000 		.word	.LC6
 1478 01c4 00000000 		.word	cfgUvcVga30NoMclk
 1479 01c8 E8000000 		.word	.LC7
 1480 01cc 00000000 		.word	cfgUvc720p60NoMclk
 1481 01d0 10010000 		.word	.LC8
 1482 01d4 00000000 		.word	cfgUvc5Mp15NoMclk
 1483 01d8 38010000 		.word	.LC9
 1484              		.cfi_endproc
 1485              	.LFE9:
 1487              		.section	.rodata
 1488 015f 00       		.align	2
 1489              	.LC10:
 1490 0160 0A0D6252 		.ascii	"\012\015bRType = 0x%x, bRequest = 0x%x, wValue = 0x"
 1490      54797065 
 1490      203D2030 
 1490      7825782C 
 1490      20625265 
 1491 018d 25782C20 		.ascii	"%x, wIndex = 0x%x, wLength= 0x%x\000"
 1491      77496E64 
 1491      6578203D 
 1491      20307825 
 1491      782C2077 
 1492 01ae 0000     		.align	2
 1493              	.LC11:
 1494 01b0 0A0D4675 		.ascii	"\012\015Full Speed Not Supported!\000"
 1494      6C6C2053 
 1494      70656564 
 1494      204E6F74 
 1494      20537570 
 1495              		.align	2
 1496              	.LC12:
 1497 01cc 0A0D5553 		.ascii	"\012\015USBStpCB:GET_CUR:SendEP0Data Err = 0x%x\000"
 1497      42537470 
 1497      43423A47 
 1497      45545F43 
 1497      55523A53 
 1498 01f6 0000     		.align	2
 1499              	.LC13:
 1500 01f8 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:GetEP0Data Err = 0x%x.\000"
 1500      42537470 
 1500      43423A53 
 1500      45545F43 
 1500      55523A47 
 1501 0222 0000     		.align	2
 1502              	.LC14:
 1503 0224 0A0D5553 		.ascii	"\012\015USBStpCB:Invalid SET_CUR Rqt Len.\000"
 1503      42537470 
 1503      43423A49 
 1503      6E76616C 
 1503      69642053 
 1504              		.align	2
 1505              	.LC15:
 1506 0248 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:still = 0x%x.\000"
 1506      42537470 
 1506      43423A53 
 1506      45545F43 
 1506      55523A73 
 1507 0269 000000   		.align	2
 1508              	.LC16:
 1509 026c 0A0D2025 		.ascii	"\012\015 %d %d %d %d %d %d %d %d %d %d %d\015\012\000"
 1509      64202564 
 1509      20256420 
 1509      25642025 
 1509      64202564 
 1510 0292 0000     		.align	2
 1511              	.LC17:
 1512 0294 0A0D5553 		.ascii	"\012\015USBStpCB:VCI SendEP0Data = %d\000"
 1512      42537470 
 1512      43423A56 
 1512      43492053 
 1512      656E6445 
 1513              		.align	2
 1514              	.LC18:
 1515 02b4 0A0D4175 		.ascii	"\012\015Auto Focus\000"
 1515      746F2046 
 1515      6F637573 
 1515      00
 1516              		.section	.text.esUVCUvcApplnUSBSetupCB,"ax",%progbits
 1517              		.align	2
 1519              	esUVCUvcApplnUSBSetupCB:
 1520              	.LFB10:
 628:../CX3RDKOV5640.c **** 
 629:../CX3RDKOV5640.c **** /* Callback to handle the USB Setup Requests and UVC Class events */
 630:../CX3RDKOV5640.c ****     static CyBool_t
 631:../CX3RDKOV5640.c **** esUVCUvcApplnUSBSetupCB (
 632:../CX3RDKOV5640.c ****         uint32_t setupdat0,     /* SETUP Data 0 */
 633:../CX3RDKOV5640.c ****         uint32_t setupdat1      /* SETUP Data 1 */
 634:../CX3RDKOV5640.c ****         )
 635:../CX3RDKOV5640.c **** {
 1521              		.loc 1 635 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 40
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525 0000 F0492DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, lr}
 1526              	.LCFI20:
 1527              		.cfi_def_cfa_offset 28
 1528              		.cfi_offset 4, -28
 1529              		.cfi_offset 5, -24
 1530              		.cfi_offset 6, -20
 1531              		.cfi_offset 7, -16
 1532              		.cfi_offset 8, -12
 1533              		.cfi_offset 11, -8
 1534              		.cfi_offset 14, -4
 1535 0004 18B08DE2 		add	fp, sp, #24
 1536              	.LCFI21:
 1537              		.cfi_def_cfa 11, 4
 1538 0008 54D04DE2 		sub	sp, sp, #84
 1539 000c 40000BE5 		str	r0, [fp, #-64]
 1540 0010 44100BE5 		str	r1, [fp, #-68]
 636:../CX3RDKOV5640.c ****     uint8_t  bRequest, bType,bRType, bTarget;
 637:../CX3RDKOV5640.c ****     uint16_t wValue, wIndex, wLength;
 638:../CX3RDKOV5640.c ****     uint16_t readCount = 0;
 1541              		.loc 1 638 0
 1542 0014 0030A0E3 		mov	r3, #0
 1543 0018 B2334BE1 		strh	r3, [fp, #-50]	@ movhi
 639:../CX3RDKOV5640.c ****     uint8_t  ep0Buf[2];
 640:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1544              		.loc 1 640 0
 1545 001c 0030A0E3 		mov	r3, #0
 1546 0020 24300BE5 		str	r3, [fp, #-36]
 641:../CX3RDKOV5640.c ****     uint8_t temp = 0;
 1547              		.loc 1 641 0
 1548 0024 0030A0E3 		mov	r3, #0
 1549 0028 35304BE5 		strb	r3, [fp, #-53]
 642:../CX3RDKOV5640.c ****     CyBool_t isHandled = CyFalse;
 1550              		.loc 1 642 0
 1551 002c 0030A0E3 		mov	r3, #0
 1552 0030 20300BE5 		str	r3, [fp, #-32]
 643:../CX3RDKOV5640.c ****     uint8_t RequestOption = 0;
 1553              		.loc 1 643 0
 1554 0034 0030A0E3 		mov	r3, #0
 1555 0038 25304BE5 		strb	r3, [fp, #-37]
 644:../CX3RDKOV5640.c **** 
 645:../CX3RDKOV5640.c ****     /* Decode the fields from the setup request. */
 646:../CX3RDKOV5640.c ****     bRType = (setupdat0 & CY_U3P_USB_REQUEST_TYPE_MASK);
 1556              		.loc 1 646 0
 1557 003c 40301BE5 		ldr	r3, [fp, #-64]
 1558 0040 26304BE5 		strb	r3, [fp, #-38]
 647:../CX3RDKOV5640.c ****     bType    = (bRType & CY_U3P_USB_TYPE_MASK);
 1559              		.loc 1 647 0
 1560 0044 26305BE5 		ldrb	r3, [fp, #-38]
 1561 0048 603003E2 		and	r3, r3, #96
 1562 004c 27304BE5 		strb	r3, [fp, #-39]
 648:../CX3RDKOV5640.c ****     bTarget  = (bRType & CY_U3P_USB_TARGET_MASK);
 1563              		.loc 1 648 0
 1564 0050 26305BE5 		ldrb	r3, [fp, #-38]
 1565 0054 033003E2 		and	r3, r3, #3
 1566 0058 28304BE5 		strb	r3, [fp, #-40]
 649:../CX3RDKOV5640.c ****     bRequest = ((setupdat0 & CY_U3P_USB_REQUEST_MASK) >> CY_U3P_USB_REQUEST_POS);
 1567              		.loc 1 649 0
 1568 005c 40301BE5 		ldr	r3, [fp, #-64]
 1569 0060 FF3C03E2 		and	r3, r3, #65280
 1570 0064 2334A0E1 		mov	r3, r3, lsr #8
 1571 0068 29304BE5 		strb	r3, [fp, #-41]
 650:../CX3RDKOV5640.c ****     wValue   = ((setupdat0 & CY_U3P_USB_VALUE_MASK)   >> CY_U3P_USB_VALUE_POS);
 1572              		.loc 1 650 0
 1573 006c 40301BE5 		ldr	r3, [fp, #-64]
 1574 0070 2338A0E1 		mov	r3, r3, lsr #16
 1575 0074 BC324BE1 		strh	r3, [fp, #-44]	@ movhi
 651:../CX3RDKOV5640.c ****     wIndex   = ((setupdat1 & CY_U3P_USB_INDEX_MASK)   >> CY_U3P_USB_INDEX_POS);
 1576              		.loc 1 651 0
 1577 0078 44301BE5 		ldr	r3, [fp, #-68]
 1578 007c BE324BE1 		strh	r3, [fp, #-46]	@ movhi
 652:../CX3RDKOV5640.c ****     wLength  = ((setupdat1 & CY_U3P_USB_LENGTH_MASK)  >> CY_U3P_USB_LENGTH_POS);
 1579              		.loc 1 652 0
 1580 0080 44301BE5 		ldr	r3, [fp, #-68]
 1581 0084 2338A0E1 		mov	r3, r3, lsr #16
 1582 0088 B0334BE1 		strh	r3, [fp, #-48]	@ movhi
 653:../CX3RDKOV5640.c **** 
 654:../CX3RDKOV5640.c **** #if 1
 655:../CX3RDKOV5640.c ****    	CyU3PDebugPrint(4, "\n\rbRType = 0x%x, bRequest = 0x%x, wValue = 0x%x, wIndex = 0x%x, wLength= 
 1583              		.loc 1 655 0
 1584 008c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1585 0090 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1586 0094 BCC25BE1 		ldrh	ip, [fp, #-44]
 1587 0098 BE025BE1 		ldrh	r0, [fp, #-46]
 1588 009c B0135BE1 		ldrh	r1, [fp, #-48]
 1589 00a0 00C08DE5 		str	ip, [sp]
 1590 00a4 04008DE5 		str	r0, [sp, #4]
 1591 00a8 08108DE5 		str	r1, [sp, #8]
 1592 00ac 0400A0E3 		mov	r0, #4
 1593 00b0 D41F9FE5 		ldr	r1, .L229
 1594 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 656:../CX3RDKOV5640.c **** #endif
 657:../CX3RDKOV5640.c **** 
 658:../CX3RDKOV5640.c ****     /* ClearFeature(Endpoint_Halt) received on the Streaming Endpoint. Stop Streaming */
 659:../CX3RDKOV5640.c ****     if((bTarget == CY_U3P_USB_TARGET_ENDPT) && (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
 1595              		.loc 1 659 0
 1596 00b8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1597 00bc 020053E3 		cmp	r3, #2
 1598 00c0 1C00001A 		bne	.L79
 1599              		.loc 1 659 0 is_stmt 0 discriminator 1
 1600 00c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1601 00c8 010053E3 		cmp	r3, #1
 1602 00cc 1900001A 		bne	.L79
 660:../CX3RDKOV5640.c ****             && (wIndex == ES_UVC_EP_BULK_VIDEO) && (wValue == CY_U3P_USBX_FS_EP_HALT))
 1603              		.loc 1 660 0 is_stmt 1
 1604 00d0 BE325BE1 		ldrh	r3, [fp, #-46]
 1605 00d4 830053E3 		cmp	r3, #131
 1606 00d8 1600001A 		bne	.L79
 1607              		.loc 1 660 0 is_stmt 0 discriminator 1
 1608 00dc BC325BE1 		ldrh	r3, [fp, #-44]
 1609 00e0 000053E3 		cmp	r3, #0
 1610 00e4 1300001A 		bne	.L79
 661:../CX3RDKOV5640.c ****     {
 662:../CX3RDKOV5640.c ****         if ((glIsApplnActive) && (glIsStreamingStarted))
 1611              		.loc 1 662 0 is_stmt 1
 1612 00e8 A03F9FE5 		ldr	r3, .L229+4
 1613 00ec 003093E5 		ldr	r3, [r3]
 1614 00f0 000053E3 		cmp	r3, #0
 1615 00f4 0D00000A 		beq	.L80
 1616              		.loc 1 662 0 is_stmt 0 discriminator 1
 1617 00f8 943F9FE5 		ldr	r3, .L229+8
 1618 00fc 003093E5 		ldr	r3, [r3]
 1619 0100 000053E3 		cmp	r3, #0
 1620 0104 0900000A 		beq	.L80
 663:../CX3RDKOV5640.c ****         {
 664:../CX3RDKOV5640.c ****         	glPreviewStarted = CyFalse;
 1621              		.loc 1 664 0 is_stmt 1
 1622 0108 883F9FE5 		ldr	r3, .L229+12
 1623 010c 0020A0E3 		mov	r2, #0
 1624 0110 002083E5 		str	r2, [r3]
 665:../CX3RDKOV5640.c ****             glIsClearFeature = CyTrue;
 1625              		.loc 1 665 0
 1626 0114 803F9FE5 		ldr	r3, .L229+16
 1627 0118 0120A0E3 		mov	r2, #1
 1628 011c 002083E5 		str	r2, [r3]
 666:../CX3RDKOV5640.c ****             esUVCUvcApplnStop();
 1629              		.loc 1 666 0
 1630 0120 FEFFFFEB 		bl	esUVCUvcApplnStop
 667:../CX3RDKOV5640.c ****             glcommitcount = 0;
 1631              		.loc 1 667 0
 1632 0124 743F9FE5 		ldr	r3, .L229+20
 1633 0128 0020A0E3 		mov	r2, #0
 1634 012c 0020C3E5 		strb	r2, [r3]
 1635              	.L80:
 668:../CX3RDKOV5640.c ****         }
 669:../CX3RDKOV5640.c ****         return CyFalse;
 1636              		.loc 1 669 0
 1637 0130 0030A0E3 		mov	r3, #0
 1638 0134 420500EA 		b	.L228
 1639              	.L79:
 670:../CX3RDKOV5640.c ****     }
 671:../CX3RDKOV5640.c **** 
 672:../CX3RDKOV5640.c ****     if( bRType == CY_U3P_USB_GS_DEVICE)
 1640              		.loc 1 672 0
 1641 0138 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1642 013c 800053E3 		cmp	r3, #128
 1643 0140 0500001A 		bne	.L82
 673:../CX3RDKOV5640.c ****     {
 674:../CX3RDKOV5640.c ****         /* Make sure that we bring the link back to U0, so that the ERDY can be sent. */
 675:../CX3RDKOV5640.c ****         if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1644              		.loc 1 675 0
 1645 0144 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1646 0148 0030A0E1 		mov	r3, r0
 1647 014c 030053E3 		cmp	r3, #3
 1648 0150 0100001A 		bne	.L82
 676:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 1649              		.loc 1 676 0
 1650 0154 0000A0E3 		mov	r0, #0
 1651 0158 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 1652              	.L82:
 677:../CX3RDKOV5640.c ****     }
 678:../CX3RDKOV5640.c **** 
 679:../CX3RDKOV5640.c ****     if ((bTarget == CY_U3P_USB_TARGET_INTF) && ((bRequest == CY_U3P_USB_SC_SET_FEATURE)
 1653              		.loc 1 679 0
 1654 015c 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1655 0160 010053E3 		cmp	r3, #1
 1656 0164 1400001A 		bne	.L83
 1657              		.loc 1 679 0 is_stmt 0 discriminator 1
 1658 0168 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1659 016c 030053E3 		cmp	r3, #3
 1660 0170 0200000A 		beq	.L84
 680:../CX3RDKOV5640.c ****                 || (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)) && (wValue == 0))
 1661              		.loc 1 680 0 is_stmt 1
 1662 0174 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1663 0178 010053E3 		cmp	r3, #1
 1664 017c 0E00001A 		bne	.L83
 1665              	.L84:
 1666              		.loc 1 680 0 is_stmt 0 discriminator 1
 1667 0180 BC325BE1 		ldrh	r3, [fp, #-44]
 1668 0184 000053E3 		cmp	r3, #0
 1669 0188 0B00001A 		bne	.L83
 681:../CX3RDKOV5640.c ****     {
 682:../CX3RDKOV5640.c ****         if (glIsConfigured)
 1670              		.loc 1 682 0 is_stmt 1
 1671 018c 103F9FE5 		ldr	r3, .L229+24
 1672 0190 003093E5 		ldr	r3, [r3]
 1673 0194 000053E3 		cmp	r3, #0
 1674 0198 0100000A 		beq	.L85
 683:../CX3RDKOV5640.c ****         {
 684:../CX3RDKOV5640.c ****             CyU3PUsbAckSetup ();
 1675              		.loc 1 684 0
 1676 019c FEFFFFEB 		bl	CyU3PUsbAckSetup
 1677 01a0 030000EA 		b	.L86
 1678              	.L85:
 685:../CX3RDKOV5640.c ****         }
 686:../CX3RDKOV5640.c ****         else
 687:../CX3RDKOV5640.c ****         {
 688:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1679              		.loc 1 688 0
 1680 01a4 0000A0E3 		mov	r0, #0
 1681 01a8 0110A0E3 		mov	r1, #1
 1682 01ac 0020A0E3 		mov	r2, #0
 1683 01b0 FEFFFFEB 		bl	CyU3PUsbStall
 1684              	.L86:
 689:../CX3RDKOV5640.c ****         }
 690:../CX3RDKOV5640.c ****         return CyTrue;
 1685              		.loc 1 690 0
 1686 01b4 0130A0E3 		mov	r3, #1
 1687 01b8 210500EA 		b	.L228
 1688              	.L83:
 691:../CX3RDKOV5640.c ****     }
 692:../CX3RDKOV5640.c **** 
 693:../CX3RDKOV5640.c ****     if ((bRequest == CY_U3P_USB_SC_GET_STATUS) &&
 1689              		.loc 1 693 0
 1690 01bc 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1691 01c0 000053E3 		cmp	r3, #0
 1692 01c4 1400001A 		bne	.L87
 1693              		.loc 1 693 0 is_stmt 0 discriminator 1
 1694 01c8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1695 01cc 010053E3 		cmp	r3, #1
 1696 01d0 1100001A 		bne	.L87
 694:../CX3RDKOV5640.c ****             (bTarget == CY_U3P_USB_TARGET_INTF))
 695:../CX3RDKOV5640.c ****     {
 696:../CX3RDKOV5640.c ****         /* We support only interface 0. */
 697:../CX3RDKOV5640.c ****         if (wIndex == 0)
 1697              		.loc 1 697 0 is_stmt 1
 1698 01d4 BE325BE1 		ldrh	r3, [fp, #-46]
 1699 01d8 000053E3 		cmp	r3, #0
 1700 01dc 0800001A 		bne	.L88
 698:../CX3RDKOV5640.c ****         {
 699:../CX3RDKOV5640.c ****             ep0Buf[0] = 0;
 1701              		.loc 1 699 0
 1702 01e0 0030A0E3 		mov	r3, #0
 1703 01e4 34304BE5 		strb	r3, [fp, #-52]
 700:../CX3RDKOV5640.c ****             ep0Buf[1] = 0;
 1704              		.loc 1 700 0
 1705 01e8 0030A0E3 		mov	r3, #0
 1706 01ec 33304BE5 		strb	r3, [fp, #-51]
 701:../CX3RDKOV5640.c ****             CyU3PUsbSendEP0Data (0x02, ep0Buf);
 1707              		.loc 1 701 0
 1708 01f0 34304BE2 		sub	r3, fp, #52
 1709 01f4 0200A0E3 		mov	r0, #2
 1710 01f8 0310A0E1 		mov	r1, r3
 1711 01fc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1712 0200 030000EA 		b	.L89
 1713              	.L88:
 702:../CX3RDKOV5640.c ****         }
 703:../CX3RDKOV5640.c ****         else
 704:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1714              		.loc 1 704 0
 1715 0204 0000A0E3 		mov	r0, #0
 1716 0208 0110A0E3 		mov	r1, #1
 1717 020c 0020A0E3 		mov	r2, #0
 1718 0210 FEFFFFEB 		bl	CyU3PUsbStall
 1719              	.L89:
 705:../CX3RDKOV5640.c ****         return CyTrue;
 1720              		.loc 1 705 0
 1721 0214 0130A0E3 		mov	r3, #1
 1722 0218 090500EA 		b	.L228
 1723              	.L87:
 706:../CX3RDKOV5640.c ****     }
 707:../CX3RDKOV5640.c **** 
 708:../CX3RDKOV5640.c ****     /* Check for UVC Class Requests */
 709:../CX3RDKOV5640.c ****     if (bType == CY_U3P_USB_CLASS_RQT)
 1724              		.loc 1 709 0
 1725 021c 27305BE5 		ldrb	r3, [fp, #-39]	@ zero_extendqisi2
 1726 0220 200053E3 		cmp	r3, #32
 1727 0224 0505001A 		bne	.L90
 710:../CX3RDKOV5640.c ****     {
 711:../CX3RDKOV5640.c **** 
 712:../CX3RDKOV5640.c ****         /* UVC Class Requests */
 713:../CX3RDKOV5640.c ****         /* Requests to the Video Streaming Interface (IF 1) */
 714:../CX3RDKOV5640.c ****         if((wIndex & 0x00FF) == ES_UVC_STREAM_INTERFACE)
 1728              		.loc 1 714 0
 1729 0228 BE325BE1 		ldrh	r3, [fp, #-46]
 1730 022c FF3003E2 		and	r3, r3, #255
 1731 0230 010053E3 		cmp	r3, #1
 1732 0234 4D01001A 		bne	.L91
 715:../CX3RDKOV5640.c ****         {
 716:../CX3RDKOV5640.c ****             /* GET_CUR Request Handling Probe/Commit Controls*/
 717:../CX3RDKOV5640.c ****             if ((bRequest == ES_UVC_USB_GET_CUR_REQ)||(bRequest == ES_UVC_USB_GET_MIN_REQ) || (bReq
 1733              		.loc 1 717 0
 1734 0238 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1735 023c 810053E3 		cmp	r3, #129
 1736 0240 0800000A 		beq	.L92
 1737              		.loc 1 717 0 is_stmt 0 discriminator 1
 1738 0244 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1739 0248 820053E3 		cmp	r3, #130
 1740 024c 0500000A 		beq	.L92
 1741 0250 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1742 0254 830053E3 		cmp	r3, #131
 1743 0258 0200000A 		beq	.L92
 1744 025c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1745 0260 870053E3 		cmp	r3, #135
 1746 0264 5F00001A 		bne	.L93
 1747              	.L92:
 718:../CX3RDKOV5640.c ****             {
 719:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1748              		.loc 1 719 0 is_stmt 1
 1749 0268 0130A0E3 		mov	r3, #1
 1750 026c 20300BE5 		str	r3, [fp, #-32]
 720:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1751              		.loc 1 720 0
 1752 0270 BC325BE1 		ldrh	r3, [fp, #-44]
 1753 0274 010C53E3 		cmp	r3, #256
 1754 0278 0200000A 		beq	.L94
 1755              		.loc 1 720 0 is_stmt 0 discriminator 1
 1756 027c BC325BE1 		ldrh	r3, [fp, #-44]
 1757 0280 020C53E3 		cmp	r3, #512
 1758 0284 4000001A 		bne	.L95
 1759              	.L94:
 721:../CX3RDKOV5640.c ****                 {
 722:../CX3RDKOV5640.c ****                 	//TODO Modify this "glProbeCtrl" according to the Supported Preview Resolutions th
 723:../CX3RDKOV5640.c **** 
 724:../CX3RDKOV5640.c **** 					/* Host requests for probe data of 34 bytes (UVC 1.1) or 26 Bytes (UVC1.0). Send it over EP0. 
 725:../CX3RDKOV5640.c **** 					if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1760              		.loc 1 725 0 is_stmt 1
 1761 0288 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1762 028c 0030A0E1 		mov	r3, r0
 1763 0290 030053E3 		cmp	r3, #3
 1764 0294 2300001A 		bne	.L96
 726:../CX3RDKOV5640.c **** 					{
 727:../CX3RDKOV5640.c **** 						if(glCurrentFrameIndex == 4)
 1765              		.loc 1 727 0
 1766 0298 083E9FE5 		ldr	r3, .L229+28
 1767 029c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 02a0 040053E3 		cmp	r3, #4
 1769 02a4 0400001A 		bne	.L97
 728:../CX3RDKOV5640.c **** 						{
 729:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl5MpProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1770              		.loc 1 729 0
 1771 02a8 FC0D9FE5 		ldr	r0, .L229+32
 1772 02ac FC1D9FE5 		ldr	r1, .L229+36
 1773 02b0 1A20A0E3 		mov	r2, #26
 1774 02b4 FEFFFFEB 		bl	CyU3PMemCopy
 1775 02b8 260000EA 		b	.L101
 1776              	.L97:
 730:../CX3RDKOV5640.c **** 						}
 731:../CX3RDKOV5640.c **** 						/* Probe Control for 1280x720 stream*/
 732:../CX3RDKOV5640.c **** 						else if(glCurrentFrameIndex == 3)
 1777              		.loc 1 732 0
 1778 02bc E43D9FE5 		ldr	r3, .L229+28
 1779 02c0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 02c4 030053E3 		cmp	r3, #3
 1781 02c8 0400001A 		bne	.L99
 733:../CX3RDKOV5640.c **** 						{
 734:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl720pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1782              		.loc 1 734 0
 1783 02cc D80D9FE5 		ldr	r0, .L229+32
 1784 02d0 DC1D9FE5 		ldr	r1, .L229+40
 1785 02d4 1A20A0E3 		mov	r2, #26
 1786 02d8 FEFFFFEB 		bl	CyU3PMemCopy
 1787 02dc 1D0000EA 		b	.L101
 1788              	.L99:
 735:../CX3RDKOV5640.c **** 						}
 736:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 737:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 2)
 1789              		.loc 1 737 0
 1790 02e0 C03D9FE5 		ldr	r3, .L229+28
 1791 02e4 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1792 02e8 020053E3 		cmp	r3, #2
 1793 02ec 0400001A 		bne	.L100
 738:../CX3RDKOV5640.c **** 						{
 739:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga60ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1794              		.loc 1 739 0
 1795 02f0 B40D9FE5 		ldr	r0, .L229+32
 1796 02f4 BC1D9FE5 		ldr	r1, .L229+44
 1797 02f8 1A20A0E3 		mov	r2, #26
 1798 02fc FEFFFFEB 		bl	CyU3PMemCopy
 1799 0300 140000EA 		b	.L101
 1800              	.L100:
 740:../CX3RDKOV5640.c **** 						}
 741:../CX3RDKOV5640.c **** 						/* Probe Control for 1920x1080 stream*/
 742:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 1)
 1801              		.loc 1 742 0
 1802 0304 9C3D9FE5 		ldr	r3, .L229+28
 1803 0308 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1804 030c 010053E3 		cmp	r3, #1
 1805 0310 1000001A 		bne	.L101
 743:../CX3RDKOV5640.c **** 						{
 744:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl1080pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1806              		.loc 1 744 0
 1807 0314 900D9FE5 		ldr	r0, .L229+32
 1808 0318 9C1D9FE5 		ldr	r1, .L229+48
 1809 031c 1A20A0E3 		mov	r2, #26
 1810 0320 FEFFFFEB 		bl	CyU3PMemCopy
 1811 0324 0B0000EA 		b	.L101
 1812              	.L96:
 745:../CX3RDKOV5640.c **** 						}
 746:../CX3RDKOV5640.c **** 
 747:../CX3RDKOV5640.c **** 					}
 748:../CX3RDKOV5640.c **** 					else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1813              		.loc 1 748 0
 1814 0328 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1815 032c 0030A0E1 		mov	r3, r0
 1816 0330 020053E3 		cmp	r3, #2
 1817 0334 0400001A 		bne	.L102
 749:../CX3RDKOV5640.c **** 					{
 750:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 751:../CX3RDKOV5640.c **** 						CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga30ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1818              		.loc 1 751 0
 1819 0338 6C0D9FE5 		ldr	r0, .L229+32
 1820 033c 7C1D9FE5 		ldr	r1, .L229+52
 1821 0340 1A20A0E3 		mov	r2, #26
 1822 0344 FEFFFFEB 		bl	CyU3PMemCopy
 1823 0348 020000EA 		b	.L101
 1824              	.L102:
 752:../CX3RDKOV5640.c **** 					}
 753:../CX3RDKOV5640.c **** 					else /* FULL-Speed*/
 754:../CX3RDKOV5640.c **** 					{
 755:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rFull Speed Not Supported!");
 1825              		.loc 1 755 0
 1826 034c 0400A0E3 		mov	r0, #4
 1827 0350 6C1D9FE5 		ldr	r1, .L229+56
 1828 0354 FEFFFFEB 		bl	CyU3PDebugPrint
 1829              	.L101:
 756:../CX3RDKOV5640.c **** 					}
 757:../CX3RDKOV5640.c **** 
 758:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(ES_UVC_MAX_PROBE_SETTING, glProbeCtrl);
 1830              		.loc 1 758 0
 1831 0358 1A00A0E3 		mov	r0, #26
 1832 035c 481D9FE5 		ldr	r1, .L229+32
 1833 0360 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1834 0364 24000BE5 		str	r0, [fp, #-36]
 759:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1835              		.loc 1 759 0
 1836 0368 24301BE5 		ldr	r3, [fp, #-36]
 1837 036c 000053E3 		cmp	r3, #0
 1838 0370 0400000A 		beq	.L103
 760:../CX3RDKOV5640.c **** 					{
 761:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1839              		.loc 1 761 0
 1840 0374 0400A0E3 		mov	r0, #4
 1841 0378 481D9FE5 		ldr	r1, .L229+60
 1842 037c 24201BE5 		ldr	r2, [fp, #-36]
 1843 0380 FEFFFFEB 		bl	CyU3PDebugPrint
 759:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1844              		.loc 1 759 0
 1845 0384 160000EA 		b	.L104
 1846              	.L103:
 759:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1847              		.loc 1 759 0 is_stmt 0 discriminator 1
 1848 0388 150000EA 		b	.L104
 1849              	.L95:
 762:../CX3RDKOV5640.c **** 					}
 763:../CX3RDKOV5640.c ****                 }
 764:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 1850              		.loc 1 764 0 is_stmt 1
 1851 038c BC325BE1 		ldrh	r3, [fp, #-44]
 1852 0390 030C53E3 		cmp	r3, #768
 1853 0394 0200000A 		beq	.L105
 1854              		.loc 1 764 0 is_stmt 0 discriminator 1
 1855 0398 BC325BE1 		ldrh	r3, [fp, #-44]
 1856 039c 010B53E3 		cmp	r3, #1024
 1857 03a0 0F00001A 		bne	.L104
 1858              	.L105:
 765:../CX3RDKOV5640.c ****                 {
 766:../CX3RDKOV5640.c ****                 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1859              		.loc 1 766 0 is_stmt 1
 1860 03a4 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1861 03a8 0030A0E1 		mov	r3, r0
 1862 03ac 030053E3 		cmp	r3, #3
 1863 03b0 0B00001A 		bne	.L104
 767:../CX3RDKOV5640.c ****                 	{
 768:../CX3RDKOV5640.c **** 						status = CyU3PUsbSendEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING, glStillProbeCtrl);
 1864              		.loc 1 768 0
 1865 03b4 0B00A0E3 		mov	r0, #11
 1866 03b8 0C1D9FE5 		ldr	r1, .L229+64
 1867 03bc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1868 03c0 24000BE5 		str	r0, [fp, #-36]
 769:../CX3RDKOV5640.c **** 						if (status != CY_U3P_SUCCESS)
 1869              		.loc 1 769 0
 1870 03c4 24301BE5 		ldr	r3, [fp, #-36]
 1871 03c8 000053E3 		cmp	r3, #0
 1872 03cc 0400000A 		beq	.L104
 770:../CX3RDKOV5640.c **** 						{
 771:../CX3RDKOV5640.c **** 							CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1873              		.loc 1 771 0
 1874 03d0 0400A0E3 		mov	r0, #4
 1875 03d4 EC1C9FE5 		ldr	r1, .L229+60
 1876 03d8 24201BE5 		ldr	r2, [fp, #-36]
 1877 03dc FEFFFFEB 		bl	CyU3PDebugPrint
 720:../CX3RDKOV5640.c ****                 {
 1878              		.loc 1 720 0
 1879 03e0 E10000EA 		b	.L106
 1880              	.L104:
 1881 03e4 E00000EA 		b	.L106
 1882              	.L93:
 772:../CX3RDKOV5640.c **** 						}
 773:../CX3RDKOV5640.c ****                 	}
 774:../CX3RDKOV5640.c ****                 }
 775:../CX3RDKOV5640.c ****             }
 776:../CX3RDKOV5640.c ****             /* SET_CUR request handling Probe/Commit controls */
 777:../CX3RDKOV5640.c ****             else if (bRequest == ES_UVC_USB_SET_CUR_REQ)
 1883              		.loc 1 777 0
 1884 03e8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1885 03ec 010053E3 		cmp	r3, #1
 1886 03f0 DA00001A 		bne	.L107
 778:../CX3RDKOV5640.c ****             {
 779:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1887              		.loc 1 779 0
 1888 03f4 0130A0E3 		mov	r3, #1
 1889 03f8 20300BE5 		str	r3, [fp, #-32]
 780:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1890              		.loc 1 780 0
 1891 03fc BC325BE1 		ldrh	r3, [fp, #-44]
 1892 0400 010C53E3 		cmp	r3, #256
 1893 0404 0200000A 		beq	.L108
 1894              		.loc 1 780 0 is_stmt 0 discriminator 1
 1895 0408 BC325BE1 		ldrh	r3, [fp, #-44]
 1896 040c 020C53E3 		cmp	r3, #512
 1897 0410 5400001A 		bne	.L109
 1898              	.L108:
 781:../CX3RDKOV5640.c ****                 {
 782:../CX3RDKOV5640.c **** 					/* Get the UVC probe/commit control data from EP0 */
 783:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_PROBE_SETTING_ALIGNED,
 1899              		.loc 1 783 0 is_stmt 1
 1900 0414 32304BE2 		sub	r3, fp, #50
 1901 0418 2000A0E3 		mov	r0, #32
 1902 041c AC1C9FE5 		ldr	r1, .L229+68
 1903 0420 0320A0E1 		mov	r2, r3
 1904 0424 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 1905 0428 24000BE5 		str	r0, [fp, #-36]
 784:../CX3RDKOV5640.c **** 							glCommitCtrl, &readCount);
 785:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1906              		.loc 1 785 0
 1907 042c 24301BE5 		ldr	r3, [fp, #-36]
 1908 0430 000053E3 		cmp	r3, #0
 1909 0434 0300000A 		beq	.L110
 786:../CX3RDKOV5640.c **** 					{
 787:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 1910              		.loc 1 787 0
 1911 0438 0400A0E3 		mov	r0, #4
 1912 043c 901C9FE5 		ldr	r1, .L229+72
 1913 0440 24201BE5 		ldr	r2, [fp, #-36]
 1914 0444 FEFFFFEB 		bl	CyU3PDebugPrint
 1915              	.L110:
 788:../CX3RDKOV5640.c **** 					}
 789:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 790:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_PROBE_SETTING)
 1916              		.loc 1 790 0
 1917 0448 B2335BE1 		ldrh	r3, [fp, #-50]
 1918 044c 1A0053E3 		cmp	r3, #26
 1919 0450 0300009A 		bls	.L111
 791:../CX3RDKOV5640.c **** 					{
 792:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 1920              		.loc 1 792 0
 1921 0454 0400A0E3 		mov	r0, #4
 1922 0458 781C9FE5 		ldr	r1, .L229+76
 1923 045c FEFFFFEB 		bl	CyU3PDebugPrint
 1924 0460 3F0000EA 		b	.L112
 1925              	.L111:
 793:../CX3RDKOV5640.c **** 					}
 794:../CX3RDKOV5640.c **** 					else
 795:../CX3RDKOV5640.c **** 					{
 796:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 797:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_VS_PROBE_CONTROL)
 1926              		.loc 1 797 0
 1927 0464 BC325BE1 		ldrh	r3, [fp, #-44]
 1928 0468 010C53E3 		cmp	r3, #256
 1929 046c 0400001A 		bne	.L113
 798:../CX3RDKOV5640.c **** 						{
 799:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 1930              		.loc 1 799 0
 1931 0470 583C9FE5 		ldr	r3, .L229+68
 1932 0474 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1933 0478 283C9FE5 		ldr	r3, .L229+28
 1934 047c 0020C3E5 		strb	r2, [r3]
 1935 0480 370000EA 		b	.L112
 1936              	.L113:
 800:../CX3RDKOV5640.c **** 						}
 801:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 802:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_VS_COMMIT_CONTROL)
 1937              		.loc 1 802 0
 1938 0484 BC325BE1 		ldrh	r3, [fp, #-44]
 1939 0488 020C53E3 		cmp	r3, #512
 1940 048c 3400001A 		bne	.L112
 803:../CX3RDKOV5640.c **** 						{
 804:../CX3RDKOV5640.c **** 
 805:../CX3RDKOV5640.c **** 							if((glcommitcount==0)||(glcheckframe!=glCommitCtrl[3]))
 1941              		.loc 1 805 0
 1942 0490 083C9FE5 		ldr	r3, .L229+20
 1943 0494 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 0498 000053E3 		cmp	r3, #0
 1945 049c 0500000A 		beq	.L114
 1946              		.loc 1 805 0 is_stmt 0 discriminator 1
 1947 04a0 283C9FE5 		ldr	r3, .L229+68
 1948 04a4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1949 04a8 2C3C9FE5 		ldr	r3, .L229+80
 1950 04ac 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 04b0 030052E1 		cmp	r2, r3
 1952 04b4 2A00000A 		beq	.L112
 1953              	.L114:
 806:../CX3RDKOV5640.c **** 							{
 807:../CX3RDKOV5640.c **** 								glcommitcount++;
 1954              		.loc 1 807 0 is_stmt 1
 1955 04b8 E03B9FE5 		ldr	r3, .L229+20
 1956 04bc 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1957 04c0 013083E2 		add	r3, r3, #1
 1958 04c4 FF2003E2 		and	r2, r3, #255
 1959 04c8 D03B9FE5 		ldr	r3, .L229+20
 1960 04cc 0020C3E5 		strb	r2, [r3]
 808:../CX3RDKOV5640.c **** 								glcheckframe=glCommitCtrl[3];
 1961              		.loc 1 808 0
 1962 04d0 F83B9FE5 		ldr	r3, .L229+68
 1963 04d4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1964 04d8 FC3B9FE5 		ldr	r3, .L229+80
 1965 04dc 0020C3E5 		strb	r2, [r3]
 809:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 1966              		.loc 1 809 0
 1967 04e0 E83B9FE5 		ldr	r3, .L229+68
 1968 04e4 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1969 04e8 B83B9FE5 		ldr	r3, .L229+28
 1970 04ec 0020C3E5 		strb	r2, [r3]
 810:../CX3RDKOV5640.c **** 							glFrameIndexToSet = glCurrentFrameIndex;
 1971              		.loc 1 810 0
 1972 04f0 B03B9FE5 		ldr	r3, .L229+28
 1973 04f4 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 1974 04f8 E03B9FE5 		ldr	r3, .L229+84
 1975 04fc 0020C3E5 		strb	r2, [r3]
 811:../CX3RDKOV5640.c **** 							glPreviewStarted = CyTrue;
 1976              		.loc 1 811 0
 1977 0500 903B9FE5 		ldr	r3, .L229+12
 1978 0504 0120A0E3 		mov	r2, #1
 1979 0508 002083E5 		str	r2, [r3]
 812:../CX3RDKOV5640.c **** 
 813:../CX3RDKOV5640.c **** 							//TODO Change this function with "Sensor Specific" function to write the sensor settings & c
 814:../CX3RDKOV5640.c **** 						//	esSetCameraResolution(glCurrentFrameIndex);
 815:../CX3RDKOV5640.c **** 							esSetCameraResolution(glCommitCtrl[3]);
 1980              		.loc 1 815 0
 1981 050c BC3B9FE5 		ldr	r3, .L229+68
 1982 0510 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1983 0514 0300A0E1 		mov	r0, r3
 1984 0518 FEFFFFEB 		bl	esSetCameraResolution
 816:../CX3RDKOV5640.c **** 
 817:../CX3RDKOV5640.c **** 							if (glIsApplnActive)
 1985              		.loc 1 817 0
 1986 051c 6C3B9FE5 		ldr	r3, .L229+4
 1987 0520 003093E5 		ldr	r3, [r3]
 1988 0524 000053E3 		cmp	r3, #0
 1989 0528 0B00000A 		beq	.L115
 818:../CX3RDKOV5640.c **** 							{
 819:../CX3RDKOV5640.c **** 								if(glcommitcount)
 1990              		.loc 1 819 0
 1991 052c 6C3B9FE5 		ldr	r3, .L229+20
 1992 0530 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1993 0534 000053E3 		cmp	r3, #0
 1994 0538 0300000A 		beq	.L116
 820:../CX3RDKOV5640.c **** 									glIsClearFeature = CyFalse;
 1995              		.loc 1 820 0
 1996 053c 583B9FE5 		ldr	r3, .L229+16
 1997 0540 0020A0E3 		mov	r2, #0
 1998 0544 002083E5 		str	r2, [r3]
 1999 0548 020000EA 		b	.L117
 2000              	.L116:
 821:../CX3RDKOV5640.c **** 								else
 822:../CX3RDKOV5640.c **** 									glIsClearFeature = CyTrue;
 2001              		.loc 1 822 0
 2002 054c 483B9FE5 		ldr	r3, .L229+16
 2003 0550 0120A0E3 		mov	r2, #1
 2004 0554 002083E5 		str	r2, [r3]
 2005              	.L117:
 823:../CX3RDKOV5640.c **** 
 824:../CX3RDKOV5640.c **** 								esUVCUvcApplnStop();
 2006              		.loc 1 824 0
 2007 0558 FEFFFFEB 		bl	esUVCUvcApplnStop
 2008              	.L115:
 825:../CX3RDKOV5640.c **** 							}
 826:../CX3RDKOV5640.c **** 							esUVCUvcApplnStart();
 2009              		.loc 1 826 0
 2010 055c FEFFFFEB 		bl	esUVCUvcApplnStart
 790:../CX3RDKOV5640.c **** 					{
 2011              		.loc 1 790 0
 2012 0560 7D0000EA 		b	.L118
 2013              	.L112:
 2014 0564 7C0000EA 		b	.L118
 2015              	.L109:
 827:../CX3RDKOV5640.c **** 							}
 828:../CX3RDKOV5640.c **** 						}
 829:../CX3RDKOV5640.c **** 					}
 830:../CX3RDKOV5640.c ****                 }
 831:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 2016              		.loc 1 831 0
 2017 0568 BC325BE1 		ldrh	r3, [fp, #-44]
 2018 056c 030C53E3 		cmp	r3, #768
 2019 0570 0200000A 		beq	.L119
 2020              		.loc 1 831 0 is_stmt 0 discriminator 1
 2021 0574 BC325BE1 		ldrh	r3, [fp, #-44]
 2022 0578 010B53E3 		cmp	r3, #1024
 2023 057c 5400001A 		bne	.L120
 2024              	.L119:
 832:../CX3RDKOV5640.c ****                 {
 833:../CX3RDKOV5640.c ****                 	/* Get the UVC STILL probe/commit control data from EP0 */
 834:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED,glStillCommitCtrl, &readCou
 2025              		.loc 1 834 0 is_stmt 1
 2026 0580 32304BE2 		sub	r3, fp, #50
 2027 0584 2000A0E3 		mov	r0, #32
 2028 0588 541B9FE5 		ldr	r1, .L229+88
 2029 058c 0320A0E1 		mov	r2, r3
 2030 0590 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2031 0594 24000BE5 		str	r0, [fp, #-36]
 835:../CX3RDKOV5640.c **** 					CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:still = 0x%x.", wValue);
 2032              		.loc 1 835 0
 2033 0598 BC325BE1 		ldrh	r3, [fp, #-44]
 2034 059c 0400A0E3 		mov	r0, #4
 2035 05a0 401B9FE5 		ldr	r1, .L229+92
 2036 05a4 0320A0E1 		mov	r2, r3
 2037 05a8 FEFFFFEB 		bl	CyU3PDebugPrint
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 837:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[0], glStillCommitCtrl[1],  glStillCommitCtrl[2], glStillCom
 2038              		.loc 1 837 0
 2039 05ac 303B9FE5 		ldr	r3, .L229+88
 2040 05b0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2041              		.loc 1 836 0
 2042 05b4 0320A0E1 		mov	r2, r3
 2043              		.loc 1 837 0
 2044 05b8 243B9FE5 		ldr	r3, .L229+88
 2045 05bc 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2046 05c0 1C1B9FE5 		ldr	r1, .L229+88
 2047 05c4 0210D1E5 		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2048              		.loc 1 836 0
 2049 05c8 0180A0E1 		mov	r8, r1
 2050              		.loc 1 837 0
 2051 05cc 101B9FE5 		ldr	r1, .L229+88
 2052 05d0 0310D1E5 		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2053              		.loc 1 836 0
 2054 05d4 0170A0E1 		mov	r7, r1
 838:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[4], glStillCommitCtrl[5],  glStillCommitCtrl[6], glStillCom
 2055              		.loc 1 838 0
 2056 05d8 041B9FE5 		ldr	r1, .L229+88
 2057 05dc 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2058              		.loc 1 836 0
 2059 05e0 0160A0E1 		mov	r6, r1
 2060              		.loc 1 838 0
 2061 05e4 F81A9FE5 		ldr	r1, .L229+88
 2062 05e8 0510D1E5 		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2063              		.loc 1 836 0
 2064 05ec 0150A0E1 		mov	r5, r1
 2065              		.loc 1 838 0
 2066 05f0 EC1A9FE5 		ldr	r1, .L229+88
 2067 05f4 0610D1E5 		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2068              		.loc 1 836 0
 2069 05f8 0140A0E1 		mov	r4, r1
 2070              		.loc 1 838 0
 2071 05fc E01A9FE5 		ldr	r1, .L229+88
 2072 0600 0710D1E5 		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2073              		.loc 1 836 0
 2074 0604 01E0A0E1 		mov	lr, r1
 839:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[8], glStillCommitCtrl[9], glStillCommitCtrl[10]);
 2075              		.loc 1 839 0
 2076 0608 D41A9FE5 		ldr	r1, .L229+88
 2077 060c 0810D1E5 		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2078              		.loc 1 836 0
 2079 0610 01C0A0E1 		mov	ip, r1
 2080              		.loc 1 839 0
 2081 0614 C81A9FE5 		ldr	r1, .L229+88
 2082 0618 0910D1E5 		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2083              		.loc 1 836 0
 2084 061c 0100A0E1 		mov	r0, r1
 2085              		.loc 1 839 0
 2086 0620 BC1A9FE5 		ldr	r1, .L229+88
 2087 0624 0A10D1E5 		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 836:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2088              		.loc 1 836 0
 2089 0628 00808DE5 		str	r8, [sp]
 2090 062c 04708DE5 		str	r7, [sp, #4]
 2091 0630 08608DE5 		str	r6, [sp, #8]
 2092 0634 0C508DE5 		str	r5, [sp, #12]
 2093 0638 10408DE5 		str	r4, [sp, #16]
 2094 063c 14E08DE5 		str	lr, [sp, #20]
 2095 0640 18C08DE5 		str	ip, [sp, #24]
 2096 0644 1C008DE5 		str	r0, [sp, #28]
 2097 0648 20108DE5 		str	r1, [sp, #32]
 2098 064c 0400A0E3 		mov	r0, #4
 2099 0650 941A9FE5 		ldr	r1, .L229+96
 2100 0654 FEFFFFEB 		bl	CyU3PDebugPrint
 840:../CX3RDKOV5640.c **** 
 841:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2101              		.loc 1 841 0
 2102 0658 24301BE5 		ldr	r3, [fp, #-36]
 2103 065c 000053E3 		cmp	r3, #0
 2104 0660 0300000A 		beq	.L121
 842:../CX3RDKOV5640.c **** 					{
 843:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2105              		.loc 1 843 0
 2106 0664 0400A0E3 		mov	r0, #4
 2107 0668 641A9FE5 		ldr	r1, .L229+72
 2108 066c 24201BE5 		ldr	r2, [fp, #-36]
 2109 0670 FEFFFFEB 		bl	CyU3PDebugPrint
 2110              	.L121:
 844:../CX3RDKOV5640.c **** 					}
 845:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 846:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_STILL_PROBE_SETTING)
 2111              		.loc 1 846 0
 2112 0674 B2335BE1 		ldrh	r3, [fp, #-50]
 2113 0678 0B0053E3 		cmp	r3, #11
 2114 067c 0300009A 		bls	.L122
 847:../CX3RDKOV5640.c **** 					{
 848:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2115              		.loc 1 848 0
 2116 0680 0400A0E3 		mov	r0, #4
 2117 0684 4C1A9FE5 		ldr	r1, .L229+76
 2118 0688 FEFFFFEB 		bl	CyU3PDebugPrint
 2119 068c 0F0000EA 		b	.L123
 2120              	.L122:
 849:../CX3RDKOV5640.c **** 					}
 850:../CX3RDKOV5640.c **** 					else
 851:../CX3RDKOV5640.c **** 					{
 852:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 853:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_STILL_PROBE_CONTROL)
 2121              		.loc 1 853 0
 2122 0690 BC325BE1 		ldrh	r3, [fp, #-44]
 2123 0694 030C53E3 		cmp	r3, #768
 2124 0698 0400001A 		bne	.L124
 854:../CX3RDKOV5640.c **** 						{
 855:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2125              		.loc 1 855 0
 2126 069c 403A9FE5 		ldr	r3, .L229+88
 2127 06a0 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2128 06a4 443A9FE5 		ldr	r3, .L229+100
 2129 06a8 0020C3E5 		strb	r2, [r3]
 2130 06ac 070000EA 		b	.L123
 2131              	.L124:
 856:../CX3RDKOV5640.c **** 						}
 857:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 858:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_STILL_COMMIT_CONTROL)
 2132              		.loc 1 858 0
 2133 06b0 BC325BE1 		ldrh	r3, [fp, #-44]
 2134 06b4 010B53E3 		cmp	r3, #1024
 2135 06b8 0400001A 		bne	.L123
 859:../CX3RDKOV5640.c **** 						{
 860:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2136              		.loc 1 860 0
 2137 06bc 203A9FE5 		ldr	r3, .L229+88
 2138 06c0 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2139 06c4 243A9FE5 		ldr	r3, .L229+100
 2140 06c8 0020C3E5 		strb	r2, [r3]
 846:../CX3RDKOV5640.c **** 					{
 2141              		.loc 1 846 0
 2142 06cc 220000EA 		b	.L118
 2143              	.L123:
 2144 06d0 210000EA 		b	.L118
 2145              	.L120:
 861:../CX3RDKOV5640.c **** 						}
 862:../CX3RDKOV5640.c **** 					}
 863:../CX3RDKOV5640.c **** 
 864:../CX3RDKOV5640.c ****                 }
 865:../CX3RDKOV5640.c ****                 else if(wValue == ES_UVC_STILL_TRIGGER)
 2146              		.loc 1 865 0
 2147 06d4 BC325BE1 		ldrh	r3, [fp, #-44]
 2148 06d8 050C53E3 		cmp	r3, #1280
 2149 06dc D703001A 		bne	.L90
 866:../CX3RDKOV5640.c ****                 {
 867:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_STILL_TRIGGER_ALIGNED,&glStillTriggerCtrl, &readCount);
 2150              		.loc 1 867 0
 2151 06e0 32304BE2 		sub	r3, fp, #50
 2152 06e4 1000A0E3 		mov	r0, #16
 2153 06e8 041A9FE5 		ldr	r1, .L229+104
 2154 06ec 0320A0E1 		mov	r2, r3
 2155 06f0 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2156 06f4 24000BE5 		str	r0, [fp, #-36]
 868:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2157              		.loc 1 868 0
 2158 06f8 24301BE5 		ldr	r3, [fp, #-36]
 2159 06fc 000053E3 		cmp	r3, #0
 2160 0700 0300000A 		beq	.L125
 869:../CX3RDKOV5640.c **** 					{
 870:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2161              		.loc 1 870 0
 2162 0704 0400A0E3 		mov	r0, #4
 2163 0708 C4199FE5 		ldr	r1, .L229+72
 2164 070c 24201BE5 		ldr	r2, [fp, #-36]
 2165 0710 FEFFFFEB 		bl	CyU3PDebugPrint
 2166              	.L125:
 871:../CX3RDKOV5640.c **** 					}
 872:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 873:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_STILL_TRIGGER_COUNT)
 2167              		.loc 1 873 0
 2168 0714 B2335BE1 		ldrh	r3, [fp, #-50]
 2169 0718 010053E3 		cmp	r3, #1
 2170 071c 0300009A 		bls	.L126
 874:../CX3RDKOV5640.c **** 					{
 875:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2171              		.loc 1 875 0
 2172 0720 0400A0E3 		mov	r0, #4
 2173 0724 AC199FE5 		ldr	r1, .L229+76
 2174 0728 FEFFFFEB 		bl	CyU3PDebugPrint
 2175 072c C30300EA 		b	.L90
 2176              	.L126:
 876:../CX3RDKOV5640.c **** 					}
 877:../CX3RDKOV5640.c **** 					else
 878:../CX3RDKOV5640.c **** 					{
 879:../CX3RDKOV5640.c **** 						if(glStillTriggerCtrl == 0x01)
 2177              		.loc 1 879 0
 2178 0730 BC399FE5 		ldr	r3, .L229+104
 2179 0734 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2180 0738 010053E3 		cmp	r3, #1
 2181 073c BF03001A 		bne	.L90
 880:../CX3RDKOV5640.c **** 						{
 881:../CX3RDKOV5640.c **** 							glStillSkip = 3;
 2182              		.loc 1 881 0
 2183 0740 B0399FE5 		ldr	r3, .L229+108
 2184 0744 0320A0E3 		mov	r2, #3
 2185 0748 0020C3E5 		strb	r2, [r3]
 882:../CX3RDKOV5640.c **** 							glStillCaptureStart = CyTrue;
 2186              		.loc 1 882 0
 2187 074c A8399FE5 		ldr	r3, .L229+112
 2188 0750 0120A0E3 		mov	r2, #1
 2189 0754 002083E5 		str	r2, [r3]
 2190 0758 B80300EA 		b	.L90
 2191              	.L118:
 2192 075c B70300EA 		b	.L90
 2193              	.L107:
 883:../CX3RDKOV5640.c **** 						}
 884:../CX3RDKOV5640.c **** 					}
 885:../CX3RDKOV5640.c ****                 }
 886:../CX3RDKOV5640.c ****             }
 887:../CX3RDKOV5640.c ****             else
 888:../CX3RDKOV5640.c ****             {
 889:../CX3RDKOV5640.c ****                 /* Mark with error. */
 890:../CX3RDKOV5640.c ****                 status = CY_U3P_ERROR_FAILURE;
 2194              		.loc 1 890 0
 2195 0760 4A30A0E3 		mov	r3, #74
 2196 0764 24300BE5 		str	r3, [fp, #-36]
 2197 0768 B40300EA 		b	.L90
 2198              	.L106:
 2199 076c B30300EA 		b	.L90
 2200              	.L91:
 891:../CX3RDKOV5640.c ****             }
 892:../CX3RDKOV5640.c ****         }
 893:../CX3RDKOV5640.c ****         else if((wIndex & 0x00FF) == ES_UVC_CONTROL_INTERFACE) /* Video Control Interface */
 2201              		.loc 1 893 0
 2202 0770 BE325BE1 		ldrh	r3, [fp, #-46]
 2203 0774 FF3003E2 		and	r3, r3, #255
 2204 0778 000053E3 		cmp	r3, #0
 2205 077c AF03001A 		bne	.L90
 894:../CX3RDKOV5640.c ****         {
 895:../CX3RDKOV5640.c ****             isHandled = CyTrue;
 2206              		.loc 1 895 0
 2207 0780 0130A0E3 		mov	r3, #1
 2208 0784 20300BE5 		str	r3, [fp, #-32]
 896:../CX3RDKOV5640.c ****             /* Respond to VC_REQUEST_ERROR_CODE_CONTROL and stall every other request as this examp
 897:../CX3RDKOV5640.c ****                any of the Video Control features */
 898:../CX3RDKOV5640.c ****             if((wIndex == 0x200) && (wValue == 0x200))/*Brightness*/
 2209              		.loc 1 898 0
 2210 0788 BE325BE1 		ldrh	r3, [fp, #-46]
 2211 078c 020C53E3 		cmp	r3, #512
 2212 0790 4D00001A 		bne	.L127
 2213              		.loc 1 898 0 is_stmt 0 discriminator 1
 2214 0794 BC325BE1 		ldrh	r3, [fp, #-44]
 2215 0798 020C53E3 		cmp	r3, #512
 2216 079c 4A00001A 		bne	.L127
 899:../CX3RDKOV5640.c ****             {
 900:../CX3RDKOV5640.c ****             	switch(bRequest)
 2217              		.loc 1 900 0 is_stmt 1
 2218 07a0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2219 07a4 840053E3 		cmp	r3, #132
 2220 07a8 040000CA 		bgt	.L129
 2221 07ac 810053E3 		cmp	r3, #129
 2222 07b0 170000AA 		bge	.L130
 2223 07b4 010053E3 		cmp	r3, #1
 2224 07b8 2D00000A 		beq	.L131
 901:../CX3RDKOV5640.c ****             	{
 902:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_INFO_REQ:
 903:../CX3RDKOV5640.c ****             		glGet_Info=0x03;
 904:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 905:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 906:../CX3RDKOV5640.c **** 					{
 907:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 908:../CX3RDKOV5640.c **** 					}
 909:../CX3RDKOV5640.c **** 					break;
 910:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 911:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MAX_REQ:
 912:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_RES_REQ:
 913:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_CUR_REQ:
 914:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_DEF_REQ:
 915:../CX3RDKOV5640.c ****             		RequestOption = (bRequest & 0x0F);
 916:../CX3RDKOV5640.c **** 
 917:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service all the GE
 918:../CX3RDKOV5640.c ****             		gl16GetControl = esOV5640_GetBrightness(RequestOption);
 919:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 920:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 921:../CX3RDKOV5640.c **** 					{
 922:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 923:../CX3RDKOV5640.c **** 					}
 924:../CX3RDKOV5640.c ****             		break;
 925:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 926:../CX3RDKOV5640.c ****             		status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
 927:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 928:../CX3RDKOV5640.c **** 					{
 929:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 930:../CX3RDKOV5640.c **** 					}
 931:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service the SET re
 932:../CX3RDKOV5640.c **** 					esOV5640_SetBrightness((int8_t)gl16SetControl);
 933:../CX3RDKOV5640.c **** 					break;
 934:../CX3RDKOV5640.c ****             	}
 935:../CX3RDKOV5640.c ****             }
 2225              		.loc 1 935 0
 2226 07bc 9F0300EA 		b	.L90
 2227              	.L129:
 900:../CX3RDKOV5640.c ****             	{
 2228              		.loc 1 900 0
 2229 07c0 860053E3 		cmp	r3, #134
 2230 07c4 0200000A 		beq	.L132
 2231 07c8 870053E3 		cmp	r3, #135
 2232 07cc 1000000A 		beq	.L130
 2233              		.loc 1 935 0
 2234 07d0 9A0300EA 		b	.L90
 2235              	.L132:
 903:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2236              		.loc 1 903 0
 2237 07d4 3C399FE5 		ldr	r3, .L229+140
 2238 07d8 0320A0E3 		mov	r2, #3
 2239 07dc 0020C3E5 		strb	r2, [r3]
 904:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2240              		.loc 1 904 0
 2241 07e0 0100A0E3 		mov	r0, #1
 2242 07e4 2C199FE5 		ldr	r1, .L229+140
 2243 07e8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2244 07ec 24000BE5 		str	r0, [fp, #-36]
 905:../CX3RDKOV5640.c **** 					{
 2245              		.loc 1 905 0
 2246 07f0 24301BE5 		ldr	r3, [fp, #-36]
 2247 07f4 000053E3 		cmp	r3, #0
 2248 07f8 0400000A 		beq	.L133
 907:../CX3RDKOV5640.c **** 					}
 2249              		.loc 1 907 0
 2250 07fc 0400A0E3 		mov	r0, #4
 2251 0800 1C199FE5 		ldr	r1, .L229+152
 2252 0804 24201BE5 		ldr	r2, [fp, #-36]
 2253 0808 FEFFFFEB 		bl	CyU3PDebugPrint
 909:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 2254              		.loc 1 909 0
 2255 080c 2D0000EA 		b	.L128
 2256              	.L133:
 2257 0810 2C0000EA 		b	.L128
 2258              	.L130:
 915:../CX3RDKOV5640.c **** 
 2259              		.loc 1 915 0
 2260 0814 29305BE5 		ldrb	r3, [fp, #-41]
 2261 0818 0F3003E2 		and	r3, r3, #15
 2262 081c 25304BE5 		strb	r3, [fp, #-37]
 918:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2263              		.loc 1 918 0
 2264 0820 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2265 0824 0300A0E1 		mov	r0, r3
 2266 0828 FEFFFFEB 		bl	esOV5640_GetBrightness
 2267 082c 0030A0E1 		mov	r3, r0
 2268 0830 0338A0E1 		mov	r3, r3, asl #16
 2269 0834 2328A0E1 		mov	r2, r3, lsr #16
 2270 0838 DC389FE5 		ldr	r3, .L229+144
 2271 083c B020C3E1 		strh	r2, [r3]	@ movhi
 919:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2272              		.loc 1 919 0
 2273 0840 0200A0E3 		mov	r0, #2
 2274 0844 D0189FE5 		ldr	r1, .L229+144
 2275 0848 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2276 084c 24000BE5 		str	r0, [fp, #-36]
 920:../CX3RDKOV5640.c **** 					{
 2277              		.loc 1 920 0
 2278 0850 24301BE5 		ldr	r3, [fp, #-36]
 2279 0854 000053E3 		cmp	r3, #0
 2280 0858 0400000A 		beq	.L134
 922:../CX3RDKOV5640.c **** 					}
 2281              		.loc 1 922 0
 2282 085c 0400A0E3 		mov	r0, #4
 2283 0860 BC189FE5 		ldr	r1, .L229+152
 2284 0864 24201BE5 		ldr	r2, [fp, #-36]
 2285 0868 FEFFFFEB 		bl	CyU3PDebugPrint
 924:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 2286              		.loc 1 924 0
 2287 086c 150000EA 		b	.L128
 2288              	.L134:
 2289 0870 140000EA 		b	.L128
 2290              	.L131:
 926:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 2291              		.loc 1 926 0
 2292 0874 32304BE2 		sub	r3, fp, #50
 2293 0878 1000A0E3 		mov	r0, #16
 2294 087c 9C189FE5 		ldr	r1, .L229+148
 2295 0880 0320A0E1 		mov	r2, r3
 2296 0884 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2297 0888 24000BE5 		str	r0, [fp, #-36]
 927:../CX3RDKOV5640.c **** 					{
 2298              		.loc 1 927 0
 2299 088c 24301BE5 		ldr	r3, [fp, #-36]
 2300 0890 000053E3 		cmp	r3, #0
 2301 0894 0300000A 		beq	.L135
 929:../CX3RDKOV5640.c **** 					}
 2302              		.loc 1 929 0
 2303 0898 0400A0E3 		mov	r0, #4
 2304 089c 80189FE5 		ldr	r1, .L229+152
 2305 08a0 24201BE5 		ldr	r2, [fp, #-36]
 2306 08a4 FEFFFFEB 		bl	CyU3PDebugPrint
 2307              	.L135:
 932:../CX3RDKOV5640.c **** 					break;
 2308              		.loc 1 932 0
 2309 08a8 70389FE5 		ldr	r3, .L229+148
 2310 08ac B030D3E1 		ldrh	r3, [r3]
 2311 08b0 FF3003E2 		and	r3, r3, #255
 2312 08b4 033CA0E1 		mov	r3, r3, asl #24
 2313 08b8 433CA0E1 		mov	r3, r3, asr #24
 2314 08bc 0300A0E1 		mov	r0, r3
 2315 08c0 FEFFFFEB 		bl	esOV5640_SetBrightness
 933:../CX3RDKOV5640.c ****             	}
 2316              		.loc 1 933 0
 2317 08c4 0000A0E1 		mov	r0, r0	@ nop
 2318              	.L128:
 2319              		.loc 1 935 0
 2320 08c8 5C0300EA 		b	.L90
 2321              	.L127:
 936:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x200))/*Auto Exposure*/
 2322              		.loc 1 936 0
 2323 08cc BE325BE1 		ldrh	r3, [fp, #-46]
 2324 08d0 010C53E3 		cmp	r3, #256
 2325 08d4 4A00001A 		bne	.L136
 2326              		.loc 1 936 0 is_stmt 0 discriminator 1
 2327 08d8 BC325BE1 		ldrh	r3, [fp, #-44]
 2328 08dc 020C53E3 		cmp	r3, #512
 2329 08e0 4700001A 		bne	.L136
 937:../CX3RDKOV5640.c **** 			{
 938:../CX3RDKOV5640.c ****             //	CyU3PDebugPrint (4, "\n\rAuto Exposure");
 939:../CX3RDKOV5640.c **** 				switch(bRequest)
 2330              		.loc 1 939 0 is_stmt 1
 2331 08e4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2332 08e8 840053E3 		cmp	r3, #132
 2333 08ec 040000CA 		bgt	.L138
 2334 08f0 810053E3 		cmp	r3, #129
 2335 08f4 170000AA 		bge	.L139
 2336 08f8 010053E3 		cmp	r3, #1
 2337 08fc 2C00000A 		beq	.L140
 940:../CX3RDKOV5640.c **** 				{
 941:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 942:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 943:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 944:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 945:../CX3RDKOV5640.c **** 					{
 946:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 947:../CX3RDKOV5640.c **** 					}
 948:../CX3RDKOV5640.c **** 					break;
 949:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 950:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 951:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 952:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 953:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 954:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 955:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 956:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutoExposure(RequestOption);
 957:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 958:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 959:../CX3RDKOV5640.c **** 					{
 960:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 961:../CX3RDKOV5640.c **** 					}
 962:../CX3RDKOV5640.c **** 					break;
 963:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 964:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
 965:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 966:../CX3RDKOV5640.c **** 					{
 967:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 968:../CX3RDKOV5640.c **** 					}
 969:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
 970:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Exposure= %d",gl8SetControl);
 971:../CX3RDKOV5640.c **** 					esOV5640_SetAutoExposure(gl8SetControl);
 972:../CX3RDKOV5640.c **** 					break;
 973:../CX3RDKOV5640.c **** 				}
 974:../CX3RDKOV5640.c **** 			}
 2338              		.loc 1 974 0
 2339 0900 4E0300EA 		b	.L90
 2340              	.L138:
 939:../CX3RDKOV5640.c **** 				{
 2341              		.loc 1 939 0
 2342 0904 860053E3 		cmp	r3, #134
 2343 0908 0200000A 		beq	.L141
 2344 090c 870053E3 		cmp	r3, #135
 2345 0910 1000000A 		beq	.L139
 2346              		.loc 1 974 0
 2347 0914 490300EA 		b	.L90
 2348              	.L141:
 942:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2349              		.loc 1 942 0
 2350 0918 F8379FE5 		ldr	r3, .L229+140
 2351 091c 0320A0E3 		mov	r2, #3
 2352 0920 0020C3E5 		strb	r2, [r3]
 943:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2353              		.loc 1 943 0
 2354 0924 0100A0E3 		mov	r0, #1
 2355 0928 E8179FE5 		ldr	r1, .L229+140
 2356 092c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2357 0930 24000BE5 		str	r0, [fp, #-36]
 944:../CX3RDKOV5640.c **** 					{
 2358              		.loc 1 944 0
 2359 0934 24301BE5 		ldr	r3, [fp, #-36]
 2360 0938 000053E3 		cmp	r3, #0
 2361 093c 0400000A 		beq	.L142
 946:../CX3RDKOV5640.c **** 					}
 2362              		.loc 1 946 0
 2363 0940 0400A0E3 		mov	r0, #4
 2364 0944 D8179FE5 		ldr	r1, .L229+152
 2365 0948 24201BE5 		ldr	r2, [fp, #-36]
 2366 094c FEFFFFEB 		bl	CyU3PDebugPrint
 948:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2367              		.loc 1 948 0
 2368 0950 2A0000EA 		b	.L137
 2369              	.L142:
 2370 0954 290000EA 		b	.L137
 2371              	.L139:
 954:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2372              		.loc 1 954 0
 2373 0958 29305BE5 		ldrb	r3, [fp, #-41]
 2374 095c 0F3003E2 		and	r3, r3, #15
 2375 0960 25304BE5 		strb	r3, [fp, #-37]
 956:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 2376              		.loc 1 956 0
 2377 0964 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2378 0968 0300A0E1 		mov	r0, r3
 2379 096c FEFFFFEB 		bl	esOV5640_GetAutoExposure
 2380 0970 0030A0E1 		mov	r3, r0
 2381 0974 0320A0E1 		mov	r2, r3
 2382 0978 8C379FE5 		ldr	r3, .L229+128
 2383 097c B020C3E1 		strh	r2, [r3]	@ movhi
 957:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2384              		.loc 1 957 0
 2385 0980 0100A0E3 		mov	r0, #1
 2386 0984 80179FE5 		ldr	r1, .L229+128
 2387 0988 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2388 098c 24000BE5 		str	r0, [fp, #-36]
 958:../CX3RDKOV5640.c **** 					{
 2389              		.loc 1 958 0
 2390 0990 24301BE5 		ldr	r3, [fp, #-36]
 2391 0994 000053E3 		cmp	r3, #0
 2392 0998 0400000A 		beq	.L143
 960:../CX3RDKOV5640.c **** 					}
 2393              		.loc 1 960 0
 2394 099c 0400A0E3 		mov	r0, #4
 2395 09a0 7C179FE5 		ldr	r1, .L229+152
 2396 09a4 24201BE5 		ldr	r2, [fp, #-36]
 2397 09a8 FEFFFFEB 		bl	CyU3PDebugPrint
 962:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2398              		.loc 1 962 0
 2399 09ac 130000EA 		b	.L137
 2400              	.L143:
 2401 09b0 120000EA 		b	.L137
 2402              	.L140:
 964:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2403              		.loc 1 964 0
 2404 09b4 32304BE2 		sub	r3, fp, #50
 2405 09b8 1000A0E3 		mov	r0, #16
 2406 09bc 4C179FE5 		ldr	r1, .L229+132
 2407 09c0 0320A0E1 		mov	r2, r3
 2408 09c4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2409 09c8 24000BE5 		str	r0, [fp, #-36]
 965:../CX3RDKOV5640.c **** 					{
 2410              		.loc 1 965 0
 2411 09cc 24301BE5 		ldr	r3, [fp, #-36]
 2412 09d0 000053E3 		cmp	r3, #0
 2413 09d4 0300000A 		beq	.L144
 967:../CX3RDKOV5640.c **** 					}
 2414              		.loc 1 967 0
 2415 09d8 0400A0E3 		mov	r0, #4
 2416 09dc 40179FE5 		ldr	r1, .L229+152
 2417 09e0 24201BE5 		ldr	r2, [fp, #-36]
 2418 09e4 FEFFFFEB 		bl	CyU3PDebugPrint
 2419              	.L144:
 971:../CX3RDKOV5640.c **** 					break;
 2420              		.loc 1 971 0
 2421 09e8 20379FE5 		ldr	r3, .L229+132
 2422 09ec B030D3E1 		ldrh	r3, [r3]
 2423 09f0 FF3003E2 		and	r3, r3, #255
 2424 09f4 0300A0E1 		mov	r0, r3
 2425 09f8 FEFFFFEB 		bl	esOV5640_SetAutoExposure
 972:../CX3RDKOV5640.c **** 				}
 2426              		.loc 1 972 0
 2427 09fc 0000A0E1 		mov	r0, r0	@ nop
 2428              	.L137:
 2429              		.loc 1 974 0
 2430 0a00 0E0300EA 		b	.L90
 2431              	.L136:
 975:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x300))/*Contrast*/
 2432              		.loc 1 975 0
 2433 0a04 BE325BE1 		ldrh	r3, [fp, #-46]
 2434 0a08 020C53E3 		cmp	r3, #512
 2435 0a0c 4D00001A 		bne	.L145
 2436              		.loc 1 975 0 is_stmt 0 discriminator 1
 2437 0a10 BC325BE1 		ldrh	r3, [fp, #-44]
 2438 0a14 030C53E3 		cmp	r3, #768
 2439 0a18 4A00001A 		bne	.L145
 976:../CX3RDKOV5640.c ****             {
 977:../CX3RDKOV5640.c ****             	switch(bRequest)
 2440              		.loc 1 977 0 is_stmt 1
 2441 0a1c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2442 0a20 840053E3 		cmp	r3, #132
 2443 0a24 040000CA 		bgt	.L147
 2444 0a28 810053E3 		cmp	r3, #129
 2445 0a2c 170000AA 		bge	.L148
 2446 0a30 010053E3 		cmp	r3, #1
 2447 0a34 2D00000A 		beq	.L149
 978:../CX3RDKOV5640.c **** 				{
 979:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 980:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 981:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 982:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 983:../CX3RDKOV5640.c **** 					{
 984:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 985:../CX3RDKOV5640.c **** 					}
 986:../CX3RDKOV5640.c **** 					break;
 987:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 988:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 989:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 990:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 991:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 992:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 993:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 994:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetContrast(RequestOption);
 995:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 996:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 997:../CX3RDKOV5640.c **** 					{
 998:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 999:../CX3RDKOV5640.c **** 					}
1000:../CX3RDKOV5640.c **** 					break;
1001:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1002:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1003:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1004:../CX3RDKOV5640.c **** 					{
1005:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1006:../CX3RDKOV5640.c **** 					}
1007:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1008:../CX3RDKOV5640.c **** 					esOV5640_SetContrast((int8_t)gl16SetControl);
1009:../CX3RDKOV5640.c **** 					break;
1010:../CX3RDKOV5640.c **** 				}
1011:../CX3RDKOV5640.c ****             }
 2448              		.loc 1 1011 0
 2449 0a38 000300EA 		b	.L90
 2450              	.L147:
 977:../CX3RDKOV5640.c **** 				{
 2451              		.loc 1 977 0
 2452 0a3c 860053E3 		cmp	r3, #134
 2453 0a40 0200000A 		beq	.L150
 2454 0a44 870053E3 		cmp	r3, #135
 2455 0a48 1000000A 		beq	.L148
 2456              		.loc 1 1011 0
 2457 0a4c FB0200EA 		b	.L90
 2458              	.L150:
 980:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2459              		.loc 1 980 0
 2460 0a50 C0369FE5 		ldr	r3, .L229+140
 2461 0a54 0320A0E3 		mov	r2, #3
 2462 0a58 0020C3E5 		strb	r2, [r3]
 981:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2463              		.loc 1 981 0
 2464 0a5c 0100A0E3 		mov	r0, #1
 2465 0a60 B0169FE5 		ldr	r1, .L229+140
 2466 0a64 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2467 0a68 24000BE5 		str	r0, [fp, #-36]
 982:../CX3RDKOV5640.c **** 					{
 2468              		.loc 1 982 0
 2469 0a6c 24301BE5 		ldr	r3, [fp, #-36]
 2470 0a70 000053E3 		cmp	r3, #0
 2471 0a74 0400000A 		beq	.L151
 984:../CX3RDKOV5640.c **** 					}
 2472              		.loc 1 984 0
 2473 0a78 0400A0E3 		mov	r0, #4
 2474 0a7c A0169FE5 		ldr	r1, .L229+152
 2475 0a80 24201BE5 		ldr	r2, [fp, #-36]
 2476 0a84 FEFFFFEB 		bl	CyU3PDebugPrint
 986:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2477              		.loc 1 986 0
 2478 0a88 2D0000EA 		b	.L146
 2479              	.L151:
 2480 0a8c 2C0000EA 		b	.L146
 2481              	.L148:
 992:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2482              		.loc 1 992 0
 2483 0a90 29305BE5 		ldrb	r3, [fp, #-41]
 2484 0a94 0F3003E2 		and	r3, r3, #15
 2485 0a98 25304BE5 		strb	r3, [fp, #-37]
 994:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2486              		.loc 1 994 0
 2487 0a9c 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2488 0aa0 0300A0E1 		mov	r0, r3
 2489 0aa4 FEFFFFEB 		bl	esOV5640_GetContrast
 2490 0aa8 0030A0E1 		mov	r3, r0
 2491 0aac 0338A0E1 		mov	r3, r3, asl #16
 2492 0ab0 2328A0E1 		mov	r2, r3, lsr #16
 2493 0ab4 60369FE5 		ldr	r3, .L229+144
 2494 0ab8 B020C3E1 		strh	r2, [r3]	@ movhi
 995:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2495              		.loc 1 995 0
 2496 0abc 0200A0E3 		mov	r0, #2
 2497 0ac0 54169FE5 		ldr	r1, .L229+144
 2498 0ac4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2499 0ac8 24000BE5 		str	r0, [fp, #-36]
 996:../CX3RDKOV5640.c **** 					{
 2500              		.loc 1 996 0
 2501 0acc 24301BE5 		ldr	r3, [fp, #-36]
 2502 0ad0 000053E3 		cmp	r3, #0
 2503 0ad4 0400000A 		beq	.L152
 998:../CX3RDKOV5640.c **** 					}
 2504              		.loc 1 998 0
 2505 0ad8 0400A0E3 		mov	r0, #4
 2506 0adc 40169FE5 		ldr	r1, .L229+152
 2507 0ae0 24201BE5 		ldr	r2, [fp, #-36]
 2508 0ae4 FEFFFFEB 		bl	CyU3PDebugPrint
1000:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2509              		.loc 1 1000 0
 2510 0ae8 150000EA 		b	.L146
 2511              	.L152:
 2512 0aec 140000EA 		b	.L146
 2513              	.L149:
1002:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2514              		.loc 1 1002 0
 2515 0af0 32304BE2 		sub	r3, fp, #50
 2516 0af4 1000A0E3 		mov	r0, #16
 2517 0af8 20169FE5 		ldr	r1, .L229+148
 2518 0afc 0320A0E1 		mov	r2, r3
 2519 0b00 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2520 0b04 24000BE5 		str	r0, [fp, #-36]
1003:../CX3RDKOV5640.c **** 					{
 2521              		.loc 1 1003 0
 2522 0b08 24301BE5 		ldr	r3, [fp, #-36]
 2523 0b0c 000053E3 		cmp	r3, #0
 2524 0b10 0300000A 		beq	.L153
1005:../CX3RDKOV5640.c **** 					}
 2525              		.loc 1 1005 0
 2526 0b14 0400A0E3 		mov	r0, #4
 2527 0b18 04169FE5 		ldr	r1, .L229+152
 2528 0b1c 24201BE5 		ldr	r2, [fp, #-36]
 2529 0b20 FEFFFFEB 		bl	CyU3PDebugPrint
 2530              	.L153:
1008:../CX3RDKOV5640.c **** 					break;
 2531              		.loc 1 1008 0
 2532 0b24 F4359FE5 		ldr	r3, .L229+148
 2533 0b28 B030D3E1 		ldrh	r3, [r3]
 2534 0b2c FF3003E2 		and	r3, r3, #255
 2535 0b30 033CA0E1 		mov	r3, r3, asl #24
 2536 0b34 433CA0E1 		mov	r3, r3, asr #24
 2537 0b38 0300A0E1 		mov	r0, r3
 2538 0b3c FEFFFFEB 		bl	esOV5640_SetContrast
1009:../CX3RDKOV5640.c **** 				}
 2539              		.loc 1 1009 0
 2540 0b40 0000A0E1 		mov	r0, r0	@ nop
 2541              	.L146:
 2542              		.loc 1 1011 0
 2543 0b44 BD0200EA 		b	.L90
 2544              	.L145:
1012:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x400))/*Manual Exposure*/
 2545              		.loc 1 1012 0
 2546 0b48 BE325BE1 		ldrh	r3, [fp, #-46]
 2547 0b4c 010C53E3 		cmp	r3, #256
 2548 0b50 4800001A 		bne	.L154
 2549              		.loc 1 1012 0 is_stmt 0 discriminator 1
 2550 0b54 BC325BE1 		ldrh	r3, [fp, #-44]
 2551 0b58 010B53E3 		cmp	r3, #1024
 2552 0b5c 4500001A 		bne	.L154
1013:../CX3RDKOV5640.c **** 			{
1014:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Exposure ");
1015:../CX3RDKOV5640.c **** 				switch(bRequest)
 2553              		.loc 1 1015 0 is_stmt 1
 2554 0b60 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2555 0b64 840053E3 		cmp	r3, #132
 2556 0b68 040000CA 		bgt	.L156
 2557 0b6c 810053E3 		cmp	r3, #129
 2558 0b70 170000AA 		bge	.L157
 2559 0b74 010053E3 		cmp	r3, #1
 2560 0b78 2B00000A 		beq	.L158
1016:../CX3RDKOV5640.c **** 				{
1017:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1018:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1019:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1020:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1021:../CX3RDKOV5640.c **** 					{
1022:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1023:../CX3RDKOV5640.c **** 					}
1024:../CX3RDKOV5640.c **** 					break;
1025:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1026:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1027:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1028:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1029:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1030:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1031:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1032:../CX3RDKOV5640.c **** 					gl32GetControl = esOV5640_GetExposure(RequestOption);
1033:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1034:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1035:../CX3RDKOV5640.c **** 					{
1036:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1037:../CX3RDKOV5640.c **** 					}
1038:../CX3RDKOV5640.c **** 					break;
1039:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1040:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1041:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1042:../CX3RDKOV5640.c **** 					{
1043:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1044:../CX3RDKOV5640.c **** 					}
1045:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1046:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Exposure = %d", gl32SetControl);
1047:../CX3RDKOV5640.c **** 					esOV5640_SetExposure(gl32SetControl);
1048:../CX3RDKOV5640.c **** 					break;
1049:../CX3RDKOV5640.c **** 				}
1050:../CX3RDKOV5640.c **** 			}
 2561              		.loc 1 1050 0
 2562 0b7c AF0200EA 		b	.L90
 2563              	.L156:
1015:../CX3RDKOV5640.c **** 				{
 2564              		.loc 1 1015 0
 2565 0b80 860053E3 		cmp	r3, #134
 2566 0b84 0200000A 		beq	.L159
 2567 0b88 870053E3 		cmp	r3, #135
 2568 0b8c 1000000A 		beq	.L157
 2569              		.loc 1 1050 0
 2570 0b90 AA0200EA 		b	.L90
 2571              	.L159:
1018:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2572              		.loc 1 1018 0
 2573 0b94 7C359FE5 		ldr	r3, .L229+140
 2574 0b98 0320A0E3 		mov	r2, #3
 2575 0b9c 0020C3E5 		strb	r2, [r3]
1019:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2576              		.loc 1 1019 0
 2577 0ba0 0100A0E3 		mov	r0, #1
 2578 0ba4 6C159FE5 		ldr	r1, .L229+140
 2579 0ba8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2580 0bac 24000BE5 		str	r0, [fp, #-36]
1020:../CX3RDKOV5640.c **** 					{
 2581              		.loc 1 1020 0
 2582 0bb0 24301BE5 		ldr	r3, [fp, #-36]
 2583 0bb4 000053E3 		cmp	r3, #0
 2584 0bb8 0400000A 		beq	.L160
1022:../CX3RDKOV5640.c **** 					}
 2585              		.loc 1 1022 0
 2586 0bbc 0400A0E3 		mov	r0, #4
 2587 0bc0 5C159FE5 		ldr	r1, .L229+152
 2588 0bc4 24201BE5 		ldr	r2, [fp, #-36]
 2589 0bc8 FEFFFFEB 		bl	CyU3PDebugPrint
1024:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2590              		.loc 1 1024 0
 2591 0bcc 280000EA 		b	.L155
 2592              	.L160:
 2593 0bd0 270000EA 		b	.L155
 2594              	.L157:
1030:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2595              		.loc 1 1030 0
 2596 0bd4 29305BE5 		ldrb	r3, [fp, #-41]
 2597 0bd8 0F3003E2 		and	r3, r3, #15
 2598 0bdc 25304BE5 		strb	r3, [fp, #-37]
1032:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2599              		.loc 1 1032 0
 2600 0be0 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2601 0be4 0300A0E1 		mov	r0, r3
 2602 0be8 FEFFFFEB 		bl	esOV5640_GetExposure
 2603 0bec 0020A0E1 		mov	r2, r0
 2604 0bf0 08359FE5 		ldr	r3, .L229+116
 2605 0bf4 002083E5 		str	r2, [r3]
1033:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2606              		.loc 1 1033 0
 2607 0bf8 0400A0E3 		mov	r0, #4
 2608 0bfc FC149FE5 		ldr	r1, .L229+116
 2609 0c00 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2610 0c04 24000BE5 		str	r0, [fp, #-36]
1034:../CX3RDKOV5640.c **** 					{
 2611              		.loc 1 1034 0
 2612 0c08 24301BE5 		ldr	r3, [fp, #-36]
 2613 0c0c 000053E3 		cmp	r3, #0
 2614 0c10 0400000A 		beq	.L161
1036:../CX3RDKOV5640.c **** 					}
 2615              		.loc 1 1036 0
 2616 0c14 0400A0E3 		mov	r0, #4
 2617 0c18 04159FE5 		ldr	r1, .L229+152
 2618 0c1c 24201BE5 		ldr	r2, [fp, #-36]
 2619 0c20 FEFFFFEB 		bl	CyU3PDebugPrint
1038:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2620              		.loc 1 1038 0
 2621 0c24 120000EA 		b	.L155
 2622              	.L161:
 2623 0c28 110000EA 		b	.L155
 2624              	.L158:
1040:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2625              		.loc 1 1040 0
 2626 0c2c 32304BE2 		sub	r3, fp, #50
 2627 0c30 1000A0E3 		mov	r0, #16
 2628 0c34 C8149FE5 		ldr	r1, .L229+120
 2629 0c38 0320A0E1 		mov	r2, r3
 2630 0c3c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2631 0c40 24000BE5 		str	r0, [fp, #-36]
1041:../CX3RDKOV5640.c **** 					{
 2632              		.loc 1 1041 0
 2633 0c44 24301BE5 		ldr	r3, [fp, #-36]
 2634 0c48 000053E3 		cmp	r3, #0
 2635 0c4c 0300000A 		beq	.L162
1043:../CX3RDKOV5640.c **** 					}
 2636              		.loc 1 1043 0
 2637 0c50 0400A0E3 		mov	r0, #4
 2638 0c54 C8149FE5 		ldr	r1, .L229+152
 2639 0c58 24201BE5 		ldr	r2, [fp, #-36]
 2640 0c5c FEFFFFEB 		bl	CyU3PDebugPrint
 2641              	.L162:
1047:../CX3RDKOV5640.c **** 					break;
 2642              		.loc 1 1047 0
 2643 0c60 9C349FE5 		ldr	r3, .L229+120
 2644 0c64 003093E5 		ldr	r3, [r3]
 2645 0c68 0300A0E1 		mov	r0, r3
 2646 0c6c FEFFFFEB 		bl	esOV5640_SetExposure
1048:../CX3RDKOV5640.c **** 				}
 2647              		.loc 1 1048 0
 2648 0c70 0000A0E1 		mov	r0, r0	@ nop
 2649              	.L155:
 2650              		.loc 1 1050 0
 2651 0c74 710200EA 		b	.L90
 2652              	.L154:
1051:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x600))/*Hue*/
 2653              		.loc 1 1051 0
 2654 0c78 BE325BE1 		ldrh	r3, [fp, #-46]
 2655 0c7c 020C53E3 		cmp	r3, #512
 2656 0c80 4B00001A 		bne	.L163
 2657              		.loc 1 1051 0 is_stmt 0 discriminator 1
 2658 0c84 BC325BE1 		ldrh	r3, [fp, #-44]
 2659 0c88 060C53E3 		cmp	r3, #1536
 2660 0c8c 4800001A 		bne	.L163
1052:../CX3RDKOV5640.c **** 			{
1053:../CX3RDKOV5640.c **** 				switch(bRequest)
 2661              		.loc 1 1053 0 is_stmt 1
 2662 0c90 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2663 0c94 840053E3 		cmp	r3, #132
 2664 0c98 040000CA 		bgt	.L165
 2665 0c9c 810053E3 		cmp	r3, #129
 2666 0ca0 170000AA 		bge	.L166
 2667 0ca4 010053E3 		cmp	r3, #1
 2668 0ca8 2B00000A 		beq	.L167
1054:../CX3RDKOV5640.c **** 				{
1055:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1056:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1057:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1058:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1059:../CX3RDKOV5640.c **** 					{
1060:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1061:../CX3RDKOV5640.c **** 					}
1062:../CX3RDKOV5640.c **** 					break;
1063:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1064:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1065:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1066:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1067:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1068:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1069:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1070:../CX3RDKOV5640.c **** 					gl32GetControl = (int32_t)esOV5640_GetHue(RequestOption);
1071:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1072:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1073:../CX3RDKOV5640.c **** 					{
1074:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1075:../CX3RDKOV5640.c **** 					}
1076:../CX3RDKOV5640.c **** 					break;
1077:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1078:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1079:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1080:../CX3RDKOV5640.c **** 					{
1081:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1082:../CX3RDKOV5640.c **** 					}
1083:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1084:../CX3RDKOV5640.c **** 					esOV5640_SetHue((int8_t)gl32SetControl);
1085:../CX3RDKOV5640.c **** 					break;
1086:../CX3RDKOV5640.c **** 				}
1087:../CX3RDKOV5640.c **** 			}
 2669              		.loc 1 1087 0
 2670 0cac 630200EA 		b	.L90
 2671              	.L165:
1053:../CX3RDKOV5640.c **** 				{
 2672              		.loc 1 1053 0
 2673 0cb0 860053E3 		cmp	r3, #134
 2674 0cb4 0200000A 		beq	.L168
 2675 0cb8 870053E3 		cmp	r3, #135
 2676 0cbc 1000000A 		beq	.L166
 2677              		.loc 1 1087 0
 2678 0cc0 5E0200EA 		b	.L90
 2679              	.L168:
1056:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2680              		.loc 1 1056 0
 2681 0cc4 4C349FE5 		ldr	r3, .L229+140
 2682 0cc8 0320A0E3 		mov	r2, #3
 2683 0ccc 0020C3E5 		strb	r2, [r3]
1057:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2684              		.loc 1 1057 0
 2685 0cd0 0100A0E3 		mov	r0, #1
 2686 0cd4 3C149FE5 		ldr	r1, .L229+140
 2687 0cd8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2688 0cdc 24000BE5 		str	r0, [fp, #-36]
1058:../CX3RDKOV5640.c **** 					{
 2689              		.loc 1 1058 0
 2690 0ce0 24301BE5 		ldr	r3, [fp, #-36]
 2691 0ce4 000053E3 		cmp	r3, #0
 2692 0ce8 0400000A 		beq	.L169
1060:../CX3RDKOV5640.c **** 					}
 2693              		.loc 1 1060 0
 2694 0cec 0400A0E3 		mov	r0, #4
 2695 0cf0 2C149FE5 		ldr	r1, .L229+152
 2696 0cf4 24201BE5 		ldr	r2, [fp, #-36]
 2697 0cf8 FEFFFFEB 		bl	CyU3PDebugPrint
1062:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2698              		.loc 1 1062 0
 2699 0cfc 2B0000EA 		b	.L164
 2700              	.L169:
 2701 0d00 2A0000EA 		b	.L164
 2702              	.L166:
1068:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2703              		.loc 1 1068 0
 2704 0d04 29305BE5 		ldrb	r3, [fp, #-41]
 2705 0d08 0F3003E2 		and	r3, r3, #15
 2706 0d0c 25304BE5 		strb	r3, [fp, #-37]
1070:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2707              		.loc 1 1070 0
 2708 0d10 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2709 0d14 0300A0E1 		mov	r0, r3
 2710 0d18 FEFFFFEB 		bl	esOV5640_GetHue
 2711 0d1c 0020A0E1 		mov	r2, r0
 2712 0d20 D8339FE5 		ldr	r3, .L229+116
 2713 0d24 002083E5 		str	r2, [r3]
1071:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2714              		.loc 1 1071 0
 2715 0d28 0400A0E3 		mov	r0, #4
 2716 0d2c CC139FE5 		ldr	r1, .L229+116
 2717 0d30 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2718 0d34 24000BE5 		str	r0, [fp, #-36]
1072:../CX3RDKOV5640.c **** 					{
 2719              		.loc 1 1072 0
 2720 0d38 24301BE5 		ldr	r3, [fp, #-36]
 2721 0d3c 000053E3 		cmp	r3, #0
 2722 0d40 0400000A 		beq	.L170
1074:../CX3RDKOV5640.c **** 					}
 2723              		.loc 1 1074 0
 2724 0d44 0400A0E3 		mov	r0, #4
 2725 0d48 D4139FE5 		ldr	r1, .L229+152
 2726 0d4c 24201BE5 		ldr	r2, [fp, #-36]
 2727 0d50 FEFFFFEB 		bl	CyU3PDebugPrint
1076:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2728              		.loc 1 1076 0
 2729 0d54 150000EA 		b	.L164
 2730              	.L170:
 2731 0d58 140000EA 		b	.L164
 2732              	.L167:
1078:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2733              		.loc 1 1078 0
 2734 0d5c 32304BE2 		sub	r3, fp, #50
 2735 0d60 1000A0E3 		mov	r0, #16
 2736 0d64 98139FE5 		ldr	r1, .L229+120
 2737 0d68 0320A0E1 		mov	r2, r3
 2738 0d6c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2739 0d70 24000BE5 		str	r0, [fp, #-36]
1079:../CX3RDKOV5640.c **** 					{
 2740              		.loc 1 1079 0
 2741 0d74 24301BE5 		ldr	r3, [fp, #-36]
 2742 0d78 000053E3 		cmp	r3, #0
 2743 0d7c 0300000A 		beq	.L171
1081:../CX3RDKOV5640.c **** 					}
 2744              		.loc 1 1081 0
 2745 0d80 0400A0E3 		mov	r0, #4
 2746 0d84 98139FE5 		ldr	r1, .L229+152
 2747 0d88 24201BE5 		ldr	r2, [fp, #-36]
 2748 0d8c FEFFFFEB 		bl	CyU3PDebugPrint
 2749              	.L171:
1084:../CX3RDKOV5640.c **** 					break;
 2750              		.loc 1 1084 0
 2751 0d90 6C339FE5 		ldr	r3, .L229+120
 2752 0d94 003093E5 		ldr	r3, [r3]
 2753 0d98 FF3003E2 		and	r3, r3, #255
 2754 0d9c 033CA0E1 		mov	r3, r3, asl #24
 2755 0da0 433CA0E1 		mov	r3, r3, asr #24
 2756 0da4 0300A0E1 		mov	r0, r3
 2757 0da8 FEFFFFEB 		bl	esOV5640_SetHue
1085:../CX3RDKOV5640.c **** 				}
 2758              		.loc 1 1085 0
 2759 0dac 0000A0E1 		mov	r0, r0	@ nop
 2760              	.L164:
 2761              		.loc 1 1087 0
 2762 0db0 220200EA 		b	.L90
 2763              	.L163:
1088:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x600))/*Manual Focus*/
 2764              		.loc 1 1088 0
 2765 0db4 BE325BE1 		ldrh	r3, [fp, #-46]
 2766 0db8 010C53E3 		cmp	r3, #256
 2767 0dbc 4F00001A 		bne	.L172
 2768              		.loc 1 1088 0 is_stmt 0 discriminator 1
 2769 0dc0 BC325BE1 		ldrh	r3, [fp, #-44]
 2770 0dc4 060C53E3 		cmp	r3, #1536
 2771 0dc8 4C00001A 		bne	.L172
1089:../CX3RDKOV5640.c **** 			{
1090:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Focus ");
1091:../CX3RDKOV5640.c **** 				switch(bRequest)
 2772              		.loc 1 1091 0 is_stmt 1
 2773 0dcc 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2774 0dd0 840053E3 		cmp	r3, #132
 2775 0dd4 040000CA 		bgt	.L174
 2776 0dd8 810053E3 		cmp	r3, #129
 2777 0ddc 170000AA 		bge	.L175
 2778 0de0 010053E3 		cmp	r3, #1
 2779 0de4 2D00000A 		beq	.L176
1092:../CX3RDKOV5640.c **** 				{
1093:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1094:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1095:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1096:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1097:../CX3RDKOV5640.c **** 					{
1098:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1099:../CX3RDKOV5640.c **** 					}
1100:../CX3RDKOV5640.c **** 					break;
1101:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1102:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1103:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1104:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1105:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1106:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1107:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1108:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
1109:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1110:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1111:../CX3RDKOV5640.c **** 					{
1112:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1113:../CX3RDKOV5640.c **** 					}
1114:../CX3RDKOV5640.c **** 					break;
1115:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1116:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1117:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1118:../CX3RDKOV5640.c **** 					{
1119:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1120:../CX3RDKOV5640.c **** 					}
1121:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1122:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Focus= %d",gl16SetControl);
1123:../CX3RDKOV5640.c **** 					esOV5640_SetManualfocus((uint16_t)gl16SetControl);
1124:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
1125:../CX3RDKOV5640.c **** 					break;
1126:../CX3RDKOV5640.c **** 				}
1127:../CX3RDKOV5640.c **** 			}
 2780              		.loc 1 1127 0
 2781 0de8 140200EA 		b	.L90
 2782              	.L174:
1091:../CX3RDKOV5640.c **** 				{
 2783              		.loc 1 1091 0
 2784 0dec 860053E3 		cmp	r3, #134
 2785 0df0 0200000A 		beq	.L177
 2786 0df4 870053E3 		cmp	r3, #135
 2787 0df8 1000000A 		beq	.L175
 2788              		.loc 1 1127 0
 2789 0dfc 0F0200EA 		b	.L90
 2790              	.L177:
1094:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2791              		.loc 1 1094 0
 2792 0e00 10339FE5 		ldr	r3, .L229+140
 2793 0e04 0320A0E3 		mov	r2, #3
 2794 0e08 0020C3E5 		strb	r2, [r3]
1095:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2795              		.loc 1 1095 0
 2796 0e0c 0100A0E3 		mov	r0, #1
 2797 0e10 00139FE5 		ldr	r1, .L229+140
 2798 0e14 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2799 0e18 24000BE5 		str	r0, [fp, #-36]
1096:../CX3RDKOV5640.c **** 					{
 2800              		.loc 1 1096 0
 2801 0e1c 24301BE5 		ldr	r3, [fp, #-36]
 2802 0e20 000053E3 		cmp	r3, #0
 2803 0e24 0400000A 		beq	.L178
1098:../CX3RDKOV5640.c **** 					}
 2804              		.loc 1 1098 0
 2805 0e28 0400A0E3 		mov	r0, #4
 2806 0e2c F0129FE5 		ldr	r1, .L229+152
 2807 0e30 24201BE5 		ldr	r2, [fp, #-36]
 2808 0e34 FEFFFFEB 		bl	CyU3PDebugPrint
1100:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2809              		.loc 1 1100 0
 2810 0e38 2F0000EA 		b	.L173
 2811              	.L178:
 2812 0e3c 2E0000EA 		b	.L173
 2813              	.L175:
1107:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
 2814              		.loc 1 1107 0
 2815 0e40 29305BE5 		ldrb	r3, [fp, #-41]
 2816 0e44 0F3003E2 		and	r3, r3, #15
 2817 0e48 25304BE5 		strb	r3, [fp, #-37]
1108:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2818              		.loc 1 1108 0
 2819 0e4c 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2820 0e50 0300A0E1 		mov	r0, r3
 2821 0e54 FEFFFFEB 		bl	esOV5640_GetManualfocus
 2822 0e58 0030A0E1 		mov	r3, r0
 2823 0e5c 0338A0E1 		mov	r3, r3, asl #16
 2824 0e60 2328A0E1 		mov	r2, r3, lsr #16
 2825 0e64 B0329FE5 		ldr	r3, .L229+144
 2826 0e68 B020C3E1 		strh	r2, [r3]	@ movhi
1109:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2827              		.loc 1 1109 0
 2828 0e6c 0200A0E3 		mov	r0, #2
 2829 0e70 A4129FE5 		ldr	r1, .L229+144
 2830 0e74 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2831 0e78 24000BE5 		str	r0, [fp, #-36]
1110:../CX3RDKOV5640.c **** 					{
 2832              		.loc 1 1110 0
 2833 0e7c 24301BE5 		ldr	r3, [fp, #-36]
 2834 0e80 000053E3 		cmp	r3, #0
 2835 0e84 0400000A 		beq	.L179
1112:../CX3RDKOV5640.c **** 					}
 2836              		.loc 1 1112 0
 2837 0e88 0400A0E3 		mov	r0, #4
 2838 0e8c 90129FE5 		ldr	r1, .L229+152
 2839 0e90 24201BE5 		ldr	r2, [fp, #-36]
 2840 0e94 FEFFFFEB 		bl	CyU3PDebugPrint
1114:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2841              		.loc 1 1114 0
 2842 0e98 170000EA 		b	.L173
 2843              	.L179:
 2844 0e9c 160000EA 		b	.L173
 2845              	.L176:
1116:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2846              		.loc 1 1116 0
 2847 0ea0 32304BE2 		sub	r3, fp, #50
 2848 0ea4 1000A0E3 		mov	r0, #16
 2849 0ea8 70129FE5 		ldr	r1, .L229+148
 2850 0eac 0320A0E1 		mov	r2, r3
 2851 0eb0 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2852 0eb4 24000BE5 		str	r0, [fp, #-36]
1117:../CX3RDKOV5640.c **** 					{
 2853              		.loc 1 1117 0
 2854 0eb8 24301BE5 		ldr	r3, [fp, #-36]
 2855 0ebc 000053E3 		cmp	r3, #0
 2856 0ec0 0300000A 		beq	.L180
1119:../CX3RDKOV5640.c **** 					}
 2857              		.loc 1 1119 0
 2858 0ec4 0400A0E3 		mov	r0, #4
 2859 0ec8 54129FE5 		ldr	r1, .L229+152
 2860 0ecc 24201BE5 		ldr	r2, [fp, #-36]
 2861 0ed0 FEFFFFEB 		bl	CyU3PDebugPrint
 2862              	.L180:
1123:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
 2863              		.loc 1 1123 0
 2864 0ed4 44329FE5 		ldr	r3, .L229+148
 2865 0ed8 B030D3E1 		ldrh	r3, [r3]
 2866 0edc 0338A0E1 		mov	r3, r3, asl #16
 2867 0ee0 2338A0E1 		mov	r3, r3, lsr #16
 2868 0ee4 0300A0E1 		mov	r0, r3
 2869 0ee8 FEFFFFEB 		bl	esOV5640_SetManualfocus
1124:../CX3RDKOV5640.c **** 					break;
 2870              		.loc 1 1124 0
 2871 0eec 20329FE5 		ldr	r3, .L229+136
 2872 0ef0 0020A0E3 		mov	r2, #0
 2873 0ef4 0020C3E5 		strb	r2, [r3]
1125:../CX3RDKOV5640.c **** 				}
 2874              		.loc 1 1125 0
 2875 0ef8 0000A0E1 		mov	r0, r0	@ nop
 2876              	.L173:
 2877              		.loc 1 1127 0
 2878 0efc CF0100EA 		b	.L90
 2879              	.L172:
1128:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x700))/*Saturation*/
 2880              		.loc 1 1128 0
 2881 0f00 BE325BE1 		ldrh	r3, [fp, #-46]
 2882 0f04 020C53E3 		cmp	r3, #512
 2883 0f08 4C00001A 		bne	.L181
 2884              		.loc 1 1128 0 is_stmt 0 discriminator 1
 2885 0f0c BC325BE1 		ldrh	r3, [fp, #-44]
 2886 0f10 070C53E3 		cmp	r3, #1792
 2887 0f14 4900001A 		bne	.L181
1129:../CX3RDKOV5640.c **** 			{
1130:../CX3RDKOV5640.c **** 				switch(bRequest)
 2888              		.loc 1 1130 0 is_stmt 1
 2889 0f18 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2890 0f1c 840053E3 		cmp	r3, #132
 2891 0f20 040000CA 		bgt	.L183
 2892 0f24 810053E3 		cmp	r3, #129
 2893 0f28 170000AA 		bge	.L184
 2894 0f2c 010053E3 		cmp	r3, #1
 2895 0f30 2D00000A 		beq	.L185
1131:../CX3RDKOV5640.c **** 				{
1132:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1133:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1134:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1135:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1136:../CX3RDKOV5640.c **** 					{
1137:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1138:../CX3RDKOV5640.c **** 					}
1139:../CX3RDKOV5640.c **** 					break;
1140:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1141:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1142:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1143:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1144:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1145:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1146:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1147:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSaturation(RequestOption);
1148:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1149:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1150:../CX3RDKOV5640.c **** 					{
1151:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1152:../CX3RDKOV5640.c **** 					}
1153:../CX3RDKOV5640.c **** 					break;
1154:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1155:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1156:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1157:../CX3RDKOV5640.c **** 					{
1158:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1159:../CX3RDKOV5640.c **** 					}
1160:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1161:../CX3RDKOV5640.c **** 					esOV5640_SetSaturation((uint32_t)gl16SetControl);
1162:../CX3RDKOV5640.c **** 					break;
1163:../CX3RDKOV5640.c **** 				}
1164:../CX3RDKOV5640.c **** 			}
 2896              		.loc 1 1164 0
 2897 0f34 C10100EA 		b	.L90
 2898              	.L183:
1130:../CX3RDKOV5640.c **** 				{
 2899              		.loc 1 1130 0
 2900 0f38 860053E3 		cmp	r3, #134
 2901 0f3c 0200000A 		beq	.L186
 2902 0f40 870053E3 		cmp	r3, #135
 2903 0f44 1000000A 		beq	.L184
 2904              		.loc 1 1164 0
 2905 0f48 BC0100EA 		b	.L90
 2906              	.L186:
1133:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2907              		.loc 1 1133 0
 2908 0f4c C4319FE5 		ldr	r3, .L229+140
 2909 0f50 0320A0E3 		mov	r2, #3
 2910 0f54 0020C3E5 		strb	r2, [r3]
1134:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2911              		.loc 1 1134 0
 2912 0f58 0100A0E3 		mov	r0, #1
 2913 0f5c B4119FE5 		ldr	r1, .L229+140
 2914 0f60 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2915 0f64 24000BE5 		str	r0, [fp, #-36]
1135:../CX3RDKOV5640.c **** 					{
 2916              		.loc 1 1135 0
 2917 0f68 24301BE5 		ldr	r3, [fp, #-36]
 2918 0f6c 000053E3 		cmp	r3, #0
 2919 0f70 0400000A 		beq	.L187
1137:../CX3RDKOV5640.c **** 					}
 2920              		.loc 1 1137 0
 2921 0f74 0400A0E3 		mov	r0, #4
 2922 0f78 A4119FE5 		ldr	r1, .L229+152
 2923 0f7c 24201BE5 		ldr	r2, [fp, #-36]
 2924 0f80 FEFFFFEB 		bl	CyU3PDebugPrint
1139:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2925              		.loc 1 1139 0
 2926 0f84 2C0000EA 		b	.L182
 2927              	.L187:
 2928 0f88 2B0000EA 		b	.L182
 2929              	.L184:
1145:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2930              		.loc 1 1145 0
 2931 0f8c 29305BE5 		ldrb	r3, [fp, #-41]
 2932 0f90 0F3003E2 		and	r3, r3, #15
 2933 0f94 25304BE5 		strb	r3, [fp, #-37]
1147:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2934              		.loc 1 1147 0
 2935 0f98 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2936 0f9c 0300A0E1 		mov	r0, r3
 2937 0fa0 FEFFFFEB 		bl	esOV5640_GetSaturation
 2938 0fa4 0030A0E1 		mov	r3, r0
 2939 0fa8 0338A0E1 		mov	r3, r3, asl #16
 2940 0fac 2328A0E1 		mov	r2, r3, lsr #16
 2941 0fb0 64319FE5 		ldr	r3, .L229+144
 2942 0fb4 B020C3E1 		strh	r2, [r3]	@ movhi
1148:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2943              		.loc 1 1148 0
 2944 0fb8 0200A0E3 		mov	r0, #2
 2945 0fbc 58119FE5 		ldr	r1, .L229+144
 2946 0fc0 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2947 0fc4 24000BE5 		str	r0, [fp, #-36]
1149:../CX3RDKOV5640.c **** 					{
 2948              		.loc 1 1149 0
 2949 0fc8 24301BE5 		ldr	r3, [fp, #-36]
 2950 0fcc 000053E3 		cmp	r3, #0
 2951 0fd0 0400000A 		beq	.L188
1151:../CX3RDKOV5640.c **** 					}
 2952              		.loc 1 1151 0
 2953 0fd4 0400A0E3 		mov	r0, #4
 2954 0fd8 44119FE5 		ldr	r1, .L229+152
 2955 0fdc 24201BE5 		ldr	r2, [fp, #-36]
 2956 0fe0 FEFFFFEB 		bl	CyU3PDebugPrint
1153:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2957              		.loc 1 1153 0
 2958 0fe4 140000EA 		b	.L182
 2959              	.L188:
 2960 0fe8 130000EA 		b	.L182
 2961              	.L185:
1155:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2962              		.loc 1 1155 0
 2963 0fec 32304BE2 		sub	r3, fp, #50
 2964 0ff0 1000A0E3 		mov	r0, #16
 2965 0ff4 24119FE5 		ldr	r1, .L229+148
 2966 0ff8 0320A0E1 		mov	r2, r3
 2967 0ffc FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2968 1000 24000BE5 		str	r0, [fp, #-36]
1156:../CX3RDKOV5640.c **** 					{
 2969              		.loc 1 1156 0
 2970 1004 24301BE5 		ldr	r3, [fp, #-36]
 2971 1008 000053E3 		cmp	r3, #0
 2972 100c 0300000A 		beq	.L189
1158:../CX3RDKOV5640.c **** 					}
 2973              		.loc 1 1158 0
 2974 1010 0400A0E3 		mov	r0, #4
 2975 1014 08119FE5 		ldr	r1, .L229+152
 2976 1018 24201BE5 		ldr	r2, [fp, #-36]
 2977 101c FEFFFFEB 		bl	CyU3PDebugPrint
 2978              	.L189:
1161:../CX3RDKOV5640.c **** 					break;
 2979              		.loc 1 1161 0
 2980 1020 F8309FE5 		ldr	r3, .L229+148
 2981 1024 B030D3E1 		ldrh	r3, [r3]
 2982 1028 0338A0E1 		mov	r3, r3, asl #16
 2983 102c 4338A0E1 		mov	r3, r3, asr #16
 2984 1030 0300A0E1 		mov	r0, r3
 2985 1034 FEFFFFEB 		bl	esOV5640_SetSaturation
1162:../CX3RDKOV5640.c **** 				}
 2986              		.loc 1 1162 0
 2987 1038 0000A0E1 		mov	r0, r0	@ nop
 2988              	.L182:
 2989              		.loc 1 1164 0
 2990 103c 7F0100EA 		b	.L90
 2991              	.L181:
1165:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x800))/*Sharpness*/
 2992              		.loc 1 1165 0
 2993 1040 BE325BE1 		ldrh	r3, [fp, #-46]
 2994 1044 020C53E3 		cmp	r3, #512
 2995 1048 7200001A 		bne	.L190
 2996              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2997 104c BC325BE1 		ldrh	r3, [fp, #-44]
 2998 1050 020B53E3 		cmp	r3, #2048
 2999 1054 6F00001A 		bne	.L190
1166:../CX3RDKOV5640.c **** 			{
1167:../CX3RDKOV5640.c **** 				switch(bRequest)
 3000              		.loc 1 1167 0 is_stmt 1
 3001 1058 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3002 105c 840053E3 		cmp	r3, #132
 3003 1060 040000CA 		bgt	.L192
 3004 1064 810053E3 		cmp	r3, #129
 3005 1068 3E0000AA 		bge	.L193
 3006 106c 010053E3 		cmp	r3, #1
 3007 1070 5400000A 		beq	.L194
1168:../CX3RDKOV5640.c **** 				{
1169:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1170:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1171:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1172:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1173:../CX3RDKOV5640.c **** 					{
1174:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1175:../CX3RDKOV5640.c **** 					}
1176:../CX3RDKOV5640.c **** 					break;
1177:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1178:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1179:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1180:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1181:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1182:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1183:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1184:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSharpness(RequestOption);
1185:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1186:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1187:../CX3RDKOV5640.c **** 					{
1188:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1189:../CX3RDKOV5640.c **** 					}
1190:../CX3RDKOV5640.c **** 					break;
1191:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1192:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1193:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1194:../CX3RDKOV5640.c **** 					{
1195:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1196:../CX3RDKOV5640.c **** 					}
1197:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1198:../CX3RDKOV5640.c **** 					esOV5640_SetSharpness((uint8_t)gl16SetControl);
1199:../CX3RDKOV5640.c **** 					break;
1200:../CX3RDKOV5640.c **** 				}
1201:../CX3RDKOV5640.c **** 			}
 3008              		.loc 1 1201 0
 3009 1074 710100EA 		b	.L90
 3010              	.L192:
1167:../CX3RDKOV5640.c **** 				{
 3011              		.loc 1 1167 0
 3012 1078 860053E3 		cmp	r3, #134
 3013 107c 2900000A 		beq	.L195
 3014 1080 870053E3 		cmp	r3, #135
 3015 1084 3700000A 		beq	.L193
 3016              		.loc 1 1201 0
 3017 1088 6C0100EA 		b	.L90
 3018              	.L230:
 3019              		.align	2
 3020              	.L229:
 3021 108c 60010000 		.word	.LC10
 3022 1090 00000000 		.word	glIsApplnActive
 3023 1094 00000000 		.word	glIsStreamingStarted
 3024 1098 00000000 		.word	glPreviewStarted
 3025 109c 00000000 		.word	glIsClearFeature
 3026 10a0 00000000 		.word	glcommitcount
 3027 10a4 00000000 		.word	glIsConfigured
 3028 10a8 00000000 		.word	glCurrentFrameIndex
 3029 10ac 00000000 		.word	glProbeCtrl
 3030 10b0 00000000 		.word	gl5MpProbeCtrl
 3031 10b4 00000000 		.word	gl720pProbeCtrl
 3032 10b8 00000000 		.word	glVga60ProbeCtrl
 3033 10bc 00000000 		.word	gl1080pProbeCtrl
 3034 10c0 00000000 		.word	glVga30ProbeCtrl
 3035 10c4 B0010000 		.word	.LC11
 3036 10c8 CC010000 		.word	.LC12
 3037 10cc 00000000 		.word	glStillProbeCtrl
 3038 10d0 00000000 		.word	glCommitCtrl
 3039 10d4 F8010000 		.word	.LC13
 3040 10d8 24020000 		.word	.LC14
 3041 10dc 00000000 		.word	glcheckframe
 3042 10e0 00000000 		.word	glFrameIndexToSet
 3043 10e4 00000000 		.word	glStillCommitCtrl
 3044 10e8 48020000 		.word	.LC15
 3045 10ec 6C020000 		.word	.LC16
 3046 10f0 00000000 		.word	glCurrentStillFrameIndex
 3047 10f4 00000000 		.word	glStillTriggerCtrl
 3048 10f8 00000000 		.word	glStillSkip
 3049 10fc 00000000 		.word	glStillCaptureStart
 3050 1100 00000000 		.word	gl32GetControl
 3051 1104 00000000 		.word	gl32SetControl
 3052 1108 B4020000 		.word	.LC18
 3053 110c 00000000 		.word	gl8GetControl
 3054 1110 00000000 		.word	gl8SetControl
 3055 1114 00000000 		.word	g_IsAutoFocus
 3056 1118 00000000 		.word	glGet_Info
 3057 111c 00000000 		.word	gl16GetControl
 3058 1120 00000000 		.word	gl16SetControl
 3059 1124 94020000 		.word	.LC17
 3060              	.L195:
1170:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3061              		.loc 1 1170 0
 3062 1128 18301FE5 		ldr	r3, .L229+140
 3063 112c 0320A0E3 		mov	r2, #3
 3064 1130 0020C3E5 		strb	r2, [r3]
1171:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3065              		.loc 1 1171 0
 3066 1134 0100A0E3 		mov	r0, #1
 3067 1138 28101FE5 		ldr	r1, .L229+140
 3068 113c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3069 1140 24000BE5 		str	r0, [fp, #-36]
1172:../CX3RDKOV5640.c **** 					{
 3070              		.loc 1 1172 0
 3071 1144 24301BE5 		ldr	r3, [fp, #-36]
 3072 1148 000053E3 		cmp	r3, #0
 3073 114c 0400000A 		beq	.L196
1174:../CX3RDKOV5640.c **** 					}
 3074              		.loc 1 1174 0
 3075 1150 0400A0E3 		mov	r0, #4
 3076 1154 38101FE5 		ldr	r1, .L229+152
 3077 1158 24201BE5 		ldr	r2, [fp, #-36]
 3078 115c FEFFFFEB 		bl	CyU3PDebugPrint
1176:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3079              		.loc 1 1176 0
 3080 1160 2B0000EA 		b	.L191
 3081              	.L196:
 3082 1164 2A0000EA 		b	.L191
 3083              	.L193:
1182:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3084              		.loc 1 1182 0
 3085 1168 29305BE5 		ldrb	r3, [fp, #-41]
 3086 116c 0F3003E2 		and	r3, r3, #15
 3087 1170 25304BE5 		strb	r3, [fp, #-37]
1184:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3088              		.loc 1 1184 0
 3089 1174 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3090 1178 0300A0E1 		mov	r0, r3
 3091 117c FEFFFFEB 		bl	esOV5640_GetSharpness
 3092 1180 0030A0E1 		mov	r3, r0
 3093 1184 0338A0E1 		mov	r3, r3, asl #16
 3094 1188 2328A0E1 		mov	r2, r3, lsr #16
 3095 118c 78301FE5 		ldr	r3, .L229+144
 3096 1190 B020C3E1 		strh	r2, [r3]	@ movhi
1185:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3097              		.loc 1 1185 0
 3098 1194 0200A0E3 		mov	r0, #2
 3099 1198 84101FE5 		ldr	r1, .L229+144
 3100 119c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3101 11a0 24000BE5 		str	r0, [fp, #-36]
1186:../CX3RDKOV5640.c **** 					{
 3102              		.loc 1 1186 0
 3103 11a4 24301BE5 		ldr	r3, [fp, #-36]
 3104 11a8 000053E3 		cmp	r3, #0
 3105 11ac 0400000A 		beq	.L197
1188:../CX3RDKOV5640.c **** 					}
 3106              		.loc 1 1188 0
 3107 11b0 0400A0E3 		mov	r0, #4
 3108 11b4 98101FE5 		ldr	r1, .L229+152
 3109 11b8 24201BE5 		ldr	r2, [fp, #-36]
 3110 11bc FEFFFFEB 		bl	CyU3PDebugPrint
1190:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3111              		.loc 1 1190 0
 3112 11c0 130000EA 		b	.L191
 3113              	.L197:
 3114 11c4 120000EA 		b	.L191
 3115              	.L194:
1192:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3116              		.loc 1 1192 0
 3117 11c8 32304BE2 		sub	r3, fp, #50
 3118 11cc 1000A0E3 		mov	r0, #16
 3119 11d0 B8101FE5 		ldr	r1, .L229+148
 3120 11d4 0320A0E1 		mov	r2, r3
 3121 11d8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3122 11dc 24000BE5 		str	r0, [fp, #-36]
1193:../CX3RDKOV5640.c **** 					{
 3123              		.loc 1 1193 0
 3124 11e0 24301BE5 		ldr	r3, [fp, #-36]
 3125 11e4 000053E3 		cmp	r3, #0
 3126 11e8 0300000A 		beq	.L198
1195:../CX3RDKOV5640.c **** 					}
 3127              		.loc 1 1195 0
 3128 11ec 0400A0E3 		mov	r0, #4
 3129 11f0 D4101FE5 		ldr	r1, .L229+152
 3130 11f4 24201BE5 		ldr	r2, [fp, #-36]
 3131 11f8 FEFFFFEB 		bl	CyU3PDebugPrint
 3132              	.L198:
1198:../CX3RDKOV5640.c **** 					break;
 3133              		.loc 1 1198 0
 3134 11fc E4301FE5 		ldr	r3, .L229+148
 3135 1200 B030D3E1 		ldrh	r3, [r3]
 3136 1204 FF3003E2 		and	r3, r3, #255
 3137 1208 0300A0E1 		mov	r0, r3
 3138 120c FEFFFFEB 		bl	esOV5640_SetSharpness
1199:../CX3RDKOV5640.c **** 				}
 3139              		.loc 1 1199 0
 3140 1210 0000A0E1 		mov	r0, r0	@ nop
 3141              	.L191:
 3142              		.loc 1 1201 0
 3143 1214 090100EA 		b	.L90
 3144              	.L190:
1202:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x800))/*Auto Focus*/
 3145              		.loc 1 1202 0
 3146 1218 BE325BE1 		ldrh	r3, [fp, #-46]
 3147 121c 010C53E3 		cmp	r3, #256
 3148 1220 5000001A 		bne	.L199
 3149              		.loc 1 1202 0 is_stmt 0 discriminator 1
 3150 1224 BC325BE1 		ldrh	r3, [fp, #-44]
 3151 1228 020B53E3 		cmp	r3, #2048
 3152 122c 4D00001A 		bne	.L199
1203:../CX3RDKOV5640.c **** 			{
1204:../CX3RDKOV5640.c ****             	CyU3PDebugPrint (4, "\n\rAuto Focus");
 3153              		.loc 1 1204 0 is_stmt 1
 3154 1230 0400A0E3 		mov	r0, #4
 3155 1234 34111FE5 		ldr	r1, .L229+124
 3156 1238 FEFFFFEB 		bl	CyU3PDebugPrint
1205:../CX3RDKOV5640.c **** 				switch(bRequest)
 3157              		.loc 1 1205 0
 3158 123c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3159 1240 840053E3 		cmp	r3, #132
 3160 1244 040000CA 		bgt	.L201
 3161 1248 810053E3 		cmp	r3, #129
 3162 124c 170000AA 		bge	.L202
 3163 1250 010053E3 		cmp	r3, #1
 3164 1254 2C00000A 		beq	.L203
1206:../CX3RDKOV5640.c **** 				{
1207:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1208:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1209:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1210:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1211:../CX3RDKOV5640.c **** 					{
1212:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1213:../CX3RDKOV5640.c **** 					}
1214:../CX3RDKOV5640.c **** 					break;
1215:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1216:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1217:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1218:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1219:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1220:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1221:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1222:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutofocus(RequestOption);
1223:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
1224:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1225:../CX3RDKOV5640.c **** 					{
1226:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1227:../CX3RDKOV5640.c **** 					}
1228:../CX3RDKOV5640.c **** 					break;
1229:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1230:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1231:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1232:../CX3RDKOV5640.c **** 					{
1233:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1234:../CX3RDKOV5640.c **** 					}
1235:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1236:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Focus =%d",gl8SetControl);
1237:../CX3RDKOV5640.c **** 					esOV5640_SetAutofocus((uint8_t)gl8SetControl);
1238:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
1239:../CX3RDKOV5640.c **** 					break;
1240:../CX3RDKOV5640.c **** 				}
1241:../CX3RDKOV5640.c **** 			}
 3165              		.loc 1 1241 0
 3166 1258 F80000EA 		b	.L90
 3167              	.L201:
1205:../CX3RDKOV5640.c **** 				switch(bRequest)
 3168              		.loc 1 1205 0
 3169 125c 860053E3 		cmp	r3, #134
 3170 1260 0200000A 		beq	.L204
 3171 1264 870053E3 		cmp	r3, #135
 3172 1268 1000000A 		beq	.L202
 3173              		.loc 1 1241 0
 3174 126c F30000EA 		b	.L90
 3175              	.L204:
1208:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3176              		.loc 1 1208 0
 3177 1270 60311FE5 		ldr	r3, .L229+140
 3178 1274 0320A0E3 		mov	r2, #3
 3179 1278 0020C3E5 		strb	r2, [r3]
1209:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3180              		.loc 1 1209 0
 3181 127c 0100A0E3 		mov	r0, #1
 3182 1280 70111FE5 		ldr	r1, .L229+140
 3183 1284 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3184 1288 24000BE5 		str	r0, [fp, #-36]
1210:../CX3RDKOV5640.c **** 					{
 3185              		.loc 1 1210 0
 3186 128c 24301BE5 		ldr	r3, [fp, #-36]
 3187 1290 000053E3 		cmp	r3, #0
 3188 1294 0400000A 		beq	.L205
1212:../CX3RDKOV5640.c **** 					}
 3189              		.loc 1 1212 0
 3190 1298 0400A0E3 		mov	r0, #4
 3191 129c 80111FE5 		ldr	r1, .L229+152
 3192 12a0 24201BE5 		ldr	r2, [fp, #-36]
 3193 12a4 FEFFFFEB 		bl	CyU3PDebugPrint
1214:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3194              		.loc 1 1214 0
 3195 12a8 2D0000EA 		b	.L200
 3196              	.L205:
 3197 12ac 2C0000EA 		b	.L200
 3198              	.L202:
1220:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3199              		.loc 1 1220 0
 3200 12b0 29305BE5 		ldrb	r3, [fp, #-41]
 3201 12b4 0F3003E2 		and	r3, r3, #15
 3202 12b8 25304BE5 		strb	r3, [fp, #-37]
1222:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
 3203              		.loc 1 1222 0
 3204 12bc 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3205 12c0 0300A0E1 		mov	r0, r3
 3206 12c4 FEFFFFEB 		bl	esOV5640_GetAutofocus
 3207 12c8 0030A0E1 		mov	r3, r0
 3208 12cc 0320A0E1 		mov	r2, r3
 3209 12d0 CC311FE5 		ldr	r3, .L229+128
 3210 12d4 B020C3E1 		strh	r2, [r3]	@ movhi
1223:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3211              		.loc 1 1223 0
 3212 12d8 0200A0E3 		mov	r0, #2
 3213 12dc D8111FE5 		ldr	r1, .L229+128
 3214 12e0 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3215 12e4 24000BE5 		str	r0, [fp, #-36]
1224:../CX3RDKOV5640.c **** 					{
 3216              		.loc 1 1224 0
 3217 12e8 24301BE5 		ldr	r3, [fp, #-36]
 3218 12ec 000053E3 		cmp	r3, #0
 3219 12f0 0400000A 		beq	.L206
1226:../CX3RDKOV5640.c **** 					}
 3220              		.loc 1 1226 0
 3221 12f4 0400A0E3 		mov	r0, #4
 3222 12f8 DC111FE5 		ldr	r1, .L229+152
 3223 12fc 24201BE5 		ldr	r2, [fp, #-36]
 3224 1300 FEFFFFEB 		bl	CyU3PDebugPrint
1228:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3225              		.loc 1 1228 0
 3226 1304 160000EA 		b	.L200
 3227              	.L206:
 3228 1308 150000EA 		b	.L200
 3229              	.L203:
1230:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3230              		.loc 1 1230 0
 3231 130c 32304BE2 		sub	r3, fp, #50
 3232 1310 1000A0E3 		mov	r0, #16
 3233 1314 0C121FE5 		ldr	r1, .L229+132
 3234 1318 0320A0E1 		mov	r2, r3
 3235 131c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3236 1320 24000BE5 		str	r0, [fp, #-36]
1231:../CX3RDKOV5640.c **** 					{
 3237              		.loc 1 1231 0
 3238 1324 24301BE5 		ldr	r3, [fp, #-36]
 3239 1328 000053E3 		cmp	r3, #0
 3240 132c 0300000A 		beq	.L207
1233:../CX3RDKOV5640.c **** 					}
 3241              		.loc 1 1233 0
 3242 1330 0400A0E3 		mov	r0, #4
 3243 1334 18121FE5 		ldr	r1, .L229+152
 3244 1338 24201BE5 		ldr	r2, [fp, #-36]
 3245 133c FEFFFFEB 		bl	CyU3PDebugPrint
 3246              	.L207:
1237:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
 3247              		.loc 1 1237 0
 3248 1340 38321FE5 		ldr	r3, .L229+132
 3249 1344 B030D3E1 		ldrh	r3, [r3]
 3250 1348 FF3003E2 		and	r3, r3, #255
 3251 134c 0300A0E1 		mov	r0, r3
 3252 1350 FEFFFFEB 		bl	esOV5640_SetAutofocus
1238:../CX3RDKOV5640.c **** 					break;
 3253              		.loc 1 1238 0
 3254 1354 48321FE5 		ldr	r3, .L229+136
 3255 1358 0120A0E3 		mov	r2, #1
 3256 135c 0020C3E5 		strb	r2, [r3]
1239:../CX3RDKOV5640.c **** 				}
 3257              		.loc 1 1239 0
 3258 1360 0000A0E1 		mov	r0, r0	@ nop
 3259              	.L200:
 3260              		.loc 1 1241 0
 3261 1364 B50000EA 		b	.L90
 3262              	.L199:
1242:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xA00))/*White Balance manual*/
 3263              		.loc 1 1242 0
 3264 1368 BE325BE1 		ldrh	r3, [fp, #-46]
 3265 136c 020C53E3 		cmp	r3, #512
 3266 1370 4A00001A 		bne	.L208
 3267              		.loc 1 1242 0 is_stmt 0 discriminator 1
 3268 1374 BC325BE1 		ldrh	r3, [fp, #-44]
 3269 1378 0A0C53E3 		cmp	r3, #2560
 3270 137c 4700001A 		bne	.L208
1243:../CX3RDKOV5640.c **** 			{
1244:../CX3RDKOV5640.c **** 				switch(bRequest)
 3271              		.loc 1 1244 0 is_stmt 1
 3272 1380 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3273 1384 840053E3 		cmp	r3, #132
 3274 1388 040000CA 		bgt	.L210
 3275 138c 810053E3 		cmp	r3, #129
 3276 1390 170000AA 		bge	.L211
 3277 1394 010053E3 		cmp	r3, #1
 3278 1398 2C00000A 		beq	.L212
1245:../CX3RDKOV5640.c **** 				{
1246:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1247:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1248:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1249:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1250:../CX3RDKOV5640.c **** 					{
1251:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1252:../CX3RDKOV5640.c **** 					}
1253:../CX3RDKOV5640.c **** 					break;
1254:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1255:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1256:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1257:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1258:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1259:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1260:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1261:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetWhiteBalance(RequestOption);
1262:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1263:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1264:../CX3RDKOV5640.c **** 					{
1265:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1266:../CX3RDKOV5640.c **** 					}
1267:../CX3RDKOV5640.c **** 					break;
1268:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1269:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1270:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1271:../CX3RDKOV5640.c **** 					{
1272:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1273:../CX3RDKOV5640.c **** 					}
1274:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1275:../CX3RDKOV5640.c **** 					esOV5640_SetWhiteBalance((uint8_t)gl16SetControl);
1276:../CX3RDKOV5640.c **** 					break;
1277:../CX3RDKOV5640.c **** 				}
1278:../CX3RDKOV5640.c **** 			}
 3279              		.loc 1 1278 0
 3280 139c A70000EA 		b	.L90
 3281              	.L210:
1244:../CX3RDKOV5640.c **** 				{
 3282              		.loc 1 1244 0
 3283 13a0 860053E3 		cmp	r3, #134
 3284 13a4 0200000A 		beq	.L213
 3285 13a8 870053E3 		cmp	r3, #135
 3286 13ac 1000000A 		beq	.L211
 3287              		.loc 1 1278 0
 3288 13b0 A20000EA 		b	.L90
 3289              	.L213:
1247:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3290              		.loc 1 1247 0
 3291 13b4 A4321FE5 		ldr	r3, .L229+140
 3292 13b8 0320A0E3 		mov	r2, #3
 3293 13bc 0020C3E5 		strb	r2, [r3]
1248:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3294              		.loc 1 1248 0
 3295 13c0 0100A0E3 		mov	r0, #1
 3296 13c4 B4121FE5 		ldr	r1, .L229+140
 3297 13c8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3298 13cc 24000BE5 		str	r0, [fp, #-36]
1249:../CX3RDKOV5640.c **** 					{
 3299              		.loc 1 1249 0
 3300 13d0 24301BE5 		ldr	r3, [fp, #-36]
 3301 13d4 000053E3 		cmp	r3, #0
 3302 13d8 0400000A 		beq	.L214
1251:../CX3RDKOV5640.c **** 					}
 3303              		.loc 1 1251 0
 3304 13dc 0400A0E3 		mov	r0, #4
 3305 13e0 C4121FE5 		ldr	r1, .L229+152
 3306 13e4 24201BE5 		ldr	r2, [fp, #-36]
 3307 13e8 FEFFFFEB 		bl	CyU3PDebugPrint
1253:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3308              		.loc 1 1253 0
 3309 13ec 2A0000EA 		b	.L209
 3310              	.L214:
 3311 13f0 290000EA 		b	.L209
 3312              	.L211:
1259:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3313              		.loc 1 1259 0
 3314 13f4 29305BE5 		ldrb	r3, [fp, #-41]
 3315 13f8 0F3003E2 		and	r3, r3, #15
 3316 13fc 25304BE5 		strb	r3, [fp, #-37]
1261:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3317              		.loc 1 1261 0
 3318 1400 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3319 1404 0300A0E1 		mov	r0, r3
 3320 1408 FEFFFFEB 		bl	esOV5640_GetWhiteBalance
 3321 140c 0030A0E1 		mov	r3, r0
 3322 1410 0320A0E1 		mov	r2, r3
 3323 1414 00331FE5 		ldr	r3, .L229+144
 3324 1418 B020C3E1 		strh	r2, [r3]	@ movhi
1262:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3325              		.loc 1 1262 0
 3326 141c 0200A0E3 		mov	r0, #2
 3327 1420 0C131FE5 		ldr	r1, .L229+144
 3328 1424 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3329 1428 24000BE5 		str	r0, [fp, #-36]
1263:../CX3RDKOV5640.c **** 					{
 3330              		.loc 1 1263 0
 3331 142c 24301BE5 		ldr	r3, [fp, #-36]
 3332 1430 000053E3 		cmp	r3, #0
 3333 1434 0400000A 		beq	.L215
1265:../CX3RDKOV5640.c **** 					}
 3334              		.loc 1 1265 0
 3335 1438 0400A0E3 		mov	r0, #4
 3336 143c 20131FE5 		ldr	r1, .L229+152
 3337 1440 24201BE5 		ldr	r2, [fp, #-36]
 3338 1444 FEFFFFEB 		bl	CyU3PDebugPrint
1267:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3339              		.loc 1 1267 0
 3340 1448 130000EA 		b	.L209
 3341              	.L215:
 3342 144c 120000EA 		b	.L209
 3343              	.L212:
1269:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3344              		.loc 1 1269 0
 3345 1450 32304BE2 		sub	r3, fp, #50
 3346 1454 1000A0E3 		mov	r0, #16
 3347 1458 40131FE5 		ldr	r1, .L229+148
 3348 145c 0320A0E1 		mov	r2, r3
 3349 1460 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3350 1464 24000BE5 		str	r0, [fp, #-36]
1270:../CX3RDKOV5640.c **** 					{
 3351              		.loc 1 1270 0
 3352 1468 24301BE5 		ldr	r3, [fp, #-36]
 3353 146c 000053E3 		cmp	r3, #0
 3354 1470 0300000A 		beq	.L216
1272:../CX3RDKOV5640.c **** 					}
 3355              		.loc 1 1272 0
 3356 1474 0400A0E3 		mov	r0, #4
 3357 1478 5C131FE5 		ldr	r1, .L229+152
 3358 147c 24201BE5 		ldr	r2, [fp, #-36]
 3359 1480 FEFFFFEB 		bl	CyU3PDebugPrint
 3360              	.L216:
1275:../CX3RDKOV5640.c **** 					break;
 3361              		.loc 1 1275 0
 3362 1484 6C331FE5 		ldr	r3, .L229+148
 3363 1488 B030D3E1 		ldrh	r3, [r3]
 3364 148c FF3003E2 		and	r3, r3, #255
 3365 1490 0300A0E1 		mov	r0, r3
 3366 1494 FEFFFFEB 		bl	esOV5640_SetWhiteBalance
1276:../CX3RDKOV5640.c **** 				}
 3367              		.loc 1 1276 0
 3368 1498 0000A0E1 		mov	r0, r0	@ nop
 3369              	.L209:
 3370              		.loc 1 1278 0
 3371 149c 670000EA 		b	.L90
 3372              	.L208:
1279:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xB00))/*White Balance Auto*/
 3373              		.loc 1 1279 0
 3374 14a0 BE325BE1 		ldrh	r3, [fp, #-46]
 3375 14a4 020C53E3 		cmp	r3, #512
 3376 14a8 4A00001A 		bne	.L217
 3377              		.loc 1 1279 0 is_stmt 0 discriminator 1
 3378 14ac BC325BE1 		ldrh	r3, [fp, #-44]
 3379 14b0 0B0C53E3 		cmp	r3, #2816
 3380 14b4 4700001A 		bne	.L217
1280:../CX3RDKOV5640.c **** 			{
1281:../CX3RDKOV5640.c **** 				switch(bRequest)
 3381              		.loc 1 1281 0 is_stmt 1
 3382 14b8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3383 14bc 840053E3 		cmp	r3, #132
 3384 14c0 040000CA 		bgt	.L219
 3385 14c4 810053E3 		cmp	r3, #129
 3386 14c8 170000AA 		bge	.L220
 3387 14cc 010053E3 		cmp	r3, #1
 3388 14d0 2C00000A 		beq	.L221
1282:../CX3RDKOV5640.c **** 				{
1283:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1284:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1285:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1286:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1287:../CX3RDKOV5640.c **** 					{
1288:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1289:../CX3RDKOV5640.c **** 					}
1290:../CX3RDKOV5640.c **** 					break;
1291:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1292:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1293:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1294:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1295:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1296:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1297:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1298:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetAutoWhiteBalance(RequestOption);
1299:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1300:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1301:../CX3RDKOV5640.c **** 					{
1302:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1303:../CX3RDKOV5640.c **** 					}
1304:../CX3RDKOV5640.c **** 					break;
1305:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1306:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1307:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1308:../CX3RDKOV5640.c **** 					{
1309:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1310:../CX3RDKOV5640.c **** 					}
1311:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1312:../CX3RDKOV5640.c **** 					esOV5640_SetAutoWhiteBalance((uint8_t)gl16SetControl);
1313:../CX3RDKOV5640.c **** 					break;
1314:../CX3RDKOV5640.c **** 				}
1315:../CX3RDKOV5640.c **** 			}
 3389              		.loc 1 1315 0
 3390 14d4 590000EA 		b	.L90
 3391              	.L219:
1281:../CX3RDKOV5640.c **** 				{
 3392              		.loc 1 1281 0
 3393 14d8 860053E3 		cmp	r3, #134
 3394 14dc 0200000A 		beq	.L222
 3395 14e0 870053E3 		cmp	r3, #135
 3396 14e4 1000000A 		beq	.L220
 3397              		.loc 1 1315 0
 3398 14e8 540000EA 		b	.L90
 3399              	.L222:
1284:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3400              		.loc 1 1284 0
 3401 14ec DC331FE5 		ldr	r3, .L229+140
 3402 14f0 0320A0E3 		mov	r2, #3
 3403 14f4 0020C3E5 		strb	r2, [r3]
1285:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3404              		.loc 1 1285 0
 3405 14f8 0100A0E3 		mov	r0, #1
 3406 14fc EC131FE5 		ldr	r1, .L229+140
 3407 1500 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3408 1504 24000BE5 		str	r0, [fp, #-36]
1286:../CX3RDKOV5640.c **** 					{
 3409              		.loc 1 1286 0
 3410 1508 24301BE5 		ldr	r3, [fp, #-36]
 3411 150c 000053E3 		cmp	r3, #0
 3412 1510 0400000A 		beq	.L223
1288:../CX3RDKOV5640.c **** 					}
 3413              		.loc 1 1288 0
 3414 1514 0400A0E3 		mov	r0, #4
 3415 1518 FC131FE5 		ldr	r1, .L229+152
 3416 151c 24201BE5 		ldr	r2, [fp, #-36]
 3417 1520 FEFFFFEB 		bl	CyU3PDebugPrint
1290:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3418              		.loc 1 1290 0
 3419 1524 2A0000EA 		b	.L218
 3420              	.L223:
 3421 1528 290000EA 		b	.L218
 3422              	.L220:
1296:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3423              		.loc 1 1296 0
 3424 152c 29305BE5 		ldrb	r3, [fp, #-41]
 3425 1530 0F3003E2 		and	r3, r3, #15
 3426 1534 25304BE5 		strb	r3, [fp, #-37]
1298:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3427              		.loc 1 1298 0
 3428 1538 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3429 153c 0300A0E1 		mov	r0, r3
 3430 1540 FEFFFFEB 		bl	esOV5640_GetAutoWhiteBalance
 3431 1544 0030A0E1 		mov	r3, r0
 3432 1548 0320A0E1 		mov	r2, r3
 3433 154c 38341FE5 		ldr	r3, .L229+144
 3434 1550 B020C3E1 		strh	r2, [r3]	@ movhi
1299:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3435              		.loc 1 1299 0
 3436 1554 0200A0E3 		mov	r0, #2
 3437 1558 44141FE5 		ldr	r1, .L229+144
 3438 155c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3439 1560 24000BE5 		str	r0, [fp, #-36]
1300:../CX3RDKOV5640.c **** 					{
 3440              		.loc 1 1300 0
 3441 1564 24301BE5 		ldr	r3, [fp, #-36]
 3442 1568 000053E3 		cmp	r3, #0
 3443 156c 0400000A 		beq	.L224
1302:../CX3RDKOV5640.c **** 					}
 3444              		.loc 1 1302 0
 3445 1570 0400A0E3 		mov	r0, #4
 3446 1574 58141FE5 		ldr	r1, .L229+152
 3447 1578 24201BE5 		ldr	r2, [fp, #-36]
 3448 157c FEFFFFEB 		bl	CyU3PDebugPrint
1304:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3449              		.loc 1 1304 0
 3450 1580 130000EA 		b	.L218
 3451              	.L224:
 3452 1584 120000EA 		b	.L218
 3453              	.L221:
1306:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3454              		.loc 1 1306 0
 3455 1588 32304BE2 		sub	r3, fp, #50
 3456 158c 1000A0E3 		mov	r0, #16
 3457 1590 78141FE5 		ldr	r1, .L229+148
 3458 1594 0320A0E1 		mov	r2, r3
 3459 1598 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3460 159c 24000BE5 		str	r0, [fp, #-36]
1307:../CX3RDKOV5640.c **** 					{
 3461              		.loc 1 1307 0
 3462 15a0 24301BE5 		ldr	r3, [fp, #-36]
 3463 15a4 000053E3 		cmp	r3, #0
 3464 15a8 0300000A 		beq	.L225
1309:../CX3RDKOV5640.c **** 					}
 3465              		.loc 1 1309 0
 3466 15ac 0400A0E3 		mov	r0, #4
 3467 15b0 94141FE5 		ldr	r1, .L229+152
 3468 15b4 24201BE5 		ldr	r2, [fp, #-36]
 3469 15b8 FEFFFFEB 		bl	CyU3PDebugPrint
 3470              	.L225:
1312:../CX3RDKOV5640.c **** 					break;
 3471              		.loc 1 1312 0
 3472 15bc A4341FE5 		ldr	r3, .L229+148
 3473 15c0 B030D3E1 		ldrh	r3, [r3]
 3474 15c4 FF3003E2 		and	r3, r3, #255
 3475 15c8 0300A0E1 		mov	r0, r3
 3476 15cc FEFFFFEB 		bl	esOV5640_SetAutoWhiteBalance
1313:../CX3RDKOV5640.c **** 				}
 3477              		.loc 1 1313 0
 3478 15d0 0000A0E1 		mov	r0, r0	@ nop
 3479              	.L218:
 3480              		.loc 1 1315 0
 3481 15d4 190000EA 		b	.L90
 3482              	.L217:
1316:../CX3RDKOV5640.c ****             else if((wValue == ES_UVC_VC_REQUEST_ERROR_CODE_CONTROL) && (wIndex == 0x00))
 3483              		.loc 1 1316 0
 3484 15d8 BC325BE1 		ldrh	r3, [fp, #-44]
 3485 15dc 020C53E3 		cmp	r3, #512
 3486 15e0 1200001A 		bne	.L226
 3487              		.loc 1 1316 0 is_stmt 0 discriminator 1
 3488 15e4 BE325BE1 		ldrh	r3, [fp, #-46]
 3489 15e8 000053E3 		cmp	r3, #0
 3490 15ec 0F00001A 		bne	.L226
1317:../CX3RDKOV5640.c ****             {
1318:../CX3RDKOV5640.c ****                 temp = ES_UVC_ERROR_INVALID_CONTROL;
 3491              		.loc 1 1318 0 is_stmt 1
 3492 15f0 0630A0E3 		mov	r3, #6
 3493 15f4 35304BE5 		strb	r3, [fp, #-53]
1319:../CX3RDKOV5640.c ****                 status = CyU3PUsbSendEP0Data(0x01, &temp);
 3494              		.loc 1 1319 0
 3495 15f8 35304BE2 		sub	r3, fp, #53
 3496 15fc 0100A0E3 		mov	r0, #1
 3497 1600 0310A0E1 		mov	r1, r3
 3498 1604 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3499 1608 24000BE5 		str	r0, [fp, #-36]
1320:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3500              		.loc 1 1320 0
 3501 160c 24301BE5 		ldr	r3, [fp, #-36]
 3502 1610 000053E3 		cmp	r3, #0
 3503 1614 0400000A 		beq	.L227
1321:../CX3RDKOV5640.c ****                 {
1322:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 3504              		.loc 1 1322 0
 3505 1618 0400A0E3 		mov	r0, #4
 3506 161c 00151FE5 		ldr	r1, .L229+152
 3507 1620 24201BE5 		ldr	r2, [fp, #-36]
 3508 1624 FEFFFFEB 		bl	CyU3PDebugPrint
1320:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3509              		.loc 1 1320 0
 3510 1628 040000EA 		b	.L90
 3511              	.L227:
1320:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3512              		.loc 1 1320 0 is_stmt 0 discriminator 1
 3513 162c 030000EA 		b	.L90
 3514              	.L226:
1323:../CX3RDKOV5640.c ****                 }
1324:../CX3RDKOV5640.c ****             }
1325:../CX3RDKOV5640.c ****             else
1326:../CX3RDKOV5640.c ****                 CyU3PUsbStall(0,CyTrue, CyTrue);
 3515              		.loc 1 1326 0 is_stmt 1
 3516 1630 0000A0E3 		mov	r0, #0
 3517 1634 0110A0E3 		mov	r1, #1
 3518 1638 0120A0E3 		mov	r2, #1
 3519 163c FEFFFFEB 		bl	CyU3PUsbStall
 3520              	.L90:
1327:../CX3RDKOV5640.c ****         }
1328:../CX3RDKOV5640.c ****     }
1329:../CX3RDKOV5640.c ****     return isHandled;
 3521              		.loc 1 1329 0
 3522 1640 20301BE5 		ldr	r3, [fp, #-32]
 3523              	.L228:
1330:../CX3RDKOV5640.c **** }
 3524              		.loc 1 1330 0
 3525 1644 0300A0E1 		mov	r0, r3
 3526 1648 18D04BE2 		sub	sp, fp, #24
 3527              		@ sp needed
 3528 164c F089BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, fp, pc}
 3529              		.cfi_endproc
 3530              	.LFE10:
 3532              		.section	.rodata
 3533 02c1 000000   		.align	2
 3534              	.LC19:
 3535 02c4 0A0D4170 		.ascii	"\012\015AppInit:I2CInit Err = 0x%x.\000"
 3535      70496E69 
 3535      743A4932 
 3535      43496E69 
 3535      74204572 
 3536 02e2 0000     		.align	2
 3537              	.LC20:
 3538 02e4 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit Err = 0x%x\000"
 3538      70496E69 
 3538      743A4750 
 3538      494F496E 
 3538      69742045 
 3539 0302 0000     		.align	2
 3540              	.LC21:
 3541 0304 0A0D4170 		.ascii	"\012\015AppInit:PIBInit Err = 0x%x\000"
 3541      70496E69 
 3541      743A5049 
 3541      42496E69 
 3541      74204572 
 3542 0321 000000   		.align	2
 3543              	.LC22:
 3544 0324 0A0D4170 		.ascii	"\012\015AppInit:UsbStart Err = 0x%x\000"
 3544      70496E69 
 3544      743A5573 
 3544      62537461 
 3544      72742045 
 3545 0342 0000     		.align	2
 3546              	.LC23:
 3547 0344 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr Err = 0x%x\000"
 3547      70496E69 
 3547      743A5365 
 3547      745F5353 
 3547      5F446576 
 3548              		.align	2
 3549              	.LC24:
 3550 036c 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr Err = 0x%x\000"
 3550      70496E69 
 3550      743A5365 
 3550      745F4853 
 3550      5F446576 
 3551              		.align	2
 3552              	.LC25:
 3553 0394 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr Err = 0x%x\000"
 3553      70496E69 
 3553      743A5365 
 3553      745F424F 
 3553      535F4473 
 3554 03b6 0000     		.align	2
 3555              	.LC26:
 3556 03b8 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr Err = 0x%x\000"
 3556      70496E69 
 3556      743A5365 
 3556      745F4445 
 3556      56515541 
 3557 03de 0000     		.align	2
 3558              	.LC27:
 3559 03e0 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr Err = 0x%x\000"
 3559      70496E69 
 3559      743A5365 
 3559      745F5353 
 3559      5F434647 
 3560 0405 000000   		.align	2
 3561              	.LC28:
 3562 0408 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr Err = 0x%x\000"
 3562      70496E69 
 3562      743A5365 
 3562      745F4853 
 3562      5F434647 
 3563 042d 000000   		.align	2
 3564              	.LC29:
 3565 0430 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr Err = 0x%x\000"
 3565      70496E69 
 3565      743A5365 
 3565      745F4653 
 3565      5F434647 
 3566 0455 000000   		.align	2
 3567              	.LC30:
 3568 0458 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr0 Err = 0x%x\000"
 3568      70496E69 
 3568      743A5365 
 3568      745F5354 
 3568      524E475F 
 3569 047d 000000   		.align	2
 3570              	.LC31:
 3571 0480 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr1 Err = 0x%x\000"
 3571      70496E69 
 3571      743A5365 
 3571      745F5354 
 3571      524E475F 
 3572 04a5 000000   		.align	2
 3573              	.LC32:
 3574 04a8 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr2 Err = 0x%x\000"
 3574      70496E69 
 3574      743A5365 
 3574      745F5354 
 3574      524E475F 
 3575 04cd 000000   		.align	2
 3576              	.LC33:
 3577 04d0 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr3 Err = 0x%x\000"
 3577      70496E69 
 3577      743A5365 
 3577      745F5354 
 3577      524E475F 
 3578 04f5 000000   		.align	2
 3579              	.LC34:
 3580 04f8 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr4 Err = 0x%x\000"
 3580      70496E69 
 3580      743A5365 
 3580      745F5354 
 3580      524E475F 
 3581 051d 000000   		.align	2
 3582              	.LC35:
 3583 0520 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr5 Err = 0x%x\000"
 3583      70496E69 
 3583      743A5365 
 3583      745F5354 
 3583      524E475F 
 3584 0545 000000   		.align	2
 3585              	.LC36:
 3586 0548 0A0D4170 		.ascii	"\012\015AppInit:ConnectState Err = 0x%x\000"
 3586      70496E69 
 3586      743A436F 
 3586      6E6E6563 
 3586      74537461 
 3587 056a 0000     		.align	2
 3588              	.LC37:
 3589 056c 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x\000"
 3589      70496E69 
 3589      743A4379 
 3589      55335053 
 3589      65744570 
 3590 0599 000000   		.align	2
 3591              	.LC38:
 3592 059c 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp Err = 0x%x\000"
 3592      70496E69 
 3592      743A4379 
 3592      55335053 
 3592      65744570 
 3593 05c9 000000   		.align	2
 3594              	.LC39:
 3595 05cc 0A0D4170 		.ascii	"\012\015AppInit:DmaMultiChannelCreate Err = 0x%x\000"
 3595      70496E69 
 3595      743A446D 
 3595      614D756C 
 3595      74694368 
 3596 05f7 00       		.align	2
 3597              	.LC40:
 3598 05f8 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset Err = 0x%x\000"
 3598      70496E69 
 3598      743A4D75 
 3598      6C746943 
 3598      68616E6E 
 3599 061f 00       		.align	2
 3600              	.LC41:
 3601 0620 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad Err = 0x%x\000"
 3601      70496E69 
 3601      743A4D69 
 3601      70696373 
 3601      69477069 
 3602 0645 000000   		.align	2
 3603              	.LC42:
 3604 0648 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart Err = 0x%x\000"
 3604      70496E69 
 3604      743A4770 
 3604      6966534D 
 3604      53746172 
 3605 0669 000000   		.align	2
 3606              	.LC43:
 3607 066c 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit Err = 0x%x\000"
 3607      70496E69 
 3607      743A4D69 
 3607      70696373 
 3607      69496E69 
 3608 068d 000000   		.align	2
 3609              	.LC44:
 3610 0690 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams Err = 0x%x\000"
 3610      70496E69 
 3610      743A4D69 
 3610      70696373 
 3610      69536574 
 3611 06ba 0000     		.align	2
 3612              	.LC45:
 3613 06bc 0A0D4669 		.ascii	"\012\015Firmware Version: %d.%d.%d.%d\000"
 3613      726D7761 
 3613      72652056 
 3613      65727369 
 3613      6F6E3A20 
 3614              		.section	.text.esUVCUvcApplnInit,"ax",%progbits
 3615              		.align	2
 3616              		.global	esUVCUvcApplnInit
 3618              	esUVCUvcApplnInit:
 3619              	.LFB11:
1331:../CX3RDKOV5640.c **** 
1332:../CX3RDKOV5640.c **** 
1333:../CX3RDKOV5640.c **** /* This function initializes the USB Module, creates event group,
1334:../CX3RDKOV5640.c ****    sets the enumeration descriptors, configures the Endpoints and
1335:../CX3RDKOV5640.c ****    configures the DMA module for the UVC Application */
1336:../CX3RDKOV5640.c ****     void
1337:../CX3RDKOV5640.c **** esUVCUvcApplnInit (void)
1338:../CX3RDKOV5640.c **** {
 3620              		.loc 1 1338 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 56
 3623              		@ frame_needed = 1, uses_anonymous_args = 0
 3624 0000 00482DE9 		stmfd	sp!, {fp, lr}
 3625              	.LCFI22:
 3626              		.cfi_def_cfa_offset 8
 3627              		.cfi_offset 11, -8
 3628              		.cfi_offset 14, -4
 3629 0004 04B08DE2 		add	fp, sp, #4
 3630              	.LCFI23:
 3631              		.cfi_def_cfa 11, 4
 3632 0008 48D04DE2 		sub	sp, sp, #72
1339:../CX3RDKOV5640.c ****     CyU3PEpConfig_t endPointConfig;
1340:../CX3RDKOV5640.c ****     CyU3PDmaMultiChannelConfig_t dmaCfg;
1341:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 3633              		.loc 1 1341 0
 3634 000c 0030A0E3 		mov	r3, #0
 3635 0010 08300BE5 		str	r3, [fp, #-8]
1342:../CX3RDKOV5640.c **** 
1343:../CX3RDKOV5640.c ****     /* Initialize the I2C interface for Mipi Block Usage and Camera. */
1344:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeI2c (CY_U3P_MIPICSI_I2C_400KHZ);
 3636              		.loc 1 1344 0
 3637 0014 0100A0E3 		mov	r0, #1
 3638 0018 FEFFFFEB 		bl	CyU3PMipicsiInitializeI2c
 3639 001c 08000BE5 		str	r0, [fp, #-8]
1345:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3640              		.loc 1 1345 0
 3641 0020 08301BE5 		ldr	r3, [fp, #-8]
 3642 0024 000053E3 		cmp	r3, #0
 3643 0028 0500000A 		beq	.L232
1346:../CX3RDKOV5640.c ****     {
1347:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:I2CInit Err = 0x%x.",status);
 3644              		.loc 1 1347 0
 3645 002c 0400A0E3 		mov	r0, #4
 3646 0030 7C179FE5 		ldr	r1, .L263
 3647 0034 08201BE5 		ldr	r2, [fp, #-8]
 3648 0038 FEFFFFEB 		bl	CyU3PDebugPrint
1348:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3649              		.loc 1 1348 0
 3650 003c 08001BE5 		ldr	r0, [fp, #-8]
 3651 0040 FEFFFFEB 		bl	esUVCAppErrorHandler
 3652              	.L232:
1349:../CX3RDKOV5640.c ****     }
1350:../CX3RDKOV5640.c **** 
1351:../CX3RDKOV5640.c ****     /* Initialize GPIO module. */
1352:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeGPIO ();
 3653              		.loc 1 1352 0
 3654 0044 FEFFFFEB 		bl	CyU3PMipicsiInitializeGPIO
 3655 0048 08000BE5 		str	r0, [fp, #-8]
1353:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3656              		.loc 1 1353 0
 3657 004c 08301BE5 		ldr	r3, [fp, #-8]
 3658 0050 000053E3 		cmp	r3, #0
 3659 0054 0500000A 		beq	.L233
1354:../CX3RDKOV5640.c ****     {
1355:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit Err = 0x%x",status);
 3660              		.loc 1 1355 0
 3661 0058 0400A0E3 		mov	r0, #4
 3662 005c 54179FE5 		ldr	r1, .L263+4
 3663 0060 08201BE5 		ldr	r2, [fp, #-8]
 3664 0064 FEFFFFEB 		bl	CyU3PDebugPrint
1356:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3665              		.loc 1 1356 0
 3666 0068 08001BE5 		ldr	r0, [fp, #-8]
 3667 006c FEFFFFEB 		bl	esUVCAppErrorHandler
 3668              	.L233:
1357:../CX3RDKOV5640.c ****     }
1358:../CX3RDKOV5640.c **** 
1359:../CX3RDKOV5640.c ****     /* Initialize the PIB block */
1360:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializePIB ();
 3669              		.loc 1 1360 0
 3670 0070 FEFFFFEB 		bl	CyU3PMipicsiInitializePIB
 3671 0074 08000BE5 		str	r0, [fp, #-8]
1361:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3672              		.loc 1 1361 0
 3673 0078 08301BE5 		ldr	r3, [fp, #-8]
 3674 007c 000053E3 		cmp	r3, #0
 3675 0080 0500000A 		beq	.L234
1362:../CX3RDKOV5640.c ****     {
1363:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:PIBInit Err = 0x%x",status);
 3676              		.loc 1 1363 0
 3677 0084 0400A0E3 		mov	r0, #4
 3678 0088 2C179FE5 		ldr	r1, .L263+8
 3679 008c 08201BE5 		ldr	r2, [fp, #-8]
 3680 0090 FEFFFFEB 		bl	CyU3PDebugPrint
1364:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3681              		.loc 1 1364 0
 3682 0094 08001BE5 		ldr	r0, [fp, #-8]
 3683 0098 FEFFFFEB 		bl	esUVCAppErrorHandler
 3684              	.L234:
1365:../CX3RDKOV5640.c ****     }
1366:../CX3RDKOV5640.c **** 
1367:../CX3RDKOV5640.c ****     /* Start the USB functionality */
1368:../CX3RDKOV5640.c ****     status = CyU3PUsbStart();
 3685              		.loc 1 1368 0
 3686 009c FEFFFFEB 		bl	CyU3PUsbStart
 3687 00a0 08000BE5 		str	r0, [fp, #-8]
1369:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3688              		.loc 1 1369 0
 3689 00a4 08301BE5 		ldr	r3, [fp, #-8]
 3690 00a8 000053E3 		cmp	r3, #0
 3691 00ac 0500000A 		beq	.L235
1370:../CX3RDKOV5640.c ****     {
1371:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:UsbStart Err = 0x%x",status);
 3692              		.loc 1 1371 0
 3693 00b0 0400A0E3 		mov	r0, #4
 3694 00b4 04179FE5 		ldr	r1, .L263+12
 3695 00b8 08201BE5 		ldr	r2, [fp, #-8]
 3696 00bc FEFFFFEB 		bl	CyU3PDebugPrint
1372:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3697              		.loc 1 1372 0
 3698 00c0 08001BE5 		ldr	r0, [fp, #-8]
 3699 00c4 FEFFFFEB 		bl	esUVCAppErrorHandler
 3700              	.L235:
1373:../CX3RDKOV5640.c ****     }
1374:../CX3RDKOV5640.c ****     /* The fast enumeration is the easiest way to setup a USB connection,
1375:../CX3RDKOV5640.c ****      * where all enumeration phase is handled by the library. Only the
1376:../CX3RDKOV5640.c ****      * class / vendor requests need to be handled by the application. */
1377:../CX3RDKOV5640.c ****     CyU3PUsbRegisterSetupCallback(esUVCUvcApplnUSBSetupCB, CyTrue);
 3701              		.loc 1 1377 0
 3702 00c8 F4069FE5 		ldr	r0, .L263+16
 3703 00cc 0110A0E3 		mov	r1, #1
 3704 00d0 FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
1378:../CX3RDKOV5640.c **** 
1379:../CX3RDKOV5640.c ****     /* Setup the callback to handle the USB events */
1380:../CX3RDKOV5640.c ****     CyU3PUsbRegisterEventCallback(esUVCUvcApplnUSBEventCB);
 3705              		.loc 1 1380 0
 3706 00d4 EC069FE5 		ldr	r0, .L263+20
 3707 00d8 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
1381:../CX3RDKOV5640.c **** 
1382:../CX3RDKOV5640.c ****     /* Register a callback to handle LPM requests from the USB 3.0 host. */
1383:../CX3RDKOV5640.c ****     CyU3PUsbRegisterLPMRequestCallback (esUVCApplnLPMRqtCB);
 3708              		.loc 1 1383 0
 3709 00dc E8069FE5 		ldr	r0, .L263+24
 3710 00e0 FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
1384:../CX3RDKOV5640.c **** 
1385:../CX3RDKOV5640.c ****     /* Set the USB Enumeration descriptors */
1386:../CX3RDKOV5640.c **** 
1387:../CX3RDKOV5640.c ****     /* Super speed device descriptor. */
1388:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB30DeviceDscr);
 3711              		.loc 1 1388 0
 3712 00e4 0000A0E3 		mov	r0, #0
 3713 00e8 0010A0E3 		mov	r1, #0
 3714 00ec DC269FE5 		ldr	r2, .L263+28
 3715 00f0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3716 00f4 08000BE5 		str	r0, [fp, #-8]
1389:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3717              		.loc 1 1389 0
 3718 00f8 08301BE5 		ldr	r3, [fp, #-8]
 3719 00fc 000053E3 		cmp	r3, #0
 3720 0100 0500000A 		beq	.L236
1390:../CX3RDKOV5640.c ****     {
1391:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr Err = 0x%x", status);
 3721              		.loc 1 1391 0
 3722 0104 0400A0E3 		mov	r0, #4
 3723 0108 C4169FE5 		ldr	r1, .L263+32
 3724 010c 08201BE5 		ldr	r2, [fp, #-8]
 3725 0110 FEFFFFEB 		bl	CyU3PDebugPrint
1392:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3726              		.loc 1 1392 0
 3727 0114 08001BE5 		ldr	r0, [fp, #-8]
 3728 0118 FEFFFFEB 		bl	esUVCAppErrorHandler
 3729              	.L236:
1393:../CX3RDKOV5640.c ****     }
1394:../CX3RDKOV5640.c **** 
1395:../CX3RDKOV5640.c ****     /* High speed device descriptor. */
1396:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB20DeviceDscr);
 3730              		.loc 1 1396 0
 3731 011c 0100A0E3 		mov	r0, #1
 3732 0120 0010A0E3 		mov	r1, #0
 3733 0124 AC269FE5 		ldr	r2, .L263+36
 3734 0128 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3735 012c 08000BE5 		str	r0, [fp, #-8]
1397:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3736              		.loc 1 1397 0
 3737 0130 08301BE5 		ldr	r3, [fp, #-8]
 3738 0134 000053E3 		cmp	r3, #0
 3739 0138 0500000A 		beq	.L237
1398:../CX3RDKOV5640.c ****     {
1399:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr Err = 0x%x", status);
 3740              		.loc 1 1399 0
 3741 013c 0400A0E3 		mov	r0, #4
 3742 0140 94169FE5 		ldr	r1, .L263+40
 3743 0144 08201BE5 		ldr	r2, [fp, #-8]
 3744 0148 FEFFFFEB 		bl	CyU3PDebugPrint
1400:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3745              		.loc 1 1400 0
 3746 014c 08001BE5 		ldr	r0, [fp, #-8]
 3747 0150 FEFFFFEB 		bl	esUVCAppErrorHandler
 3748              	.L237:
1401:../CX3RDKOV5640.c ****     }
1402:../CX3RDKOV5640.c **** 
1403:../CX3RDKOV5640.c ****     /* BOS descriptor */
1404:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, 0, (uint8_t *)esUVCUSBBOSDscr);
 3749              		.loc 1 1404 0
 3750 0154 0700A0E3 		mov	r0, #7
 3751 0158 0010A0E3 		mov	r1, #0
 3752 015c 7C269FE5 		ldr	r2, .L263+44
 3753 0160 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3754 0164 08000BE5 		str	r0, [fp, #-8]
1405:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3755              		.loc 1 1405 0
 3756 0168 08301BE5 		ldr	r3, [fp, #-8]
 3757 016c 000053E3 		cmp	r3, #0
 3758 0170 0500000A 		beq	.L238
1406:../CX3RDKOV5640.c ****     {
1407:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr Err = 0x%x", status);
 3759              		.loc 1 1407 0
 3760 0174 0400A0E3 		mov	r0, #4
 3761 0178 64169FE5 		ldr	r1, .L263+48
 3762 017c 08201BE5 		ldr	r2, [fp, #-8]
 3763 0180 FEFFFFEB 		bl	CyU3PDebugPrint
1408:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3764              		.loc 1 1408 0
 3765 0184 08001BE5 		ldr	r0, [fp, #-8]
 3766 0188 FEFFFFEB 		bl	esUVCAppErrorHandler
 3767              	.L238:
1409:../CX3RDKOV5640.c ****     }
1410:../CX3RDKOV5640.c **** 
1411:../CX3RDKOV5640.c ****     /* Device qualifier descriptor */
1412:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, 0, (uint8_t *)esUVCUSBDeviceQualDscr);
 3768              		.loc 1 1412 0
 3769 018c 0200A0E3 		mov	r0, #2
 3770 0190 0010A0E3 		mov	r1, #0
 3771 0194 4C269FE5 		ldr	r2, .L263+52
 3772 0198 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3773 019c 08000BE5 		str	r0, [fp, #-8]
1413:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3774              		.loc 1 1413 0
 3775 01a0 08301BE5 		ldr	r3, [fp, #-8]
 3776 01a4 000053E3 		cmp	r3, #0
 3777 01a8 0500000A 		beq	.L239
1414:../CX3RDKOV5640.c ****     {
1415:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr Err = 0x%x", status);
 3778              		.loc 1 1415 0
 3779 01ac 0400A0E3 		mov	r0, #4
 3780 01b0 34169FE5 		ldr	r1, .L263+56
 3781 01b4 08201BE5 		ldr	r2, [fp, #-8]
 3782 01b8 FEFFFFEB 		bl	CyU3PDebugPrint
1416:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3783              		.loc 1 1416 0
 3784 01bc 08001BE5 		ldr	r0, [fp, #-8]
 3785 01c0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3786              	.L239:
1417:../CX3RDKOV5640.c ****     }
1418:../CX3RDKOV5640.c **** 
1419:../CX3RDKOV5640.c ****     /* Super speed configuration descriptor */
1420:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBSSConfigDscr);
 3787              		.loc 1 1420 0
 3788 01c4 0600A0E3 		mov	r0, #6
 3789 01c8 0010A0E3 		mov	r1, #0
 3790 01cc 1C269FE5 		ldr	r2, .L263+60
 3791 01d0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3792 01d4 08000BE5 		str	r0, [fp, #-8]
1421:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3793              		.loc 1 1421 0
 3794 01d8 08301BE5 		ldr	r3, [fp, #-8]
 3795 01dc 000053E3 		cmp	r3, #0
 3796 01e0 0500000A 		beq	.L240
1422:../CX3RDKOV5640.c ****     {
1423:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr Err = 0x%x", status);
 3797              		.loc 1 1423 0
 3798 01e4 0400A0E3 		mov	r0, #4
 3799 01e8 04169FE5 		ldr	r1, .L263+64
 3800 01ec 08201BE5 		ldr	r2, [fp, #-8]
 3801 01f0 FEFFFFEB 		bl	CyU3PDebugPrint
1424:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3802              		.loc 1 1424 0
 3803 01f4 08001BE5 		ldr	r0, [fp, #-8]
 3804 01f8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3805              	.L240:
1425:../CX3RDKOV5640.c ****     }
1426:../CX3RDKOV5640.c **** 
1427:../CX3RDKOV5640.c ****     /* High speed configuration descriptor */
1428:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBHSConfigDscr);
 3806              		.loc 1 1428 0
 3807 01fc 0400A0E3 		mov	r0, #4
 3808 0200 0010A0E3 		mov	r1, #0
 3809 0204 EC259FE5 		ldr	r2, .L263+68
 3810 0208 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3811 020c 08000BE5 		str	r0, [fp, #-8]
1429:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3812              		.loc 1 1429 0
 3813 0210 08301BE5 		ldr	r3, [fp, #-8]
 3814 0214 000053E3 		cmp	r3, #0
 3815 0218 0500000A 		beq	.L241
1430:../CX3RDKOV5640.c ****     {
1431:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr Err = 0x%x", status);
 3816              		.loc 1 1431 0
 3817 021c 0400A0E3 		mov	r0, #4
 3818 0220 D4159FE5 		ldr	r1, .L263+72
 3819 0224 08201BE5 		ldr	r2, [fp, #-8]
 3820 0228 FEFFFFEB 		bl	CyU3PDebugPrint
1432:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3821              		.loc 1 1432 0
 3822 022c 08001BE5 		ldr	r0, [fp, #-8]
 3823 0230 FEFFFFEB 		bl	esUVCAppErrorHandler
 3824              	.L241:
1433:../CX3RDKOV5640.c ****     }
1434:../CX3RDKOV5640.c **** 
1435:../CX3RDKOV5640.c ****     /* Full speed configuration descriptor */
1436:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBFSConfigDscr);
 3825              		.loc 1 1436 0
 3826 0234 0300A0E3 		mov	r0, #3
 3827 0238 0010A0E3 		mov	r1, #0
 3828 023c BC259FE5 		ldr	r2, .L263+76
 3829 0240 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3830 0244 08000BE5 		str	r0, [fp, #-8]
1437:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3831              		.loc 1 1437 0
 3832 0248 08301BE5 		ldr	r3, [fp, #-8]
 3833 024c 000053E3 		cmp	r3, #0
 3834 0250 0500000A 		beq	.L242
1438:../CX3RDKOV5640.c ****     {
1439:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr Err = 0x%x", status);
 3835              		.loc 1 1439 0
 3836 0254 0400A0E3 		mov	r0, #4
 3837 0258 A4159FE5 		ldr	r1, .L263+80
 3838 025c 08201BE5 		ldr	r2, [fp, #-8]
 3839 0260 FEFFFFEB 		bl	CyU3PDebugPrint
1440:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3840              		.loc 1 1440 0
 3841 0264 08001BE5 		ldr	r0, [fp, #-8]
 3842 0268 FEFFFFEB 		bl	esUVCAppErrorHandler
 3843              	.L242:
1441:../CX3RDKOV5640.c ****     }
1442:../CX3RDKOV5640.c **** 
1443:../CX3RDKOV5640.c ****     /* String descriptor 0 */
1444:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)esUVCUSBStringLangIDDscr);
 3844              		.loc 1 1444 0
 3845 026c 0500A0E3 		mov	r0, #5
 3846 0270 0010A0E3 		mov	r1, #0
 3847 0274 8C259FE5 		ldr	r2, .L263+84
 3848 0278 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3849 027c 08000BE5 		str	r0, [fp, #-8]
1445:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3850              		.loc 1 1445 0
 3851 0280 08301BE5 		ldr	r3, [fp, #-8]
 3852 0284 000053E3 		cmp	r3, #0
 3853 0288 0500000A 		beq	.L243
1446:../CX3RDKOV5640.c ****     {
1447:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr0 Err = 0x%x", status);
 3854              		.loc 1 1447 0
 3855 028c 0400A0E3 		mov	r0, #4
 3856 0290 74159FE5 		ldr	r1, .L263+88
 3857 0294 08201BE5 		ldr	r2, [fp, #-8]
 3858 0298 FEFFFFEB 		bl	CyU3PDebugPrint
1448:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3859              		.loc 1 1448 0
 3860 029c 08001BE5 		ldr	r0, [fp, #-8]
 3861 02a0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3862              	.L243:
1449:../CX3RDKOV5640.c ****     }
1450:../CX3RDKOV5640.c **** 
1451:../CX3RDKOV5640.c ****     /* String descriptor 1 */
1452:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)esUVCUSBManufactureDscr);
 3863              		.loc 1 1452 0
 3864 02a4 0500A0E3 		mov	r0, #5
 3865 02a8 0110A0E3 		mov	r1, #1
 3866 02ac 5C259FE5 		ldr	r2, .L263+92
 3867 02b0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3868 02b4 08000BE5 		str	r0, [fp, #-8]
1453:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3869              		.loc 1 1453 0
 3870 02b8 08301BE5 		ldr	r3, [fp, #-8]
 3871 02bc 000053E3 		cmp	r3, #0
 3872 02c0 0500000A 		beq	.L244
1454:../CX3RDKOV5640.c ****     {
1455:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr1 Err = 0x%x", status);
 3873              		.loc 1 1455 0
 3874 02c4 0400A0E3 		mov	r0, #4
 3875 02c8 44159FE5 		ldr	r1, .L263+96
 3876 02cc 08201BE5 		ldr	r2, [fp, #-8]
 3877 02d0 FEFFFFEB 		bl	CyU3PDebugPrint
1456:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3878              		.loc 1 1456 0
 3879 02d4 08001BE5 		ldr	r0, [fp, #-8]
 3880 02d8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3881              	.L244:
1457:../CX3RDKOV5640.c ****     }
1458:../CX3RDKOV5640.c **** 
1459:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1460:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)esUVCUSBProductDscr);
 3882              		.loc 1 1460 0
 3883 02dc 0500A0E3 		mov	r0, #5
 3884 02e0 0210A0E3 		mov	r1, #2
 3885 02e4 2C259FE5 		ldr	r2, .L263+100
 3886 02e8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3887 02ec 08000BE5 		str	r0, [fp, #-8]
1461:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3888              		.loc 1 1461 0
 3889 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3890 02f4 000053E3 		cmp	r3, #0
 3891 02f8 0500000A 		beq	.L245
1462:../CX3RDKOV5640.c ****     {
1463:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr2 Err = 0x%x", status);
 3892              		.loc 1 1463 0
 3893 02fc 0400A0E3 		mov	r0, #4
 3894 0300 14159FE5 		ldr	r1, .L263+104
 3895 0304 08201BE5 		ldr	r2, [fp, #-8]
 3896 0308 FEFFFFEB 		bl	CyU3PDebugPrint
1464:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3897              		.loc 1 1464 0
 3898 030c 08001BE5 		ldr	r0, [fp, #-8]
 3899 0310 FEFFFFEB 		bl	esUVCAppErrorHandler
 3900              	.L245:
1465:../CX3RDKOV5640.c ****     }
1466:../CX3RDKOV5640.c ****     /* String descriptor 3 */
1467:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 3, (uint8_t *)esUVCUSBConfigSSDscr);
 3901              		.loc 1 1467 0
 3902 0314 0500A0E3 		mov	r0, #5
 3903 0318 0310A0E3 		mov	r1, #3
 3904 031c FC249FE5 		ldr	r2, .L263+108
 3905 0320 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3906 0324 08000BE5 		str	r0, [fp, #-8]
1468:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3907              		.loc 1 1468 0
 3908 0328 08301BE5 		ldr	r3, [fp, #-8]
 3909 032c 000053E3 		cmp	r3, #0
 3910 0330 0500000A 		beq	.L246
1469:../CX3RDKOV5640.c ****     {
1470:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr3 Err = 0x%x", status);
 3911              		.loc 1 1470 0
 3912 0334 0400A0E3 		mov	r0, #4
 3913 0338 E4149FE5 		ldr	r1, .L263+112
 3914 033c 08201BE5 		ldr	r2, [fp, #-8]
 3915 0340 FEFFFFEB 		bl	CyU3PDebugPrint
1471:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3916              		.loc 1 1471 0
 3917 0344 08001BE5 		ldr	r0, [fp, #-8]
 3918 0348 FEFFFFEB 		bl	esUVCAppErrorHandler
 3919              	.L246:
1472:../CX3RDKOV5640.c ****     }
1473:../CX3RDKOV5640.c **** 
1474:../CX3RDKOV5640.c ****     /* String descriptor 4 */
1475:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 4, (uint8_t *)esUVCUSBConfigHSDscr);
 3920              		.loc 1 1475 0
 3921 034c 0500A0E3 		mov	r0, #5
 3922 0350 0410A0E3 		mov	r1, #4
 3923 0354 CC249FE5 		ldr	r2, .L263+116
 3924 0358 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3925 035c 08000BE5 		str	r0, [fp, #-8]
1476:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3926              		.loc 1 1476 0
 3927 0360 08301BE5 		ldr	r3, [fp, #-8]
 3928 0364 000053E3 		cmp	r3, #0
 3929 0368 0500000A 		beq	.L247
1477:../CX3RDKOV5640.c ****     {
1478:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr4 Err = 0x%x", status);
 3930              		.loc 1 1478 0
 3931 036c 0400A0E3 		mov	r0, #4
 3932 0370 B4149FE5 		ldr	r1, .L263+120
 3933 0374 08201BE5 		ldr	r2, [fp, #-8]
 3934 0378 FEFFFFEB 		bl	CyU3PDebugPrint
1479:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3935              		.loc 1 1479 0
 3936 037c 08001BE5 		ldr	r0, [fp, #-8]
 3937 0380 FEFFFFEB 		bl	esUVCAppErrorHandler
 3938              	.L247:
1480:../CX3RDKOV5640.c ****     }
1481:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1482:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 5, (uint8_t *)esUVCUSBConfigFSDscr);
 3939              		.loc 1 1482 0
 3940 0384 0500A0E3 		mov	r0, #5
 3941 0388 0510A0E3 		mov	r1, #5
 3942 038c 9C249FE5 		ldr	r2, .L263+124
 3943 0390 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3944 0394 08000BE5 		str	r0, [fp, #-8]
1483:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3945              		.loc 1 1483 0
 3946 0398 08301BE5 		ldr	r3, [fp, #-8]
 3947 039c 000053E3 		cmp	r3, #0
 3948 03a0 0500000A 		beq	.L248
1484:../CX3RDKOV5640.c ****     {
1485:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr5 Err = 0x%x", status);
 3949              		.loc 1 1485 0
 3950 03a4 0400A0E3 		mov	r0, #4
 3951 03a8 84149FE5 		ldr	r1, .L263+128
 3952 03ac 08201BE5 		ldr	r2, [fp, #-8]
 3953 03b0 FEFFFFEB 		bl	CyU3PDebugPrint
1486:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3954              		.loc 1 1486 0
 3955 03b4 08001BE5 		ldr	r0, [fp, #-8]
 3956 03b8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3957              	.L248:
1487:../CX3RDKOV5640.c ****     }
1488:../CX3RDKOV5640.c **** 
1489:../CX3RDKOV5640.c ****     CyU3PUsbVBattEnable (CyTrue);
 3958              		.loc 1 1489 0
 3959 03bc 0100A0E3 		mov	r0, #1
 3960 03c0 FEFFFFEB 		bl	CyU3PUsbVBattEnable
1490:../CX3RDKOV5640.c ****     CyU3PUsbControlVBusDetect (CyFalse, CyTrue);
 3961              		.loc 1 1490 0
 3962 03c4 0000A0E3 		mov	r0, #0
 3963 03c8 0110A0E3 		mov	r1, #1
 3964 03cc FEFFFFEB 		bl	CyU3PUsbControlVBusDetect
1491:../CX3RDKOV5640.c **** 
1492:../CX3RDKOV5640.c ****     //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings 
1493:../CX3RDKOV5640.c ****     /* Setup Image Sensor */
1494:../CX3RDKOV5640.c **** 	esOV5640_Base_Config();
 3965              		.loc 1 1494 0
 3966 03d0 FEFFFFEB 		bl	esOV5640_Base_Config
1495:../CX3RDKOV5640.c **** 	 //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings fo
1496:../CX3RDKOV5640.c **** 	esOV5640_Auto_Focus_Config();
 3967              		.loc 1 1496 0
 3968 03d4 FEFFFFEB 		bl	esOV5640_Auto_Focus_Config
1497:../CX3RDKOV5640.c **** 	//TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
1498:../CX3RDKOV5640.c **** 	esCamera_Power_Down();
 3969              		.loc 1 1498 0
 3970 03d8 FEFFFFEB 		bl	esCamera_Power_Down
1499:../CX3RDKOV5640.c **** 
1500:../CX3RDKOV5640.c ****     /* Connect the USB pins and enable super speed operation */
1501:../CX3RDKOV5640.c ****     status = CyU3PConnectState(CyTrue, CyTrue);
 3971              		.loc 1 1501 0
 3972 03dc 0100A0E3 		mov	r0, #1
 3973 03e0 0110A0E3 		mov	r1, #1
 3974 03e4 FEFFFFEB 		bl	CyU3PConnectState
 3975 03e8 08000BE5 		str	r0, [fp, #-8]
1502:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3976              		.loc 1 1502 0
 3977 03ec 08301BE5 		ldr	r3, [fp, #-8]
 3978 03f0 000053E3 		cmp	r3, #0
 3979 03f4 0500000A 		beq	.L249
1503:../CX3RDKOV5640.c ****     {
1504:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:ConnectState Err = 0x%x", status);
 3980              		.loc 1 1504 0
 3981 03f8 0400A0E3 		mov	r0, #4
 3982 03fc 34149FE5 		ldr	r1, .L263+132
 3983 0400 08201BE5 		ldr	r2, [fp, #-8]
 3984 0404 FEFFFFEB 		bl	CyU3PDebugPrint
1505:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3985              		.loc 1 1505 0
 3986 0408 08001BE5 		ldr	r0, [fp, #-8]
 3987 040c FEFFFFEB 		bl	esUVCAppErrorHandler
 3988              	.L249:
1506:../CX3RDKOV5640.c ****     }
1507:../CX3RDKOV5640.c **** 
1508:../CX3RDKOV5640.c ****     /* Since the status interrupt endpoint is not used in this application,
1509:../CX3RDKOV5640.c ****      * just enable the EP in the beginning. */
1510:../CX3RDKOV5640.c ****     /* Control status interrupt endpoint configuration */
1511:../CX3RDKOV5640.c ****     endPointConfig.enable = 1;
 3989              		.loc 1 1511 0
 3990 0410 0130A0E3 		mov	r3, #1
 3991 0414 14300BE5 		str	r3, [fp, #-20]
1512:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_INTR;
 3992              		.loc 1 1512 0
 3993 0418 0330A0E3 		mov	r3, #3
 3994 041c 10304BE5 		strb	r3, [fp, #-16]
1513:../CX3RDKOV5640.c ****     endPointConfig.pcktSize = 64;
 3995              		.loc 1 1513 0
 3996 0420 4030A0E3 		mov	r3, #64
 3997 0424 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1514:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 1;
 3998              		.loc 1 1514 0
 3999 0428 0130A0E3 		mov	r3, #1
 4000 042c 09304BE5 		strb	r3, [fp, #-9]
1515:../CX3RDKOV5640.c ****     endPointConfig.burstLen = 1;
 4001              		.loc 1 1515 0
 4002 0430 0130A0E3 		mov	r3, #1
 4003 0434 0A304BE5 		strb	r3, [fp, #-10]
1516:../CX3RDKOV5640.c **** 
1517:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_CONTROL_STATUS, &endPointConfig);
 4004              		.loc 1 1517 0
 4005 0438 14304BE2 		sub	r3, fp, #20
 4006 043c 8200A0E3 		mov	r0, #130
 4007 0440 0310A0E1 		mov	r1, r3
 4008 0444 FEFFFFEB 		bl	CyU3PSetEpConfig
 4009 0448 08000BE5 		str	r0, [fp, #-8]
1518:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4010              		.loc 1 1518 0
 4011 044c 08301BE5 		ldr	r3, [fp, #-8]
 4012 0450 000053E3 		cmp	r3, #0
 4013 0454 0500000A 		beq	.L250
1519:../CX3RDKOV5640.c ****     {
1520:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x", status);
 4014              		.loc 1 1520 0
 4015 0458 0400A0E3 		mov	r0, #4
 4016 045c D8139FE5 		ldr	r1, .L263+136
 4017 0460 08201BE5 		ldr	r2, [fp, #-8]
 4018 0464 FEFFFFEB 		bl	CyU3PDebugPrint
1521:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4019              		.loc 1 1521 0
 4020 0468 08001BE5 		ldr	r0, [fp, #-8]
 4021 046c FEFFFFEB 		bl	esUVCAppErrorHandler
 4022              	.L250:
1522:../CX3RDKOV5640.c ****     }
1523:../CX3RDKOV5640.c **** 
1524:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_CONTROL_STATUS);
 4023              		.loc 1 1524 0
 4024 0470 8200A0E3 		mov	r0, #130
 4025 0474 FEFFFFEB 		bl	CyU3PUsbFlushEp
1525:../CX3RDKOV5640.c **** 
1526:../CX3RDKOV5640.c ****     /* Setup the Bulk endpoint used for Video Streaming */
1527:../CX3RDKOV5640.c ****     endPointConfig.enable = CyTrue;
 4026              		.loc 1 1527 0
 4027 0478 0130A0E3 		mov	r3, #1
 4028 047c 14300BE5 		str	r3, [fp, #-20]
1528:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_BULK;
 4029              		.loc 1 1528 0
 4030 0480 0230A0E3 		mov	r3, #2
 4031 0484 10304BE5 		strb	r3, [fp, #-16]
1529:../CX3RDKOV5640.c **** 
1530:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 0;
 4032              		.loc 1 1530 0
 4033 0488 0030A0E3 		mov	r3, #0
 4034 048c 09304BE5 		strb	r3, [fp, #-9]
1531:../CX3RDKOV5640.c ****     endPointConfig.streams = 0;
 4035              		.loc 1 1531 0
 4036 0490 0030A0E3 		mov	r3, #0
 4037 0494 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1532:../CX3RDKOV5640.c **** 
1533:../CX3RDKOV5640.c ****     CyU3PThreadSleep(1000);
 4038              		.loc 1 1533 0
 4039 0498 FA0FA0E3 		mov	r0, #1000
 4040 049c FEFFFFEB 		bl	_tx_thread_sleep
1534:../CX3RDKOV5640.c **** 
1535:../CX3RDKOV5640.c ****     switch(CyU3PUsbGetSpeed())
 4041              		.loc 1 1535 0
 4042 04a0 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 4043 04a4 0030A0E1 		mov	r3, r0
 4044 04a8 010053E3 		cmp	r3, #1
 4045 04ac 0F00000A 		beq	.L252
 4046 04b0 020053E3 		cmp	r3, #2
 4047 04b4 1200001A 		bne	.L262
1536:../CX3RDKOV5640.c ****     {
1537:../CX3RDKOV5640.c ****         case CY_U3P_HIGH_SPEED:
1538:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x200;
 4048              		.loc 1 1538 0
 4049 04b8 023CA0E3 		mov	r3, #512
 4050 04bc BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1539:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4051              		.loc 1 1539 0
 4052 04c0 0130A0E3 		mov	r3, #1
 4053 04c4 0A304BE5 		strb	r3, [fp, #-10]
1540:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_HS_STREAM_BUF_SIZE;
 4054              		.loc 1 1540 0
 4055 04c8 70339FE5 		ldr	r3, .L263+140
 4056 04cc 032BA0E3 		mov	r2, #3072
 4057 04d0 B020C3E1 		strh	r2, [r3]	@ movhi
1541:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_HS_DATA_BUF_SIZE;
 4058              		.loc 1 1541 0
 4059 04d4 68339FE5 		ldr	r3, .L263+144
 4060 04d8 BF2EA0E3 		mov	r2, #3056
 4061 04dc B020C3E1 		strh	r2, [r3]	@ movhi
1542:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_HS_STREAM_BUF_COUNT;
 4062              		.loc 1 1542 0
 4063 04e0 60339FE5 		ldr	r3, .L263+148
 4064 04e4 0820A0E3 		mov	r2, #8
 4065 04e8 0020C3E5 		strb	r2, [r3]
1543:../CX3RDKOV5640.c ****             break;
 4066              		.loc 1 1543 0
 4067 04ec 120000EA 		b	.L254
 4068              	.L252:
1544:../CX3RDKOV5640.c **** 
1545:../CX3RDKOV5640.c ****         case CY_U3P_FULL_SPEED:
1546:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x40;
 4069              		.loc 1 1546 0
 4070 04f0 4030A0E3 		mov	r3, #64
 4071 04f4 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1547:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4072              		.loc 1 1547 0
 4073 04f8 0130A0E3 		mov	r3, #1
 4074 04fc 0A304BE5 		strb	r3, [fp, #-10]
1548:../CX3RDKOV5640.c ****             break;
 4075              		.loc 1 1548 0
 4076 0500 0D0000EA 		b	.L254
 4077              	.L262:
1549:../CX3RDKOV5640.c **** 
1550:../CX3RDKOV5640.c ****         case CY_U3P_SUPER_SPEED:
1551:../CX3RDKOV5640.c ****         default:
1552:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = ES_UVC_EP_BULK_VIDEO_PKT_SIZE;
 4078              		.loc 1 1552 0
 4079 0504 013BA0E3 		mov	r3, #1024
 4080 0508 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1553:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 16;
 4081              		.loc 1 1553 0
 4082 050c 1030A0E3 		mov	r3, #16
 4083 0510 0A304BE5 		strb	r3, [fp, #-10]
1554:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_SS_STREAM_BUF_SIZE;
 4084              		.loc 1 1554 0
 4085 0514 24339FE5 		ldr	r3, .L263+140
 4086 0518 062AA0E3 		mov	r2, #24576
 4087 051c B020C3E1 		strh	r2, [r3]	@ movhi
1555:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_SS_DATA_BUF_SIZE;
 4088              		.loc 1 1555 0
 4089 0520 1C339FE5 		ldr	r3, .L263+144
 4090 0524 20239FE5 		ldr	r2, .L263+152
 4091 0528 B020C3E1 		strh	r2, [r3]	@ movhi
1556:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_SS_STREAM_BUF_COUNT;
 4092              		.loc 1 1556 0
 4093 052c 14339FE5 		ldr	r3, .L263+148
 4094 0530 0420A0E3 		mov	r2, #4
 4095 0534 0020C3E5 		strb	r2, [r3]
1557:../CX3RDKOV5640.c ****             break;
 4096              		.loc 1 1557 0
 4097 0538 0000A0E1 		mov	r0, r0	@ nop
 4098              	.L254:
1558:../CX3RDKOV5640.c ****     }
1559:../CX3RDKOV5640.c **** 
1560:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_BULK_VIDEO, &endPointConfig);
 4099              		.loc 1 1560 0
 4100 053c 14304BE2 		sub	r3, fp, #20
 4101 0540 8300A0E3 		mov	r0, #131
 4102 0544 0310A0E1 		mov	r1, r3
 4103 0548 FEFFFFEB 		bl	CyU3PSetEpConfig
 4104 054c 08000BE5 		str	r0, [fp, #-8]
1561:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4105              		.loc 1 1561 0
 4106 0550 08301BE5 		ldr	r3, [fp, #-8]
 4107 0554 000053E3 		cmp	r3, #0
 4108 0558 0500000A 		beq	.L255
1562:../CX3RDKOV5640.c ****     {
1563:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp Err = 0x%x", status);
 4109              		.loc 1 1563 0
 4110 055c 0400A0E3 		mov	r0, #4
 4111 0560 E8129FE5 		ldr	r1, .L263+156
 4112 0564 08201BE5 		ldr	r2, [fp, #-8]
 4113 0568 FEFFFFEB 		bl	CyU3PDebugPrint
1564:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4114              		.loc 1 1564 0
 4115 056c 08001BE5 		ldr	r0, [fp, #-8]
 4116 0570 FEFFFFEB 		bl	esUVCAppErrorHandler
 4117              	.L255:
1565:../CX3RDKOV5640.c ****     }
1566:../CX3RDKOV5640.c **** 
1567:../CX3RDKOV5640.c ****     CyU3PUsbEPSetBurstMode (ES_UVC_EP_BULK_VIDEO, CyTrue);
 4118              		.loc 1 1567 0
 4119 0574 8300A0E3 		mov	r0, #131
 4120 0578 0110A0E3 		mov	r1, #1
 4121 057c FEFFFFEB 		bl	CyU3PUsbEPSetBurstMode
1568:../CX3RDKOV5640.c **** 
1569:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
1570:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 4122              		.loc 1 1570 0
 4123 0580 8300A0E3 		mov	r0, #131
 4124 0584 FEFFFFEB 		bl	CyU3PUsbFlushEp
1571:../CX3RDKOV5640.c **** 
1572:../CX3RDKOV5640.c ****     /* Create a DMA Manual OUT channel for streaming data */
1573:../CX3RDKOV5640.c ****     /* Video streaming Channel is not active till a stream request is received */
1574:../CX3RDKOV5640.c ****     dmaCfg.size                 = ES_UVC_STREAM_BUF_SIZE;
 4125              		.loc 1 1574 0
 4126 0588 B0329FE5 		ldr	r3, .L263+140
 4127 058c B030D3E1 		ldrh	r3, [r3]
 4128 0590 BC334BE1 		strh	r3, [fp, #-60]	@ movhi
1575:../CX3RDKOV5640.c ****     dmaCfg.count                = ES_UVC_STREAM_BUF_COUNT;
 4129              		.loc 1 1575 0
 4130 0594 AC329FE5 		ldr	r3, .L263+148
 4131 0598 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4132 059c BA334BE1 		strh	r3, [fp, #-58]	@ movhi
1576:../CX3RDKOV5640.c ****     dmaCfg.validSckCount        = 2;
 4133              		.loc 1 1576 0
 4134 05a0 0230A0E3 		mov	r3, #2
 4135 05a4 B8334BE1 		strh	r3, [fp, #-56]	@ movhi
1577:../CX3RDKOV5640.c **** 
1578:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[0]         = ES_UVC_PRODUCER_PPORT_SOCKET_0;
 4136              		.loc 1 1578 0
 4137 05a8 013CA0E3 		mov	r3, #256
 4138 05ac B6334BE1 		strh	r3, [fp, #-54]	@ movhi
1579:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[1]         = ES_UVC_PRODUCER_PPORT_SOCKET_1;
 4139              		.loc 1 1579 0
 4140 05b0 9C329FE5 		ldr	r3, .L263+160
 4141 05b4 B4334BE1 		strh	r3, [fp, #-52]	@ movhi
1580:../CX3RDKOV5640.c **** 
1581:../CX3RDKOV5640.c ****     dmaCfg.consSckId[0]         = ES_UVC_EP_VIDEO_CONS_SOCKET;
 4142              		.loc 1 1581 0
 4143 05b8 98329FE5 		ldr	r3, .L263+164
 4144 05bc BE324BE1 		strh	r3, [fp, #-46]	@ movhi
1582:../CX3RDKOV5640.c ****     dmaCfg.dmaMode              = CY_U3P_DMA_MODE_BYTE;
 4145              		.loc 1 1582 0
 4146 05c0 0030A0E3 		mov	r3, #0
 4147 05c4 1E304BE5 		strb	r3, [fp, #-30]
1583:../CX3RDKOV5640.c ****     dmaCfg.notification         = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
 4148              		.loc 1 1583 0
 4149 05c8 1830A0E3 		mov	r3, #24
 4150 05cc 1C300BE5 		str	r3, [fp, #-28]
1584:../CX3RDKOV5640.c ****     dmaCfg.cb                   = esUVCUvcAppDmaCallback;
 4151              		.loc 1 1584 0
 4152 05d0 84329FE5 		ldr	r3, .L263+168
 4153 05d4 18300BE5 		str	r3, [fp, #-24]
1585:../CX3RDKOV5640.c ****     dmaCfg.prodHeader           = ES_UVC_PROD_HEADER;
 4154              		.loc 1 1585 0
 4155 05d8 0C30A0E3 		mov	r3, #12
 4156 05dc B4324BE1 		strh	r3, [fp, #-36]	@ movhi
1586:../CX3RDKOV5640.c ****     dmaCfg.prodFooter           = ES_UVC_PROD_FOOTER;
 4157              		.loc 1 1586 0
 4158 05e0 0430A0E3 		mov	r3, #4
 4159 05e4 B2324BE1 		strh	r3, [fp, #-34]	@ movhi
1587:../CX3RDKOV5640.c ****     dmaCfg.consHeader           = 0;
 4160              		.loc 1 1587 0
 4161 05e8 0030A0E3 		mov	r3, #0
 4162 05ec B0324BE1 		strh	r3, [fp, #-32]	@ movhi
1588:../CX3RDKOV5640.c ****     dmaCfg.prodAvailCount       = 0;
 4163              		.loc 1 1588 0
 4164 05f0 0030A0E3 		mov	r3, #0
 4165 05f4 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
1589:../CX3RDKOV5640.c **** 
1590:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE ,
 4166              		.loc 1 1590 0
 4167 05f8 3C304BE2 		sub	r3, fp, #60
 4168 05fc 5C029FE5 		ldr	r0, .L263+172
 4169 0600 0710A0E3 		mov	r1, #7
 4170 0604 0320A0E1 		mov	r2, r3
 4171 0608 FEFFFFEB 		bl	CyU3PDmaMultiChannelCreate
 4172 060c 08000BE5 		str	r0, [fp, #-8]
1591:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4173              		.loc 1 1591 0
 4174 0610 08301BE5 		ldr	r3, [fp, #-8]
 4175 0614 000053E3 		cmp	r3, #0
 4176 0618 0300000A 		beq	.L256
1592:../CX3RDKOV5640.c ****     {
1593:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:DmaMultiChannelCreate Err = 0x%x", status);
 4177              		.loc 1 1593 0
 4178 061c 0400A0E3 		mov	r0, #4
 4179 0620 3C129FE5 		ldr	r1, .L263+176
 4180 0624 08201BE5 		ldr	r2, [fp, #-8]
 4181 0628 FEFFFFEB 		bl	CyU3PDebugPrint
 4182              	.L256:
1594:../CX3RDKOV5640.c ****     }
1595:../CX3RDKOV5640.c ****     CyU3PThreadSleep(100);
 4183              		.loc 1 1595 0
 4184 062c 6400A0E3 		mov	r0, #100
 4185 0630 FEFFFFEB 		bl	_tx_thread_sleep
1596:../CX3RDKOV5640.c **** 
1597:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set
1598:../CX3RDKOV5640.c ****        DSCR_SIZE field in DSCR memory */
1599:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 4186              		.loc 1 1599 0
 4187 0634 24029FE5 		ldr	r0, .L263+172
 4188 0638 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 4189 063c 08000BE5 		str	r0, [fp, #-8]
1600:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4190              		.loc 1 1600 0
 4191 0640 08301BE5 		ldr	r3, [fp, #-8]
 4192 0644 000053E3 		cmp	r3, #0
 4193 0648 0300000A 		beq	.L257
1601:../CX3RDKOV5640.c ****     {
1602:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAppInit:MultiChannelReset Err = 0x%x", status);
 4194              		.loc 1 1602 0
 4195 064c 0400A0E3 		mov	r0, #4
 4196 0650 10129FE5 		ldr	r1, .L263+180
 4197 0654 08201BE5 		ldr	r2, [fp, #-8]
 4198 0658 FEFFFFEB 		bl	CyU3PDebugPrint
 4199              	.L257:
1603:../CX3RDKOV5640.c ****     }
1604:../CX3RDKOV5640.c **** 
1605:../CX3RDKOV5640.c ****     /* Configure the Fixed Function GPIF on the CX3 to use a 16 bit bus, and
1606:../CX3RDKOV5640.c ****      * a DMA Buffer of size CX3_UVC_DATA_BUF_SIZE
1607:../CX3RDKOV5640.c ****      */
1608:../CX3RDKOV5640.c ****     status = CyU3PMipicsiGpifLoad(CY_U3P_MIPICSI_BUS_16, ES_UVC_DATA_BUF_SIZE);
 4200              		.loc 1 1608 0
 4201 065c E0319FE5 		ldr	r3, .L263+144
 4202 0660 B030D3E1 		ldrh	r3, [r3]
 4203 0664 0100A0E3 		mov	r0, #1
 4204 0668 0310A0E1 		mov	r1, r3
 4205 066c FEFFFFEB 		bl	CyU3PMipicsiGpifLoad
 4206 0670 08000BE5 		str	r0, [fp, #-8]
1609:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4207              		.loc 1 1609 0
 4208 0674 08301BE5 		ldr	r3, [fp, #-8]
 4209 0678 000053E3 		cmp	r3, #0
 4210 067c 0500000A 		beq	.L258
1610:../CX3RDKOV5640.c ****     {
1611:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad Err = 0x%x", status);
 4211              		.loc 1 1611 0
 4212 0680 0400A0E3 		mov	r0, #4
 4213 0684 E0119FE5 		ldr	r1, .L263+184
 4214 0688 08201BE5 		ldr	r2, [fp, #-8]
 4215 068c FEFFFFEB 		bl	CyU3PDebugPrint
1612:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4216              		.loc 1 1612 0
 4217 0690 08001BE5 		ldr	r0, [fp, #-8]
 4218 0694 FEFFFFEB 		bl	esUVCAppErrorHandler
 4219              	.L258:
1613:../CX3RDKOV5640.c ****     }
1614:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4220              		.loc 1 1614 0
 4221 0698 3200A0E3 		mov	r0, #50
 4222 069c FEFFFFEB 		bl	_tx_thread_sleep
1615:../CX3RDKOV5640.c **** 
1616:../CX3RDKOV5640.c ****     CyU3PGpifRegisterCallback(esUVCGpifCB);
 4223              		.loc 1 1616 0
 4224 06a0 C8019FE5 		ldr	r0, .L263+188
 4225 06a4 FEFFFFEB 		bl	CyU3PGpifRegisterCallback
1617:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4226              		.loc 1 1617 0
 4227 06a8 3200A0E3 		mov	r0, #50
 4228 06ac FEFFFFEB 		bl	_tx_thread_sleep
1618:../CX3RDKOV5640.c **** 
1619:../CX3RDKOV5640.c ****     /* Start the state machine. */
1620:../CX3RDKOV5640.c ****     status = CyU3PGpifSMStart (CX3_START_SCK0, ALPHA_CX3_START_SCK0);
 4229              		.loc 1 1620 0
 4230 06b0 0000A0E3 		mov	r0, #0
 4231 06b4 0010A0E3 		mov	r1, #0
 4232 06b8 FEFFFFEB 		bl	CyU3PGpifSMStart
 4233 06bc 08000BE5 		str	r0, [fp, #-8]
1621:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4234              		.loc 1 1621 0
 4235 06c0 08301BE5 		ldr	r3, [fp, #-8]
 4236 06c4 000053E3 		cmp	r3, #0
 4237 06c8 0500000A 		beq	.L259
1622:../CX3RDKOV5640.c ****     {
1623:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart Err = 0x%x", status);
 4238              		.loc 1 1623 0
 4239 06cc 0400A0E3 		mov	r0, #4
 4240 06d0 9C119FE5 		ldr	r1, .L263+192
 4241 06d4 08201BE5 		ldr	r2, [fp, #-8]
 4242 06d8 FEFFFFEB 		bl	CyU3PDebugPrint
1624:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4243              		.loc 1 1624 0
 4244 06dc 08001BE5 		ldr	r0, [fp, #-8]
 4245 06e0 FEFFFFEB 		bl	esUVCAppErrorHandler
 4246              	.L259:
1625:../CX3RDKOV5640.c ****     }
1626:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4247              		.loc 1 1626 0
 4248 06e4 3200A0E3 		mov	r0, #50
 4249 06e8 FEFFFFEB 		bl	_tx_thread_sleep
1627:../CX3RDKOV5640.c **** 
1628:../CX3RDKOV5640.c ****     /* Pause the GPIF*/
1629:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 4250              		.loc 1 1629 0
 4251 06ec 0100A0E3 		mov	r0, #1
 4252 06f0 FEFFFFEB 		bl	CyU3PGpifSMControl
1630:../CX3RDKOV5640.c **** 
1631:../CX3RDKOV5640.c ****     /* Initialize the MIPI block */
1632:../CX3RDKOV5640.c ****     status =  CyU3PMipicsiInit();
 4253              		.loc 1 1632 0
 4254 06f4 FEFFFFEB 		bl	CyU3PMipicsiInit
 4255 06f8 08000BE5 		str	r0, [fp, #-8]
1633:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4256              		.loc 1 1633 0
 4257 06fc 08301BE5 		ldr	r3, [fp, #-8]
 4258 0700 000053E3 		cmp	r3, #0
 4259 0704 0500000A 		beq	.L260
1634:../CX3RDKOV5640.c ****     {
1635:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit Err = 0x%x", status);
 4260              		.loc 1 1635 0
 4261 0708 0400A0E3 		mov	r0, #4
 4262 070c 64119FE5 		ldr	r1, .L263+196
 4263 0710 08201BE5 		ldr	r2, [fp, #-8]
 4264 0714 FEFFFFEB 		bl	CyU3PDebugPrint
1636:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4265              		.loc 1 1636 0
 4266 0718 08001BE5 		ldr	r0, [fp, #-8]
 4267 071c FEFFFFEB 		bl	esUVCAppErrorHandler
 4268              	.L260:
1637:../CX3RDKOV5640.c ****     }
1638:../CX3RDKOV5640.c **** 
1639:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSetIntfParams(&cfgUvcVgaNoMclk, CyFalse);
 4269              		.loc 1 1639 0
 4270 0720 54019FE5 		ldr	r0, .L263+200
 4271 0724 0010A0E3 		mov	r1, #0
 4272 0728 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 4273 072c 08000BE5 		str	r0, [fp, #-8]
1640:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4274              		.loc 1 1640 0
 4275 0730 08301BE5 		ldr	r3, [fp, #-8]
 4276 0734 000053E3 		cmp	r3, #0
 4277 0738 0500000A 		beq	.L261
1641:../CX3RDKOV5640.c ****     {
1642:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams Err = 0x%x",status);
 4278              		.loc 1 1642 0
 4279 073c 0400A0E3 		mov	r0, #4
 4280 0740 38119FE5 		ldr	r1, .L263+204
 4281 0744 08201BE5 		ldr	r2, [fp, #-8]
 4282 0748 FEFFFFEB 		bl	CyU3PDebugPrint
1643:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4283              		.loc 1 1643 0
 4284 074c 08001BE5 		ldr	r0, [fp, #-8]
 4285 0750 FEFFFFEB 		bl	esUVCAppErrorHandler
 4286              	.L261:
1644:../CX3RDKOV5640.c ****     }
1645:../CX3RDKOV5640.c **** 
1646:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1647:../CX3RDKOV5640.c ****     CyU3PTimerCreate (&UvcTimer, UvcAppProgressTimer, 0x00, TIMER_PERIOD, 0, CYU3P_NO_ACTIVATE);
 4287              		.loc 1 1647 0
 4288 0754 7D3FA0E3 		mov	r3, #500
 4289 0758 00308DE5 		str	r3, [sp]
 4290 075c 0030A0E3 		mov	r3, #0
 4291 0760 04308DE5 		str	r3, [sp, #4]
 4292 0764 0030A0E3 		mov	r3, #0
 4293 0768 08308DE5 		str	r3, [sp, #8]
 4294 076c 2C30A0E3 		mov	r3, #44
 4295 0770 0C308DE5 		str	r3, [sp, #12]
 4296 0774 08019FE5 		ldr	r0, .L263+208
 4297 0778 0010A0E3 		mov	r1, #0
 4298 077c 04219FE5 		ldr	r2, .L263+212
 4299 0780 0030A0E3 		mov	r3, #0
 4300 0784 FEFFFFEB 		bl	_txe_timer_create
1648:../CX3RDKOV5640.c **** #endif
1649:../CX3RDKOV5640.c **** 
1650:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rFirmware Version: %d.%d.%d.%d",MajorVersion,MinorVersion,SubVersion,Su
 4301              		.loc 1 1650 0
 4302 0788 8530A0E3 		mov	r3, #133
 4303 078c 00308DE5 		str	r3, [sp]
 4304 0790 F4309FE5 		ldr	r3, .L263+216
 4305 0794 04308DE5 		str	r3, [sp, #4]
 4306 0798 0400A0E3 		mov	r0, #4
 4307 079c EC109FE5 		ldr	r1, .L263+220
 4308 07a0 0120A0E3 		mov	r2, #1
 4309 07a4 0330A0E3 		mov	r3, #3
 4310 07a8 FEFFFFEB 		bl	CyU3PDebugPrint
1651:../CX3RDKOV5640.c **** }
 4311              		.loc 1 1651 0
 4312 07ac 04D04BE2 		sub	sp, fp, #4
 4313              		@ sp needed
 4314 07b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4315              	.L264:
 4316              		.align	2
 4317              	.L263:
 4318 07b4 C4020000 		.word	.LC19
 4319 07b8 E4020000 		.word	.LC20
 4320 07bc 04030000 		.word	.LC21
 4321 07c0 24030000 		.word	.LC22
 4322 07c4 00000000 		.word	esUVCUvcApplnUSBSetupCB
 4323 07c8 00000000 		.word	esUVCUvcApplnUSBEventCB
 4324 07cc 00000000 		.word	esUVCApplnLPMRqtCB
 4325 07d0 00000000 		.word	esUVCUSB30DeviceDscr
 4326 07d4 44030000 		.word	.LC23
 4327 07d8 00000000 		.word	esUVCUSB20DeviceDscr
 4328 07dc 6C030000 		.word	.LC24
 4329 07e0 00000000 		.word	esUVCUSBBOSDscr
 4330 07e4 94030000 		.word	.LC25
 4331 07e8 00000000 		.word	esUVCUSBDeviceQualDscr
 4332 07ec B8030000 		.word	.LC26
 4333 07f0 00000000 		.word	esUVCUSBSSConfigDscr
 4334 07f4 E0030000 		.word	.LC27
 4335 07f8 00000000 		.word	esUVCUSBHSConfigDscr
 4336 07fc 08040000 		.word	.LC28
 4337 0800 00000000 		.word	esUVCUSBFSConfigDscr
 4338 0804 30040000 		.word	.LC29
 4339 0808 00000000 		.word	esUVCUSBStringLangIDDscr
 4340 080c 58040000 		.word	.LC30
 4341 0810 00000000 		.word	esUVCUSBManufactureDscr
 4342 0814 80040000 		.word	.LC31
 4343 0818 00000000 		.word	esUVCUSBProductDscr
 4344 081c A8040000 		.word	.LC32
 4345 0820 00000000 		.word	esUVCUSBConfigSSDscr
 4346 0824 D0040000 		.word	.LC33
 4347 0828 00000000 		.word	esUVCUSBConfigHSDscr
 4348 082c F8040000 		.word	.LC34
 4349 0830 00000000 		.word	esUVCUSBConfigFSDscr
 4350 0834 20050000 		.word	.LC35
 4351 0838 48050000 		.word	.LC36
 4352 083c 6C050000 		.word	.LC37
 4353 0840 00000000 		.word	ES_UVC_STREAM_BUF_SIZE
 4354 0844 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 4355 0848 00000000 		.word	ES_UVC_STREAM_BUF_COUNT
 4356 084c F05F0000 		.word	24560
 4357 0850 9C050000 		.word	.LC38
 4358 0854 01010000 		.word	257
 4359 0858 03030000 		.word	771
 4360 085c 00000000 		.word	esUVCUvcAppDmaCallback
 4361 0860 00000000 		.word	glChHandleUVCStream
 4362 0864 CC050000 		.word	.LC39
 4363 0868 F8050000 		.word	.LC40
 4364 086c 20060000 		.word	.LC41
 4365 0870 00000000 		.word	esUVCGpifCB
 4366 0874 48060000 		.word	.LC42
 4367 0878 6C060000 		.word	.LC43
 4368 087c 00000000 		.word	cfgUvcVgaNoMclk
 4369 0880 90060000 		.word	.LC44
 4370 0884 00000000 		.word	UvcTimer
 4371 0888 00000000 		.word	UvcAppProgressTimer
 4372 088c 35010000 		.word	309
 4373 0890 BC060000 		.word	.LC45
 4374              		.cfi_endproc
 4375              	.LFE11:
 4377              		.section	.rodata
 4378              		.align	2
 4379              	.LC46:
 4380 06dc 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartInit failed"
 4380      55564355 
 4380      76634170 
 4380      706C6E44 
 4380      65627567 
 4381 0709 20457272 		.ascii	" Error = 0x%x\000"
 4381      6F72203D 
 4381      20307825 
 4381      7800
 4382 0717 00       		.align	2
 4383              	.LC47:
 4384 0718 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartSetConfig f"
 4384      55564355 
 4384      76634170 
 4384      706C6E44 
 4384      65627567 
 4385 0745 61696C65 		.ascii	"ailed Error = 0x%x\000"
 4385      64204572 
 4385      726F7220 
 4385      3D203078 
 4385      257800
 4386              		.align	2
 4387              	.LC48:
 4388 0758 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartTxSetBlockX"
 4388      55564355 
 4388      76634170 
 4388      706C6E44 
 4388      65627567 
 4389 0785 66657220 		.ascii	"fer failed Error = 0x%x\000"
 4389      6661696C 
 4389      65642045 
 4389      72726F72 
 4389      203D2030 
 4390 079d 000000   		.align	2
 4391              	.LC49:
 4392 07a0 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PDebugInit faile"
 4392      55564355 
 4392      76634170 
 4392      706C6E44 
 4392      65627567 
 4393 07cd 64204572 		.ascii	"d Error = 0x%x\000"
 4393      726F7220 
 4393      3D203078 
 4393      257800
 4394              		.section	.text.esUVCUvcApplnDebugInit,"ax",%progbits
 4395              		.align	2
 4396              		.global	esUVCUvcApplnDebugInit
 4398              	esUVCUvcApplnDebugInit:
 4399              	.LFB12:
1652:../CX3RDKOV5640.c **** 
1653:../CX3RDKOV5640.c **** /* This function initializes the debug module for the UVC application */
1654:../CX3RDKOV5640.c ****     void
1655:../CX3RDKOV5640.c **** esUVCUvcApplnDebugInit (void)
1656:../CX3RDKOV5640.c **** {
 4400              		.loc 1 1656 0
 4401              		.cfi_startproc
 4402              		@ args = 0, pretend = 0, frame = 32
 4403              		@ frame_needed = 1, uses_anonymous_args = 0
 4404 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4405              	.LCFI24:
 4406              		.cfi_def_cfa_offset 8
 4407              		.cfi_offset 11, -8
 4408              		.cfi_offset 14, -4
 4409 0004 04B08DE2 		add	fp, sp, #4
 4410              	.LCFI25:
 4411              		.cfi_def_cfa 11, 4
 4412 0008 20D04DE2 		sub	sp, sp, #32
1657:../CX3RDKOV5640.c ****     CyU3PUartConfig_t uartConfig;
1658:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4413              		.loc 1 1658 0
 4414 000c 0030A0E3 		mov	r3, #0
 4415 0010 08300BE5 		str	r3, [fp, #-8]
1659:../CX3RDKOV5640.c **** 
1660:../CX3RDKOV5640.c ****     /* Initialize the UART for printing debug messages */
1661:../CX3RDKOV5640.c ****     status = CyU3PUartInit();
 4416              		.loc 1 1661 0
 4417 0014 FEFFFFEB 		bl	CyU3PUartInit
 4418 0018 08000BE5 		str	r0, [fp, #-8]
1662:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4419              		.loc 1 1662 0
 4420 001c 08301BE5 		ldr	r3, [fp, #-8]
 4421 0020 000053E3 		cmp	r3, #0
 4422 0024 0300000A 		beq	.L266
1663:../CX3RDKOV5640.c ****     {
1664:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartInit failed Error = 0x%x",status);
 4423              		.loc 1 1664 0
 4424 0028 0400A0E3 		mov	r0, #4
 4425 002c D0109FE5 		ldr	r1, .L270
 4426 0030 08201BE5 		ldr	r2, [fp, #-8]
 4427 0034 FEFFFFEB 		bl	CyU3PDebugPrint
 4428              	.L266:
1665:../CX3RDKOV5640.c ****     }
1666:../CX3RDKOV5640.c **** 
1667:../CX3RDKOV5640.c ****     /* Set UART Configuration */
1668:../CX3RDKOV5640.c ****     uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 4429              		.loc 1 1668 0
 4430 0038 C8309FE5 		ldr	r3, .L270+4
 4431 003c 10300BE5 		str	r3, [fp, #-16]
1669:../CX3RDKOV5640.c ****     uartConfig.stopBit = CY_U3P_UART_ONE_STOP_BIT;
 4432              		.loc 1 1669 0
 4433 0040 0130A0E3 		mov	r3, #1
 4434 0044 0C304BE5 		strb	r3, [fp, #-12]
1670:../CX3RDKOV5640.c ****     uartConfig.parity = CY_U3P_UART_NO_PARITY;
 4435              		.loc 1 1670 0
 4436 0048 0030A0E3 		mov	r3, #0
 4437 004c 0B304BE5 		strb	r3, [fp, #-11]
1671:../CX3RDKOV5640.c ****     uartConfig.txEnable = CyTrue;
 4438              		.loc 1 1671 0
 4439 0050 0130A0E3 		mov	r3, #1
 4440 0054 20300BE5 		str	r3, [fp, #-32]
1672:../CX3RDKOV5640.c ****     uartConfig.rxEnable = CyFalse;
 4441              		.loc 1 1672 0
 4442 0058 0030A0E3 		mov	r3, #0
 4443 005c 1C300BE5 		str	r3, [fp, #-28]
1673:../CX3RDKOV5640.c ****     uartConfig.flowCtrl = CyFalse;
 4444              		.loc 1 1673 0
 4445 0060 0030A0E3 		mov	r3, #0
 4446 0064 18300BE5 		str	r3, [fp, #-24]
1674:../CX3RDKOV5640.c ****     uartConfig.isDma = CyTrue;
 4447              		.loc 1 1674 0
 4448 0068 0130A0E3 		mov	r3, #1
 4449 006c 14300BE5 		str	r3, [fp, #-20]
1675:../CX3RDKOV5640.c **** 
1676:../CX3RDKOV5640.c ****     /* Set the UART configuration */
1677:../CX3RDKOV5640.c ****     status = CyU3PUartSetConfig (&uartConfig, NULL);
 4450              		.loc 1 1677 0
 4451 0070 20304BE2 		sub	r3, fp, #32
 4452 0074 0300A0E1 		mov	r0, r3
 4453 0078 0010A0E3 		mov	r1, #0
 4454 007c FEFFFFEB 		bl	CyU3PUartSetConfig
 4455 0080 08000BE5 		str	r0, [fp, #-8]
1678:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4456              		.loc 1 1678 0
 4457 0084 08301BE5 		ldr	r3, [fp, #-8]
 4458 0088 000053E3 		cmp	r3, #0
 4459 008c 0300000A 		beq	.L267
1679:../CX3RDKOV5640.c ****     {
1680:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartSetConfig failed Error = 0x%x",sta
 4460              		.loc 1 1680 0
 4461 0090 0400A0E3 		mov	r0, #4
 4462 0094 70109FE5 		ldr	r1, .L270+8
 4463 0098 08201BE5 		ldr	r2, [fp, #-8]
 4464 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4465              	.L267:
1681:../CX3RDKOV5640.c ****     }
1682:../CX3RDKOV5640.c **** 
1683:../CX3RDKOV5640.c ****     /* Set the UART transfer */
1684:../CX3RDKOV5640.c ****     status = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
 4466              		.loc 1 1684 0
 4467 00a0 0000E0E3 		mvn	r0, #0
 4468 00a4 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 4469 00a8 08000BE5 		str	r0, [fp, #-8]
1685:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4470              		.loc 1 1685 0
 4471 00ac 08301BE5 		ldr	r3, [fp, #-8]
 4472 00b0 000053E3 		cmp	r3, #0
 4473 00b4 0300000A 		beq	.L268
1686:../CX3RDKOV5640.c ****     {
1687:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartTxSetBlockXfer failed Error = 0x%x
 4474              		.loc 1 1687 0
 4475 00b8 0400A0E3 		mov	r0, #4
 4476 00bc 4C109FE5 		ldr	r1, .L270+12
 4477 00c0 08201BE5 		ldr	r2, [fp, #-8]
 4478 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4479              	.L268:
1688:../CX3RDKOV5640.c ****     }
1689:../CX3RDKOV5640.c **** 
1690:../CX3RDKOV5640.c ****     /* Initialize the debug application */
1691:../CX3RDKOV5640.c ****     status = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 8);
 4480              		.loc 1 1691 0
 4481 00c8 0300A0E3 		mov	r0, #3
 4482 00cc 0810A0E3 		mov	r1, #8
 4483 00d0 FEFFFFEB 		bl	CyU3PDebugInit
 4484 00d4 08000BE5 		str	r0, [fp, #-8]
1692:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4485              		.loc 1 1692 0
 4486 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4487 00dc 000053E3 		cmp	r3, #0
 4488 00e0 0300000A 		beq	.L269
1693:../CX3RDKOV5640.c ****     {
1694:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PDebugInit failed Error = 0x%x",status)
 4489              		.loc 1 1694 0
 4490 00e4 0400A0E3 		mov	r0, #4
 4491 00e8 24109FE5 		ldr	r1, .L270+16
 4492 00ec 08201BE5 		ldr	r2, [fp, #-8]
 4493 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
 4494              	.L269:
1695:../CX3RDKOV5640.c ****     }
1696:../CX3RDKOV5640.c ****     CyU3PDebugPreamble (CyFalse);
 4495              		.loc 1 1696 0
 4496 00f4 0000A0E3 		mov	r0, #0
 4497 00f8 FEFFFFEB 		bl	CyU3PDebugPreamble
1697:../CX3RDKOV5640.c **** 
1698:../CX3RDKOV5640.c **** }
 4498              		.loc 1 1698 0
 4499 00fc 04D04BE2 		sub	sp, fp, #4
 4500              		@ sp needed
 4501 0100 0088BDE8 		ldmfd	sp!, {fp, pc}
 4502              	.L271:
 4503              		.align	2
 4504              	.L270:
 4505 0104 DC060000 		.word	.LC46
 4506 0108 00C20100 		.word	115200
 4507 010c 18070000 		.word	.LC47
 4508 0110 58070000 		.word	.LC48
 4509 0114 A0070000 		.word	.LC49
 4510              		.cfi_endproc
 4511              	.LFE12:
 4513              		.section	.text.esUVCUvcAppThread_Entry,"ax",%progbits
 4514              		.align	2
 4515              		.global	esUVCUvcAppThread_Entry
 4517              	esUVCUvcAppThread_Entry:
 4518              	.LFB13:
1699:../CX3RDKOV5640.c **** 
1700:../CX3RDKOV5640.c **** /* Entry function for the UVC application thread. */
1701:../CX3RDKOV5640.c ****     void
1702:../CX3RDKOV5640.c **** esUVCUvcAppThread_Entry (
1703:../CX3RDKOV5640.c ****         uint32_t input)
1704:../CX3RDKOV5640.c **** {
 4519              		.loc 1 1704 0
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 24
 4522              		@ frame_needed = 1, uses_anonymous_args = 0
 4523 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4524              	.LCFI26:
 4525              		.cfi_def_cfa_offset 8
 4526              		.cfi_offset 11, -8
 4527              		.cfi_offset 14, -4
 4528 0004 04B08DE2 		add	fp, sp, #4
 4529              	.LCFI27:
 4530              		.cfi_def_cfa 11, 4
 4531 0008 20D04DE2 		sub	sp, sp, #32
 4532 000c 18000BE5 		str	r0, [fp, #-24]
1705:../CX3RDKOV5640.c ****     uint16_t wakeReason;
1706:../CX3RDKOV5640.c ****     uint32_t eventFlag;
1707:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status;
1708:../CX3RDKOV5640.c **** 
1709:../CX3RDKOV5640.c ****     /* Initialize the Debug Module */
1710:../CX3RDKOV5640.c ****     esUVCUvcApplnDebugInit();
 4533              		.loc 1 1710 0
 4534 0010 FEFFFFEB 		bl	esUVCUvcApplnDebugInit
1711:../CX3RDKOV5640.c **** 
1712:../CX3RDKOV5640.c ****     /* Initialize the UVC Application */
1713:../CX3RDKOV5640.c ****     esUVCUvcApplnInit();
 4535              		.loc 1 1713 0
 4536 0014 FEFFFFEB 		bl	esUVCUvcApplnInit
 4537              	.L278:
1714:../CX3RDKOV5640.c **** 
1715:../CX3RDKOV5640.c ****     for (;;)
1716:../CX3RDKOV5640.c ****     {
1717:../CX3RDKOV5640.c ****         CyU3PEventGet (&glTimerEvent,ES_USB_SUSP_EVENT_FLAG|ES_TIMER_RESET_EVENT, CYU3P_EVENT_OR_CL
 4538              		.loc 1 1717 0
 4539 0018 10304BE2 		sub	r3, fp, #16
 4540 001c 0020E0E3 		mvn	r2, #0
 4541 0020 00208DE5 		str	r2, [sp]
 4542 0024 C0009FE5 		ldr	r0, .L280
 4543 0028 3010A0E3 		mov	r1, #48
 4544 002c 0120A0E3 		mov	r2, #1
 4545 0030 FEFFFFEB 		bl	_txe_event_flags_get
1718:../CX3RDKOV5640.c **** 
1719:../CX3RDKOV5640.c ****         /* Handle TimerReset Event*/
1720:../CX3RDKOV5640.c ****         if( eventFlag & ES_TIMER_RESET_EVENT)
 4546              		.loc 1 1720 0
 4547 0034 10301BE5 		ldr	r3, [fp, #-16]
 4548 0038 103003E2 		and	r3, r3, #16
 4549 003c 000053E3 		cmp	r3, #0
 4550 0040 1400000A 		beq	.L273
1721:../CX3RDKOV5640.c ****         {
1722:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 4551              		.loc 1 1722 0
 4552 0044 A4309FE5 		ldr	r3, .L280+4
 4553 0048 003093E5 		ldr	r3, [r3]
 4554 004c 000053E3 		cmp	r3, #0
 4555 0050 0300000A 		beq	.L274
1723:../CX3RDKOV5640.c ****             {
1724:../CX3RDKOV5640.c ****             	glIsClearFeature = CyFalse;
 4556              		.loc 1 1724 0
 4557 0054 98309FE5 		ldr	r3, .L280+8
 4558 0058 0020A0E3 		mov	r2, #0
 4559 005c 002083E5 		str	r2, [r3]
1725:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop();
 4560              		.loc 1 1725 0
 4561 0060 FEFFFFEB 		bl	esUVCUvcApplnStop
 4562              	.L274:
1726:../CX3RDKOV5640.c ****             }
1727:../CX3RDKOV5640.c ****             if(glPreviewStarted == CyTrue)
 4563              		.loc 1 1727 0
 4564 0064 8C309FE5 		ldr	r3, .L280+12
 4565 0068 003093E5 		ldr	r3, [r3]
 4566 006c 010053E3 		cmp	r3, #1
 4567 0070 0400001A 		bne	.L275
1728:../CX3RDKOV5640.c ****             {
1729:../CX3RDKOV5640.c ****             	//TODO Change this function with "Sensor Specific" function to write the sensor settin
1730:../CX3RDKOV5640.c ****             	esSetCameraResolution(glFrameIndexToSet);
 4568              		.loc 1 1730 0
 4569 0074 80309FE5 		ldr	r3, .L280+16
 4570 0078 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4571 007c 0300A0E1 		mov	r0, r3
 4572 0080 FEFFFFEB 		bl	esSetCameraResolution
1731:../CX3RDKOV5640.c ****             	esUVCUvcApplnStart();
 4573              		.loc 1 1731 0
 4574 0084 FEFFFFEB 		bl	esUVCUvcApplnStart
 4575              	.L275:
1732:../CX3RDKOV5640.c ****             }
1733:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1734:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 4576              		.loc 1 1734 0
 4577 0088 70009FE5 		ldr	r0, .L280+20
 4578 008c 7D1FA0E3 		mov	r1, #500
 4579 0090 0020A0E3 		mov	r2, #0
 4580 0094 FEFFFFEB 		bl	_txe_timer_change
 4581              	.L273:
1735:../CX3RDKOV5640.c **** #endif
1736:../CX3RDKOV5640.c ****         }
1737:../CX3RDKOV5640.c ****         /* Handle Suspend Event*/
1738:../CX3RDKOV5640.c ****         if(eventFlag & ES_USB_SUSP_EVENT_FLAG)
 4582              		.loc 1 1738 0
 4583 0098 10301BE5 		ldr	r3, [fp, #-16]
 4584 009c 203003E2 		and	r3, r3, #32
 4585 00a0 000053E3 		cmp	r3, #0
 4586 00a4 0F00000A 		beq	.L276
1739:../CX3RDKOV5640.c ****         {
1740:../CX3RDKOV5640.c ****             /* Place CX3 in Low Power Suspend mode, with USB bus activity as the wakeup source. */
1741:../CX3RDKOV5640.c ****             CyU3PMipicsiSleep();
 4587              		.loc 1 1741 0
 4588 00a8 FEFFFFEB 		bl	CyU3PMipicsiSleep
1742:../CX3RDKOV5640.c ****             //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the 
1743:../CX3RDKOV5640.c ****             esCamera_Power_Down();
 4589              		.loc 1 1743 0
 4590 00ac FEFFFFEB 		bl	esCamera_Power_Down
1744:../CX3RDKOV5640.c **** 
1745:../CX3RDKOV5640.c ****             status = CyU3PSysEnterSuspendMode (CY_U3P_SYS_USB_BUS_ACTVTY_WAKEUP_SRC, 0, &wakeReason
 4591              		.loc 1 1745 0
 4592 00b0 0A304BE2 		sub	r3, fp, #10
 4593 00b4 0800A0E3 		mov	r0, #8
 4594 00b8 0010A0E3 		mov	r1, #0
 4595 00bc 0320A0E1 		mov	r2, r3
 4596 00c0 FEFFFFEB 		bl	CyU3PSysEnterSuspendMode
 4597 00c4 08000BE5 		str	r0, [fp, #-8]
1746:../CX3RDKOV5640.c ****             if(glMipiActive)
 4598              		.loc 1 1746 0
 4599 00c8 34309FE5 		ldr	r3, .L280+24
 4600 00cc 003093E5 		ldr	r3, [r3]
 4601 00d0 000053E3 		cmp	r3, #0
 4602 00d4 0200000A 		beq	.L277
1747:../CX3RDKOV5640.c ****             {
1748:../CX3RDKOV5640.c ****                 CyU3PMipicsiWakeup();
 4603              		.loc 1 1748 0
 4604 00d8 FEFFFFEB 		bl	CyU3PMipicsiWakeup
1749:../CX3RDKOV5640.c ****                 //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the 
1750:../CX3RDKOV5640.c ****                 esCamera_Power_Up();
 4605              		.loc 1 1750 0
 4606 00dc FEFFFFEB 		bl	esCamera_Power_Up
1751:../CX3RDKOV5640.c ****             }
1752:../CX3RDKOV5640.c ****             continue;
 4607              		.loc 1 1752 0
 4608 00e0 FFFFFFEA 		b	.L279
 4609              	.L277:
 4610              	.L279:
 4611 00e4 0000A0E1 		mov	r0, r0	@ nop
 4612              	.L276:
1753:../CX3RDKOV5640.c ****         }
1754:../CX3RDKOV5640.c ****     } /* End of for(;;) */
 4613              		.loc 1 1754 0
 4614 00e8 CAFFFFEA 		b	.L278
 4615              	.L281:
 4616              		.align	2
 4617              	.L280:
 4618 00ec 00000000 		.word	glTimerEvent
 4619 00f0 00000000 		.word	glIsApplnActive
 4620 00f4 00000000 		.word	glIsClearFeature
 4621 00f8 00000000 		.word	glPreviewStarted
 4622 00fc 00000000 		.word	glFrameIndexToSet
 4623 0100 00000000 		.word	UvcTimer
 4624 0104 00000000 		.word	glMipiActive
 4625              		.cfi_endproc
 4626              	.LFE13:
 4628              		.section	.rodata
 4629              		.align	2
 4630              	.LC50:
 4631 07dc 33303A55 		.ascii	"30:UVC_app_thread\000"
 4631      56435F61 
 4631      70705F74 
 4631      68726561 
 4631      6400
 4632 07ee 0000     		.section	.text.CyFxApplicationDefine,"ax",%progbits
 4633              		.align	2
 4634              		.global	CyFxApplicationDefine
 4636              	CyFxApplicationDefine:
 4637              	.LFB14:
1755:../CX3RDKOV5640.c **** }
1756:../CX3RDKOV5640.c **** 
1757:../CX3RDKOV5640.c **** 
1758:../CX3RDKOV5640.c **** /* Application define function which creates the threads. */
1759:../CX3RDKOV5640.c ****     void
1760:../CX3RDKOV5640.c **** CyFxApplicationDefine (
1761:../CX3RDKOV5640.c ****         void)
1762:../CX3RDKOV5640.c **** {
 4638              		.loc 1 1762 0
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 8
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4643              	.LCFI28:
 4644              		.cfi_def_cfa_offset 8
 4645              		.cfi_offset 11, -8
 4646              		.cfi_offset 14, -4
 4647 0004 04B08DE2 		add	fp, sp, #4
 4648              	.LCFI29:
 4649              		.cfi_def_cfa 11, 4
 4650 0008 28D04DE2 		sub	sp, sp, #40
1763:../CX3RDKOV5640.c ****     void *ptr = NULL;
 4651              		.loc 1 1763 0
 4652 000c 0030A0E3 		mov	r3, #0
 4653 0010 08300BE5 		str	r3, [fp, #-8]
1764:../CX3RDKOV5640.c ****     uint32_t retThrdCreate = CY_U3P_SUCCESS;
 4654              		.loc 1 1764 0
 4655 0014 0030A0E3 		mov	r3, #0
 4656 0018 0C300BE5 		str	r3, [fp, #-12]
1765:../CX3RDKOV5640.c **** 
1766:../CX3RDKOV5640.c ****     /* Allocate the memory for the thread and create the thread */
1767:../CX3RDKOV5640.c ****     ptr = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
 4657              		.loc 1 1767 0
 4658 001c 010AA0E3 		mov	r0, #4096
 4659 0020 FEFFFFEB 		bl	CyU3PMemAlloc
 4660 0024 08000BE5 		str	r0, [fp, #-8]
1768:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
 4661              		.loc 1 1768 0
 4662 0028 08301BE5 		ldr	r3, [fp, #-8]
 4663 002c 00308DE5 		str	r3, [sp]
 4664 0030 013AA0E3 		mov	r3, #4096
 4665 0034 04308DE5 		str	r3, [sp, #4]
 4666 0038 0830A0E3 		mov	r3, #8
 4667 003c 08308DE5 		str	r3, [sp, #8]
 4668 0040 0830A0E3 		mov	r3, #8
 4669 0044 0C308DE5 		str	r3, [sp, #12]
 4670 0048 0030A0E3 		mov	r3, #0
 4671 004c 10308DE5 		str	r3, [sp, #16]
 4672 0050 0130A0E3 		mov	r3, #1
 4673 0054 14308DE5 		str	r3, [sp, #20]
 4674 0058 A830A0E3 		mov	r3, #168
 4675 005c 18308DE5 		str	r3, [sp, #24]
 4676 0060 4C009FE5 		ldr	r0, .L287
 4677 0064 4C109FE5 		ldr	r1, .L287+4
 4678 0068 4C209FE5 		ldr	r2, .L287+8
 4679 006c 0030A0E3 		mov	r3, #0
 4680 0070 FEFFFFEB 		bl	_txe_thread_create
 4681 0074 0C000BE5 		str	r0, [fp, #-12]
1769:../CX3RDKOV5640.c ****             "30:UVC_app_thread",         /* Thread Id and name */
1770:../CX3RDKOV5640.c ****             esUVCUvcAppThread_Entry,          /* UVC Application Thread Entry function */
1771:../CX3RDKOV5640.c ****             0,                           /* No input parameter to thread */
1772:../CX3RDKOV5640.c ****             ptr,                         /* Pointer to the allocated thread stack */
1773:../CX3RDKOV5640.c ****             UVC_APP_THREAD_STACK,        /* UVC Application Thread stack size */
1774:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* UVC Application Thread priority */
1775:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* Pre-emption threshold */
1776:../CX3RDKOV5640.c ****             CYU3P_NO_TIME_SLICE,         /* No time slice for the application thread */
1777:../CX3RDKOV5640.c ****             CYU3P_AUTO_START             /* Start the Thread immediately */
1778:../CX3RDKOV5640.c ****             );
1779:../CX3RDKOV5640.c **** 
1780:../CX3RDKOV5640.c ****     /* Check the return code */
1781:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4682              		.loc 1 1781 0
 4683 0078 0C301BE5 		ldr	r3, [fp, #-12]
 4684 007c 000053E3 		cmp	r3, #0
 4685 0080 0000000A 		beq	.L283
 4686              	.L284:
1782:../CX3RDKOV5640.c ****     {
1783:../CX3RDKOV5640.c ****         /* Thread Creation failed with the error code retThrdCreate */
1784:../CX3RDKOV5640.c **** 
1785:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1786:../CX3RDKOV5640.c **** 
1787:../CX3RDKOV5640.c ****         /* Application cannot continue */
1788:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1789:../CX3RDKOV5640.c ****         while(1);
 4687              		.loc 1 1789 0 discriminator 1
 4688 0084 FEFFFFEA 		b	.L284
 4689              	.L283:
1790:../CX3RDKOV5640.c ****     }
1791:../CX3RDKOV5640.c **** 
1792:../CX3RDKOV5640.c ****     /* Create GPIO application event group */
1793:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PEventCreate(&glTimerEvent);
 4690              		.loc 1 1793 0
 4691 0088 30009FE5 		ldr	r0, .L287+12
 4692 008c 0010A0E3 		mov	r1, #0
 4693 0090 2820A0E3 		mov	r2, #40
 4694 0094 FEFFFFEB 		bl	_txe_event_flags_create
 4695 0098 0C000BE5 		str	r0, [fp, #-12]
1794:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4696              		.loc 1 1794 0
 4697 009c 0C301BE5 		ldr	r3, [fp, #-12]
 4698 00a0 000053E3 		cmp	r3, #0
 4699 00a4 0000000A 		beq	.L282
 4700              	.L286:
1795:../CX3RDKOV5640.c ****     {
1796:../CX3RDKOV5640.c ****         /* Event group creation failed with the error code retThrdCreate */
1797:../CX3RDKOV5640.c **** 
1798:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1799:../CX3RDKOV5640.c **** 
1800:../CX3RDKOV5640.c ****         /* Application cannot continue */
1801:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1802:../CX3RDKOV5640.c ****         while(1);
 4701              		.loc 1 1802 0 discriminator 1
 4702 00a8 FEFFFFEA 		b	.L286
 4703              	.L282:
1803:../CX3RDKOV5640.c ****     }
1804:../CX3RDKOV5640.c **** }
 4704              		.loc 1 1804 0
 4705 00ac 04D04BE2 		sub	sp, fp, #4
 4706              		@ sp needed
 4707 00b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4708              	.L288:
 4709              		.align	2
 4710              	.L287:
 4711 00b4 00000000 		.word	uvcAppThread
 4712 00b8 DC070000 		.word	.LC50
 4713 00bc 00000000 		.word	esUVCUvcAppThread_Entry
 4714 00c0 00000000 		.word	glTimerEvent
 4715              		.cfi_endproc
 4716              	.LFE14:
 4718              		.section	.text.main,"ax",%progbits
 4719              		.align	2
 4720              		.global	main
 4722              	main:
 4723              	.LFB15:
1805:../CX3RDKOV5640.c **** 
1806:../CX3RDKOV5640.c **** /*
1807:../CX3RDKOV5640.c ****  * Main function
1808:../CX3RDKOV5640.c ****  */
1809:../CX3RDKOV5640.c **** 
1810:../CX3RDKOV5640.c ****     int
1811:../CX3RDKOV5640.c **** main (void)
1812:../CX3RDKOV5640.c **** {
 4724              		.loc 1 1812 0
 4725              		.cfi_startproc
 4726              		@ args = 0, pretend = 0, frame = 48
 4727              		@ frame_needed = 1, uses_anonymous_args = 0
 4728 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4729              	.LCFI30:
 4730              		.cfi_def_cfa_offset 8
 4731              		.cfi_offset 11, -8
 4732              		.cfi_offset 14, -4
 4733 0004 04B08DE2 		add	fp, sp, #4
 4734              	.LCFI31:
 4735              		.cfi_def_cfa 11, 4
 4736 0008 30D04DE2 		sub	sp, sp, #48
1813:../CX3RDKOV5640.c ****     CyU3PIoMatrixConfig_t io_cfg;
1814:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4737              		.loc 1 1814 0
 4738 000c 0030A0E3 		mov	r3, #0
 4739 0010 08300BE5 		str	r3, [fp, #-8]
1815:../CX3RDKOV5640.c **** 
1816:../CX3RDKOV5640.c ****     /* Initialize the device */
1817:../CX3RDKOV5640.c ****     status = CyU3PDeviceInit (NULL);
 4740              		.loc 1 1817 0
 4741 0014 0000A0E3 		mov	r0, #0
 4742 0018 FEFFFFEB 		bl	CyU3PDeviceInit
 4743 001c 08000BE5 		str	r0, [fp, #-8]
1818:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4744              		.loc 1 1818 0
 4745 0020 08301BE5 		ldr	r3, [fp, #-8]
 4746 0024 000053E3 		cmp	r3, #0
 4747 0028 0000000A 		beq	.L290
1819:../CX3RDKOV5640.c ****     {
1820:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4748              		.loc 1 1820 0
 4749 002c 270000EA 		b	.L291
 4750              	.L290:
1821:../CX3RDKOV5640.c ****     }
1822:../CX3RDKOV5640.c **** 
1823:../CX3RDKOV5640.c ****     /* Initialize the caches. Enable instruction cache and keep data cache disabled.
1824:../CX3RDKOV5640.c ****      * The data cache is useful only when there is a large amount of CPU based memory
1825:../CX3RDKOV5640.c ****      * accesses. When used in simple cases, it can decrease performance due to large
1826:../CX3RDKOV5640.c ****      * number of cache flushes and cleans and also it adds to the complexity of the
1827:../CX3RDKOV5640.c ****      * code. */
1828:../CX3RDKOV5640.c ****     status = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
 4751              		.loc 1 1828 0
 4752 0030 0100A0E3 		mov	r0, #1
 4753 0034 0010A0E3 		mov	r1, #0
 4754 0038 0020A0E3 		mov	r2, #0
 4755 003c FEFFFFEB 		bl	CyU3PDeviceCacheControl
 4756 0040 08000BE5 		str	r0, [fp, #-8]
1829:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4757              		.loc 1 1829 0
 4758 0044 08301BE5 		ldr	r3, [fp, #-8]
 4759 0048 000053E3 		cmp	r3, #0
 4760 004c 0000000A 		beq	.L292
1830:../CX3RDKOV5640.c ****     {
1831:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4761              		.loc 1 1831 0
 4762 0050 1E0000EA 		b	.L291
 4763              	.L292:
1832:../CX3RDKOV5640.c ****     }
1833:../CX3RDKOV5640.c **** 
1834:../CX3RDKOV5640.c ****     /* Configure the IO matrix for the device.*/
1835:../CX3RDKOV5640.c ****     io_cfg.isDQ32Bit = CyFalse;
 4764              		.loc 1 1835 0
 4765 0054 0030A0E3 		mov	r3, #0
 4766 0058 30300BE5 		str	r3, [fp, #-48]
1836:../CX3RDKOV5640.c **** 
1837:../CX3RDKOV5640.c ****     io_cfg.useUart   = CyTrue;
 4767              		.loc 1 1837 0
 4768 005c 0130A0E3 		mov	r3, #1
 4769 0060 2C300BE5 		str	r3, [fp, #-44]
1838:../CX3RDKOV5640.c ****     io_cfg.useI2C    = CyTrue;
 4770              		.loc 1 1838 0
 4771 0064 0130A0E3 		mov	r3, #1
 4772 0068 28300BE5 		str	r3, [fp, #-40]
1839:../CX3RDKOV5640.c ****     io_cfg.useI2S    = CyFalse;
 4773              		.loc 1 1839 0
 4774 006c 0030A0E3 		mov	r3, #0
 4775 0070 24300BE5 		str	r3, [fp, #-36]
1840:../CX3RDKOV5640.c ****     io_cfg.useSpi    = CyFalse;
 4776              		.loc 1 1840 0
 4777 0074 0030A0E3 		mov	r3, #0
 4778 0078 20300BE5 		str	r3, [fp, #-32]
1841:../CX3RDKOV5640.c ****     io_cfg.lppMode   = CY_U3P_IO_MATRIX_LPP_DEFAULT;
 4779              		.loc 1 1841 0
 4780 007c 0030A0E3 		mov	r3, #0
 4781 0080 1A304BE5 		strb	r3, [fp, #-26]
1842:../CX3RDKOV5640.c ****     /* No GPIOs are enabled. */
1843:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[0]  = 0;
 4782              		.loc 1 1843 0
 4783 0084 0030A0E3 		mov	r3, #0
 4784 0088 18300BE5 		str	r3, [fp, #-24]
1844:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[1]  = 0;
 4785              		.loc 1 1844 0
 4786 008c 0030A0E3 		mov	r3, #0
 4787 0090 14300BE5 		str	r3, [fp, #-20]
1845:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[0] = 0;
 4788              		.loc 1 1845 0
 4789 0094 0030A0E3 		mov	r3, #0
 4790 0098 10300BE5 		str	r3, [fp, #-16]
1846:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[1] = 0;
 4791              		.loc 1 1846 0
 4792 009c 0030A0E3 		mov	r3, #0
 4793 00a0 0C300BE5 		str	r3, [fp, #-12]
1847:../CX3RDKOV5640.c ****     status = CyU3PDeviceConfigureIOMatrix (&io_cfg);
 4794              		.loc 1 1847 0
 4795 00a4 30304BE2 		sub	r3, fp, #48
 4796 00a8 0300A0E1 		mov	r0, r3
 4797 00ac FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
 4798 00b0 08000BE5 		str	r0, [fp, #-8]
1848:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4799              		.loc 1 1848 0
 4800 00b4 08301BE5 		ldr	r3, [fp, #-8]
 4801 00b8 000053E3 		cmp	r3, #0
 4802 00bc 0000000A 		beq	.L293
1849:../CX3RDKOV5640.c ****     {
1850:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 4803              		.loc 1 1850 0
 4804 00c0 020000EA 		b	.L291
 4805              	.L293:
1851:../CX3RDKOV5640.c ****     }
1852:../CX3RDKOV5640.c **** 
1853:../CX3RDKOV5640.c ****     /* This is a non returnable call for initializing the RTOS kernel */
1854:../CX3RDKOV5640.c ****     CyU3PKernelEntry ();
 4806              		.loc 1 1854 0
 4807 00c4 FEFFFFEB 		bl	_tx_initialize_kernel_enter
1855:../CX3RDKOV5640.c **** 
1856:../CX3RDKOV5640.c ****     /* Dummy return to make the compiler happy */
1857:../CX3RDKOV5640.c ****     return 0;
 4808              		.loc 1 1857 0
 4809 00c8 0030A0E3 		mov	r3, #0
 4810 00cc 000000EA 		b	.L295
 4811              	.L291:
1858:../CX3RDKOV5640.c **** 
1859:../CX3RDKOV5640.c **** handle_fatal_error:
1860:../CX3RDKOV5640.c ****     /* Cannot recover from this error. */
1861:../CX3RDKOV5640.c ****     while (1);
 4812              		.loc 1 1861 0 discriminator 1
 4813 00d0 FEFFFFEA 		b	.L291
 4814              	.L295:
1862:../CX3RDKOV5640.c **** }
 4815              		.loc 1 1862 0
 4816 00d4 0300A0E1 		mov	r0, r3
 4817 00d8 04D04BE2 		sub	sp, fp, #4
 4818              		@ sp needed
 4819 00dc 0088BDE8 		ldmfd	sp!, {fp, pc}
 4820              		.cfi_endproc
 4821              	.LFE15:
 4823              		.text
 4824              	.Letext0:
 4825              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 4826              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4827              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 4828              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 4829              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 4830              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4831              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4832              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 4833              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4834              		.file 11 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4835              		.file 12 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4836              		.file 13 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 4837              		.file 14 "..\\..\\CX3OV5640LIB\\INC/CX3OV5640Lib.h"
 4838              		.file 15 "../CX3RDKOV5640.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CX3RDKOV5640.c
                            *COM*:00000004 gl32SetControl
                            *COM*:00000002 gl16SetControl
                            *COM*:000000a8 uvcAppThread
                            *COM*:00000028 glTimerEvent
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:21     .bss.UvcTimer:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:24     .bss.UvcTimer:00000000 UvcTimer
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:27     .text.UvcAppProgressTimer:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:29     .text.UvcAppProgressTimer:00000000 UvcAppProgressTimer
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:58     .text.UvcAppProgressTimer:00000028 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:67     .bss.glDMATxCount:00000000 glDMATxCount
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:64     .bss.glDMATxCount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:74     .bss.glDmaDone:00000000 glDmaDone
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:71     .bss.glDmaDone:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:80     .bss.glActiveSocket:00000000 glActiveSocket
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:81     .bss.glActiveSocket:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:87     .data.doLpmDisable:00000000 doLpmDisable
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:84     .data.doLpmDisable:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:94     .bss.glHitFV:00000000 glHitFV
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:91     .bss.glHitFV:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:101    .bss.glMipiActive:00000000 glMipiActive
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:98     .bss.glMipiActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:108    .bss.glIsClearFeature:00000000 glIsClearFeature
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:105    .bss.glIsClearFeature:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:115    .bss.glPreviewStarted:00000000 glPreviewStarted
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:112    .bss.glPreviewStarted:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:122    .data.glUVCHeader:00000000 glUVCHeader
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:119    .data.glUVCHeader:00000000 $d
                            *COM*:00000020 glCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:140    .data.glCurrentFrameIndex:00000000 glCurrentFrameIndex
                            *COM*:00000020 glStillCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:147    .data.glCurrentStillFrameIndex:00000000 glCurrentStillFrameIndex
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:153    .bss.glStillTriggerCtrl:00000000 glStillTriggerCtrl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:154    .bss.glStillTriggerCtrl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:159    .bss.glFrameIndexToSet:00000000 glFrameIndexToSet
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:160    .bss.glFrameIndexToSet:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:166    .bss.glStillCaptureStart:00000000 glStillCaptureStart
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:163    .bss.glStillCaptureStart:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:173    .bss.glStillCaptured:00000000 glStillCaptured
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:170    .bss.glStillCaptured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:179    .bss.glStillSkip:00000000 glStillSkip
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:180    .bss.glStillSkip:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:186    .bss.glIsApplnActive:00000000 glIsApplnActive
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:183    .bss.glIsApplnActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:193    .bss.glIsConfigured:00000000 glIsConfigured
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:190    .bss.glIsConfigured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:200    .bss.glIsStreamingStarted:00000000 glIsStreamingStarted
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:197    .bss.glIsStreamingStarted:00000000 $d
                            *COM*:000000e8 glChHandleUVCStream
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:208    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 ES_UVC_STREAM_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:205    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:215    .bss.ES_UVC_DATA_BUF_SIZE:00000000 ES_UVC_DATA_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:212    .bss.ES_UVC_DATA_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:221    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 ES_UVC_STREAM_BUF_COUNT
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:222    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:227    .data.g_IsAutoFocus:00000000 g_IsAutoFocus
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:233    .bss.glGet_Info:00000000 glGet_Info
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:234    .bss.glGet_Info:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:240    .bss.gl8GetControl:00000000 gl8GetControl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:237    .bss.gl8GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:247    .bss.gl8SetControl:00000000 gl8SetControl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:244    .bss.gl8SetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:254    .bss.gl16GetControl:00000000 gl16GetControl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:251    .bss.gl16GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:261    .bss.gl32GetControl:00000000 gl32GetControl
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:258    .bss.gl32GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:267    .bss.glcommitcount:00000000 glcommitcount
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:268    .bss.glcommitcount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:273    .data.glcheckframe:00000000 glcheckframe
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:276    .text.esUVCAppErrorHandler:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:279    .text.esUVCAppErrorHandler:00000000 esUVCAppErrorHandler
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:305    .text.esUVCUvcAddHeader:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:307    .text.esUVCUvcAddHeader:00000000 esUVCUvcAddHeader
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:358    .text.esUVCUvcAddHeader:00000074 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:363    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:370    .text.esUVCUvcApplnStart:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:373    .text.esUVCUvcApplnStart:00000000 esUVCUvcApplnStart
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:520    .text.esUVCUvcApplnStart:0000017c $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:542    .text.esUVCUvcApplnStop:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:545    .text.esUVCUvcApplnStop:00000000 esUVCUvcApplnStop
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:648    .text.esUVCUvcApplnStop:000000f8 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:667    .text.esUVCGpifCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:670    .text.esUVCGpifCB:00000000 esUVCGpifCB
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:742    .text.esUVCGpifCB:000000ac $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:749    .text.esUVCUvcAppDmaCallback:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:752    .text.esUVCUvcAppDmaCallback:00000000 esUVCUvcAppDmaCallback
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1059   .text.esUVCUvcAppDmaCallback:00000380 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1079   .text.esUVCUvcApplnUSBEventCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1081   .text.esUVCUvcApplnUSBEventCB:00000000 esUVCUvcApplnUSBEventCB
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1111   .text.esUVCUvcApplnUSBEventCB:0000003c $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1121   .text.esUVCUvcApplnUSBEventCB:0000005c $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1243   .text.esUVCUvcApplnUSBEventCB:00000198 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1254   .text.esUVCApplnLPMRqtCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1256   .text.esUVCApplnLPMRqtCB:00000000 esUVCApplnLPMRqtCB
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1301   .text.esSetCameraResolution:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1304   .text.esSetCameraResolution:00000000 esSetCameraResolution
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1475   .text.esSetCameraResolution:000001b8 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1517   .text.esUVCUvcApplnUSBSetupCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:1519   .text.esUVCUvcApplnUSBSetupCB:00000000 esUVCUvcApplnUSBSetupCB
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:3021   .text.esUVCUvcApplnUSBSetupCB:0000108c $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:3062   .text.esUVCUvcApplnUSBSetupCB:00001128 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:3615   .text.esUVCUvcApplnInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:3618   .text.esUVCUvcApplnInit:00000000 esUVCUvcApplnInit
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4318   .text.esUVCUvcApplnInit:000007b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4395   .text.esUVCUvcApplnDebugInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4398   .text.esUVCUvcApplnDebugInit:00000000 esUVCUvcApplnDebugInit
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4505   .text.esUVCUvcApplnDebugInit:00000104 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4514   .text.esUVCUvcAppThread_Entry:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4517   .text.esUVCUvcAppThread_Entry:00000000 esUVCUvcAppThread_Entry
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4618   .text.esUVCUvcAppThread_Entry:000000ec $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4633   .text.CyFxApplicationDefine:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4636   .text.CyFxApplicationDefine:00000000 CyFxApplicationDefine
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4711   .text.CyFxApplicationDefine:000000b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4719   .text.main:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccwYYeXo.s:4722   .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.29463082a45126943f020ea30bda05c8
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.219.8eb38badc3f446ace4f0fbbdc7b4e018
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.cyu3types.h.80.f5310e165127de2daf78c334a454267e
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.ec713094ff7b80200da61a1b94cca956
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.tx_port.h.95.54ef54ef950923016df123872c81f77f
                           .group:00000000 wm4.tx_api.h.90.d18ffa804751aa80b6d59c3d596c2234
                           .group:00000000 wm4.cyu3tx.h.61.421a5eac9b37f3e2677fcfe17ba1c9c3
                           .group:00000000 wm4.cyu3dma.h.569.521da17a880bb7dc9c063e240d18d9bc
                           .group:00000000 wm4.cyu3system.h.43.0fbd82548e591beefe95401c72410881
                           .group:00000000 wm4.cyu3usbconst.h.37.502980e110c2142a7316d50a53794397
                           .group:00000000 wm4.cyu3usb.h.302.ade7bb9b5b6e92c233eea1baf2851afa
                           .group:00000000 wm4.cyu3lpp.h.138.66435309bc2407b6684483dfed574450
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.cyu3utils.h.45.ea1b88089ccad3d50489f6f768ad8e9f
                           .group:00000000 wm4.cyu3pib.h.192.a1483c513c81c352d6719814a4b66283
                           .group:00000000 wm4.cyu3descriptor.h.104.486178ff96f7d84792762d8905519d09
                           .group:00000000 wm4.cyu3socket.h.153.0d077cd39632ba9c913ec648cfa0f9e9
                           .group:00000000 wm4.sock_regs.h.24.15d70ab2b2a99b01b4189217fc091bd3
                           .group:00000000 wm4.cyu3sib.h.59.b1cff9a75023363cc612aef2b2314b23
                           .group:00000000 wm4.cyu3gpif.h.52.b01ef1bece12652336136a0aaabab45b
                           .group:00000000 wm4.cyu3mipicsi.h.46.b99df5b141b2543db3c56d6e408e0c5e
                           .group:00000000 wm4.CX3OV5640Lib.h.18.ebed1e57f77d2633a42de60cae388313
                           .group:00000000 wm4.CX3RDKOV5640.h.34.16f03605a9abf281a0c637c9029be977

UNDEFINED SYMBOLS
_txe_event_flags_set
_tx_thread_sleep
CyU3PMemCopy
_txe_timer_deactivate
CyU3PUsbSetEpNak
CyFx3BusyWait
CyU3PUsbFlushEp
CyU3PDmaMultiChannelReset
CyU3PDebugPrint
CyU3PDmaMultiChannelSetXfer
CyU3PGpifSMControl
CyU3PGpifSMSwitch
CyU3PMipicsiWakeup
esCamera_Power_Up
esOV5640_SetAutofocus
CyU3PMipicsiSleep
esCamera_Power_Down
CyU3PUsbStall
CyU3PUsbLPMEnable
CyU3PDmaMultiChannelSetWrapUp
CyU3PUsbGetSpeed
CyU3PUsbLPMDisable
CyU3PUsbSetLinkPowerState
_txe_timer_activate
CyU3PDmaMultiChannelGetBuffer
CyU3PDmaMultiChannelCommitBuffer
_txe_timer_change
CyU3PMipicsiSetIntfParams
esOV5640_1080P_config
esOV5640_VGA_config
esOV5640_720P_config
esOV5640_5MP_config
esOV5640_VGA_HS_config
cfgUvc1080p30NoMclk
cfgUvcVga30NoMclk
cfgUvc720p60NoMclk
cfgUvc5Mp15NoMclk
CyU3PUsbAckSetup
CyU3PUsbSendEP0Data
CyU3PUsbGetEP0Data
esOV5640_GetBrightness
esOV5640_SetBrightness
esOV5640_GetAutoExposure
esOV5640_SetAutoExposure
esOV5640_GetContrast
esOV5640_SetContrast
esOV5640_GetExposure
esOV5640_SetExposure
esOV5640_GetHue
esOV5640_SetHue
esOV5640_GetManualfocus
esOV5640_SetManualfocus
esOV5640_GetSaturation
esOV5640_SetSaturation
glProbeCtrl
gl5MpProbeCtrl
gl720pProbeCtrl
glVga60ProbeCtrl
gl1080pProbeCtrl
glVga30ProbeCtrl
glStillProbeCtrl
esOV5640_GetSharpness
esOV5640_SetSharpness
esOV5640_GetAutofocus
esOV5640_GetWhiteBalance
esOV5640_SetWhiteBalance
esOV5640_GetAutoWhiteBalance
esOV5640_SetAutoWhiteBalance
CyU3PMipicsiInitializeI2c
CyU3PMipicsiInitializeGPIO
CyU3PMipicsiInitializePIB
CyU3PUsbStart
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterEventCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbSetDesc
CyU3PUsbVBattEnable
CyU3PUsbControlVBusDetect
esOV5640_Base_Config
esOV5640_Auto_Focus_Config
CyU3PConnectState
CyU3PSetEpConfig
CyU3PUsbEPSetBurstMode
CyU3PDmaMultiChannelCreate
CyU3PMipicsiGpifLoad
CyU3PGpifRegisterCallback
CyU3PGpifSMStart
CyU3PMipicsiInit
_txe_timer_create
esUVCUSB30DeviceDscr
esUVCUSB20DeviceDscr
esUVCUSBBOSDscr
esUVCUSBDeviceQualDscr
esUVCUSBSSConfigDscr
esUVCUSBHSConfigDscr
esUVCUSBFSConfigDscr
esUVCUSBStringLangIDDscr
esUVCUSBManufactureDscr
esUVCUSBProductDscr
esUVCUSBConfigSSDscr
esUVCUSBConfigHSDscr
esUVCUSBConfigFSDscr
cfgUvcVgaNoMclk
CyU3PUartInit
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
_txe_event_flags_get
CyU3PSysEnterSuspendMode
CyU3PMemAlloc
_txe_thread_create
_txe_event_flags_create
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
