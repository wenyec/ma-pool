   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"CX3RDKOV5640.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	gl32SetControl,4,4
  17              		.comm	gl16SetControl,2,2
  18              		.comm	uvcAppThread,168,4
  19              		.comm	glTimerEvent,40,4
  20              		.section	.bss.UvcTimer,"aw",%nobits
  21              		.align	2
  24              	UvcTimer:
  25 0000 00000000 		.space	44
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.UvcAppProgressTimer,"ax",%progbits
  27              		.align	2
  29              	UvcAppProgressTimer:
  30              	.LFB0:
  31              		.file 1 "../CX3RDKOV5640.c"
   1:../CX3RDKOV5640.c **** /*
   2:../CX3RDKOV5640.c ****  ## e-con Systems USB UVC Stack – See3CAMCX3RDK Platform
   3:../CX3RDKOV5640.c **** 
   4:../CX3RDKOV5640.c ****  ## source file : CX3RDKOV5640.c
   5:../CX3RDKOV5640.c ****  ## ===========================
   6:../CX3RDKOV5640.c ****  ##
   7:../CX3RDKOV5640.c ****  ##  Copyright E-Con Systems, 2013-2014,
   8:../CX3RDKOV5640.c ****  ##  All Rights Reserved
   9:../CX3RDKOV5640.c ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
  10:../CX3RDKOV5640.c ****  ##
  11:../CX3RDKOV5640.c ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  12:../CX3RDKOV5640.c ****  ##  PROPERTY OF ECON SYSTEMS
  13:../CX3RDKOV5640.c **** 
  14:../CX3RDKOV5640.c ****  ## www.e-consystems.com
  15:../CX3RDKOV5640.c ****  ##
  16:../CX3RDKOV5640.c ****  ##
  17:../CX3RDKOV5640.c ****  ## ===========================
  18:../CX3RDKOV5640.c **** */
  19:../CX3RDKOV5640.c **** 
  20:../CX3RDKOV5640.c **** #include "cyu3system.h"
  21:../CX3RDKOV5640.c **** #include "cyu3os.h"
  22:../CX3RDKOV5640.c **** #include "cyu3dma.h"
  23:../CX3RDKOV5640.c **** #include "cyu3error.h"
  24:../CX3RDKOV5640.c **** #include "cyu3usb.h"
  25:../CX3RDKOV5640.c **** #include "cyu3i2c.h"
  26:../CX3RDKOV5640.c **** #include "cyu3uart.h"
  27:../CX3RDKOV5640.c **** #include "cyu3gpio.h"
  28:../CX3RDKOV5640.c **** #include "cyu3utils.h"
  29:../CX3RDKOV5640.c **** #include "cyu3pib.h"
  30:../CX3RDKOV5640.c **** #include "cyu3socket.h"
  31:../CX3RDKOV5640.c **** #include "sock_regs.h"
  32:../CX3RDKOV5640.c **** #include "cyu3mipicsi.h"
  33:../CX3RDKOV5640.c **** 
  34:../CX3RDKOV5640.c **** #include "CX3OV5640Lib.h"
  35:../CX3RDKOV5640.c **** #include "CX3RDKOV5640.h"
  36:../CX3RDKOV5640.c **** 
  37:../CX3RDKOV5640.c **** /* Event generated on Timer overflow*/
  38:../CX3RDKOV5640.c **** #define ES_TIMER_RESET_EVENT		(1<<4)
  39:../CX3RDKOV5640.c **** 
  40:../CX3RDKOV5640.c **** /* Event generated on a USB Suspend Request*/
  41:../CX3RDKOV5640.c **** #define ES_USB_SUSP_EVENT_FLAG		(1<<5)
  42:../CX3RDKOV5640.c **** 
  43:../CX3RDKOV5640.c **** /* Firmware version*/
  44:../CX3RDKOV5640.c **** #define MajorVersion 				1
  45:../CX3RDKOV5640.c **** #define MinorVersion 				3
  46:../CX3RDKOV5640.c **** #define SubVersion					133
  47:../CX3RDKOV5640.c **** #define SubVersion1					309
  48:../CX3RDKOV5640.c **** #define RESET_TIMER_ENABLE 1
  49:../CX3RDKOV5640.c **** 
  50:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
  51:../CX3RDKOV5640.c **** #define TIMER_PERIOD	(500)
  52:../CX3RDKOV5640.c **** 
  53:../CX3RDKOV5640.c **** /****** for VIS debugging ******/
  54:../CX3RDKOV5640.c **** #define VISDebug
  55:../CX3RDKOV5640.c **** 
  56:../CX3RDKOV5640.c **** /*************End***************/
  57:../CX3RDKOV5640.c **** 
  58:../CX3RDKOV5640.c **** static CyU3PTimer        UvcTimer;
  59:../CX3RDKOV5640.c **** 
  60:../CX3RDKOV5640.c **** static void UvcAppProgressTimer (uint32_t arg)
  61:../CX3RDKOV5640.c **** {
  32              		.loc 1 61 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		stmfd	sp!, {fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              	.LCFI1:
  43              		.cfi_def_cfa 11, 4
  44 0008 08D04DE2 		sub	sp, sp, #8
  45 000c 08000BE5 		str	r0, [fp, #-8]
  62:../CX3RDKOV5640.c ****     /* This frame has taken too long to complete.
  63:../CX3RDKOV5640.c ****      * Abort it, so that the next frame can be started. */
  64:../CX3RDKOV5640.c ****     CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
  46              		.loc 1 64 0
  47 0010 10009FE5 		ldr	r0, .L2
  48 0014 1010A0E3 		mov	r1, #16
  49 0018 0020A0E3 		mov	r2, #0
  50 001c FEFFFFEB 		bl	_txe_event_flags_set
  65:../CX3RDKOV5640.c **** }
  51              		.loc 1 65 0
  52 0020 04D04BE2 		sub	sp, fp, #4
  53              		@ sp needed
  54 0024 0088BDE8 		ldmfd	sp!, {fp, pc}
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0028 00000000 		.word	glTimerEvent
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.global	glDMATxCount
  63              		.section	.bss.glDMATxCount,"aw",%nobits
  64              		.align	2
  67              	glDMATxCount:
  68 0000 00000000 		.space	4
  69              		.global	glDmaDone
  70              		.section	.bss.glDmaDone,"aw",%nobits
  71              		.align	2
  74              	glDmaDone:
  75 0000 00000000 		.space	4
  76              		.global	glActiveSocket
  77              		.section	.bss.glActiveSocket,"aw",%nobits
  80              	glActiveSocket:
  81 0000 00       		.space	1
  82              		.global	doLpmDisable
  83              		.section	.data.doLpmDisable,"aw",%progbits
  84              		.align	2
  87              	doLpmDisable:
  88 0000 01000000 		.word	1
  89              		.global	glHitFV
  90              		.section	.bss.glHitFV,"aw",%nobits
  91              		.align	2
  94              	glHitFV:
  95 0000 00000000 		.space	4
  96              		.global	glMipiActive
  97              		.section	.bss.glMipiActive,"aw",%nobits
  98              		.align	2
 101              	glMipiActive:
 102 0000 00000000 		.space	4
 103              		.global	glIsClearFeature
 104              		.section	.bss.glIsClearFeature,"aw",%nobits
 105              		.align	2
 108              	glIsClearFeature:
 109 0000 00000000 		.space	4
 110              		.global	glPreviewStarted
 111              		.section	.bss.glPreviewStarted,"aw",%nobits
 112              		.align	2
 115              	glPreviewStarted:
 116 0000 00000000 		.space	4
 117              		.global	glUVCHeader
 118              		.section	.data.glUVCHeader,"aw",%progbits
 119              		.align	2
 122              	glUVCHeader:
 123 0000 0C       		.byte	12
 124 0001 8C       		.byte	-116
 125 0002 00       		.byte	0
 126 0003 00       		.byte	0
 127 0004 00       		.byte	0
 128 0005 00       		.byte	0
 129 0006 00       		.byte	0
 130 0007 00       		.byte	0
 131 0008 00       		.byte	0
 132 0009 00       		.byte	0
 133 000a 00       		.byte	0
 134 000b 00       		.byte	0
 135              		.comm	glCommitCtrl,32,4
 136              		.global	glCurrentFrameIndex
 137              		.section	.data.glCurrentFrameIndex,"aw",%progbits
 140              	glCurrentFrameIndex:
 141 0000 01       		.byte	1
 142              		.comm	glStillCommitCtrl,32,4
 143              		.global	glCurrentStillFrameIndex
 144              		.section	.data.glCurrentStillFrameIndex,"aw",%progbits
 147              	glCurrentStillFrameIndex:
 148 0000 01       		.byte	1
 149              		.global	glStillTriggerCtrl
 150              		.section	.bss.glStillTriggerCtrl,"aw",%nobits
 153              	glStillTriggerCtrl:
 154 0000 00       		.space	1
 155              		.global	glFrameIndexToSet
 156              		.section	.bss.glFrameIndexToSet,"aw",%nobits
 159              	glFrameIndexToSet:
 160 0000 00       		.space	1
 161              		.global	glStillCaptureStart
 162              		.section	.bss.glStillCaptureStart,"aw",%nobits
 163              		.align	2
 166              	glStillCaptureStart:
 167 0000 00000000 		.space	4
 168              		.global	glStillCaptured
 169              		.section	.bss.glStillCaptured,"aw",%nobits
 170              		.align	2
 173              	glStillCaptured:
 174 0000 00000000 		.space	4
 175              		.global	glStillSkip
 176              		.section	.bss.glStillSkip,"aw",%nobits
 179              	glStillSkip:
 180 0000 00       		.space	1
 181              		.global	glIsApplnActive
 182              		.section	.bss.glIsApplnActive,"aw",%nobits
 183              		.align	2
 186              	glIsApplnActive:
 187 0000 00000000 		.space	4
 188              		.global	glIsConfigured
 189              		.section	.bss.glIsConfigured,"aw",%nobits
 190              		.align	2
 193              	glIsConfigured:
 194 0000 00000000 		.space	4
 195              		.global	glIsStreamingStarted
 196              		.section	.bss.glIsStreamingStarted,"aw",%nobits
 197              		.align	2
 200              	glIsStreamingStarted:
 201 0000 00000000 		.space	4
 202              		.comm	glChHandleUVCStream,232,4
 203              		.global	ES_UVC_STREAM_BUF_SIZE
 204              		.section	.bss.ES_UVC_STREAM_BUF_SIZE,"aw",%nobits
 205              		.align	1
 208              	ES_UVC_STREAM_BUF_SIZE:
 209 0000 0000     		.space	2
 210              		.global	ES_UVC_DATA_BUF_SIZE
 211              		.section	.bss.ES_UVC_DATA_BUF_SIZE,"aw",%nobits
 212              		.align	1
 215              	ES_UVC_DATA_BUF_SIZE:
 216 0000 0000     		.space	2
 217              		.global	ES_UVC_STREAM_BUF_COUNT
 218              		.section	.bss.ES_UVC_STREAM_BUF_COUNT,"aw",%nobits
 221              	ES_UVC_STREAM_BUF_COUNT:
 222 0000 00       		.space	1
 223              		.global	g_IsAutoFocus
 224              		.section	.data.g_IsAutoFocus,"aw",%progbits
 227              	g_IsAutoFocus:
 228 0000 01       		.byte	1
 229              		.global	glGet_Info
 230              		.section	.bss.glGet_Info,"aw",%nobits
 233              	glGet_Info:
 234 0000 00       		.space	1
 235              		.global	gl8GetControl
 236              		.section	.bss.gl8GetControl,"aw",%nobits
 237              		.align	1
 240              	gl8GetControl:
 241 0000 0000     		.space	2
 242              		.global	gl8SetControl
 243              		.section	.bss.gl8SetControl,"aw",%nobits
 244              		.align	1
 247              	gl8SetControl:
 248 0000 0000     		.space	2
 249              		.global	gl16GetControl
 250              		.section	.bss.gl16GetControl,"aw",%nobits
 251              		.align	1
 254              	gl16GetControl:
 255 0000 0000     		.space	2
 256              		.global	gl32GetControl
 257              		.section	.bss.gl32GetControl,"aw",%nobits
 258              		.align	2
 261              	gl32GetControl:
 262 0000 00000000 		.space	4
 263              		.global	glcommitcount
 264              		.section	.bss.glcommitcount,"aw",%nobits
 267              	glcommitcount:
 268 0000 00       		.space	1
 269              		.global	glcheckframe
 270              		.section	.data.glcheckframe,"aw",%progbits
 273              	glcheckframe:
 274 0000 01       		.byte	1
 275              		.section	.text.esUVCAppErrorHandler,"ax",%progbits
 276              		.align	2
 277              		.global	esUVCAppErrorHandler
 279              	esUVCAppErrorHandler:
 280              	.LFB1:
  66:../CX3RDKOV5640.c **** #endif
  67:../CX3RDKOV5640.c **** 
  68:../CX3RDKOV5640.c **** volatile int32_t glDMATxCount = 0;          /* Counter used to count the Dma Transfers */
  69:../CX3RDKOV5640.c **** volatile int32_t glDmaDone = 0;
  70:../CX3RDKOV5640.c **** volatile uint8_t glActiveSocket = 0;
  71:../CX3RDKOV5640.c **** volatile CyBool_t doLpmDisable = CyTrue;	/* Flag used to Enable/Disable low USB 3.0 LPM */
  72:../CX3RDKOV5640.c **** CyBool_t glHitFV = CyFalse;             	/* Flag used for state of FV signal. */
  73:../CX3RDKOV5640.c **** CyBool_t glMipiActive = CyFalse;        	/* Flag set to true when Mipi interface is active. Used fo
  74:../CX3RDKOV5640.c **** CyBool_t glIsClearFeature = CyFalse;    	/* Flag to signal when AppStop is called from the ClearFea
  75:../CX3RDKOV5640.c **** CyBool_t glPreviewStarted = CyFalse;		/* Flag to support Mac os */
  76:../CX3RDKOV5640.c **** 
  77:../CX3RDKOV5640.c **** /* UVC Header */
  78:../CX3RDKOV5640.c **** uint8_t glUVCHeader[ES_UVC_HEADER_LENGTH] =
  79:../CX3RDKOV5640.c **** {
  80:../CX3RDKOV5640.c ****     0x0C,                           /* Header Length */
  81:../CX3RDKOV5640.c ****     0x8C,                           /* Bit field header field */
  82:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,            /* Presentation time stamp field */
  83:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,0x00,0x00   /* Source clock reference field */
  84:../CX3RDKOV5640.c **** };
  85:../CX3RDKOV5640.c **** 
  86:../CX3RDKOV5640.c **** /* Video Probe Commit Control */
  87:../CX3RDKOV5640.c **** uint8_t glCommitCtrl[ES_UVC_MAX_PROBE_SETTING_ALIGNED];
  88:../CX3RDKOV5640.c **** uint8_t glCurrentFrameIndex = 1;
  89:../CX3RDKOV5640.c **** uint8_t glStillCommitCtrl[ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED];
  90:../CX3RDKOV5640.c **** uint8_t glCurrentStillFrameIndex = 1;
  91:../CX3RDKOV5640.c **** uint8_t glStillTriggerCtrl = 0;
  92:../CX3RDKOV5640.c **** uint8_t glFrameIndexToSet = 0;
  93:../CX3RDKOV5640.c **** CyBool_t glStillCaptureStart = CyFalse;
  94:../CX3RDKOV5640.c **** CyBool_t glStillCaptured = CyFalse;
  95:../CX3RDKOV5640.c **** uint8_t glStillSkip = 0;
  96:../CX3RDKOV5640.c **** 
  97:../CX3RDKOV5640.c **** CyBool_t glIsApplnActive = CyFalse;             /* Whether the Mipi->USB application is active or n
  98:../CX3RDKOV5640.c **** CyBool_t glIsConfigured = CyFalse;              /* Whether Application is in configured state or no
  99:../CX3RDKOV5640.c **** CyBool_t glIsStreamingStarted = CyFalse;        /* Whether streaming has started - Used for MAC OS 
 100:../CX3RDKOV5640.c **** 
 101:../CX3RDKOV5640.c **** /* DMA Channel */
 102:../CX3RDKOV5640.c **** CyU3PDmaMultiChannel glChHandleUVCStream;       /* DMA Channel Handle for UVC Stream  */
 103:../CX3RDKOV5640.c **** uint16_t ES_UVC_STREAM_BUF_SIZE=0;
 104:../CX3RDKOV5640.c **** uint16_t ES_UVC_DATA_BUF_SIZE=0;
 105:../CX3RDKOV5640.c **** uint8_t ES_UVC_STREAM_BUF_COUNT=0;
 106:../CX3RDKOV5640.c **** 
 107:../CX3RDKOV5640.c **** uint8_t g_IsAutoFocus=1;						/* Check the AutoFocus is Enabled or not*/
 108:../CX3RDKOV5640.c **** 
 109:../CX3RDKOV5640.c **** /* USB control request processing variables*/
 110:../CX3RDKOV5640.c **** #if 1
 111:../CX3RDKOV5640.c **** 
 112:../CX3RDKOV5640.c **** uint8_t glGet_Info = 0;
 113:../CX3RDKOV5640.c **** int16_t gl8GetControl = 0;
 114:../CX3RDKOV5640.c **** int16_t gl8SetControl = 0;
 115:../CX3RDKOV5640.c **** int16_t gl16GetControl = 0;
 116:../CX3RDKOV5640.c **** 
 117:../CX3RDKOV5640.c **** int32_t gl32GetControl = 0;
 118:../CX3RDKOV5640.c **** 
 119:../CX3RDKOV5640.c **** #endif
 120:../CX3RDKOV5640.c **** 
 121:../CX3RDKOV5640.c **** uint8_t glcommitcount=0,glcheckframe=1;
 122:../CX3RDKOV5640.c **** 
 123:../CX3RDKOV5640.c **** /* Application critical error handler */
 124:../CX3RDKOV5640.c ****     void
 125:../CX3RDKOV5640.c **** esUVCAppErrorHandler (
 126:../CX3RDKOV5640.c ****         CyU3PReturnStatus_t status        /* API return status */
 127:../CX3RDKOV5640.c ****         )
 128:../CX3RDKOV5640.c **** {
 281              		.loc 1 128 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 00482DE9 		stmfd	sp!, {fp, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 04B08DE2 		add	fp, sp, #4
 291              	.LCFI3:
 292              		.cfi_def_cfa 11, 4
 293 0008 08D04DE2 		sub	sp, sp, #8
 294 000c 08000BE5 		str	r0, [fp, #-8]
 295              	.L5:
 129:../CX3RDKOV5640.c ****     /* Application failed with the error code status */
 130:../CX3RDKOV5640.c **** 
 131:../CX3RDKOV5640.c ****     /* Add custom debug or recovery actions here */
 132:../CX3RDKOV5640.c **** 
 133:../CX3RDKOV5640.c ****     /* Loop indefinitely */
 134:../CX3RDKOV5640.c ****     for (;;)
 135:../CX3RDKOV5640.c ****     {
 136:../CX3RDKOV5640.c ****         /* Thread sleep : 100 ms */
 137:../CX3RDKOV5640.c ****         CyU3PThreadSleep (100);
 296              		.loc 1 137 0 discriminator 1
 297 0010 6400A0E3 		mov	r0, #100
 298 0014 FEFFFFEB 		bl	_tx_thread_sleep
 138:../CX3RDKOV5640.c ****     }
 299              		.loc 1 138 0 discriminator 1
 300 0018 FCFFFFEA 		b	.L5
 301              		.cfi_endproc
 302              	.LFE1:
 304              		.section	.text.esUVCUvcAddHeader,"ax",%progbits
 305              		.align	2
 307              	esUVCUvcAddHeader:
 308              	.LFB2:
 139:../CX3RDKOV5640.c **** }
 140:../CX3RDKOV5640.c **** 
 141:../CX3RDKOV5640.c **** 
 142:../CX3RDKOV5640.c **** /* UVC header addition function */
 143:../CX3RDKOV5640.c ****     static void
 144:../CX3RDKOV5640.c **** esUVCUvcAddHeader (
 145:../CX3RDKOV5640.c ****         uint8_t *buffer_p,      /* Buffer pointer */
 146:../CX3RDKOV5640.c ****         uint8_t frameInd        /* EOF or normal frame indication */
 147:../CX3RDKOV5640.c ****         )
 148:../CX3RDKOV5640.c **** {
 309              		.loc 1 148 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 00482DE9 		stmfd	sp!, {fp, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 11, -8
 317              		.cfi_offset 14, -4
 318 0004 04B08DE2 		add	fp, sp, #4
 319              	.LCFI5:
 320              		.cfi_def_cfa 11, 4
 321 0008 08D04DE2 		sub	sp, sp, #8
 322 000c 08000BE5 		str	r0, [fp, #-8]
 323 0010 0130A0E1 		mov	r3, r1
 324 0014 09304BE5 		strb	r3, [fp, #-9]
 149:../CX3RDKOV5640.c ****     /* Copy header to buffer */
 150:../CX3RDKOV5640.c ****     CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, ES_UVC_HEADER_LENGTH);
 325              		.loc 1 150 0
 326 0018 08001BE5 		ldr	r0, [fp, #-8]
 327 001c 50109FE5 		ldr	r1, .L8
 328 0020 0C20A0E3 		mov	r2, #12
 329 0024 FEFFFFEB 		bl	CyU3PMemCopy
 151:../CX3RDKOV5640.c **** 
 152:../CX3RDKOV5640.c ****     /* Check if last packet of the frame. */
 153:../CX3RDKOV5640.c ****     if (frameInd == ES_UVC_HEADER_EOF)
 330              		.loc 1 153 0
 331 0028 09305BE5 		ldrb	r3, [fp, #-9]	@ zero_extendqisi2
 332 002c 020053E3 		cmp	r3, #2
 333 0030 0D00001A 		bne	.L6
 154:../CX3RDKOV5640.c ****     {
 155:../CX3RDKOV5640.c ****         /* Modify UVC header to toggle Frame ID */
 156:../CX3RDKOV5640.c ****         glUVCHeader[1] ^= ES_UVC_HEADER_FRAME_ID;
 334              		.loc 1 156 0
 335 0034 38309FE5 		ldr	r3, .L8
 336 0038 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 337 003c 013023E2 		eor	r3, r3, #1
 338 0040 FF2003E2 		and	r2, r3, #255
 339 0044 28309FE5 		ldr	r3, .L8
 340 0048 0120C3E5 		strb	r2, [r3, #1]
 157:../CX3RDKOV5640.c **** 
 158:../CX3RDKOV5640.c ****         /* Indicate End of Frame in the buffer */
 159:../CX3RDKOV5640.c ****         buffer_p[1] |=  ES_UVC_HEADER_EOF;
 341              		.loc 1 159 0
 342 004c 08301BE5 		ldr	r3, [fp, #-8]
 343 0050 013083E2 		add	r3, r3, #1
 344 0054 08201BE5 		ldr	r2, [fp, #-8]
 345 0058 012082E2 		add	r2, r2, #1
 346 005c 0020D2E5 		ldrb	r2, [r2]	@ zero_extendqisi2
 347 0060 022082E3 		orr	r2, r2, #2
 348 0064 FF2002E2 		and	r2, r2, #255
 349 0068 0020C3E5 		strb	r2, [r3]
 350              	.L6:
 160:../CX3RDKOV5640.c ****     }
 161:../CX3RDKOV5640.c **** }
 351              		.loc 1 161 0
 352 006c 04D04BE2 		sub	sp, fp, #4
 353              		@ sp needed
 354 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
 355              	.L9:
 356              		.align	2
 357              	.L8:
 358 0074 00000000 		.word	glUVCHeader
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0A0D4170 		.ascii	"\012\015AplnStrt:ChannelReset Err = 0x%x\000"
 365      6C6E5374 
 365      72743A43 
 365      68616E6E 
 365      656C5265 
 366 0023 00       		.align	2
 367              	.LC1:
 368 0024 0A0D4170 		.ascii	"\012\015AplnStrt:SetXfer Err = 0x%x\000"
 368      6C6E5374 
 368      72743A53 
 368      65745866 
 368      65722045 
 369              		.section	.text.esUVCUvcApplnStart,"ax",%progbits
 370              		.align	2
 371              		.global	esUVCUvcApplnStart
 373              	esUVCUvcApplnStart:
 374              	.LFB3:
 162:../CX3RDKOV5640.c **** 
 163:../CX3RDKOV5640.c **** 
 164:../CX3RDKOV5640.c **** /* This function starts the video streaming application. It is called
 165:../CX3RDKOV5640.c ****  * when there is a SET_INTERFACE event for alternate interface 1
 166:../CX3RDKOV5640.c ****  * (in case of UVC over Isochronous Endpoint usage) or when a
 167:../CX3RDKOV5640.c ****  * COMMIT_CONTROL(SET_CUR) request is received (when using BULK only UVC).
 168:../CX3RDKOV5640.c ****  */
 169:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t
 170:../CX3RDKOV5640.c **** esUVCUvcApplnStart (void)
 171:../CX3RDKOV5640.c **** {
 375              		.loc 1 171 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 00482DE9 		stmfd	sp!, {fp, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 11, -8
 383              		.cfi_offset 14, -4
 384 0004 04B08DE2 		add	fp, sp, #4
 385              	.LCFI7:
 386              		.cfi_def_cfa 11, 4
 387 0008 10D04DE2 		sub	sp, sp, #16
 172:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 388              		.loc 1 172 0
 389 000c 0030A0E3 		mov	r3, #0
 390 0010 08300BE5 		str	r3, [fp, #-8]
 173:../CX3RDKOV5640.c **** 
 174:../CX3RDKOV5640.c ****     glIsApplnActive = CyTrue;
 391              		.loc 1 174 0
 392 0014 60319FE5 		ldr	r3, .L15
 393 0018 0120A0E3 		mov	r2, #1
 394 001c 002083E5 		str	r2, [r3]
 175:../CX3RDKOV5640.c ****     glDmaDone = 0;
 395              		.loc 1 175 0
 396 0020 58319FE5 		ldr	r3, .L15+4
 397 0024 0020A0E3 		mov	r2, #0
 398 0028 002083E5 		str	r2, [r3]
 176:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 399              		.loc 1 176 0
 400 002c 50319FE5 		ldr	r3, .L15+8
 401 0030 0020A0E3 		mov	r2, #0
 402 0034 002083E5 		str	r2, [r3]
 177:../CX3RDKOV5640.c ****     glHitFV = CyFalse;
 403              		.loc 1 177 0
 404 0038 48319FE5 		ldr	r3, .L15+12
 405 003c 0020A0E3 		mov	r2, #0
 406 0040 002083E5 		str	r2, [r3]
 178:../CX3RDKOV5640.c ****     doLpmDisable = CyTrue;
 407              		.loc 1 178 0
 408 0044 40319FE5 		ldr	r3, .L15+16
 409 0048 0120A0E3 		mov	r2, #1
 410 004c 002083E5 		str	r2, [r3]
 179:../CX3RDKOV5640.c **** 
 180:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 181:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 411              		.loc 1 181 0
 412 0050 38019FE5 		ldr	r0, .L15+20
 413 0054 FEFFFFEB 		bl	_txe_timer_deactivate
 182:../CX3RDKOV5640.c **** #endif
 183:../CX3RDKOV5640.c **** 
 184:../CX3RDKOV5640.c **** 
 185:../CX3RDKOV5640.c ****     /* Place the EP in NAK mode before cleaning up the pipe. */
 186:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 414              		.loc 1 186 0
 415 0058 8300A0E3 		mov	r0, #131
 416 005c 0110A0E3 		mov	r1, #1
 417 0060 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 187:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 418              		.loc 1 187 0
 419 0064 6400A0E3 		mov	r0, #100
 420 0068 FEFFFFEB 		bl	CyFx3BusyWait
 188:../CX3RDKOV5640.c **** 
 189:../CX3RDKOV5640.c ****     /* Reset USB EP and DMA */
 190:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 421              		.loc 1 190 0
 422 006c 8300A0E3 		mov	r0, #131
 423 0070 FEFFFFEB 		bl	CyU3PUsbFlushEp
 191:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 424              		.loc 1 191 0
 425 0074 18019FE5 		ldr	r0, .L15+24
 426 0078 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 427 007c 08000BE5 		str	r0, [fp, #-8]
 192:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 428              		.loc 1 192 0
 429 0080 08301BE5 		ldr	r3, [fp, #-8]
 430 0084 000053E3 		cmp	r3, #0
 431 0088 0500000A 		beq	.L11
 193:../CX3RDKOV5640.c ****     {
 194:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 432              		.loc 1 194 0
 433 008c 0400A0E3 		mov	r0, #4
 434 0090 00119FE5 		ldr	r1, .L15+28
 435 0094 08201BE5 		ldr	r2, [fp, #-8]
 436 0098 FEFFFFEB 		bl	CyU3PDebugPrint
 195:../CX3RDKOV5640.c ****         return status;
 437              		.loc 1 195 0
 438 009c 08301BE5 		ldr	r3, [fp, #-8]
 439 00a0 320000EA 		b	.L12
 440              	.L11:
 196:../CX3RDKOV5640.c ****     }
 197:../CX3RDKOV5640.c **** 
 198:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 441              		.loc 1 198 0
 442 00a4 E8009FE5 		ldr	r0, .L15+24
 443 00a8 0010A0E3 		mov	r1, #0
 444 00ac 0020A0E3 		mov	r2, #0
 445 00b0 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetXfer
 446 00b4 08000BE5 		str	r0, [fp, #-8]
 199:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 447              		.loc 1 199 0
 448 00b8 08301BE5 		ldr	r3, [fp, #-8]
 449 00bc 000053E3 		cmp	r3, #0
 450 00c0 0500000A 		beq	.L13
 200:../CX3RDKOV5640.c ****     {
 201:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 451              		.loc 1 201 0
 452 00c4 0400A0E3 		mov	r0, #4
 453 00c8 CC109FE5 		ldr	r1, .L15+32
 454 00cc 08201BE5 		ldr	r2, [fp, #-8]
 455 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 202:../CX3RDKOV5640.c ****         return status;
 456              		.loc 1 202 0
 457 00d4 08301BE5 		ldr	r3, [fp, #-8]
 458 00d8 240000EA 		b	.L12
 459              	.L13:
 203:../CX3RDKOV5640.c ****     }
 204:../CX3RDKOV5640.c **** 
 205:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 460              		.loc 1 205 0
 461 00dc 8300A0E3 		mov	r0, #131
 462 00e0 0010A0E3 		mov	r1, #0
 463 00e4 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 206:../CX3RDKOV5640.c ****     CyU3PBusyWait (200);
 464              		.loc 1 206 0
 465 00e8 C800A0E3 		mov	r0, #200
 466 00ec FEFFFFEB 		bl	CyFx3BusyWait
 207:../CX3RDKOV5640.c **** //
 208:../CX3RDKOV5640.c **** //    /* Place the EP in NAK mode before cleaning up the pipe. */
 209:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 210:../CX3RDKOV5640.c **** //    CyU3PBusyWait (100);
 211:../CX3RDKOV5640.c **** //
 212:../CX3RDKOV5640.c **** //    /* Reset USB EP and DMA */
 213:../CX3RDKOV5640.c **** //    CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 214:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 215:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 216:../CX3RDKOV5640.c **** //    {
 217:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 218:../CX3RDKOV5640.c **** //        return status;
 219:../CX3RDKOV5640.c **** //    }
 220:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 221:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 222:../CX3RDKOV5640.c **** //    {
 223:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 224:../CX3RDKOV5640.c **** //        return status;
 225:../CX3RDKOV5640.c **** //    }
 226:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 227:../CX3RDKOV5640.c **** //    CyU3PBusyWait (200);
 228:../CX3RDKOV5640.c **** 
 229:../CX3RDKOV5640.c **** 	 /* Night Mode function
 230:../CX3RDKOV5640.c **** 	 *  --------------------
 231:../CX3RDKOV5640.c **** 	 *  esOV5640_Nightmode API is used to enable the Nightmode
 232:../CX3RDKOV5640.c **** 	 *  of OV5640 sensor.
 233:../CX3RDKOV5640.c **** 	 *  Set Enable -- Cytrue to enable Nightmode
 234:../CX3RDKOV5640.c **** 	 * 				  CyFalse to Disable Nightmode
 235:../CX3RDKOV5640.c **** 	 *
 236:../CX3RDKOV5640.c **** 	 *  Set NightMode_option -- 1 to 6 to set different night modes
 237:../CX3RDKOV5640.c **** 	 *
 238:../CX3RDKOV5640.c **** 	 * To test different night modes, uncomment the below statement and build the firmware
 239:../CX3RDKOV5640.c **** 	 */
 240:../CX3RDKOV5640.c ****     //TODO Change this Function to "Sensor Specific" Nightmode Function to enable the nightmode(If 
 241:../CX3RDKOV5640.c **** 	/*esOV5640_Nightmode(CyTrue,3);*/
 242:../CX3RDKOV5640.c **** 
 243:../CX3RDKOV5640.c **** 
 244:../CX3RDKOV5640.c ****     /* Resume the Fixed Function GPIF State machine */
 245:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyFalse);
 467              		.loc 1 245 0
 468 00f0 0000A0E3 		mov	r0, #0
 469 00f4 FEFFFFEB 		bl	CyU3PGpifSMControl
 246:../CX3RDKOV5640.c **** 
 247:../CX3RDKOV5640.c ****     glActiveSocket = 0;
 470              		.loc 1 247 0
 471 00f8 A0309FE5 		ldr	r3, .L15+36
 472 00fc 0020A0E3 		mov	r2, #0
 473 0100 0020C3E5 		strb	r2, [r3]
 248:../CX3RDKOV5640.c ****     CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 474              		.loc 1 248 0
 475 0104 0230A0E3 		mov	r3, #2
 476 0108 00308DE5 		str	r3, [sp]
 477 010c 90009FE5 		ldr	r0, .L15+40
 478 0110 0010A0E3 		mov	r1, #0
 479 0114 88209FE5 		ldr	r2, .L15+40
 480 0118 0030A0E3 		mov	r3, #0
 481 011c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 249:../CX3RDKOV5640.c ****     		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 250:../CX3RDKOV5640.c **** 
 251:../CX3RDKOV5640.c ****     CyU3PThreadSleep(10);
 482              		.loc 1 251 0
 483 0120 0A00A0E3 		mov	r0, #10
 484 0124 FEFFFFEB 		bl	_tx_thread_sleep
 252:../CX3RDKOV5640.c **** 
 253:../CX3RDKOV5640.c ****     /* Wake Mipi interface and Image Sensor */
 254:../CX3RDKOV5640.c ****     CyU3PMipicsiWakeup();
 485              		.loc 1 254 0
 486 0128 FEFFFFEB 		bl	CyU3PMipicsiWakeup
 255:../CX3RDKOV5640.c **** 
 256:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the sensor
 257:../CX3RDKOV5640.c ****     esCamera_Power_Up();
 487              		.loc 1 257 0
 488 012c FEFFFFEB 		bl	esCamera_Power_Up
 258:../CX3RDKOV5640.c **** 
 259:../CX3RDKOV5640.c ****     glMipiActive = CyTrue;
 489              		.loc 1 259 0
 490 0130 70309FE5 		ldr	r3, .L15+44
 491 0134 0120A0E3 		mov	r2, #1
 492 0138 002083E5 		str	r2, [r3]
 260:../CX3RDKOV5640.c **** 
 261:../CX3RDKOV5640.c ****     //TODO Change this Function with "Sensor Specific" AutoFocus Function to Set the AutoFocus of t
 262:../CX3RDKOV5640.c **** 	if(glStillCaptureStart!= CyTrue)
 493              		.loc 1 262 0
 494 013c 68309FE5 		ldr	r3, .L15+48
 495 0140 003093E5 		ldr	r3, [r3]
 496 0144 010053E3 		cmp	r3, #1
 497 0148 0700000A 		beq	.L14
 263:../CX3RDKOV5640.c **** 	{
 264:../CX3RDKOV5640.c **** 		if(g_IsAutoFocus)
 498              		.loc 1 264 0
 499 014c 5C309FE5 		ldr	r3, .L15+52
 500 0150 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0154 000053E3 		cmp	r3, #0
 502 0158 0300000A 		beq	.L14
 265:../CX3RDKOV5640.c **** 			esOV5640_SetAutofocus(g_IsAutoFocus);
 503              		.loc 1 265 0
 504 015c 4C309FE5 		ldr	r3, .L15+52
 505 0160 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0164 0300A0E1 		mov	r0, r3
 507 0168 FEFFFFEB 		bl	esOV5640_SetAutofocus
 508              	.L14:
 266:../CX3RDKOV5640.c **** 	}
 267:../CX3RDKOV5640.c ****     return CY_U3P_SUCCESS;
 509              		.loc 1 267 0
 510 016c 0030A0E3 		mov	r3, #0
 511              	.L12:
 268:../CX3RDKOV5640.c **** }
 512              		.loc 1 268 0
 513 0170 0300A0E1 		mov	r0, r3
 514 0174 04D04BE2 		sub	sp, fp, #4
 515              		@ sp needed
 516 0178 0088BDE8 		ldmfd	sp!, {fp, pc}
 517              	.L16:
 518              		.align	2
 519              	.L15:
 520 017c 00000000 		.word	glIsApplnActive
 521 0180 00000000 		.word	glDmaDone
 522 0184 00000000 		.word	glDMATxCount
 523 0188 00000000 		.word	glHitFV
 524 018c 00000000 		.word	doLpmDisable
 525 0190 00000000 		.word	UvcTimer
 526 0194 00000000 		.word	glChHandleUVCStream
 527 0198 00000000 		.word	.LC0
 528 019c 24000000 		.word	.LC1
 529 01a0 00000000 		.word	glActiveSocket
 530 01a4 01010000 		.word	257
 531 01a8 00000000 		.word	glMipiActive
 532 01ac 00000000 		.word	glStillCaptureStart
 533 01b0 00000000 		.word	g_IsAutoFocus
 534              		.cfi_endproc
 535              	.LFE3:
 537              		.section	.rodata
 538 0042 0000     		.align	2
 539              	.LC2:
 540 0044 0A0D4170 		.ascii	"\012\015AplnStop:ChannelReset Err = 0x%x\000"
 540      6C6E5374 
 540      6F703A43 
 540      68616E6E 
 540      656C5265 
 541              		.section	.text.esUVCUvcApplnStop,"ax",%progbits
 542              		.align	2
 543              		.global	esUVCUvcApplnStop
 545              	esUVCUvcApplnStop:
 546              	.LFB4:
 269:../CX3RDKOV5640.c **** 
 270:../CX3RDKOV5640.c **** /* This function stops the video streaming. It is called from the USB event
 271:../CX3RDKOV5640.c ****  * handler, when there is a reset / disconnect or SET_INTERFACE for alternate
 272:../CX3RDKOV5640.c ****  * interface 0 in case of ischronous implementation or when a Clear Feature (Halt)
 273:../CX3RDKOV5640.c ****  * request is received (in case of bulk only implementation).
 274:../CX3RDKOV5640.c ****  */
 275:../CX3RDKOV5640.c ****     void
 276:../CX3RDKOV5640.c **** esUVCUvcApplnStop(void)
 277:../CX3RDKOV5640.c **** {
 547              		.loc 1 277 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 00482DE9 		stmfd	sp!, {fp, lr}
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 11, -8
 555              		.cfi_offset 14, -4
 556 0004 04B08DE2 		add	fp, sp, #4
 557              	.LCFI9:
 558              		.cfi_def_cfa 11, 4
 559 0008 08D04DE2 		sub	sp, sp, #8
 278:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 560              		.loc 1 278 0
 561 000c 0030A0E3 		mov	r3, #0
 562 0010 08300BE5 		str	r3, [fp, #-8]
 279:../CX3RDKOV5640.c **** 
 280:../CX3RDKOV5640.c ****     /* Update the flag so that the application thread is notified of this. */
 281:../CX3RDKOV5640.c ****     glIsApplnActive = CyFalse;
 563              		.loc 1 281 0
 564 0014 DC309FE5 		ldr	r3, .L20
 565 0018 0020A0E3 		mov	r2, #0
 566 001c 002083E5 		str	r2, [r3]
 282:../CX3RDKOV5640.c **** 
 283:../CX3RDKOV5640.c ****     /* Stop the image sensor and CX3 mipi interface */
 284:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSleep();
 567              		.loc 1 284 0
 568 0020 FEFFFFEB 		bl	CyU3PMipicsiSleep
 569 0024 08000BE5 		str	r0, [fp, #-8]
 285:../CX3RDKOV5640.c **** 
 286:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
 287:../CX3RDKOV5640.c ****     esCamera_Power_Down();
 570              		.loc 1 287 0
 571 0028 FEFFFFEB 		bl	esCamera_Power_Down
 288:../CX3RDKOV5640.c **** 
 289:../CX3RDKOV5640.c ****     glMipiActive = CyFalse;
 572              		.loc 1 289 0
 573 002c C8309FE5 		ldr	r3, .L20+4
 574 0030 0020A0E3 		mov	r2, #0
 575 0034 002083E5 		str	r2, [r3]
 290:../CX3RDKOV5640.c **** 
 291:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 292:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 576              		.loc 1 292 0
 577 0038 C0009FE5 		ldr	r0, .L20+8
 578 003c FEFFFFEB 		bl	_txe_timer_deactivate
 293:../CX3RDKOV5640.c **** #endif
 294:../CX3RDKOV5640.c **** 
 295:../CX3RDKOV5640.c ****     /* Pause the GPIF interface*/
 296:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 579              		.loc 1 296 0
 580 0040 0100A0E3 		mov	r0, #1
 581 0044 FEFFFFEB 		bl	CyU3PGpifSMControl
 297:../CX3RDKOV5640.c **** 
 298:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 582              		.loc 1 298 0
 583 0048 8300A0E3 		mov	r0, #131
 584 004c 0110A0E3 		mov	r1, #1
 585 0050 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 299:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 586              		.loc 1 299 0
 587 0054 6400A0E3 		mov	r0, #100
 588 0058 FEFFFFEB 		bl	CyFx3BusyWait
 300:../CX3RDKOV5640.c **** 
 301:../CX3RDKOV5640.c ****     /* Abort and destroy the video streaming channel */
 302:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set DSCR_SIZE field i
 303:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 589              		.loc 1 303 0
 590 005c A0009FE5 		ldr	r0, .L20+12
 591 0060 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 592 0064 08000BE5 		str	r0, [fp, #-8]
 304:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 593              		.loc 1 304 0
 594 0068 08301BE5 		ldr	r3, [fp, #-8]
 595 006c 000053E3 		cmp	r3, #0
 596 0070 0300000A 		beq	.L18
 305:../CX3RDKOV5640.c ****     {
 306:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStop:ChannelReset Err = 0x%x",status);
 597              		.loc 1 306 0
 598 0074 0400A0E3 		mov	r0, #4
 599 0078 88109FE5 		ldr	r1, .L20+16
 600 007c 08201BE5 		ldr	r2, [fp, #-8]
 601 0080 FEFFFFEB 		bl	CyU3PDebugPrint
 602              	.L18:
 307:../CX3RDKOV5640.c ****     }
 308:../CX3RDKOV5640.c ****     CyU3PThreadSleep(25);
 603              		.loc 1 308 0
 604 0084 1900A0E3 		mov	r0, #25
 605 0088 FEFFFFEB 		bl	_tx_thread_sleep
 309:../CX3RDKOV5640.c **** 
 310:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
 311:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 606              		.loc 1 311 0
 607 008c 8300A0E3 		mov	r0, #131
 608 0090 FEFFFFEB 		bl	CyU3PUsbFlushEp
 312:../CX3RDKOV5640.c ****     /* Clear the stall condition and sequence numbers if ClearFeature. */
 313:../CX3RDKOV5640.c ****     if (glIsClearFeature)
 609              		.loc 1 313 0
 610 0094 70309FE5 		ldr	r3, .L20+20
 611 0098 003093E5 		ldr	r3, [r3]
 612 009c 000053E3 		cmp	r3, #0
 613 00a0 0600000A 		beq	.L19
 314:../CX3RDKOV5640.c ****     {
 315:../CX3RDKOV5640.c ****         CyU3PUsbStall (ES_UVC_EP_BULK_VIDEO, CyFalse, CyTrue);
 614              		.loc 1 315 0
 615 00a4 8300A0E3 		mov	r0, #131
 616 00a8 0010A0E3 		mov	r1, #0
 617 00ac 0120A0E3 		mov	r2, #1
 618 00b0 FEFFFFEB 		bl	CyU3PUsbStall
 316:../CX3RDKOV5640.c ****         glIsClearFeature = CyFalse;
 619              		.loc 1 316 0
 620 00b4 50309FE5 		ldr	r3, .L20+20
 621 00b8 0020A0E3 		mov	r2, #0
 622 00bc 002083E5 		str	r2, [r3]
 623              	.L19:
 317:../CX3RDKOV5640.c ****     }
 318:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 624              		.loc 1 318 0
 625 00c0 8300A0E3 		mov	r0, #131
 626 00c4 0010A0E3 		mov	r1, #0
 627 00c8 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 319:../CX3RDKOV5640.c **** 	CyU3PBusyWait (200);
 628              		.loc 1 319 0
 629 00cc C800A0E3 		mov	r0, #200
 630 00d0 FEFFFFEB 		bl	CyFx3BusyWait
 320:../CX3RDKOV5640.c **** 
 321:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 631              		.loc 1 321 0
 632 00d4 34309FE5 		ldr	r3, .L20+24
 633 00d8 0020A0E3 		mov	r2, #0
 634 00dc 002083E5 		str	r2, [r3]
 322:../CX3RDKOV5640.c ****     glDmaDone = 0;
 635              		.loc 1 322 0
 636 00e0 2C309FE5 		ldr	r3, .L20+28
 637 00e4 0020A0E3 		mov	r2, #0
 638 00e8 002083E5 		str	r2, [r3]
 323:../CX3RDKOV5640.c **** 
 324:../CX3RDKOV5640.c ****     /* Enable USB 3.0 LPM */
 325:../CX3RDKOV5640.c ****     CyU3PUsbLPMEnable ();
 639              		.loc 1 325 0
 640 00ec FEFFFFEB 		bl	CyU3PUsbLPMEnable
 326:../CX3RDKOV5640.c **** }
 641              		.loc 1 326 0
 642 00f0 04D04BE2 		sub	sp, fp, #4
 643              		@ sp needed
 644 00f4 0088BDE8 		ldmfd	sp!, {fp, pc}
 645              	.L21:
 646              		.align	2
 647              	.L20:
 648 00f8 00000000 		.word	glIsApplnActive
 649 00fc 00000000 		.word	glMipiActive
 650 0100 00000000 		.word	UvcTimer
 651 0104 00000000 		.word	glChHandleUVCStream
 652 0108 44000000 		.word	.LC2
 653 010c 00000000 		.word	glIsClearFeature
 654 0110 00000000 		.word	glDMATxCount
 655 0114 00000000 		.word	glDmaDone
 656              		.cfi_endproc
 657              	.LFE4:
 659              		.section	.rodata
 660 0067 00       		.align	2
 661              	.LC3:
 662 0068 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK0 Err = 0x%x\000"
 662      69664342 
 662      3A577261 
 662      70557020 
 662      53434B30 
 663              		.align	2
 664              	.LC4:
 665 0088 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK1 Err = 0x%x\000"
 665      69664342 
 665      3A577261 
 665      70557020 
 665      53434B31 
 666              		.section	.text.esUVCGpifCB,"ax",%progbits
 667              		.align	2
 668              		.global	esUVCGpifCB
 670              	esUVCGpifCB:
 671              	.LFB5:
 327:../CX3RDKOV5640.c **** 
 328:../CX3RDKOV5640.c **** /* GpifCB callback function is invoked when FV triggers GPIF interrupt */
 329:../CX3RDKOV5640.c ****     void
 330:../CX3RDKOV5640.c **** esUVCGpifCB (
 331:../CX3RDKOV5640.c ****         CyU3PGpifEventType event,
 332:../CX3RDKOV5640.c ****         uint8_t currentState
 333:../CX3RDKOV5640.c ****         )
 334:../CX3RDKOV5640.c **** {
 672              		.loc 1 334 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 00482DE9 		stmfd	sp!, {fp, lr}
 677              	.LCFI10:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 11, -8
 680              		.cfi_offset 14, -4
 681 0004 04B08DE2 		add	fp, sp, #4
 682              	.LCFI11:
 683              		.cfi_def_cfa 11, 4
 684 0008 10D04DE2 		sub	sp, sp, #16
 685 000c 0020A0E1 		mov	r2, r0
 686 0010 0130A0E1 		mov	r3, r1
 687 0014 0D204BE5 		strb	r2, [fp, #-13]
 688 0018 0E304BE5 		strb	r3, [fp, #-14]
 335:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 689              		.loc 1 335 0
 690 001c 0030A0E3 		mov	r3, #0
 691 0020 08300BE5 		str	r3, [fp, #-8]
 336:../CX3RDKOV5640.c ****     /* Handle interrupt from the State Machine */
 337:../CX3RDKOV5640.c ****     if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
 692              		.loc 1 337 0
 693 0024 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 694 0028 010053E3 		cmp	r3, #1
 695 002c 1C00001A 		bne	.L22
 338:../CX3RDKOV5640.c ****     {
 339:../CX3RDKOV5640.c ****         /* Wrapup Socket 0*/
 340:../CX3RDKOV5640.c ****         if(currentState == CX3_PARTIAL_BUFFER_IN_SCK0)
 696              		.loc 1 340 0
 697 0030 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 698 0034 090053E3 		cmp	r3, #9
 699 0038 0B00001A 		bne	.L24
 341:../CX3RDKOV5640.c ****         {
 342:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,0);
 700              		.loc 1 342 0
 701 003c 68009FE5 		ldr	r0, .L26
 702 0040 0010A0E3 		mov	r1, #0
 703 0044 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 704 0048 08000BE5 		str	r0, [fp, #-8]
 343:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 705              		.loc 1 343 0
 706 004c 08301BE5 		ldr	r3, [fp, #-8]
 707 0050 000053E3 		cmp	r3, #0
 708 0054 1200000A 		beq	.L22
 344:../CX3RDKOV5640.c ****             {
 345:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK0 Err = 0x%x",status);
 709              		.loc 1 345 0
 710 0058 0400A0E3 		mov	r0, #4
 711 005c 4C109FE5 		ldr	r1, .L26+4
 712 0060 08201BE5 		ldr	r2, [fp, #-8]
 713 0064 FEFFFFEB 		bl	CyU3PDebugPrint
 714 0068 0D0000EA 		b	.L22
 715              	.L24:
 346:../CX3RDKOV5640.c ****             }
 347:../CX3RDKOV5640.c ****         }
 348:../CX3RDKOV5640.c ****         /* Wrapup Socket 1 */
 349:../CX3RDKOV5640.c ****         else if(currentState == CX3_PARTIAL_BUFFER_IN_SCK1)
 716              		.loc 1 349 0
 717 006c 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 718 0070 0A0053E3 		cmp	r3, #10
 719 0074 0A00001A 		bne	.L22
 350:../CX3RDKOV5640.c ****         {
 351:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,1);
 720              		.loc 1 351 0
 721 0078 2C009FE5 		ldr	r0, .L26
 722 007c 0110A0E3 		mov	r1, #1
 723 0080 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 724 0084 08000BE5 		str	r0, [fp, #-8]
 352:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 725              		.loc 1 352 0
 726 0088 08301BE5 		ldr	r3, [fp, #-8]
 727 008c 000053E3 		cmp	r3, #0
 728 0090 0300000A 		beq	.L22
 353:../CX3RDKOV5640.c ****             {
 354:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK1 Err = 0x%x",status);
 729              		.loc 1 354 0
 730 0094 0400A0E3 		mov	r0, #4
 731 0098 14109FE5 		ldr	r1, .L26+8
 732 009c 08201BE5 		ldr	r2, [fp, #-8]
 733 00a0 FEFFFFEB 		bl	CyU3PDebugPrint
 734              	.L22:
 355:../CX3RDKOV5640.c ****             }
 356:../CX3RDKOV5640.c ****         }
 357:../CX3RDKOV5640.c ****     }
 358:../CX3RDKOV5640.c **** }
 735              		.loc 1 358 0
 736 00a4 04D04BE2 		sub	sp, fp, #4
 737              		@ sp needed
 738 00a8 0088BDE8 		ldmfd	sp!, {fp, pc}
 739              	.L27:
 740              		.align	2
 741              	.L26:
 742 00ac 00000000 		.word	glChHandleUVCStream
 743 00b0 68000000 		.word	.LC3
 744 00b4 88000000 		.word	.LC4
 745              		.cfi_endproc
 746              	.LFE5:
 748              		.section	.rodata
 749              		.align	2
 750              	.LC5:
 751 00a8 0A0D4170 		.ascii	"\012\015AppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT cou"
 751      70446D61 
 751      43616C6C 
 751      6261636B 
 751      3A43595F 
 752 00d5 6E742025 		.ascii	"nt %x glDMATxCount++ %x\000"
 752      7820676C 
 752      444D4154 
 752      78436F75 
 752      6E742B2B 
 753 00ed 000000   		.align	2
 754              	.LC6:
 755 00f0 0A0D4170 		.ascii	"\012\015AppDmaCallback:CY_U3P_DMA_CB_CONS_EVENT glA"
 755      70446D61 
 755      43616C6C 
 755      6261636B 
 755      3A43595F 
 756 011d 63746976 		.ascii	"ctiveSocket  %x\000"
 756      65536F63 
 756      6B657420 
 756      20257800 
 757              		.section	.text.esUVCUvcAppDmaCallback,"ax",%progbits
 758              		.align	2
 759              		.global	esUVCUvcAppDmaCallback
 761              	esUVCUvcAppDmaCallback:
 762              	.LFB6:
 359:../CX3RDKOV5640.c **** 
 360:../CX3RDKOV5640.c **** 
 361:../CX3RDKOV5640.c **** /* DMA callback function to handle the produce and consume events. */
 362:../CX3RDKOV5640.c ****     void
 363:../CX3RDKOV5640.c **** esUVCUvcAppDmaCallback (
 364:../CX3RDKOV5640.c ****         CyU3PDmaMultiChannel   *chHandle,
 365:../CX3RDKOV5640.c ****         CyU3PDmaCbType_t  type,
 366:../CX3RDKOV5640.c ****         CyU3PDmaCBInput_t *input
 367:../CX3RDKOV5640.c ****         )
 368:../CX3RDKOV5640.c **** {
 763              		.loc 1 368 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 32
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767 0000 00482DE9 		stmfd	sp!, {fp, lr}
 768              	.LCFI12:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 11, -8
 771              		.cfi_offset 14, -4
 772 0004 04B08DE2 		add	fp, sp, #4
 773              	.LCFI13:
 774              		.cfi_def_cfa 11, 4
 775 0008 28D04DE2 		sub	sp, sp, #40
 776 000c 18000BE5 		str	r0, [fp, #-24]
 777 0010 0130A0E1 		mov	r3, r1
 778 0014 20200BE5 		str	r2, [fp, #-32]
 779 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 369:../CX3RDKOV5640.c ****     CyU3PDmaBuffer_t DmaBuffer;
 370:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 780              		.loc 1 370 0
 781 001c 0030A0E3 		mov	r3, #0
 782 0020 08300BE5 		str	r3, [fp, #-8]
 371:../CX3RDKOV5640.c **** 
 372:../CX3RDKOV5640.c ****     if (type == CY_U3P_DMA_CB_PROD_EVENT)
 783              		.loc 1 372 0
 784 0024 BA315BE1 		ldrh	r3, [fp, #-26]
 785 0028 080053E3 		cmp	r3, #8
 786 002c 6200001A 		bne	.L29
 373:../CX3RDKOV5640.c ****     {
 374:../CX3RDKOV5640.c ****         /* This is a produce event notification to the CPU. This notification is
 375:../CX3RDKOV5640.c ****          * received upon reception of every buffer. The buffer will not be sent
 376:../CX3RDKOV5640.c ****          * out unless it is explicitly committed. The call shall fail if there
 377:../CX3RDKOV5640.c ****          * is a bus reset / usb disconnect or if there is any application error. */
 378:../CX3RDKOV5640.c **** 
 379:../CX3RDKOV5640.c ****         /* Disable USB 3.0 LPM while Buffer is being transmitted out*/
 380:../CX3RDKOV5640.c ****         if ((CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED) && (doLpmDisable))
 787              		.loc 1 380 0
 788 0030 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 789 0034 0030A0E1 		mov	r3, r0
 790 0038 030053E3 		cmp	r3, #3
 791 003c 0B00001A 		bne	.L30
 792              		.loc 1 380 0 is_stmt 0 discriminator 1
 793 0040 7C339FE5 		ldr	r3, .L43
 794 0044 003093E5 		ldr	r3, [r3]
 795 0048 000053E3 		cmp	r3, #0
 796 004c 0700000A 		beq	.L30
 381:../CX3RDKOV5640.c ****         {
 382:../CX3RDKOV5640.c ****             CyU3PUsbLPMDisable ();
 797              		.loc 1 382 0 is_stmt 1
 798 0050 FEFFFFEB 		bl	CyU3PUsbLPMDisable
 383:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 799              		.loc 1 383 0
 800 0054 0000A0E3 		mov	r0, #0
 801 0058 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 384:../CX3RDKOV5640.c ****             CyU3PBusyWait (200);
 802              		.loc 1 384 0
 803 005c C800A0E3 		mov	r0, #200
 804 0060 FEFFFFEB 		bl	CyFx3BusyWait
 385:../CX3RDKOV5640.c **** 
 386:../CX3RDKOV5640.c ****             doLpmDisable = CyFalse;
 805              		.loc 1 386 0
 806 0064 58339FE5 		ldr	r3, .L43
 807 0068 0020A0E3 		mov	r2, #0
 808 006c 002083E5 		str	r2, [r3]
 809              	.L30:
 387:../CX3RDKOV5640.c ****         }
 388:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 389:../CX3RDKOV5640.c ****             CyU3PTimerStart (&UvcTimer);
 810              		.loc 1 389 0
 811 0070 50039FE5 		ldr	r0, .L43+4
 812 0074 FEFFFFEB 		bl	_txe_timer_activate
 390:../CX3RDKOV5640.c **** #endif
 391:../CX3RDKOV5640.c **** 
 392:../CX3RDKOV5640.c ****         status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 813              		.loc 1 392 0
 814 0078 14304BE2 		sub	r3, fp, #20
 815 007c 18001BE5 		ldr	r0, [fp, #-24]
 816 0080 0310A0E1 		mov	r1, r3
 817 0084 0020A0E3 		mov	r2, #0
 818 0088 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 819 008c 08000BE5 		str	r0, [fp, #-8]
 393:../CX3RDKOV5640.c **** #ifdef VISDebug
 394:../CX3RDKOV5640.c **** //    CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT CyU3PDmaMultiChannelGetBuffe
 395:../CX3RDKOV5640.c **** #endif
 396:../CX3RDKOV5640.c ****         while (status == CY_U3P_SUCCESS)
 820              		.loc 1 396 0
 821 0090 450000EA 		b	.L31
 822              	.L36:
 397:../CX3RDKOV5640.c ****         {
 398:../CX3RDKOV5640.c ****             /* Add Headers*/
 399:../CX3RDKOV5640.c ****             if(DmaBuffer.count < ES_UVC_DATA_BUF_SIZE)
 823              		.loc 1 399 0
 824 0094 B0215BE1 		ldrh	r2, [fp, #-16]
 825 0098 2C339FE5 		ldr	r3, .L43+8
 826 009c B030D3E1 		ldrh	r3, [r3]
 827 00a0 030052E1 		cmp	r2, r3
 828 00a4 1200002A 		bcs	.L32
 400:../CX3RDKOV5640.c ****             {
 401:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_EOF);
 829              		.loc 1 401 0
 830 00a8 14301BE5 		ldr	r3, [fp, #-20]
 831 00ac 0C3043E2 		sub	r3, r3, #12
 832 00b0 0300A0E1 		mov	r0, r3
 833 00b4 0210A0E3 		mov	r1, #2
 834 00b8 FEFFFFEB 		bl	esUVCUvcAddHeader
 402:../CX3RDKOV5640.c ****                 glHitFV = CyTrue;
 835              		.loc 1 402 0
 836 00bc 0C339FE5 		ldr	r3, .L43+12
 837 00c0 0120A0E3 		mov	r2, #1
 838 00c4 002083E5 		str	r2, [r3]
 403:../CX3RDKOV5640.c **** #ifdef VISDebug
 404:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT count %x glDMATxCount++ %x", D
 839              		.loc 1 404 0
 840 00c8 B0315BE1 		ldrh	r3, [fp, #-16]
 841 00cc 0320A0E1 		mov	r2, r3
 842 00d0 FC329FE5 		ldr	r3, .L43+16
 843 00d4 003093E5 		ldr	r3, [r3]
 844 00d8 010083E2 		add	r0, r3, #1
 845 00dc F0129FE5 		ldr	r1, .L43+16
 846 00e0 000081E5 		str	r0, [r1]
 847 00e4 0400A0E3 		mov	r0, #4
 848 00e8 E8129FE5 		ldr	r1, .L43+20
 849 00ec FEFFFFEB 		bl	CyU3PDebugPrint
 850 00f0 040000EA 		b	.L33
 851              	.L32:
 405:../CX3RDKOV5640.c **** #endif
 406:../CX3RDKOV5640.c **** 
 407:../CX3RDKOV5640.c ****             }
 408:../CX3RDKOV5640.c ****             else
 409:../CX3RDKOV5640.c ****             {
 410:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_FRAME);
 852              		.loc 1 410 0
 853 00f4 14301BE5 		ldr	r3, [fp, #-20]
 854 00f8 0C3043E2 		sub	r3, r3, #12
 855 00fc 0300A0E1 		mov	r0, r3
 856 0100 0010A0E3 		mov	r1, #0
 857 0104 FEFFFFEB 		bl	esUVCUvcAddHeader
 858              	.L33:
 411:../CX3RDKOV5640.c ****             }
 412:../CX3RDKOV5640.c **** 
 413:../CX3RDKOV5640.c ****             /* Commit Buffer to USB*/
 414:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelCommitBuffer (chHandle, (DmaBuffer.count + 12), 0);
 859              		.loc 1 414 0
 860 0108 B0315BE1 		ldrh	r3, [fp, #-16]
 861 010c 0C3083E2 		add	r3, r3, #12
 862 0110 0338A0E1 		mov	r3, r3, asl #16
 863 0114 2338A0E1 		mov	r3, r3, lsr #16
 864 0118 18001BE5 		ldr	r0, [fp, #-24]
 865 011c 0310A0E1 		mov	r1, r3
 866 0120 0020A0E3 		mov	r2, #0
 867 0124 FEFFFFEB 		bl	CyU3PDmaMultiChannelCommitBuffer
 868 0128 08000BE5 		str	r0, [fp, #-8]
 415:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 869              		.loc 1 415 0
 870 012c 08301BE5 		ldr	r3, [fp, #-8]
 871 0130 000053E3 		cmp	r3, #0
 872 0134 0500000A 		beq	.L34
 416:../CX3RDKOV5640.c ****             {
 417:../CX3RDKOV5640.c ****                    CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 873              		.loc 1 417 0
 874 0138 9C029FE5 		ldr	r0, .L43+24
 875 013c 1010A0E3 		mov	r1, #16
 876 0140 0020A0E3 		mov	r2, #0
 877 0144 FEFFFFEB 		bl	_txe_event_flags_set
 418:../CX3RDKOV5640.c ****                    break;
 878              		.loc 1 418 0
 879 0148 0000A0E1 		mov	r0, r0	@ nop
 880 014c 9A0000EA 		b	.L28
 881              	.L34:
 419:../CX3RDKOV5640.c ****             }
 420:../CX3RDKOV5640.c ****             else
 421:../CX3RDKOV5640.c ****             {
 422:../CX3RDKOV5640.c ****                 glDMATxCount++;
 882              		.loc 1 422 0
 883 0150 7C329FE5 		ldr	r3, .L43+16
 884 0154 003093E5 		ldr	r3, [r3]
 885 0158 012083E2 		add	r2, r3, #1
 886 015c 70329FE5 		ldr	r3, .L43+16
 887 0160 002083E5 		str	r2, [r3]
 423:../CX3RDKOV5640.c ****                 glDmaDone++;
 888              		.loc 1 423 0
 889 0164 74329FE5 		ldr	r3, .L43+28
 890 0168 003093E5 		ldr	r3, [r3]
 891 016c 012083E2 		add	r2, r3, #1
 892 0170 68329FE5 		ldr	r3, .L43+28
 893 0174 002083E5 		str	r2, [r3]
 424:../CX3RDKOV5640.c ****             }
 425:../CX3RDKOV5640.c **** 
 426:../CX3RDKOV5640.c ****             glActiveSocket ^= 1; /* Toggle the Active Socket */
 894              		.loc 1 426 0
 895 0178 64329FE5 		ldr	r3, .L43+32
 896 017c 0030D3E5 		ldrb	r3, [r3]
 897 0180 FF3003E2 		and	r3, r3, #255
 898 0184 013023E2 		eor	r3, r3, #1
 899 0188 FF2003E2 		and	r2, r3, #255
 900 018c 50329FE5 		ldr	r3, .L43+32
 901 0190 0020C3E5 		strb	r2, [r3]
 427:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 902              		.loc 1 427 0
 903 0194 14304BE2 		sub	r3, fp, #20
 904 0198 18001BE5 		ldr	r0, [fp, #-24]
 905 019c 0310A0E1 		mov	r1, r3
 906 01a0 0020A0E3 		mov	r2, #0
 907 01a4 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 908 01a8 08000BE5 		str	r0, [fp, #-8]
 909              	.L31:
 396:../CX3RDKOV5640.c ****         {
 910              		.loc 1 396 0 discriminator 1
 911 01ac 08301BE5 		ldr	r3, [fp, #-8]
 912 01b0 000053E3 		cmp	r3, #0
 913 01b4 B6FFFF0A 		beq	.L36
 914 01b8 7F0000EA 		b	.L28
 915              	.L29:
 428:../CX3RDKOV5640.c ****         }
 429:../CX3RDKOV5640.c ****     }
 430:../CX3RDKOV5640.c ****     else if(type == CY_U3P_DMA_CB_CONS_EVENT)
 916              		.loc 1 430 0
 917 01bc BA315BE1 		ldrh	r3, [fp, #-26]
 918 01c0 100053E3 		cmp	r3, #16
 919 01c4 7C00001A 		bne	.L28
 431:../CX3RDKOV5640.c ****     {
 432:../CX3RDKOV5640.c ****         glDmaDone--;
 920              		.loc 1 432 0
 921 01c8 10329FE5 		ldr	r3, .L43+28
 922 01cc 003093E5 		ldr	r3, [r3]
 923 01d0 012043E2 		sub	r2, r3, #1
 924 01d4 04329FE5 		ldr	r3, .L43+28
 925 01d8 002083E5 		str	r2, [r3]
 433:../CX3RDKOV5640.c **** 
 434:../CX3RDKOV5640.c ****         /* Check if Frame is completely transferred */
 435:../CX3RDKOV5640.c ****         glIsStreamingStarted = CyTrue;
 926              		.loc 1 435 0
 927 01dc 04329FE5 		ldr	r3, .L43+36
 928 01e0 0120A0E3 		mov	r2, #1
 929 01e4 002083E5 		str	r2, [r3]
 436:../CX3RDKOV5640.c **** 
 437:../CX3RDKOV5640.c ****         if((glHitFV == CyTrue) && (glDmaDone == 0))
 930              		.loc 1 437 0
 931 01e8 E0319FE5 		ldr	r3, .L43+12
 932 01ec 003093E5 		ldr	r3, [r3]
 933 01f0 010053E3 		cmp	r3, #1
 934 01f4 7000001A 		bne	.L28
 935              		.loc 1 437 0 is_stmt 0 discriminator 1
 936 01f8 E0319FE5 		ldr	r3, .L43+28
 937 01fc 003093E5 		ldr	r3, [r3]
 938 0200 000053E3 		cmp	r3, #0
 939 0204 6C00001A 		bne	.L28
 438:../CX3RDKOV5640.c ****         {
 439:../CX3RDKOV5640.c ****             glHitFV = CyFalse;
 940              		.loc 1 439 0 is_stmt 1
 941 0208 C0319FE5 		ldr	r3, .L43+12
 942 020c 0020A0E3 		mov	r2, #0
 943 0210 002083E5 		str	r2, [r3]
 440:../CX3RDKOV5640.c ****             glDMATxCount=0;
 944              		.loc 1 440 0
 945 0214 B8319FE5 		ldr	r3, .L43+16
 946 0218 0020A0E3 		mov	r2, #0
 947 021c 002083E5 		str	r2, [r3]
 441:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 442:../CX3RDKOV5640.c ****             CyU3PTimerStop (&UvcTimer);
 948              		.loc 1 442 0
 949 0220 A0019FE5 		ldr	r0, .L43+4
 950 0224 FEFFFFEB 		bl	_txe_timer_deactivate
 443:../CX3RDKOV5640.c **** #endif
 444:../CX3RDKOV5640.c **** 
 445:../CX3RDKOV5640.c ****             if (glActiveSocket)
 951              		.loc 1 445 0
 952 0228 B4319FE5 		ldr	r3, .L43+32
 953 022c 0030D3E5 		ldrb	r3, [r3]
 954 0230 FF3003E2 		and	r3, r3, #255
 955 0234 000053E3 		cmp	r3, #0
 956 0238 0700000A 		beq	.L38
 446:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK1,
 957              		.loc 1 446 0
 958 023c 0230A0E3 		mov	r3, #2
 959 0240 00308DE5 		str	r3, [sp]
 960 0244 A0019FE5 		ldr	r0, .L43+40
 961 0248 0D10A0E3 		mov	r1, #13
 962 024c 98219FE5 		ldr	r2, .L43+40
 963 0250 0030A0E3 		mov	r3, #0
 964 0254 FEFFFFEB 		bl	CyU3PGpifSMSwitch
 965 0258 060000EA 		b	.L39
 966              	.L38:
 447:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK1, ES_UVC_GPIF_SWITCH_TIMEOUT);
 448:../CX3RDKOV5640.c ****             else
 449:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 967              		.loc 1 449 0
 968 025c 0230A0E3 		mov	r3, #2
 969 0260 00308DE5 		str	r3, [sp]
 970 0264 80019FE5 		ldr	r0, .L43+40
 971 0268 0010A0E3 		mov	r1, #0
 972 026c 78219FE5 		ldr	r2, .L43+40
 973 0270 0030A0E3 		mov	r3, #0
 974 0274 FEFFFFEB 		bl	CyU3PGpifSMSwitch
 975              	.L39:
 450:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 451:../CX3RDKOV5640.c **** #ifdef VISDebug
 452:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_CONS_EVENT glActiveSocket  %x", glActiveS
 976              		.loc 1 452 0
 977 0278 64319FE5 		ldr	r3, .L43+32
 978 027c 0030D3E5 		ldrb	r3, [r3]
 979 0280 FF3003E2 		and	r3, r3, #255
 980 0284 0400A0E3 		mov	r0, #4
 981 0288 60119FE5 		ldr	r1, .L43+44
 982 028c 0320A0E1 		mov	r2, r3
 983 0290 FEFFFFEB 		bl	CyU3PDebugPrint
 453:../CX3RDKOV5640.c **** #endif
 454:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 984              		.loc 1 454 0
 985 0294 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 455:../CX3RDKOV5640.c ****             doLpmDisable = CyTrue;
 986              		.loc 1 455 0
 987 0298 24319FE5 		ldr	r3, .L43
 988 029c 0120A0E3 		mov	r2, #1
 989 02a0 002083E5 		str	r2, [r3]
 456:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 457:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 990              		.loc 1 457 0
 991 02a4 1C019FE5 		ldr	r0, .L43+4
 992 02a8 7D1FA0E3 		mov	r1, #500
 993 02ac 0020A0E3 		mov	r2, #0
 994 02b0 FEFFFFEB 		bl	_txe_timer_change
 458:../CX3RDKOV5640.c **** #endif
 459:../CX3RDKOV5640.c **** 
 460:../CX3RDKOV5640.c ****             if(glStillCaptured == CyTrue)
 995              		.loc 1 460 0
 996 02b4 38319FE5 		ldr	r3, .L43+48
 997 02b8 003093E5 		ldr	r3, [r3]
 998 02bc 010053E3 		cmp	r3, #1
 999 02c0 1000001A 		bne	.L40
 461:../CX3RDKOV5640.c ****             {
 462:../CX3RDKOV5640.c ****             	glStillCaptured = CyFalse;
 1000              		.loc 1 462 0
 1001 02c4 28319FE5 		ldr	r3, .L43+48
 1002 02c8 0020A0E3 		mov	r2, #0
 1003 02cc 002083E5 		str	r2, [r3]
 463:../CX3RDKOV5640.c ****             	glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1004              		.loc 1 463 0
 1005 02d0 20319FE5 		ldr	r3, .L43+52
 1006 02d4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1007 02d8 203023E2 		eor	r3, r3, #32
 1008 02dc FF2003E2 		and	r2, r3, #255
 1009 02e0 10319FE5 		ldr	r3, .L43+52
 1010 02e4 0120C3E5 		strb	r2, [r3, #1]
 464:../CX3RDKOV5640.c ****             	glFrameIndexToSet = glCurrentFrameIndex;
 1011              		.loc 1 464 0
 1012 02e8 0C319FE5 		ldr	r3, .L43+56
 1013 02ec 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 1014 02f0 08319FE5 		ldr	r3, .L43+60
 1015 02f4 0020C3E5 		strb	r2, [r3]
 465:../CX3RDKOV5640.c ****             	CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1016              		.loc 1 465 0
 1017 02f8 DC009FE5 		ldr	r0, .L43+24
 1018 02fc 1010A0E3 		mov	r1, #16
 1019 0300 0020A0E3 		mov	r2, #0
 1020 0304 FEFFFFEB 		bl	_txe_event_flags_set
 1021              	.L40:
 466:../CX3RDKOV5640.c ****             }
 467:../CX3RDKOV5640.c ****             if(glStillCaptureStart == CyTrue)
 1022              		.loc 1 467 0
 1023 0308 F4309FE5 		ldr	r3, .L43+64
 1024 030c 003093E5 		ldr	r3, [r3]
 1025 0310 010053E3 		cmp	r3, #1
 1026 0314 2800001A 		bne	.L28
 468:../CX3RDKOV5640.c ****             {
 469:../CX3RDKOV5640.c ****             	if(glStillSkip == 3)
 1027              		.loc 1 469 0
 1028 0318 E8309FE5 		ldr	r3, .L43+68
 1029 031c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 0320 030053E3 		cmp	r3, #3
 1031 0324 0D00001A 		bne	.L41
 470:../CX3RDKOV5640.c **** 				{
 471:../CX3RDKOV5640.c ****             		glStillSkip--;
 1032              		.loc 1 471 0
 1033 0328 D8309FE5 		ldr	r3, .L43+68
 1034 032c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 0330 013043E2 		sub	r3, r3, #1
 1036 0334 FF2003E2 		and	r2, r3, #255
 1037 0338 C8309FE5 		ldr	r3, .L43+68
 1038 033c 0020C3E5 		strb	r2, [r3]
 472:../CX3RDKOV5640.c ****             		glFrameIndexToSet = 4;
 1039              		.loc 1 472 0
 1040 0340 B8309FE5 		ldr	r3, .L43+60
 1041 0344 0420A0E3 		mov	r2, #4
 1042 0348 0020C3E5 		strb	r2, [r3]
 473:../CX3RDKOV5640.c **** 					CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1043              		.loc 1 473 0
 1044 034c 88009FE5 		ldr	r0, .L43+24
 1045 0350 1010A0E3 		mov	r1, #16
 1046 0354 0020A0E3 		mov	r2, #0
 1047 0358 FEFFFFEB 		bl	_txe_event_flags_set
 1048 035c 160000EA 		b	.L28
 1049              	.L41:
 474:../CX3RDKOV5640.c **** 				}
 475:../CX3RDKOV5640.c ****             	else if(glStillSkip == 0)
 1050              		.loc 1 475 0
 1051 0360 A0309FE5 		ldr	r3, .L43+68
 1052 0364 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1053 0368 000053E3 		cmp	r3, #0
 1054 036c 0C00001A 		bne	.L42
 476:../CX3RDKOV5640.c ****             	{
 477:../CX3RDKOV5640.c ****             		glStillCaptureStart = CyFalse;
 1055              		.loc 1 477 0
 1056 0370 8C309FE5 		ldr	r3, .L43+64
 1057 0374 0020A0E3 		mov	r2, #0
 1058 0378 002083E5 		str	r2, [r3]
 478:../CX3RDKOV5640.c **** 					glStillCaptured = CyTrue;
 1059              		.loc 1 478 0
 1060 037c 70309FE5 		ldr	r3, .L43+48
 1061 0380 0120A0E3 		mov	r2, #1
 1062 0384 002083E5 		str	r2, [r3]
 479:../CX3RDKOV5640.c **** 					glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1063              		.loc 1 479 0
 1064 0388 68309FE5 		ldr	r3, .L43+52
 1065 038c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1066 0390 203023E2 		eor	r3, r3, #32
 1067 0394 FF2003E2 		and	r2, r3, #255
 1068 0398 58309FE5 		ldr	r3, .L43+52
 1069 039c 0120C3E5 		strb	r2, [r3, #1]
 1070 03a0 050000EA 		b	.L28
 1071              	.L42:
 480:../CX3RDKOV5640.c ****             	}
 481:../CX3RDKOV5640.c ****             	else
 482:../CX3RDKOV5640.c ****             		glStillSkip--;
 1072              		.loc 1 482 0
 1073 03a4 5C309FE5 		ldr	r3, .L43+68
 1074 03a8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1075 03ac 013043E2 		sub	r3, r3, #1
 1076 03b0 FF2003E2 		and	r2, r3, #255
 1077 03b4 4C309FE5 		ldr	r3, .L43+68
 1078 03b8 0020C3E5 		strb	r2, [r3]
 1079              	.L28:
 483:../CX3RDKOV5640.c ****             }
 484:../CX3RDKOV5640.c ****         }
 485:../CX3RDKOV5640.c ****     }
 486:../CX3RDKOV5640.c **** }
 1080              		.loc 1 486 0
 1081 03bc 04D04BE2 		sub	sp, fp, #4
 1082              		@ sp needed
 1083 03c0 0088BDE8 		ldmfd	sp!, {fp, pc}
 1084              	.L44:
 1085              		.align	2
 1086              	.L43:
 1087 03c4 00000000 		.word	doLpmDisable
 1088 03c8 00000000 		.word	UvcTimer
 1089 03cc 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 1090 03d0 00000000 		.word	glHitFV
 1091 03d4 00000000 		.word	glDMATxCount
 1092 03d8 A8000000 		.word	.LC5
 1093 03dc 00000000 		.word	glTimerEvent
 1094 03e0 00000000 		.word	glDmaDone
 1095 03e4 00000000 		.word	glActiveSocket
 1096 03e8 00000000 		.word	glIsStreamingStarted
 1097 03ec 01010000 		.word	257
 1098 03f0 F0000000 		.word	.LC6
 1099 03f4 00000000 		.word	glStillCaptured
 1100 03f8 00000000 		.word	glUVCHeader
 1101 03fc 00000000 		.word	glCurrentFrameIndex
 1102 0400 00000000 		.word	glFrameIndexToSet
 1103 0404 00000000 		.word	glStillCaptureStart
 1104 0408 00000000 		.word	glStillSkip
 1105              		.cfi_endproc
 1106              	.LFE6:
 1108              		.section	.rodata
 1109 012d 000000   		.align	2
 1110              	.LC7:
 1111 0130 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTE"
 1111      5F553350 
 1111      5F555342 
 1111      5F455645 
 1111      4E545F53 
 1112 015d 52464143 		.ascii	"RFACE: esUVCUvcApplnStop\000"
 1112      453A2065 
 1112      73555643 
 1112      55766341 
 1112      70706C6E 
 1113 0176 0000     		.align	2
 1114              	.LC8:
 1115 0178 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTE"
 1115      5F553350 
 1115      5F555342 
 1115      5F455645 
 1115      4E545F53 
 1116 01a5 52464143 		.ascii	"RFACE: esUVCUvcApplnStart\000"
 1116      453A2065 
 1116      73555643 
 1116      55766341 
 1116      70706C6E 
 1117 01bf 00       		.align	2
 1118              	.LC9:
 1119 01c0 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF: esUVCUvcApplnStop"
 1119      5F553350 
 1119      5F555342 
 1119      5F455645 
 1119      4E545F53 
 1120 01ed 00       		.ascii	"\000"
 1121 01ee 0000     		.align	2
 1122              	.LC10:
 1123 01f0 0A0D4576 		.ascii	"\012\015Event %x: esUVCUvcApplnStop\000"
 1123      656E7420 
 1123      25783A20 
 1123      65735556 
 1123      43557663 
 1124              		.section	.text.esUVCUvcApplnUSBEventCB,"ax",%progbits
 1125              		.align	2
 1127              	esUVCUvcApplnUSBEventCB:
 1128              	.LFB7:
 487:../CX3RDKOV5640.c **** 
 488:../CX3RDKOV5640.c **** /* This is the Callback function to handle the USB Events */
 489:../CX3RDKOV5640.c ****     static void
 490:../CX3RDKOV5640.c **** esUVCUvcApplnUSBEventCB (
 491:../CX3RDKOV5640.c ****         CyU3PUsbEventType_t evtype,     /* Event type */
 492:../CX3RDKOV5640.c ****         uint16_t            evdata      /* Event data */
 493:../CX3RDKOV5640.c ****         )
 494:../CX3RDKOV5640.c **** {
 1129              		.loc 1 494 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 16
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1134              	.LCFI14:
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 11, -8
 1137              		.cfi_offset 14, -4
 1138 0004 04B08DE2 		add	fp, sp, #4
 1139              	.LCFI15:
 1140              		.cfi_def_cfa 11, 4
 1141 0008 10D04DE2 		sub	sp, sp, #16
 1142 000c 0020A0E1 		mov	r2, r0
 1143 0010 0130A0E1 		mov	r3, r1
 1144 0014 0D204BE5 		strb	r2, [fp, #-13]
 1145 0018 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 495:../CX3RDKOV5640.c ****     uint8_t interface = 0, altSetting = 0;
 1146              		.loc 1 495 0
 1147 001c 0030A0E3 		mov	r3, #0
 1148 0020 05304BE5 		strb	r3, [fp, #-5]
 1149 0024 0030A0E3 		mov	r3, #0
 1150 0028 06304BE5 		strb	r3, [fp, #-6]
 496:../CX3RDKOV5640.c **** 
 497:../CX3RDKOV5640.c ****     switch (evtype)
 1151              		.loc 1 497 0
 1152 002c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1153 0030 070053E3 		cmp	r3, #7
 1154 0034 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1155 0038 610000EA 		b	.L58
 1156              	.L48:
 1157 003c 50010000 		.word	.L47
 1158 0040 50010000 		.word	.L47
 1159 0044 5C000000 		.word	.L49
 1160 0048 C4010000 		.word	.L58
 1161 004c 50010000 		.word	.L47
 1162 0050 50010000 		.word	.L47
 1163 0054 C4010000 		.word	.L58
 1164 0058 7C000000 		.word	.L50
 1165              	.L49:
 498:../CX3RDKOV5640.c ****     {
 499:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SUSPEND:
 500:../CX3RDKOV5640.c ****             /* Suspend the device with Wake On Bus Activity set */
 501:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1166              		.loc 1 501 0
 1167 005c 6C319FE5 		ldr	r3, .L59
 1168 0060 0020A0E3 		mov	r2, #0
 1169 0064 002083E5 		str	r2, [r3]
 502:../CX3RDKOV5640.c ****             CyU3PEventSet (&glTimerEvent, ES_USB_SUSP_EVENT_FLAG, CYU3P_EVENT_OR);
 1170              		.loc 1 502 0
 1171 0068 64019FE5 		ldr	r0, .L59+4
 1172 006c 2010A0E3 		mov	r1, #32
 1173 0070 0020A0E3 		mov	r2, #0
 1174 0074 FEFFFFEB 		bl	_txe_event_flags_set
 503:../CX3RDKOV5640.c ****             break;
 1175              		.loc 1 503 0
 1176 0078 520000EA 		b	.L45
 1177              	.L50:
 504:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETINTF:
 505:../CX3RDKOV5640.c ****             /* Start the video streamer application if the
 506:../CX3RDKOV5640.c ****              * interface requested was 1. If not, stop the
 507:../CX3RDKOV5640.c ****              * streamer. */
 508:../CX3RDKOV5640.c ****             interface = CY_U3P_GET_MSB(evdata);
 1178              		.loc 1 508 0
 1179 007c B0315BE1 		ldrh	r3, [fp, #-16]
 1180 0080 2334A0E1 		mov	r3, r3, lsr #8
 1181 0084 0338A0E1 		mov	r3, r3, asl #16
 1182 0088 2338A0E1 		mov	r3, r3, lsr #16
 1183 008c 05304BE5 		strb	r3, [fp, #-5]
 509:../CX3RDKOV5640.c ****             altSetting = CY_U3P_GET_LSB(evdata);
 1184              		.loc 1 509 0
 1185 0090 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 1186 0094 06304BE5 		strb	r3, [fp, #-6]
 510:../CX3RDKOV5640.c **** 
 511:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1187              		.loc 1 511 0
 1188 0098 30319FE5 		ldr	r3, .L59
 1189 009c 0020A0E3 		mov	r2, #0
 1190 00a0 002083E5 		str	r2, [r3]
 512:../CX3RDKOV5640.c **** 
 513:../CX3RDKOV5640.c ****             if ((altSetting == ES_UVC_STREAM_INTERFACE) && (interface == 1))
 1191              		.loc 1 513 0
 1192 00a4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1193 00a8 010053E3 		cmp	r3, #1
 1194 00ac 1200001A 		bne	.L52
 1195              		.loc 1 513 0 is_stmt 0 discriminator 1
 1196 00b0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1197 00b4 010053E3 		cmp	r3, #1
 1198 00b8 0F00001A 		bne	.L52
 514:../CX3RDKOV5640.c ****             {
 515:../CX3RDKOV5640.c ****                 /* Stop the application before re-starting. */
 516:../CX3RDKOV5640.c ****                 if (glIsApplnActive)
 1199              		.loc 1 516 0 is_stmt 1
 1200 00bc 14319FE5 		ldr	r3, .L59+8
 1201 00c0 003093E5 		ldr	r3, [r3]
 1202 00c4 000053E3 		cmp	r3, #0
 1203 00c8 0600000A 		beq	.L53
 517:../CX3RDKOV5640.c ****                 {
 518:../CX3RDKOV5640.c ****                 	glIsClearFeature = CyTrue;
 1204              		.loc 1 518 0
 1205 00cc 08319FE5 		ldr	r3, .L59+12
 1206 00d0 0120A0E3 		mov	r2, #1
 1207 00d4 002083E5 		str	r2, [r3]
 519:../CX3RDKOV5640.c ****                     esUVCUvcApplnStop ();
 1208              		.loc 1 519 0
 1209 00d8 FEFFFFEB 		bl	esUVCUvcApplnStop
 520:../CX3RDKOV5640.c **** #ifdef VISDebug
 521:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStop");
 1210              		.loc 1 521 0
 1211 00dc 0400A0E3 		mov	r0, #4
 1212 00e0 F8109FE5 		ldr	r1, .L59+16
 1213 00e4 FEFFFFEB 		bl	CyU3PDebugPrint
 1214              	.L53:
 522:../CX3RDKOV5640.c **** #endif
 523:../CX3RDKOV5640.c ****                 }
 524:../CX3RDKOV5640.c ****                 esUVCUvcApplnStart ();
 1215              		.loc 1 524 0
 1216 00e8 FEFFFFEB 		bl	esUVCUvcApplnStart
 525:../CX3RDKOV5640.c **** #ifdef VISDebug
 526:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStart")
 1217              		.loc 1 526 0
 1218 00ec 0400A0E3 		mov	r0, #4
 1219 00f0 EC109FE5 		ldr	r1, .L59+20
 1220 00f4 FEFFFFEB 		bl	CyU3PDebugPrint
 1221 00f8 130000EA 		b	.L54
 1222              	.L52:
 527:../CX3RDKOV5640.c **** #endif
 528:../CX3RDKOV5640.c **** 
 529:../CX3RDKOV5640.c ****             }
 530:../CX3RDKOV5640.c ****             else if ((altSetting == 0x00) && (interface == 1))
 1223              		.loc 1 530 0
 1224 00fc 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1225 0100 000053E3 		cmp	r3, #0
 1226 0104 1000001A 		bne	.L54
 1227              		.loc 1 530 0 is_stmt 0 discriminator 1
 1228 0108 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1229 010c 010053E3 		cmp	r3, #1
 1230 0110 0D00001A 		bne	.L54
 531:../CX3RDKOV5640.c ****             {
 532:../CX3RDKOV5640.c ****             	glPreviewStarted = CyFalse;
 1231              		.loc 1 532 0 is_stmt 1
 1232 0114 CC309FE5 		ldr	r3, .L59+24
 1233 0118 0020A0E3 		mov	r2, #0
 1234 011c 002083E5 		str	r2, [r3]
 533:../CX3RDKOV5640.c ****             	/* Stop the application before re-starting. */
 534:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1235              		.loc 1 534 0
 1236 0120 B4309FE5 		ldr	r3, .L59+12
 1237 0124 0120A0E3 		mov	r2, #1
 1238 0128 002083E5 		str	r2, [r3]
 535:../CX3RDKOV5640.c **** 				esUVCUvcApplnStop ();
 1239              		.loc 1 535 0
 1240 012c FEFFFFEB 		bl	esUVCUvcApplnStop
 536:../CX3RDKOV5640.c **** 
 537:../CX3RDKOV5640.c **** 				glcommitcount = 0;
 1241              		.loc 1 537 0
 1242 0130 B4309FE5 		ldr	r3, .L59+28
 1243 0134 0020A0E3 		mov	r2, #0
 1244 0138 0020C3E5 		strb	r2, [r3]
 538:../CX3RDKOV5640.c **** #ifdef VISDebug
 539:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF: esUVCUvcApplnStop");
 1245              		.loc 1 539 0
 1246 013c 0400A0E3 		mov	r0, #4
 1247 0140 A8109FE5 		ldr	r1, .L59+32
 1248 0144 FEFFFFEB 		bl	CyU3PDebugPrint
 540:../CX3RDKOV5640.c **** #endif
 541:../CX3RDKOV5640.c ****             }
 542:../CX3RDKOV5640.c ****             break;
 1249              		.loc 1 542 0
 1250 0148 1E0000EA 		b	.L45
 1251              	.L54:
 1252 014c 1D0000EA 		b	.L45
 1253              	.L47:
 543:../CX3RDKOV5640.c **** 
 544:../CX3RDKOV5640.c ****             /* Fall-through. */
 545:../CX3RDKOV5640.c **** 
 546:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETCONF:
 547:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_RESET:
 548:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 549:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_CONNECT:
 550:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1254              		.loc 1 550 0
 1255 0150 78309FE5 		ldr	r3, .L59
 1256 0154 0020A0E3 		mov	r2, #0
 1257 0158 002083E5 		str	r2, [r3]
 551:../CX3RDKOV5640.c ****             if (evtype == CY_U3P_USB_EVENT_SETCONF)
 1258              		.loc 1 551 0
 1259 015c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1260 0160 050053E3 		cmp	r3, #5
 1261 0164 0300001A 		bne	.L55
 552:../CX3RDKOV5640.c ****                 glIsConfigured = CyTrue;
 1262              		.loc 1 552 0
 1263 0168 84309FE5 		ldr	r3, .L59+36
 1264 016c 0120A0E3 		mov	r2, #1
 1265 0170 002083E5 		str	r2, [r3]
 1266 0174 020000EA 		b	.L56
 1267              	.L55:
 553:../CX3RDKOV5640.c ****             else
 554:../CX3RDKOV5640.c ****                 glIsConfigured = CyFalse;
 1268              		.loc 1 554 0
 1269 0178 74309FE5 		ldr	r3, .L59+36
 1270 017c 0020A0E3 		mov	r2, #0
 1271 0180 002083E5 		str	r2, [r3]
 1272              	.L56:
 555:../CX3RDKOV5640.c **** 
 556:../CX3RDKOV5640.c ****             /* Stop the video streamer application and enable LPM. */
 557:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 1273              		.loc 1 557 0
 1274 0184 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 558:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 1275              		.loc 1 558 0
 1276 0188 48309FE5 		ldr	r3, .L59+8
 1277 018c 003093E5 		ldr	r3, [r3]
 1278 0190 000053E3 		cmp	r3, #0
 1279 0194 0900000A 		beq	.L57
 559:../CX3RDKOV5640.c ****             {
 560:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1280              		.loc 1 560 0
 1281 0198 3C309FE5 		ldr	r3, .L59+12
 1282 019c 0120A0E3 		mov	r2, #1
 1283 01a0 002083E5 		str	r2, [r3]
 561:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop ();
 1284              		.loc 1 561 0
 1285 01a4 FEFFFFEB 		bl	esUVCUvcApplnStop
 562:../CX3RDKOV5640.c **** #ifdef VISDebug
 563:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rEvent %x: esUVCUvcApplnStop", evtype);
 1286              		.loc 1 563 0
 1287 01a8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1288 01ac 0400A0E3 		mov	r0, #4
 1289 01b0 40109FE5 		ldr	r1, .L59+40
 1290 01b4 0320A0E1 		mov	r2, r3
 1291 01b8 FEFFFFEB 		bl	CyU3PDebugPrint
 564:../CX3RDKOV5640.c **** #endif
 565:../CX3RDKOV5640.c ****             }
 566:../CX3RDKOV5640.c ****             break;
 1292              		.loc 1 566 0
 1293 01bc 010000EA 		b	.L45
 1294              	.L57:
 1295 01c0 000000EA 		b	.L45
 1296              	.L58:
 567:../CX3RDKOV5640.c ****         default:
 568:../CX3RDKOV5640.c ****             break;
 1297              		.loc 1 568 0
 1298 01c4 0000A0E1 		mov	r0, r0	@ nop
 1299              	.L45:
 569:../CX3RDKOV5640.c ****     }
 570:../CX3RDKOV5640.c **** }
 1300              		.loc 1 570 0
 1301 01c8 04D04BE2 		sub	sp, fp, #4
 1302              		@ sp needed
 1303 01cc 0088BDE8 		ldmfd	sp!, {fp, pc}
 1304              	.L60:
 1305              		.align	2
 1306              	.L59:
 1307 01d0 00000000 		.word	glIsStreamingStarted
 1308 01d4 00000000 		.word	glTimerEvent
 1309 01d8 00000000 		.word	glIsApplnActive
 1310 01dc 00000000 		.word	glIsClearFeature
 1311 01e0 30010000 		.word	.LC7
 1312 01e4 78010000 		.word	.LC8
 1313 01e8 00000000 		.word	glPreviewStarted
 1314 01ec 00000000 		.word	glcommitcount
 1315 01f0 C0010000 		.word	.LC9
 1316 01f4 00000000 		.word	glIsConfigured
 1317 01f8 F0010000 		.word	.LC10
 1318              		.cfi_endproc
 1319              	.LFE7:
 1321              		.section	.text.esUVCApplnLPMRqtCB,"ax",%progbits
 1322              		.align	2
 1324              	esUVCApplnLPMRqtCB:
 1325              	.LFB8:
 571:../CX3RDKOV5640.c **** 
 572:../CX3RDKOV5640.c **** /* Callback for LPM requests. Always return true to allow host to transition device
 573:../CX3RDKOV5640.c ****  * into required LPM state U1/U2/U3. When data transmission is active LPM management
 574:../CX3RDKOV5640.c ****  * is explicitly disabled to prevent data transmission errors.
 575:../CX3RDKOV5640.c ****  */
 576:../CX3RDKOV5640.c **** static CyBool_t esUVCApplnLPMRqtCB (
 577:../CX3RDKOV5640.c ****         CyU3PUsbLinkPowerMode link_mode         /*USB 3.0 linkmode requested by Host */
 578:../CX3RDKOV5640.c ****         )
 579:../CX3RDKOV5640.c **** {
 1326              		.loc 1 579 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 1331 0000 04B02DE5 		str	fp, [sp, #-4]!
 1332              	.LCFI16:
 1333              		.cfi_def_cfa_offset 4
 1334              		.cfi_offset 11, -4
 1335 0004 00B08DE2 		add	fp, sp, #0
 1336              	.LCFI17:
 1337              		.cfi_def_cfa_register 11
 1338 0008 0CD04DE2 		sub	sp, sp, #12
 1339 000c 0030A0E1 		mov	r3, r0
 1340 0010 05304BE5 		strb	r3, [fp, #-5]
 580:../CX3RDKOV5640.c ****     return CyTrue;
 1341              		.loc 1 580 0
 1342 0014 0130A0E3 		mov	r3, #1
 581:../CX3RDKOV5640.c **** }
 1343              		.loc 1 581 0
 1344 0018 0300A0E1 		mov	r0, r3
 1345 001c 00D04BE2 		sub	sp, fp, #0
 1346              		@ sp needed
 1347 0020 04B09DE4 		ldr	fp, [sp], #4
 1348 0024 1EFF2FE1 		bx	lr
 1349              		.cfi_endproc
 1350              	.LFE8:
 1352              		.section	.rodata
 1353 020e 0000     		.align	2
 1354              	.LC11:
 1355 0210 0A0D6573 		.ascii	"\012\015esSetCameraResolution\000"
 1355      53657443 
 1355      616D6572 
 1355      61526573 
 1355      6F6C7574 
 1356              		.align	2
 1357              	.LC12:
 1358 0228 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS1 Err = 0x%x\000"
 1358      42537470 
 1358      43423A53 
 1358      6574496E 
 1358      74665061 
 1359              		.align	2
 1360              	.LC13:
 1361 0250 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams FS Err = 0x%x\000"
 1361      42537470 
 1361      43423A53 
 1361      6574496E 
 1361      74665061 
 1362 0277 00       		.align	2
 1363              	.LC14:
 1364 0278 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS2 Err = 0x%x\000"
 1364      42537470 
 1364      43423A53 
 1364      6574496E 
 1364      74665061 
 1365              		.align	2
 1366              	.LC15:
 1367 02a0 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams HS Err = 0x%x\000"
 1367      42537470 
 1367      43423A53 
 1367      6574496E 
 1367      74665061 
 1368              		.section	.text.esSetCameraResolution,"ax",%progbits
 1369              		.align	2
 1370              		.global	esSetCameraResolution
 1372              	esSetCameraResolution:
 1373              	.LFB9:
 582:../CX3RDKOV5640.c **** 
 583:../CX3RDKOV5640.c **** //TODO Change this function with "Sensor Specific" function to write the sensor settings & configur
 584:../CX3RDKOV5640.c **** void esSetCameraResolution(uint8_t FrameIndex)
 585:../CX3RDKOV5640.c **** {
 1374              		.loc 1 585 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 16
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1379              	.LCFI18:
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 11, -8
 1382              		.cfi_offset 14, -4
 1383 0004 04B08DE2 		add	fp, sp, #4
 1384              	.LCFI19:
 1385              		.cfi_def_cfa 11, 4
 1386 0008 10D04DE2 		sub	sp, sp, #16
 1387 000c 0030A0E1 		mov	r3, r0
 1388 0010 0D304BE5 		strb	r3, [fp, #-13]
 586:../CX3RDKOV5640.c **** 	CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1389              		.loc 1 586 0
 1390 0014 0030A0E3 		mov	r3, #0
 1391 0018 08300BE5 		str	r3, [fp, #-8]
 587:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\resSetCameraResolution");
 1392              		.loc 1 587 0
 1393 001c 0400A0E3 		mov	r0, #4
 1394 0020 90119FE5 		ldr	r1, .L76
 1395 0024 FEFFFFEB 		bl	CyU3PDebugPrint
 588:../CX3RDKOV5640.c **** 	/* Super Speed USB Streams*/
 589:../CX3RDKOV5640.c **** 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1396              		.loc 1 589 0
 1397 0028 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1398 002c 0030A0E1 		mov	r3, r0
 1399 0030 030053E3 		cmp	r3, #3
 1400 0034 3F00001A 		bne	.L64
 590:../CX3RDKOV5640.c **** 	{
 591:../CX3RDKOV5640.c **** 		if(FrameIndex == 0x01)
 1401              		.loc 1 591 0
 1402 0038 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1403 003c 010053E3 		cmp	r3, #1
 1404 0040 0C00001A 		bne	.L65
 592:../CX3RDKOV5640.c **** 		{
 593:../CX3RDKOV5640.c **** 			/* Write 1080pSettings */
 594:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc1080p30NoMclk, CyFalse);
 1405              		.loc 1 594 0
 1406 0044 70019FE5 		ldr	r0, .L76+4
 1407 0048 0010A0E3 		mov	r1, #0
 1408 004c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1409 0050 08000BE5 		str	r0, [fp, #-8]
 595:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1410              		.loc 1 595 0
 1411 0054 08301BE5 		ldr	r3, [fp, #-8]
 1412 0058 000053E3 		cmp	r3, #0
 1413 005c 0300000A 		beq	.L66
 596:../CX3RDKOV5640.c **** 			{
 597:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS1 Err = 0x%x", status);
 1414              		.loc 1 597 0
 1415 0060 0400A0E3 		mov	r0, #4
 1416 0064 54119FE5 		ldr	r1, .L76+8
 1417 0068 08201BE5 		ldr	r2, [fp, #-8]
 1418 006c FEFFFFEB 		bl	CyU3PDebugPrint
 1419              	.L66:
 598:../CX3RDKOV5640.c **** 			}
 599:../CX3RDKOV5640.c **** 			esOV5640_1080P_config();
 1420              		.loc 1 599 0
 1421 0070 FEFFFFEB 		bl	esOV5640_1080P_config
 1422 0074 4D0000EA 		b	.L63
 1423              	.L65:
 600:../CX3RDKOV5640.c **** 		}
 601:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x02)
 1424              		.loc 1 601 0
 1425 0078 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1426 007c 020053E3 		cmp	r3, #2
 1427 0080 0C00001A 		bne	.L68
 602:../CX3RDKOV5640.c **** 		{
 603:../CX3RDKOV5640.c **** 			/* Write VGA Settings */
 604:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1428              		.loc 1 604 0
 1429 0084 38019FE5 		ldr	r0, .L76+12
 1430 0088 0010A0E3 		mov	r1, #0
 1431 008c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1432 0090 08000BE5 		str	r0, [fp, #-8]
 605:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1433              		.loc 1 605 0
 1434 0094 08301BE5 		ldr	r3, [fp, #-8]
 1435 0098 000053E3 		cmp	r3, #0
 1436 009c 0300000A 		beq	.L69
 606:../CX3RDKOV5640.c **** 			{
 607:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1437              		.loc 1 607 0
 1438 00a0 0400A0E3 		mov	r0, #4
 1439 00a4 1C119FE5 		ldr	r1, .L76+16
 1440 00a8 08201BE5 		ldr	r2, [fp, #-8]
 1441 00ac FEFFFFEB 		bl	CyU3PDebugPrint
 1442              	.L69:
 608:../CX3RDKOV5640.c **** 			}
 609:../CX3RDKOV5640.c **** 			esOV5640_VGA_config();
 1443              		.loc 1 609 0
 1444 00b0 FEFFFFEB 		bl	esOV5640_VGA_config
 1445 00b4 3D0000EA 		b	.L63
 1446              	.L68:
 610:../CX3RDKOV5640.c **** 		}
 611:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x03)
 1447              		.loc 1 611 0
 1448 00b8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1449 00bc 030053E3 		cmp	r3, #3
 1450 00c0 0C00001A 		bne	.L70
 612:../CX3RDKOV5640.c **** 		{
 613:../CX3RDKOV5640.c **** 			/* Write 720pSettings */
 614:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc720p60NoMclk, CyFalse);
 1451              		.loc 1 614 0
 1452 00c4 00019FE5 		ldr	r0, .L76+20
 1453 00c8 0010A0E3 		mov	r1, #0
 1454 00cc FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1455 00d0 08000BE5 		str	r0, [fp, #-8]
 615:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1456              		.loc 1 615 0
 1457 00d4 08301BE5 		ldr	r3, [fp, #-8]
 1458 00d8 000053E3 		cmp	r3, #0
 1459 00dc 0300000A 		beq	.L71
 616:../CX3RDKOV5640.c **** 			{
 617:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1460              		.loc 1 617 0
 1461 00e0 0400A0E3 		mov	r0, #4
 1462 00e4 E4109FE5 		ldr	r1, .L76+24
 1463 00e8 08201BE5 		ldr	r2, [fp, #-8]
 1464 00ec FEFFFFEB 		bl	CyU3PDebugPrint
 1465              	.L71:
 618:../CX3RDKOV5640.c **** 			}
 619:../CX3RDKOV5640.c **** 			esOV5640_720P_config();
 1466              		.loc 1 619 0
 1467 00f0 FEFFFFEB 		bl	esOV5640_720P_config
 1468 00f4 2D0000EA 		b	.L63
 1469              	.L70:
 620:../CX3RDKOV5640.c **** 		}
 621:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x04)
 1470              		.loc 1 621 0
 1471 00f8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1472 00fc 040053E3 		cmp	r3, #4
 1473 0100 2A00001A 		bne	.L63
 622:../CX3RDKOV5640.c **** 		{
 623:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc5Mp15NoMclk, CyFalse);
 1474              		.loc 1 623 0
 1475 0104 C8009FE5 		ldr	r0, .L76+28
 1476 0108 0010A0E3 		mov	r1, #0
 1477 010c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1478 0110 08000BE5 		str	r0, [fp, #-8]
 624:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1479              		.loc 1 624 0
 1480 0114 08301BE5 		ldr	r3, [fp, #-8]
 1481 0118 000053E3 		cmp	r3, #0
 1482 011c 0300000A 		beq	.L72
 625:../CX3RDKOV5640.c **** 			{
 626:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1483              		.loc 1 626 0
 1484 0120 0400A0E3 		mov	r0, #4
 1485 0124 A4109FE5 		ldr	r1, .L76+24
 1486 0128 08201BE5 		ldr	r2, [fp, #-8]
 1487 012c FEFFFFEB 		bl	CyU3PDebugPrint
 1488              	.L72:
 627:../CX3RDKOV5640.c **** 			}
 628:../CX3RDKOV5640.c **** 			esOV5640_5MP_config();
 1489              		.loc 1 628 0
 1490 0130 FEFFFFEB 		bl	esOV5640_5MP_config
 1491 0134 1D0000EA 		b	.L63
 1492              	.L64:
 629:../CX3RDKOV5640.c **** 		}
 630:../CX3RDKOV5640.c **** 	}
 631:../CX3RDKOV5640.c **** 	/* High Speed USB Streams*/
 632:../CX3RDKOV5640.c **** 	else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1493              		.loc 1 632 0
 1494 0138 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1495 013c 0030A0E1 		mov	r3, r0
 1496 0140 020053E3 		cmp	r3, #2
 1497 0144 0D00001A 		bne	.L74
 633:../CX3RDKOV5640.c **** 	{
 634:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 635:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1498              		.loc 1 635 0
 1499 0148 74009FE5 		ldr	r0, .L76+12
 1500 014c 0010A0E3 		mov	r1, #0
 1501 0150 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1502 0154 08000BE5 		str	r0, [fp, #-8]
 636:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1503              		.loc 1 636 0
 1504 0158 08301BE5 		ldr	r3, [fp, #-8]
 1505 015c 000053E3 		cmp	r3, #0
 1506 0160 0300000A 		beq	.L75
 637:../CX3RDKOV5640.c **** 		{
 638:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams HS Err = 0x%x", status);
 1507              		.loc 1 638 0
 1508 0164 0400A0E3 		mov	r0, #4
 1509 0168 68109FE5 		ldr	r1, .L76+32
 1510 016c 08201BE5 		ldr	r2, [fp, #-8]
 1511 0170 FEFFFFEB 		bl	CyU3PDebugPrint
 1512              	.L75:
 639:../CX3RDKOV5640.c **** 		}
 640:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1513              		.loc 1 640 0
 1514 0174 FEFFFFEB 		bl	esOV5640_VGA_config
 641:../CX3RDKOV5640.c **** 		esOV5640_VGA_HS_config();
 1515              		.loc 1 641 0
 1516 0178 FEFFFFEB 		bl	esOV5640_VGA_HS_config
 1517 017c 0B0000EA 		b	.L63
 1518              	.L74:
 642:../CX3RDKOV5640.c **** 	}
 643:../CX3RDKOV5640.c **** 	/* Full Speed USB Streams*/
 644:../CX3RDKOV5640.c **** 	else
 645:../CX3RDKOV5640.c **** 	{
 646:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 647:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1519              		.loc 1 647 0
 1520 0180 FEFFFFEB 		bl	esOV5640_VGA_config
 648:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1521              		.loc 1 648 0
 1522 0184 38009FE5 		ldr	r0, .L76+12
 1523 0188 0010A0E3 		mov	r1, #0
 1524 018c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1525 0190 08000BE5 		str	r0, [fp, #-8]
 649:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1526              		.loc 1 649 0
 1527 0194 08301BE5 		ldr	r3, [fp, #-8]
 1528 0198 000053E3 		cmp	r3, #0
 1529 019c 0300000A 		beq	.L63
 650:../CX3RDKOV5640.c **** 		{
 651:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1530              		.loc 1 651 0
 1531 01a0 0400A0E3 		mov	r0, #4
 1532 01a4 1C109FE5 		ldr	r1, .L76+16
 1533 01a8 08201BE5 		ldr	r2, [fp, #-8]
 1534 01ac FEFFFFEB 		bl	CyU3PDebugPrint
 1535              	.L63:
 652:../CX3RDKOV5640.c **** 		}
 653:../CX3RDKOV5640.c **** 	}
 654:../CX3RDKOV5640.c **** }
 1536              		.loc 1 654 0
 1537 01b0 04D04BE2 		sub	sp, fp, #4
 1538              		@ sp needed
 1539 01b4 0088BDE8 		ldmfd	sp!, {fp, pc}
 1540              	.L77:
 1541              		.align	2
 1542              	.L76:
 1543 01b8 10020000 		.word	.LC11
 1544 01bc 00000000 		.word	cfgUvc1080p30NoMclk
 1545 01c0 28020000 		.word	.LC12
 1546 01c4 00000000 		.word	cfgUvcVga30NoMclk
 1547 01c8 50020000 		.word	.LC13
 1548 01cc 00000000 		.word	cfgUvc720p60NoMclk
 1549 01d0 78020000 		.word	.LC14
 1550 01d4 00000000 		.word	cfgUvc5Mp15NoMclk
 1551 01d8 A0020000 		.word	.LC15
 1552              		.cfi_endproc
 1553              	.LFE9:
 1555              		.section	.rodata
 1556 02c7 00       		.align	2
 1557              	.LC16:
 1558 02c8 0A0D6252 		.ascii	"\012\015bRType = 0x%x, bRequest = 0x%x, wValue = 0x"
 1558      54797065 
 1558      203D2030 
 1558      7825782C 
 1558      20625265 
 1559 02f5 25782C20 		.ascii	"%x, wIndex = 0x%x, wLength= 0x%x\000"
 1559      77496E64 
 1559      6578203D 
 1559      20307825 
 1559      782C2077 
 1560 0316 0000     		.align	2
 1561              	.LC17:
 1562 0318 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB: esUVCUvcApplnStop\000"
 1562      706C6E55 
 1562      53425365 
 1562      74757043 
 1562      423A2065 
 1563 033d 000000   		.align	2
 1564              	.LC18:
 1565 0340 0A0D4675 		.ascii	"\012\015Full Speed Not Supported!\000"
 1565      6C6C2053 
 1565      70656564 
 1565      204E6F74 
 1565      20537570 
 1566              		.align	2
 1567              	.LC19:
 1568 035c 0A0D5553 		.ascii	"\012\015USBStpCB:GET_CUR:SendEP0Data Err = 0x%x\000"
 1568      42537470 
 1568      43423A47 
 1568      45545F43 
 1568      55523A53 
 1569 0386 0000     		.align	2
 1570              	.LC20:
 1571 0388 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:GetEP0Data Err = 0x%x.\000"
 1571      42537470 
 1571      43423A53 
 1571      45545F43 
 1571      55523A47 
 1572 03b2 0000     		.align	2
 1573              	.LC21:
 1574 03b4 0A0D5553 		.ascii	"\012\015USBStpCB:Invalid SET_CUR Rqt Len.\000"
 1574      42537470 
 1574      43423A49 
 1574      6E76616C 
 1574      69642053 
 1575              		.align	2
 1576              	.LC22:
 1577 03d8 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL es"
 1577      706C6E55 
 1577      53425365 
 1577      74757043 
 1577      423A4553 
 1578 0405 55564355 		.ascii	"UVCUvcApplnStop\000"
 1578      76634170 
 1578      706C6E53 
 1578      746F7000 
 1579 0415 000000   		.align	2
 1580              	.LC23:
 1581 0418 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL es"
 1581      706C6E55 
 1581      53425365 
 1581      74757043 
 1581      423A4553 
 1582 0445 55564355 		.ascii	"UVCUvcApplnStart\000"
 1582      76634170 
 1582      706C6E53 
 1582      74617274 
 1582      00
 1583 0456 0000     		.align	2
 1584              	.LC24:
 1585 0458 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:still = 0x%x.\000"
 1585      42537470 
 1585      43423A53 
 1585      45545F43 
 1585      55523A73 
 1586 0479 000000   		.align	2
 1587              	.LC25:
 1588 047c 0A0D2025 		.ascii	"\012\015 %d %d %d %d %d %d %d %d %d %d %d\015\012\000"
 1588      64202564 
 1588      20256420 
 1588      25642025 
 1588      64202564 
 1589 04a2 0000     		.align	2
 1590              	.LC26:
 1591 04a4 0A0D5553 		.ascii	"\012\015USBStpCB:VCI SendEP0Data = %d\000"
 1591      42537470 
 1591      43423A56 
 1591      43492053 
 1591      656E6445 
 1592              		.align	2
 1593              	.LC27:
 1594 04c4 0A0D4175 		.ascii	"\012\015Auto Focus\000"
 1594      746F2046 
 1594      6F637573 
 1594      00
 1595              		.section	.text.esUVCUvcApplnUSBSetupCB,"ax",%progbits
 1596              		.align	2
 1598              	esUVCUvcApplnUSBSetupCB:
 1599              	.LFB10:
 655:../CX3RDKOV5640.c **** 
 656:../CX3RDKOV5640.c **** /* Callback to handle the USB Setup Requests and UVC Class events */
 657:../CX3RDKOV5640.c ****     static CyBool_t
 658:../CX3RDKOV5640.c **** esUVCUvcApplnUSBSetupCB (
 659:../CX3RDKOV5640.c ****         uint32_t setupdat0,     /* SETUP Data 0 */
 660:../CX3RDKOV5640.c ****         uint32_t setupdat1      /* SETUP Data 1 */
 661:../CX3RDKOV5640.c ****         )
 662:../CX3RDKOV5640.c **** {
 1600              		.loc 1 662 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 40
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 F0492DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, lr}
 1605              	.LCFI20:
 1606              		.cfi_def_cfa_offset 28
 1607              		.cfi_offset 4, -28
 1608              		.cfi_offset 5, -24
 1609              		.cfi_offset 6, -20
 1610              		.cfi_offset 7, -16
 1611              		.cfi_offset 8, -12
 1612              		.cfi_offset 11, -8
 1613              		.cfi_offset 14, -4
 1614 0004 18B08DE2 		add	fp, sp, #24
 1615              	.LCFI21:
 1616              		.cfi_def_cfa 11, 4
 1617 0008 54D04DE2 		sub	sp, sp, #84
 1618 000c 40000BE5 		str	r0, [fp, #-64]
 1619 0010 44100BE5 		str	r1, [fp, #-68]
 663:../CX3RDKOV5640.c ****     uint8_t  bRequest, bType,bRType, bTarget;
 664:../CX3RDKOV5640.c ****     uint16_t wValue, wIndex, wLength;
 665:../CX3RDKOV5640.c ****     uint16_t readCount = 0;
 1620              		.loc 1 665 0
 1621 0014 0030A0E3 		mov	r3, #0
 1622 0018 B2334BE1 		strh	r3, [fp, #-50]	@ movhi
 666:../CX3RDKOV5640.c ****     uint8_t  ep0Buf[2];
 667:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1623              		.loc 1 667 0
 1624 001c 0030A0E3 		mov	r3, #0
 1625 0020 24300BE5 		str	r3, [fp, #-36]
 668:../CX3RDKOV5640.c ****     uint8_t temp = 0;
 1626              		.loc 1 668 0
 1627 0024 0030A0E3 		mov	r3, #0
 1628 0028 35304BE5 		strb	r3, [fp, #-53]
 669:../CX3RDKOV5640.c ****     CyBool_t isHandled = CyFalse;
 1629              		.loc 1 669 0
 1630 002c 0030A0E3 		mov	r3, #0
 1631 0030 20300BE5 		str	r3, [fp, #-32]
 670:../CX3RDKOV5640.c ****     uint8_t RequestOption = 0;
 1632              		.loc 1 670 0
 1633 0034 0030A0E3 		mov	r3, #0
 1634 0038 25304BE5 		strb	r3, [fp, #-37]
 671:../CX3RDKOV5640.c **** 
 672:../CX3RDKOV5640.c ****     /* Decode the fields from the setup request. */
 673:../CX3RDKOV5640.c ****     bRType = (setupdat0 & CY_U3P_USB_REQUEST_TYPE_MASK);
 1635              		.loc 1 673 0
 1636 003c 40301BE5 		ldr	r3, [fp, #-64]
 1637 0040 26304BE5 		strb	r3, [fp, #-38]
 674:../CX3RDKOV5640.c ****     bType    = (bRType & CY_U3P_USB_TYPE_MASK);
 1638              		.loc 1 674 0
 1639 0044 26305BE5 		ldrb	r3, [fp, #-38]
 1640 0048 603003E2 		and	r3, r3, #96
 1641 004c 27304BE5 		strb	r3, [fp, #-39]
 675:../CX3RDKOV5640.c ****     bTarget  = (bRType & CY_U3P_USB_TARGET_MASK);
 1642              		.loc 1 675 0
 1643 0050 26305BE5 		ldrb	r3, [fp, #-38]
 1644 0054 033003E2 		and	r3, r3, #3
 1645 0058 28304BE5 		strb	r3, [fp, #-40]
 676:../CX3RDKOV5640.c ****     bRequest = ((setupdat0 & CY_U3P_USB_REQUEST_MASK) >> CY_U3P_USB_REQUEST_POS);
 1646              		.loc 1 676 0
 1647 005c 40301BE5 		ldr	r3, [fp, #-64]
 1648 0060 FF3C03E2 		and	r3, r3, #65280
 1649 0064 2334A0E1 		mov	r3, r3, lsr #8
 1650 0068 29304BE5 		strb	r3, [fp, #-41]
 677:../CX3RDKOV5640.c ****     wValue   = ((setupdat0 & CY_U3P_USB_VALUE_MASK)   >> CY_U3P_USB_VALUE_POS);
 1651              		.loc 1 677 0
 1652 006c 40301BE5 		ldr	r3, [fp, #-64]
 1653 0070 2338A0E1 		mov	r3, r3, lsr #16
 1654 0074 BC324BE1 		strh	r3, [fp, #-44]	@ movhi
 678:../CX3RDKOV5640.c ****     wIndex   = ((setupdat1 & CY_U3P_USB_INDEX_MASK)   >> CY_U3P_USB_INDEX_POS);
 1655              		.loc 1 678 0
 1656 0078 44301BE5 		ldr	r3, [fp, #-68]
 1657 007c BE324BE1 		strh	r3, [fp, #-46]	@ movhi
 679:../CX3RDKOV5640.c ****     wLength  = ((setupdat1 & CY_U3P_USB_LENGTH_MASK)  >> CY_U3P_USB_LENGTH_POS);
 1658              		.loc 1 679 0
 1659 0080 44301BE5 		ldr	r3, [fp, #-68]
 1660 0084 2338A0E1 		mov	r3, r3, lsr #16
 1661 0088 B0334BE1 		strh	r3, [fp, #-48]	@ movhi
 680:../CX3RDKOV5640.c **** 
 681:../CX3RDKOV5640.c **** #if 1
 682:../CX3RDKOV5640.c ****    	CyU3PDebugPrint(4, "\n\rbRType = 0x%x, bRequest = 0x%x, wValue = 0x%x, wIndex = 0x%x, wLength= 
 1662              		.loc 1 682 0
 1663 008c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1664 0090 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1665 0094 BCC25BE1 		ldrh	ip, [fp, #-44]
 1666 0098 BE025BE1 		ldrh	r0, [fp, #-46]
 1667 009c B0135BE1 		ldrh	r1, [fp, #-48]
 1668 00a0 00C08DE5 		str	ip, [sp]
 1669 00a4 04008DE5 		str	r0, [sp, #4]
 1670 00a8 08108DE5 		str	r1, [sp, #8]
 1671 00ac 0400A0E3 		mov	r0, #4
 1672 00b0 E41F9FE5 		ldr	r1, .L229
 1673 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 683:../CX3RDKOV5640.c **** #endif
 684:../CX3RDKOV5640.c **** 
 685:../CX3RDKOV5640.c ****     /* ClearFeature(Endpoint_Halt) received on the Streaming Endpoint. Stop Streaming */
 686:../CX3RDKOV5640.c ****     if((bTarget == CY_U3P_USB_TARGET_ENDPT) && (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
 1674              		.loc 1 686 0
 1675 00b8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1676 00bc 020053E3 		cmp	r3, #2
 1677 00c0 1F00001A 		bne	.L79
 1678              		.loc 1 686 0 is_stmt 0 discriminator 1
 1679 00c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1680 00c8 010053E3 		cmp	r3, #1
 1681 00cc 1C00001A 		bne	.L79
 687:../CX3RDKOV5640.c ****             && (wIndex == ES_UVC_EP_BULK_VIDEO) && (wValue == CY_U3P_USBX_FS_EP_HALT))
 1682              		.loc 1 687 0 is_stmt 1
 1683 00d0 BE325BE1 		ldrh	r3, [fp, #-46]
 1684 00d4 830053E3 		cmp	r3, #131
 1685 00d8 1900001A 		bne	.L79
 1686              		.loc 1 687 0 is_stmt 0 discriminator 1
 1687 00dc BC325BE1 		ldrh	r3, [fp, #-44]
 1688 00e0 000053E3 		cmp	r3, #0
 1689 00e4 1600001A 		bne	.L79
 688:../CX3RDKOV5640.c ****     {
 689:../CX3RDKOV5640.c ****         if ((glIsApplnActive) && (glIsStreamingStarted))
 1690              		.loc 1 689 0 is_stmt 1
 1691 00e8 B03F9FE5 		ldr	r3, .L229+4
 1692 00ec 003093E5 		ldr	r3, [r3]
 1693 00f0 000053E3 		cmp	r3, #0
 1694 00f4 1000000A 		beq	.L80
 1695              		.loc 1 689 0 is_stmt 0 discriminator 1
 1696 00f8 A43F9FE5 		ldr	r3, .L229+8
 1697 00fc 003093E5 		ldr	r3, [r3]
 1698 0100 000053E3 		cmp	r3, #0
 1699 0104 0C00000A 		beq	.L80
 690:../CX3RDKOV5640.c ****         {
 691:../CX3RDKOV5640.c ****         	glPreviewStarted = CyFalse;
 1700              		.loc 1 691 0 is_stmt 1
 1701 0108 983F9FE5 		ldr	r3, .L229+12
 1702 010c 0020A0E3 		mov	r2, #0
 1703 0110 002083E5 		str	r2, [r3]
 692:../CX3RDKOV5640.c ****             glIsClearFeature = CyTrue;
 1704              		.loc 1 692 0
 1705 0114 903F9FE5 		ldr	r3, .L229+16
 1706 0118 0120A0E3 		mov	r2, #1
 1707 011c 002083E5 		str	r2, [r3]
 693:../CX3RDKOV5640.c ****             esUVCUvcApplnStop();
 1708              		.loc 1 693 0
 1709 0120 FEFFFFEB 		bl	esUVCUvcApplnStop
 694:../CX3RDKOV5640.c ****             glcommitcount = 0;
 1710              		.loc 1 694 0
 1711 0124 843F9FE5 		ldr	r3, .L229+20
 1712 0128 0020A0E3 		mov	r2, #0
 1713 012c 0020C3E5 		strb	r2, [r3]
 695:../CX3RDKOV5640.c **** #ifdef VISDebug
 696:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB: esUVCUvcApplnStop");
 1714              		.loc 1 696 0
 1715 0130 0400A0E3 		mov	r0, #4
 1716 0134 781F9FE5 		ldr	r1, .L229+24
 1717 0138 FEFFFFEB 		bl	CyU3PDebugPrint
 1718              	.L80:
 697:../CX3RDKOV5640.c **** #endif
 698:../CX3RDKOV5640.c ****         }
 699:../CX3RDKOV5640.c ****         return CyFalse;
 1719              		.loc 1 699 0
 1720 013c 0030A0E3 		mov	r3, #0
 1721 0140 4B0500EA 		b	.L228
 1722              	.L79:
 700:../CX3RDKOV5640.c ****     }
 701:../CX3RDKOV5640.c **** 
 702:../CX3RDKOV5640.c ****     if( bRType == CY_U3P_USB_GS_DEVICE)
 1723              		.loc 1 702 0
 1724 0144 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1725 0148 800053E3 		cmp	r3, #128
 1726 014c 0500001A 		bne	.L82
 703:../CX3RDKOV5640.c ****     {
 704:../CX3RDKOV5640.c ****         /* Make sure that we bring the link back to U0, so that the ERDY can be sent. */
 705:../CX3RDKOV5640.c ****         if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1727              		.loc 1 705 0
 1728 0150 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1729 0154 0030A0E1 		mov	r3, r0
 1730 0158 030053E3 		cmp	r3, #3
 1731 015c 0100001A 		bne	.L82
 706:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 1732              		.loc 1 706 0
 1733 0160 0000A0E3 		mov	r0, #0
 1734 0164 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 1735              	.L82:
 707:../CX3RDKOV5640.c ****     }
 708:../CX3RDKOV5640.c **** 
 709:../CX3RDKOV5640.c ****     if ((bTarget == CY_U3P_USB_TARGET_INTF) && ((bRequest == CY_U3P_USB_SC_SET_FEATURE)
 1736              		.loc 1 709 0
 1737 0168 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1738 016c 010053E3 		cmp	r3, #1
 1739 0170 1400001A 		bne	.L83
 1740              		.loc 1 709 0 is_stmt 0 discriminator 1
 1741 0174 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1742 0178 030053E3 		cmp	r3, #3
 1743 017c 0200000A 		beq	.L84
 710:../CX3RDKOV5640.c ****                 || (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)) && (wValue == 0))
 1744              		.loc 1 710 0 is_stmt 1
 1745 0180 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1746 0184 010053E3 		cmp	r3, #1
 1747 0188 0E00001A 		bne	.L83
 1748              	.L84:
 1749              		.loc 1 710 0 is_stmt 0 discriminator 1
 1750 018c BC325BE1 		ldrh	r3, [fp, #-44]
 1751 0190 000053E3 		cmp	r3, #0
 1752 0194 0B00001A 		bne	.L83
 711:../CX3RDKOV5640.c ****     {
 712:../CX3RDKOV5640.c ****         if (glIsConfigured)
 1753              		.loc 1 712 0 is_stmt 1
 1754 0198 183F9FE5 		ldr	r3, .L229+28
 1755 019c 003093E5 		ldr	r3, [r3]
 1756 01a0 000053E3 		cmp	r3, #0
 1757 01a4 0100000A 		beq	.L85
 713:../CX3RDKOV5640.c ****         {
 714:../CX3RDKOV5640.c ****             CyU3PUsbAckSetup ();
 1758              		.loc 1 714 0
 1759 01a8 FEFFFFEB 		bl	CyU3PUsbAckSetup
 1760 01ac 030000EA 		b	.L86
 1761              	.L85:
 715:../CX3RDKOV5640.c ****         }
 716:../CX3RDKOV5640.c ****         else
 717:../CX3RDKOV5640.c ****         {
 718:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1762              		.loc 1 718 0
 1763 01b0 0000A0E3 		mov	r0, #0
 1764 01b4 0110A0E3 		mov	r1, #1
 1765 01b8 0020A0E3 		mov	r2, #0
 1766 01bc FEFFFFEB 		bl	CyU3PUsbStall
 1767              	.L86:
 719:../CX3RDKOV5640.c ****         }
 720:../CX3RDKOV5640.c ****         return CyTrue;
 1768              		.loc 1 720 0
 1769 01c0 0130A0E3 		mov	r3, #1
 1770 01c4 2A0500EA 		b	.L228
 1771              	.L83:
 721:../CX3RDKOV5640.c ****     }
 722:../CX3RDKOV5640.c **** 
 723:../CX3RDKOV5640.c ****     if ((bRequest == CY_U3P_USB_SC_GET_STATUS) &&
 1772              		.loc 1 723 0
 1773 01c8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1774 01cc 000053E3 		cmp	r3, #0
 1775 01d0 1400001A 		bne	.L87
 1776              		.loc 1 723 0 is_stmt 0 discriminator 1
 1777 01d4 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1778 01d8 010053E3 		cmp	r3, #1
 1779 01dc 1100001A 		bne	.L87
 724:../CX3RDKOV5640.c ****             (bTarget == CY_U3P_USB_TARGET_INTF))
 725:../CX3RDKOV5640.c ****     {
 726:../CX3RDKOV5640.c ****         /* We support only interface 0. */
 727:../CX3RDKOV5640.c ****         if (wIndex == 0)
 1780              		.loc 1 727 0 is_stmt 1
 1781 01e0 BE325BE1 		ldrh	r3, [fp, #-46]
 1782 01e4 000053E3 		cmp	r3, #0
 1783 01e8 0800001A 		bne	.L88
 728:../CX3RDKOV5640.c ****         {
 729:../CX3RDKOV5640.c ****             ep0Buf[0] = 0;
 1784              		.loc 1 729 0
 1785 01ec 0030A0E3 		mov	r3, #0
 1786 01f0 34304BE5 		strb	r3, [fp, #-52]
 730:../CX3RDKOV5640.c ****             ep0Buf[1] = 0;
 1787              		.loc 1 730 0
 1788 01f4 0030A0E3 		mov	r3, #0
 1789 01f8 33304BE5 		strb	r3, [fp, #-51]
 731:../CX3RDKOV5640.c ****             CyU3PUsbSendEP0Data (0x02, ep0Buf);
 1790              		.loc 1 731 0
 1791 01fc 34304BE2 		sub	r3, fp, #52
 1792 0200 0200A0E3 		mov	r0, #2
 1793 0204 0310A0E1 		mov	r1, r3
 1794 0208 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1795 020c 030000EA 		b	.L89
 1796              	.L88:
 732:../CX3RDKOV5640.c ****         }
 733:../CX3RDKOV5640.c ****         else
 734:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1797              		.loc 1 734 0
 1798 0210 0000A0E3 		mov	r0, #0
 1799 0214 0110A0E3 		mov	r1, #1
 1800 0218 0020A0E3 		mov	r2, #0
 1801 021c FEFFFFEB 		bl	CyU3PUsbStall
 1802              	.L89:
 735:../CX3RDKOV5640.c ****         return CyTrue;
 1803              		.loc 1 735 0
 1804 0220 0130A0E3 		mov	r3, #1
 1805 0224 120500EA 		b	.L228
 1806              	.L87:
 736:../CX3RDKOV5640.c ****     }
 737:../CX3RDKOV5640.c **** 
 738:../CX3RDKOV5640.c ****     /* Check for UVC Class Requests */
 739:../CX3RDKOV5640.c ****     if (bType == CY_U3P_USB_CLASS_RQT)
 1807              		.loc 1 739 0
 1808 0228 27305BE5 		ldrb	r3, [fp, #-39]	@ zero_extendqisi2
 1809 022c 200053E3 		cmp	r3, #32
 1810 0230 0E05001A 		bne	.L90
 740:../CX3RDKOV5640.c ****     {
 741:../CX3RDKOV5640.c **** 
 742:../CX3RDKOV5640.c ****         /* UVC Class Requests */
 743:../CX3RDKOV5640.c ****         /* Requests to the Video Streaming Interface (IF 1) */
 744:../CX3RDKOV5640.c ****         if((wIndex & 0x00FF) == ES_UVC_STREAM_INTERFACE)
 1811              		.loc 1 744 0
 1812 0234 BE325BE1 		ldrh	r3, [fp, #-46]
 1813 0238 FF3003E2 		and	r3, r3, #255
 1814 023c 010053E3 		cmp	r3, #1
 1815 0240 5301001A 		bne	.L91
 745:../CX3RDKOV5640.c ****         {
 746:../CX3RDKOV5640.c ****             /* GET_CUR Request Handling Probe/Commit Controls*/
 747:../CX3RDKOV5640.c ****             if ((bRequest == ES_UVC_USB_GET_CUR_REQ)||(bRequest == ES_UVC_USB_GET_MIN_REQ) || (bReq
 1816              		.loc 1 747 0
 1817 0244 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1818 0248 810053E3 		cmp	r3, #129
 1819 024c 0800000A 		beq	.L92
 1820              		.loc 1 747 0 is_stmt 0 discriminator 1
 1821 0250 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1822 0254 820053E3 		cmp	r3, #130
 1823 0258 0500000A 		beq	.L92
 1824 025c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1825 0260 830053E3 		cmp	r3, #131
 1826 0264 0200000A 		beq	.L92
 1827 0268 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1828 026c 870053E3 		cmp	r3, #135
 1829 0270 5F00001A 		bne	.L93
 1830              	.L92:
 748:../CX3RDKOV5640.c ****             {
 749:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1831              		.loc 1 749 0 is_stmt 1
 1832 0274 0130A0E3 		mov	r3, #1
 1833 0278 20300BE5 		str	r3, [fp, #-32]
 750:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1834              		.loc 1 750 0
 1835 027c BC325BE1 		ldrh	r3, [fp, #-44]
 1836 0280 010C53E3 		cmp	r3, #256
 1837 0284 0200000A 		beq	.L94
 1838              		.loc 1 750 0 is_stmt 0 discriminator 1
 1839 0288 BC325BE1 		ldrh	r3, [fp, #-44]
 1840 028c 020C53E3 		cmp	r3, #512
 1841 0290 4000001A 		bne	.L95
 1842              	.L94:
 751:../CX3RDKOV5640.c ****                 {
 752:../CX3RDKOV5640.c ****                 	//TODO Modify this "glProbeCtrl" according to the Supported Preview Resolutions th
 753:../CX3RDKOV5640.c **** 
 754:../CX3RDKOV5640.c **** 					/* Host requests for probe data of 34 bytes (UVC 1.1) or 26 Bytes (UVC1.0). Send it over EP0. 
 755:../CX3RDKOV5640.c **** 					if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1843              		.loc 1 755 0 is_stmt 1
 1844 0294 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1845 0298 0030A0E1 		mov	r3, r0
 1846 029c 030053E3 		cmp	r3, #3
 1847 02a0 2300001A 		bne	.L96
 756:../CX3RDKOV5640.c **** 					{
 757:../CX3RDKOV5640.c **** 						if(glCurrentFrameIndex == 4)
 1848              		.loc 1 757 0
 1849 02a4 103E9FE5 		ldr	r3, .L229+32
 1850 02a8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1851 02ac 040053E3 		cmp	r3, #4
 1852 02b0 0400001A 		bne	.L97
 758:../CX3RDKOV5640.c **** 						{
 759:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl5MpProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1853              		.loc 1 759 0
 1854 02b4 040E9FE5 		ldr	r0, .L229+36
 1855 02b8 041E9FE5 		ldr	r1, .L229+40
 1856 02bc 1A20A0E3 		mov	r2, #26
 1857 02c0 FEFFFFEB 		bl	CyU3PMemCopy
 1858 02c4 260000EA 		b	.L101
 1859              	.L97:
 760:../CX3RDKOV5640.c **** 						}
 761:../CX3RDKOV5640.c **** 						/* Probe Control for 1280x720 stream*/
 762:../CX3RDKOV5640.c **** 						else if(glCurrentFrameIndex == 3)
 1860              		.loc 1 762 0
 1861 02c8 EC3D9FE5 		ldr	r3, .L229+32
 1862 02cc 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1863 02d0 030053E3 		cmp	r3, #3
 1864 02d4 0400001A 		bne	.L99
 763:../CX3RDKOV5640.c **** 						{
 764:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl720pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1865              		.loc 1 764 0
 1866 02d8 E00D9FE5 		ldr	r0, .L229+36
 1867 02dc E41D9FE5 		ldr	r1, .L229+44
 1868 02e0 1A20A0E3 		mov	r2, #26
 1869 02e4 FEFFFFEB 		bl	CyU3PMemCopy
 1870 02e8 1D0000EA 		b	.L101
 1871              	.L99:
 765:../CX3RDKOV5640.c **** 						}
 766:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 767:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 2)
 1872              		.loc 1 767 0
 1873 02ec C83D9FE5 		ldr	r3, .L229+32
 1874 02f0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1875 02f4 020053E3 		cmp	r3, #2
 1876 02f8 0400001A 		bne	.L100
 768:../CX3RDKOV5640.c **** 						{
 769:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga60ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1877              		.loc 1 769 0
 1878 02fc BC0D9FE5 		ldr	r0, .L229+36
 1879 0300 C41D9FE5 		ldr	r1, .L229+48
 1880 0304 1A20A0E3 		mov	r2, #26
 1881 0308 FEFFFFEB 		bl	CyU3PMemCopy
 1882 030c 140000EA 		b	.L101
 1883              	.L100:
 770:../CX3RDKOV5640.c **** 						}
 771:../CX3RDKOV5640.c **** 						/* Probe Control for 1920x1080 stream*/
 772:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 1)
 1884              		.loc 1 772 0
 1885 0310 A43D9FE5 		ldr	r3, .L229+32
 1886 0314 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1887 0318 010053E3 		cmp	r3, #1
 1888 031c 1000001A 		bne	.L101
 773:../CX3RDKOV5640.c **** 						{
 774:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl1080pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1889              		.loc 1 774 0
 1890 0320 980D9FE5 		ldr	r0, .L229+36
 1891 0324 A41D9FE5 		ldr	r1, .L229+52
 1892 0328 1A20A0E3 		mov	r2, #26
 1893 032c FEFFFFEB 		bl	CyU3PMemCopy
 1894 0330 0B0000EA 		b	.L101
 1895              	.L96:
 775:../CX3RDKOV5640.c **** 						}
 776:../CX3RDKOV5640.c **** 
 777:../CX3RDKOV5640.c **** 					}
 778:../CX3RDKOV5640.c **** 					else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1896              		.loc 1 778 0
 1897 0334 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1898 0338 0030A0E1 		mov	r3, r0
 1899 033c 020053E3 		cmp	r3, #2
 1900 0340 0400001A 		bne	.L102
 779:../CX3RDKOV5640.c **** 					{
 780:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 781:../CX3RDKOV5640.c **** 						CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga30ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1901              		.loc 1 781 0
 1902 0344 740D9FE5 		ldr	r0, .L229+36
 1903 0348 841D9FE5 		ldr	r1, .L229+56
 1904 034c 1A20A0E3 		mov	r2, #26
 1905 0350 FEFFFFEB 		bl	CyU3PMemCopy
 1906 0354 020000EA 		b	.L101
 1907              	.L102:
 782:../CX3RDKOV5640.c **** 					}
 783:../CX3RDKOV5640.c **** 					else /* FULL-Speed*/
 784:../CX3RDKOV5640.c **** 					{
 785:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rFull Speed Not Supported!");
 1908              		.loc 1 785 0
 1909 0358 0400A0E3 		mov	r0, #4
 1910 035c 741D9FE5 		ldr	r1, .L229+60
 1911 0360 FEFFFFEB 		bl	CyU3PDebugPrint
 1912              	.L101:
 786:../CX3RDKOV5640.c **** 					}
 787:../CX3RDKOV5640.c **** 
 788:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(ES_UVC_MAX_PROBE_SETTING, glProbeCtrl);
 1913              		.loc 1 788 0
 1914 0364 1A00A0E3 		mov	r0, #26
 1915 0368 501D9FE5 		ldr	r1, .L229+36
 1916 036c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1917 0370 24000BE5 		str	r0, [fp, #-36]
 789:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1918              		.loc 1 789 0
 1919 0374 24301BE5 		ldr	r3, [fp, #-36]
 1920 0378 000053E3 		cmp	r3, #0
 1921 037c 0400000A 		beq	.L103
 790:../CX3RDKOV5640.c **** 					{
 791:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1922              		.loc 1 791 0
 1923 0380 0400A0E3 		mov	r0, #4
 1924 0384 501D9FE5 		ldr	r1, .L229+64
 1925 0388 24201BE5 		ldr	r2, [fp, #-36]
 1926 038c FEFFFFEB 		bl	CyU3PDebugPrint
 789:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1927              		.loc 1 789 0
 1928 0390 160000EA 		b	.L104
 1929              	.L103:
 789:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1930              		.loc 1 789 0 is_stmt 0 discriminator 1
 1931 0394 150000EA 		b	.L104
 1932              	.L95:
 792:../CX3RDKOV5640.c **** 					}
 793:../CX3RDKOV5640.c ****                 }
 794:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 1933              		.loc 1 794 0 is_stmt 1
 1934 0398 BC325BE1 		ldrh	r3, [fp, #-44]
 1935 039c 030C53E3 		cmp	r3, #768
 1936 03a0 0200000A 		beq	.L105
 1937              		.loc 1 794 0 is_stmt 0 discriminator 1
 1938 03a4 BC325BE1 		ldrh	r3, [fp, #-44]
 1939 03a8 010B53E3 		cmp	r3, #1024
 1940 03ac 0F00001A 		bne	.L104
 1941              	.L105:
 795:../CX3RDKOV5640.c ****                 {
 796:../CX3RDKOV5640.c ****                 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1942              		.loc 1 796 0 is_stmt 1
 1943 03b0 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1944 03b4 0030A0E1 		mov	r3, r0
 1945 03b8 030053E3 		cmp	r3, #3
 1946 03bc 0B00001A 		bne	.L104
 797:../CX3RDKOV5640.c ****                 	{
 798:../CX3RDKOV5640.c **** 						status = CyU3PUsbSendEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING, glStillProbeCtrl);
 1947              		.loc 1 798 0
 1948 03c0 0B00A0E3 		mov	r0, #11
 1949 03c4 141D9FE5 		ldr	r1, .L229+68
 1950 03c8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1951 03cc 24000BE5 		str	r0, [fp, #-36]
 799:../CX3RDKOV5640.c **** 						if (status != CY_U3P_SUCCESS)
 1952              		.loc 1 799 0
 1953 03d0 24301BE5 		ldr	r3, [fp, #-36]
 1954 03d4 000053E3 		cmp	r3, #0
 1955 03d8 0400000A 		beq	.L104
 800:../CX3RDKOV5640.c **** 						{
 801:../CX3RDKOV5640.c **** 							CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1956              		.loc 1 801 0
 1957 03dc 0400A0E3 		mov	r0, #4
 1958 03e0 F41C9FE5 		ldr	r1, .L229+64
 1959 03e4 24201BE5 		ldr	r2, [fp, #-36]
 1960 03e8 FEFFFFEB 		bl	CyU3PDebugPrint
 750:../CX3RDKOV5640.c ****                 {
 1961              		.loc 1 750 0
 1962 03ec E70000EA 		b	.L106
 1963              	.L104:
 1964 03f0 E60000EA 		b	.L106
 1965              	.L93:
 802:../CX3RDKOV5640.c **** 						}
 803:../CX3RDKOV5640.c ****                 	}
 804:../CX3RDKOV5640.c ****                 }
 805:../CX3RDKOV5640.c ****             }
 806:../CX3RDKOV5640.c ****             /* SET_CUR request handling Probe/Commit controls */
 807:../CX3RDKOV5640.c ****             else if (bRequest == ES_UVC_USB_SET_CUR_REQ)
 1966              		.loc 1 807 0
 1967 03f4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1968 03f8 010053E3 		cmp	r3, #1
 1969 03fc E000001A 		bne	.L107
 808:../CX3RDKOV5640.c ****             {
 809:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1970              		.loc 1 809 0
 1971 0400 0130A0E3 		mov	r3, #1
 1972 0404 20300BE5 		str	r3, [fp, #-32]
 810:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1973              		.loc 1 810 0
 1974 0408 BC325BE1 		ldrh	r3, [fp, #-44]
 1975 040c 010C53E3 		cmp	r3, #256
 1976 0410 0200000A 		beq	.L108
 1977              		.loc 1 810 0 is_stmt 0 discriminator 1
 1978 0414 BC325BE1 		ldrh	r3, [fp, #-44]
 1979 0418 020C53E3 		cmp	r3, #512
 1980 041c 5A00001A 		bne	.L109
 1981              	.L108:
 811:../CX3RDKOV5640.c ****                 {
 812:../CX3RDKOV5640.c **** 					/* Get the UVC probe/commit control data from EP0 */
 813:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_PROBE_SETTING_ALIGNED,
 1982              		.loc 1 813 0 is_stmt 1
 1983 0420 32304BE2 		sub	r3, fp, #50
 1984 0424 2000A0E3 		mov	r0, #32
 1985 0428 B41C9FE5 		ldr	r1, .L229+72
 1986 042c 0320A0E1 		mov	r2, r3
 1987 0430 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 1988 0434 24000BE5 		str	r0, [fp, #-36]
 814:../CX3RDKOV5640.c **** 							glCommitCtrl, &readCount);
 815:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1989              		.loc 1 815 0
 1990 0438 24301BE5 		ldr	r3, [fp, #-36]
 1991 043c 000053E3 		cmp	r3, #0
 1992 0440 0300000A 		beq	.L110
 816:../CX3RDKOV5640.c **** 					{
 817:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 1993              		.loc 1 817 0
 1994 0444 0400A0E3 		mov	r0, #4
 1995 0448 981C9FE5 		ldr	r1, .L229+76
 1996 044c 24201BE5 		ldr	r2, [fp, #-36]
 1997 0450 FEFFFFEB 		bl	CyU3PDebugPrint
 1998              	.L110:
 818:../CX3RDKOV5640.c **** 					}
 819:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 820:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_PROBE_SETTING)
 1999              		.loc 1 820 0
 2000 0454 B2335BE1 		ldrh	r3, [fp, #-50]
 2001 0458 1A0053E3 		cmp	r3, #26
 2002 045c 0300009A 		bls	.L111
 821:../CX3RDKOV5640.c **** 					{
 822:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2003              		.loc 1 822 0
 2004 0460 0400A0E3 		mov	r0, #4
 2005 0464 801C9FE5 		ldr	r1, .L229+80
 2006 0468 FEFFFFEB 		bl	CyU3PDebugPrint
 2007 046c 450000EA 		b	.L112
 2008              	.L111:
 823:../CX3RDKOV5640.c **** 					}
 824:../CX3RDKOV5640.c **** 					else
 825:../CX3RDKOV5640.c **** 					{
 826:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 827:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_VS_PROBE_CONTROL)
 2009              		.loc 1 827 0
 2010 0470 BC325BE1 		ldrh	r3, [fp, #-44]
 2011 0474 010C53E3 		cmp	r3, #256
 2012 0478 0400001A 		bne	.L113
 828:../CX3RDKOV5640.c **** 						{
 829:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2013              		.loc 1 829 0
 2014 047c 603C9FE5 		ldr	r3, .L229+72
 2015 0480 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2016 0484 303C9FE5 		ldr	r3, .L229+32
 2017 0488 0020C3E5 		strb	r2, [r3]
 2018 048c 3D0000EA 		b	.L112
 2019              	.L113:
 830:../CX3RDKOV5640.c **** 						}
 831:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 832:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_VS_COMMIT_CONTROL)
 2020              		.loc 1 832 0
 2021 0490 BC325BE1 		ldrh	r3, [fp, #-44]
 2022 0494 020C53E3 		cmp	r3, #512
 2023 0498 3A00001A 		bne	.L112
 833:../CX3RDKOV5640.c **** 						{
 834:../CX3RDKOV5640.c **** 
 835:../CX3RDKOV5640.c **** 							if((glcommitcount==0)||(glcheckframe!=glCommitCtrl[3]))
 2024              		.loc 1 835 0
 2025 049c 0C3C9FE5 		ldr	r3, .L229+20
 2026 04a0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2027 04a4 000053E3 		cmp	r3, #0
 2028 04a8 0500000A 		beq	.L114
 2029              		.loc 1 835 0 is_stmt 0 discriminator 1
 2030 04ac 303C9FE5 		ldr	r3, .L229+72
 2031 04b0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2032 04b4 343C9FE5 		ldr	r3, .L229+84
 2033 04b8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 04bc 030052E1 		cmp	r2, r3
 2035 04c0 3000000A 		beq	.L112
 2036              	.L114:
 836:../CX3RDKOV5640.c **** 							{
 837:../CX3RDKOV5640.c **** 								glcommitcount++;
 2037              		.loc 1 837 0 is_stmt 1
 2038 04c4 E43B9FE5 		ldr	r3, .L229+20
 2039 04c8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2040 04cc 013083E2 		add	r3, r3, #1
 2041 04d0 FF2003E2 		and	r2, r3, #255
 2042 04d4 D43B9FE5 		ldr	r3, .L229+20
 2043 04d8 0020C3E5 		strb	r2, [r3]
 838:../CX3RDKOV5640.c **** 								glcheckframe=glCommitCtrl[3];
 2044              		.loc 1 838 0
 2045 04dc 003C9FE5 		ldr	r3, .L229+72
 2046 04e0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2047 04e4 043C9FE5 		ldr	r3, .L229+84
 2048 04e8 0020C3E5 		strb	r2, [r3]
 839:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2049              		.loc 1 839 0
 2050 04ec F03B9FE5 		ldr	r3, .L229+72
 2051 04f0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2052 04f4 C03B9FE5 		ldr	r3, .L229+32
 2053 04f8 0020C3E5 		strb	r2, [r3]
 840:../CX3RDKOV5640.c **** 							glFrameIndexToSet = glCurrentFrameIndex;
 2054              		.loc 1 840 0
 2055 04fc B83B9FE5 		ldr	r3, .L229+32
 2056 0500 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 2057 0504 E83B9FE5 		ldr	r3, .L229+88
 2058 0508 0020C3E5 		strb	r2, [r3]
 841:../CX3RDKOV5640.c **** 							glPreviewStarted = CyTrue;
 2059              		.loc 1 841 0
 2060 050c 943B9FE5 		ldr	r3, .L229+12
 2061 0510 0120A0E3 		mov	r2, #1
 2062 0514 002083E5 		str	r2, [r3]
 842:../CX3RDKOV5640.c **** 
 843:../CX3RDKOV5640.c **** 							//TODO Change this function with "Sensor Specific" function to write the sensor settings & c
 844:../CX3RDKOV5640.c **** 						//	esSetCameraResolution(glCurrentFrameIndex);
 845:../CX3RDKOV5640.c **** 							esSetCameraResolution(glCommitCtrl[3]);
 2063              		.loc 1 845 0
 2064 0518 C43B9FE5 		ldr	r3, .L229+72
 2065 051c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2066 0520 0300A0E1 		mov	r0, r3
 2067 0524 FEFFFFEB 		bl	esSetCameraResolution
 846:../CX3RDKOV5640.c **** 
 847:../CX3RDKOV5640.c **** 							if (glIsApplnActive)
 2068              		.loc 1 847 0
 2069 0528 703B9FE5 		ldr	r3, .L229+4
 2070 052c 003093E5 		ldr	r3, [r3]
 2071 0530 000053E3 		cmp	r3, #0
 2072 0534 0E00000A 		beq	.L115
 848:../CX3RDKOV5640.c **** 							{
 849:../CX3RDKOV5640.c **** 								if(glcommitcount)
 2073              		.loc 1 849 0
 2074 0538 703B9FE5 		ldr	r3, .L229+20
 2075 053c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2076 0540 000053E3 		cmp	r3, #0
 2077 0544 0300000A 		beq	.L116
 850:../CX3RDKOV5640.c **** 									glIsClearFeature = CyFalse;
 2078              		.loc 1 850 0
 2079 0548 5C3B9FE5 		ldr	r3, .L229+16
 2080 054c 0020A0E3 		mov	r2, #0
 2081 0550 002083E5 		str	r2, [r3]
 2082 0554 020000EA 		b	.L117
 2083              	.L116:
 851:../CX3RDKOV5640.c **** 								else
 852:../CX3RDKOV5640.c **** 									glIsClearFeature = CyTrue;
 2084              		.loc 1 852 0
 2085 0558 4C3B9FE5 		ldr	r3, .L229+16
 2086 055c 0120A0E3 		mov	r2, #1
 2087 0560 002083E5 		str	r2, [r3]
 2088              	.L117:
 853:../CX3RDKOV5640.c **** 
 854:../CX3RDKOV5640.c **** 								esUVCUvcApplnStop();
 2089              		.loc 1 854 0
 2090 0564 FEFFFFEB 		bl	esUVCUvcApplnStop
 855:../CX3RDKOV5640.c **** #ifdef VISDebug
 856:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStop");
 2091              		.loc 1 856 0
 2092 0568 0400A0E3 		mov	r0, #4
 2093 056c 841B9FE5 		ldr	r1, .L229+92
 2094 0570 FEFFFFEB 		bl	CyU3PDebugPrint
 2095              	.L115:
 857:../CX3RDKOV5640.c **** #endif
 858:../CX3RDKOV5640.c **** 							}
 859:../CX3RDKOV5640.c **** 							esUVCUvcApplnStart();
 2096              		.loc 1 859 0
 2097 0574 FEFFFFEB 		bl	esUVCUvcApplnStart
 860:../CX3RDKOV5640.c **** #ifdef VISDebug
 861:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStart");
 2098              		.loc 1 861 0
 2099 0578 0400A0E3 		mov	r0, #4
 2100 057c 781B9FE5 		ldr	r1, .L229+96
 2101 0580 FEFFFFEB 		bl	CyU3PDebugPrint
 820:../CX3RDKOV5640.c **** 					{
 2102              		.loc 1 820 0
 2103 0584 7D0000EA 		b	.L118
 2104              	.L112:
 2105 0588 7C0000EA 		b	.L118
 2106              	.L109:
 862:../CX3RDKOV5640.c **** #endif
 863:../CX3RDKOV5640.c **** 							}
 864:../CX3RDKOV5640.c **** 						}
 865:../CX3RDKOV5640.c **** 					}
 866:../CX3RDKOV5640.c ****                 }
 867:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 2107              		.loc 1 867 0
 2108 058c BC325BE1 		ldrh	r3, [fp, #-44]
 2109 0590 030C53E3 		cmp	r3, #768
 2110 0594 0200000A 		beq	.L119
 2111              		.loc 1 867 0 is_stmt 0 discriminator 1
 2112 0598 BC325BE1 		ldrh	r3, [fp, #-44]
 2113 059c 010B53E3 		cmp	r3, #1024
 2114 05a0 5400001A 		bne	.L120
 2115              	.L119:
 868:../CX3RDKOV5640.c ****                 {
 869:../CX3RDKOV5640.c ****                 	/* Get the UVC STILL probe/commit control data from EP0 */
 870:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED,glStillCommitCtrl, &readCou
 2116              		.loc 1 870 0 is_stmt 1
 2117 05a4 32304BE2 		sub	r3, fp, #50
 2118 05a8 2000A0E3 		mov	r0, #32
 2119 05ac 4C1B9FE5 		ldr	r1, .L229+100
 2120 05b0 0320A0E1 		mov	r2, r3
 2121 05b4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2122 05b8 24000BE5 		str	r0, [fp, #-36]
 871:../CX3RDKOV5640.c **** 					CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:still = 0x%x.", wValue);
 2123              		.loc 1 871 0
 2124 05bc BC325BE1 		ldrh	r3, [fp, #-44]
 2125 05c0 0400A0E3 		mov	r0, #4
 2126 05c4 381B9FE5 		ldr	r1, .L229+104
 2127 05c8 0320A0E1 		mov	r2, r3
 2128 05cc FEFFFFEB 		bl	CyU3PDebugPrint
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 873:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[0], glStillCommitCtrl[1],  glStillCommitCtrl[2], glStillCom
 2129              		.loc 1 873 0
 2130 05d0 283B9FE5 		ldr	r3, .L229+100
 2131 05d4 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2132              		.loc 1 872 0
 2133 05d8 0320A0E1 		mov	r2, r3
 2134              		.loc 1 873 0
 2135 05dc 1C3B9FE5 		ldr	r3, .L229+100
 2136 05e0 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2137 05e4 141B9FE5 		ldr	r1, .L229+100
 2138 05e8 0210D1E5 		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2139              		.loc 1 872 0
 2140 05ec 0180A0E1 		mov	r8, r1
 2141              		.loc 1 873 0
 2142 05f0 081B9FE5 		ldr	r1, .L229+100
 2143 05f4 0310D1E5 		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2144              		.loc 1 872 0
 2145 05f8 0170A0E1 		mov	r7, r1
 874:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[4], glStillCommitCtrl[5],  glStillCommitCtrl[6], glStillCom
 2146              		.loc 1 874 0
 2147 05fc FC1A9FE5 		ldr	r1, .L229+100
 2148 0600 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2149              		.loc 1 872 0
 2150 0604 0160A0E1 		mov	r6, r1
 2151              		.loc 1 874 0
 2152 0608 F01A9FE5 		ldr	r1, .L229+100
 2153 060c 0510D1E5 		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2154              		.loc 1 872 0
 2155 0610 0150A0E1 		mov	r5, r1
 2156              		.loc 1 874 0
 2157 0614 E41A9FE5 		ldr	r1, .L229+100
 2158 0618 0610D1E5 		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2159              		.loc 1 872 0
 2160 061c 0140A0E1 		mov	r4, r1
 2161              		.loc 1 874 0
 2162 0620 D81A9FE5 		ldr	r1, .L229+100
 2163 0624 0710D1E5 		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2164              		.loc 1 872 0
 2165 0628 01E0A0E1 		mov	lr, r1
 875:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[8], glStillCommitCtrl[9], glStillCommitCtrl[10]);
 2166              		.loc 1 875 0
 2167 062c CC1A9FE5 		ldr	r1, .L229+100
 2168 0630 0810D1E5 		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2169              		.loc 1 872 0
 2170 0634 01C0A0E1 		mov	ip, r1
 2171              		.loc 1 875 0
 2172 0638 C01A9FE5 		ldr	r1, .L229+100
 2173 063c 0910D1E5 		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2174              		.loc 1 872 0
 2175 0640 0100A0E1 		mov	r0, r1
 2176              		.loc 1 875 0
 2177 0644 B41A9FE5 		ldr	r1, .L229+100
 2178 0648 0A10D1E5 		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 872:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2179              		.loc 1 872 0
 2180 064c 00808DE5 		str	r8, [sp]
 2181 0650 04708DE5 		str	r7, [sp, #4]
 2182 0654 08608DE5 		str	r6, [sp, #8]
 2183 0658 0C508DE5 		str	r5, [sp, #12]
 2184 065c 10408DE5 		str	r4, [sp, #16]
 2185 0660 14E08DE5 		str	lr, [sp, #20]
 2186 0664 18C08DE5 		str	ip, [sp, #24]
 2187 0668 1C008DE5 		str	r0, [sp, #28]
 2188 066c 20108DE5 		str	r1, [sp, #32]
 2189 0670 0400A0E3 		mov	r0, #4
 2190 0674 8C1A9FE5 		ldr	r1, .L229+108
 2191 0678 FEFFFFEB 		bl	CyU3PDebugPrint
 876:../CX3RDKOV5640.c **** 
 877:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2192              		.loc 1 877 0
 2193 067c 24301BE5 		ldr	r3, [fp, #-36]
 2194 0680 000053E3 		cmp	r3, #0
 2195 0684 0300000A 		beq	.L121
 878:../CX3RDKOV5640.c **** 					{
 879:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2196              		.loc 1 879 0
 2197 0688 0400A0E3 		mov	r0, #4
 2198 068c 541A9FE5 		ldr	r1, .L229+76
 2199 0690 24201BE5 		ldr	r2, [fp, #-36]
 2200 0694 FEFFFFEB 		bl	CyU3PDebugPrint
 2201              	.L121:
 880:../CX3RDKOV5640.c **** 					}
 881:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 882:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_STILL_PROBE_SETTING)
 2202              		.loc 1 882 0
 2203 0698 B2335BE1 		ldrh	r3, [fp, #-50]
 2204 069c 0B0053E3 		cmp	r3, #11
 2205 06a0 0300009A 		bls	.L122
 883:../CX3RDKOV5640.c **** 					{
 884:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2206              		.loc 1 884 0
 2207 06a4 0400A0E3 		mov	r0, #4
 2208 06a8 3C1A9FE5 		ldr	r1, .L229+80
 2209 06ac FEFFFFEB 		bl	CyU3PDebugPrint
 2210 06b0 0F0000EA 		b	.L123
 2211              	.L122:
 885:../CX3RDKOV5640.c **** 					}
 886:../CX3RDKOV5640.c **** 					else
 887:../CX3RDKOV5640.c **** 					{
 888:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 889:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_STILL_PROBE_CONTROL)
 2212              		.loc 1 889 0
 2213 06b4 BC325BE1 		ldrh	r3, [fp, #-44]
 2214 06b8 030C53E3 		cmp	r3, #768
 2215 06bc 0400001A 		bne	.L124
 890:../CX3RDKOV5640.c **** 						{
 891:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2216              		.loc 1 891 0
 2217 06c0 383A9FE5 		ldr	r3, .L229+100
 2218 06c4 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2219 06c8 3C3A9FE5 		ldr	r3, .L229+112
 2220 06cc 0020C3E5 		strb	r2, [r3]
 2221 06d0 070000EA 		b	.L123
 2222              	.L124:
 892:../CX3RDKOV5640.c **** 						}
 893:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 894:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_STILL_COMMIT_CONTROL)
 2223              		.loc 1 894 0
 2224 06d4 BC325BE1 		ldrh	r3, [fp, #-44]
 2225 06d8 010B53E3 		cmp	r3, #1024
 2226 06dc 0400001A 		bne	.L123
 895:../CX3RDKOV5640.c **** 						{
 896:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2227              		.loc 1 896 0
 2228 06e0 183A9FE5 		ldr	r3, .L229+100
 2229 06e4 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2230 06e8 1C3A9FE5 		ldr	r3, .L229+112
 2231 06ec 0020C3E5 		strb	r2, [r3]
 882:../CX3RDKOV5640.c **** 					{
 2232              		.loc 1 882 0
 2233 06f0 220000EA 		b	.L118
 2234              	.L123:
 2235 06f4 210000EA 		b	.L118
 2236              	.L120:
 897:../CX3RDKOV5640.c **** 						}
 898:../CX3RDKOV5640.c **** 					}
 899:../CX3RDKOV5640.c **** 
 900:../CX3RDKOV5640.c ****                 }
 901:../CX3RDKOV5640.c ****                 else if(wValue == ES_UVC_STILL_TRIGGER)
 2237              		.loc 1 901 0
 2238 06f8 BC325BE1 		ldrh	r3, [fp, #-44]
 2239 06fc 050C53E3 		cmp	r3, #1280
 2240 0700 DA03001A 		bne	.L90
 902:../CX3RDKOV5640.c ****                 {
 903:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_STILL_TRIGGER_ALIGNED,&glStillTriggerCtrl, &readCount);
 2241              		.loc 1 903 0
 2242 0704 32304BE2 		sub	r3, fp, #50
 2243 0708 1000A0E3 		mov	r0, #16
 2244 070c FC199FE5 		ldr	r1, .L229+116
 2245 0710 0320A0E1 		mov	r2, r3
 2246 0714 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2247 0718 24000BE5 		str	r0, [fp, #-36]
 904:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2248              		.loc 1 904 0
 2249 071c 24301BE5 		ldr	r3, [fp, #-36]
 2250 0720 000053E3 		cmp	r3, #0
 2251 0724 0300000A 		beq	.L125
 905:../CX3RDKOV5640.c **** 					{
 906:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2252              		.loc 1 906 0
 2253 0728 0400A0E3 		mov	r0, #4
 2254 072c B4199FE5 		ldr	r1, .L229+76
 2255 0730 24201BE5 		ldr	r2, [fp, #-36]
 2256 0734 FEFFFFEB 		bl	CyU3PDebugPrint
 2257              	.L125:
 907:../CX3RDKOV5640.c **** 					}
 908:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 909:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_STILL_TRIGGER_COUNT)
 2258              		.loc 1 909 0
 2259 0738 B2335BE1 		ldrh	r3, [fp, #-50]
 2260 073c 010053E3 		cmp	r3, #1
 2261 0740 0300009A 		bls	.L126
 910:../CX3RDKOV5640.c **** 					{
 911:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2262              		.loc 1 911 0
 2263 0744 0400A0E3 		mov	r0, #4
 2264 0748 9C199FE5 		ldr	r1, .L229+80
 2265 074c FEFFFFEB 		bl	CyU3PDebugPrint
 2266 0750 C60300EA 		b	.L90
 2267              	.L126:
 912:../CX3RDKOV5640.c **** 					}
 913:../CX3RDKOV5640.c **** 					else
 914:../CX3RDKOV5640.c **** 					{
 915:../CX3RDKOV5640.c **** 						if(glStillTriggerCtrl == 0x01)
 2268              		.loc 1 915 0
 2269 0754 B4399FE5 		ldr	r3, .L229+116
 2270 0758 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2271 075c 010053E3 		cmp	r3, #1
 2272 0760 C203001A 		bne	.L90
 916:../CX3RDKOV5640.c **** 						{
 917:../CX3RDKOV5640.c **** 							glStillSkip = 3;
 2273              		.loc 1 917 0
 2274 0764 A8399FE5 		ldr	r3, .L229+120
 2275 0768 0320A0E3 		mov	r2, #3
 2276 076c 0020C3E5 		strb	r2, [r3]
 918:../CX3RDKOV5640.c **** 							glStillCaptureStart = CyTrue;
 2277              		.loc 1 918 0
 2278 0770 A0399FE5 		ldr	r3, .L229+124
 2279 0774 0120A0E3 		mov	r2, #1
 2280 0778 002083E5 		str	r2, [r3]
 2281 077c BB0300EA 		b	.L90
 2282              	.L118:
 2283 0780 BA0300EA 		b	.L90
 2284              	.L107:
 919:../CX3RDKOV5640.c **** 						}
 920:../CX3RDKOV5640.c **** 					}
 921:../CX3RDKOV5640.c ****                 }
 922:../CX3RDKOV5640.c ****             }
 923:../CX3RDKOV5640.c ****             else
 924:../CX3RDKOV5640.c ****             {
 925:../CX3RDKOV5640.c ****                 /* Mark with error. */
 926:../CX3RDKOV5640.c ****                 status = CY_U3P_ERROR_FAILURE;
 2285              		.loc 1 926 0
 2286 0784 4A30A0E3 		mov	r3, #74
 2287 0788 24300BE5 		str	r3, [fp, #-36]
 2288 078c B70300EA 		b	.L90
 2289              	.L106:
 2290 0790 B60300EA 		b	.L90
 2291              	.L91:
 927:../CX3RDKOV5640.c ****             }
 928:../CX3RDKOV5640.c ****         }
 929:../CX3RDKOV5640.c ****         else if((wIndex & 0x00FF) == ES_UVC_CONTROL_INTERFACE) /* Video Control Interface */
 2292              		.loc 1 929 0
 2293 0794 BE325BE1 		ldrh	r3, [fp, #-46]
 2294 0798 FF3003E2 		and	r3, r3, #255
 2295 079c 000053E3 		cmp	r3, #0
 2296 07a0 B203001A 		bne	.L90
 930:../CX3RDKOV5640.c ****         {
 931:../CX3RDKOV5640.c ****             isHandled = CyTrue;
 2297              		.loc 1 931 0
 2298 07a4 0130A0E3 		mov	r3, #1
 2299 07a8 20300BE5 		str	r3, [fp, #-32]
 932:../CX3RDKOV5640.c ****             /* Respond to VC_REQUEST_ERROR_CODE_CONTROL and stall every other request as this examp
 933:../CX3RDKOV5640.c ****                any of the Video Control features */
 934:../CX3RDKOV5640.c ****             if((wIndex == 0x200) && (wValue == 0x200))/*Brightness*/
 2300              		.loc 1 934 0
 2301 07ac BE325BE1 		ldrh	r3, [fp, #-46]
 2302 07b0 020C53E3 		cmp	r3, #512
 2303 07b4 4D00001A 		bne	.L127
 2304              		.loc 1 934 0 is_stmt 0 discriminator 1
 2305 07b8 BC325BE1 		ldrh	r3, [fp, #-44]
 2306 07bc 020C53E3 		cmp	r3, #512
 2307 07c0 4A00001A 		bne	.L127
 935:../CX3RDKOV5640.c ****             {
 936:../CX3RDKOV5640.c ****             	switch(bRequest)
 2308              		.loc 1 936 0 is_stmt 1
 2309 07c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2310 07c8 840053E3 		cmp	r3, #132
 2311 07cc 040000CA 		bgt	.L129
 2312 07d0 810053E3 		cmp	r3, #129
 2313 07d4 170000AA 		bge	.L130
 2314 07d8 010053E3 		cmp	r3, #1
 2315 07dc 2D00000A 		beq	.L131
 937:../CX3RDKOV5640.c ****             	{
 938:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_INFO_REQ:
 939:../CX3RDKOV5640.c ****             		glGet_Info=0x03;
 940:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 941:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 942:../CX3RDKOV5640.c **** 					{
 943:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 944:../CX3RDKOV5640.c **** 					}
 945:../CX3RDKOV5640.c **** 					break;
 946:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 947:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MAX_REQ:
 948:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_RES_REQ:
 949:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_CUR_REQ:
 950:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_DEF_REQ:
 951:../CX3RDKOV5640.c ****             		RequestOption = (bRequest & 0x0F);
 952:../CX3RDKOV5640.c **** 
 953:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service all the GE
 954:../CX3RDKOV5640.c ****             		gl16GetControl = esOV5640_GetBrightness(RequestOption);
 955:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 956:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 957:../CX3RDKOV5640.c **** 					{
 958:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 959:../CX3RDKOV5640.c **** 					}
 960:../CX3RDKOV5640.c ****             		break;
 961:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 962:../CX3RDKOV5640.c ****             		status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
 963:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 964:../CX3RDKOV5640.c **** 					{
 965:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 966:../CX3RDKOV5640.c **** 					}
 967:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service the SET re
 968:../CX3RDKOV5640.c **** 					esOV5640_SetBrightness((int8_t)gl16SetControl);
 969:../CX3RDKOV5640.c **** 					break;
 970:../CX3RDKOV5640.c ****             	}
 971:../CX3RDKOV5640.c ****             }
 2316              		.loc 1 971 0
 2317 07e0 A20300EA 		b	.L90
 2318              	.L129:
 936:../CX3RDKOV5640.c ****             	{
 2319              		.loc 1 936 0
 2320 07e4 860053E3 		cmp	r3, #134
 2321 07e8 0200000A 		beq	.L132
 2322 07ec 870053E3 		cmp	r3, #135
 2323 07f0 1000000A 		beq	.L130
 2324              		.loc 1 971 0
 2325 07f4 9D0300EA 		b	.L90
 2326              	.L132:
 939:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2327              		.loc 1 939 0
 2328 07f8 34399FE5 		ldr	r3, .L229+152
 2329 07fc 0320A0E3 		mov	r2, #3
 2330 0800 0020C3E5 		strb	r2, [r3]
 940:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2331              		.loc 1 940 0
 2332 0804 0100A0E3 		mov	r0, #1
 2333 0808 24199FE5 		ldr	r1, .L229+152
 2334 080c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2335 0810 24000BE5 		str	r0, [fp, #-36]
 941:../CX3RDKOV5640.c **** 					{
 2336              		.loc 1 941 0
 2337 0814 24301BE5 		ldr	r3, [fp, #-36]
 2338 0818 000053E3 		cmp	r3, #0
 2339 081c 0400000A 		beq	.L133
 943:../CX3RDKOV5640.c **** 					}
 2340              		.loc 1 943 0
 2341 0820 0400A0E3 		mov	r0, #4
 2342 0824 14199FE5 		ldr	r1, .L229+164
 2343 0828 24201BE5 		ldr	r2, [fp, #-36]
 2344 082c FEFFFFEB 		bl	CyU3PDebugPrint
 945:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 2345              		.loc 1 945 0
 2346 0830 2D0000EA 		b	.L128
 2347              	.L133:
 2348 0834 2C0000EA 		b	.L128
 2349              	.L130:
 951:../CX3RDKOV5640.c **** 
 2350              		.loc 1 951 0
 2351 0838 29305BE5 		ldrb	r3, [fp, #-41]
 2352 083c 0F3003E2 		and	r3, r3, #15
 2353 0840 25304BE5 		strb	r3, [fp, #-37]
 954:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2354              		.loc 1 954 0
 2355 0844 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2356 0848 0300A0E1 		mov	r0, r3
 2357 084c FEFFFFEB 		bl	esOV5640_GetBrightness
 2358 0850 0030A0E1 		mov	r3, r0
 2359 0854 0338A0E1 		mov	r3, r3, asl #16
 2360 0858 2328A0E1 		mov	r2, r3, lsr #16
 2361 085c D4389FE5 		ldr	r3, .L229+156
 2362 0860 B020C3E1 		strh	r2, [r3]	@ movhi
 955:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2363              		.loc 1 955 0
 2364 0864 0200A0E3 		mov	r0, #2
 2365 0868 C8189FE5 		ldr	r1, .L229+156
 2366 086c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2367 0870 24000BE5 		str	r0, [fp, #-36]
 956:../CX3RDKOV5640.c **** 					{
 2368              		.loc 1 956 0
 2369 0874 24301BE5 		ldr	r3, [fp, #-36]
 2370 0878 000053E3 		cmp	r3, #0
 2371 087c 0400000A 		beq	.L134
 958:../CX3RDKOV5640.c **** 					}
 2372              		.loc 1 958 0
 2373 0880 0400A0E3 		mov	r0, #4
 2374 0884 B4189FE5 		ldr	r1, .L229+164
 2375 0888 24201BE5 		ldr	r2, [fp, #-36]
 2376 088c FEFFFFEB 		bl	CyU3PDebugPrint
 960:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 2377              		.loc 1 960 0
 2378 0890 150000EA 		b	.L128
 2379              	.L134:
 2380 0894 140000EA 		b	.L128
 2381              	.L131:
 962:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 2382              		.loc 1 962 0
 2383 0898 32304BE2 		sub	r3, fp, #50
 2384 089c 1000A0E3 		mov	r0, #16
 2385 08a0 94189FE5 		ldr	r1, .L229+160
 2386 08a4 0320A0E1 		mov	r2, r3
 2387 08a8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2388 08ac 24000BE5 		str	r0, [fp, #-36]
 963:../CX3RDKOV5640.c **** 					{
 2389              		.loc 1 963 0
 2390 08b0 24301BE5 		ldr	r3, [fp, #-36]
 2391 08b4 000053E3 		cmp	r3, #0
 2392 08b8 0300000A 		beq	.L135
 965:../CX3RDKOV5640.c **** 					}
 2393              		.loc 1 965 0
 2394 08bc 0400A0E3 		mov	r0, #4
 2395 08c0 78189FE5 		ldr	r1, .L229+164
 2396 08c4 24201BE5 		ldr	r2, [fp, #-36]
 2397 08c8 FEFFFFEB 		bl	CyU3PDebugPrint
 2398              	.L135:
 968:../CX3RDKOV5640.c **** 					break;
 2399              		.loc 1 968 0
 2400 08cc 68389FE5 		ldr	r3, .L229+160
 2401 08d0 B030D3E1 		ldrh	r3, [r3]
 2402 08d4 FF3003E2 		and	r3, r3, #255
 2403 08d8 033CA0E1 		mov	r3, r3, asl #24
 2404 08dc 433CA0E1 		mov	r3, r3, asr #24
 2405 08e0 0300A0E1 		mov	r0, r3
 2406 08e4 FEFFFFEB 		bl	esOV5640_SetBrightness
 969:../CX3RDKOV5640.c ****             	}
 2407              		.loc 1 969 0
 2408 08e8 0000A0E1 		mov	r0, r0	@ nop
 2409              	.L128:
 2410              		.loc 1 971 0
 2411 08ec 5F0300EA 		b	.L90
 2412              	.L127:
 972:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x200))/*Auto Exposure*/
 2413              		.loc 1 972 0
 2414 08f0 BE325BE1 		ldrh	r3, [fp, #-46]
 2415 08f4 010C53E3 		cmp	r3, #256
 2416 08f8 4A00001A 		bne	.L136
 2417              		.loc 1 972 0 is_stmt 0 discriminator 1
 2418 08fc BC325BE1 		ldrh	r3, [fp, #-44]
 2419 0900 020C53E3 		cmp	r3, #512
 2420 0904 4700001A 		bne	.L136
 973:../CX3RDKOV5640.c **** 			{
 974:../CX3RDKOV5640.c ****             //	CyU3PDebugPrint (4, "\n\rAuto Exposure");
 975:../CX3RDKOV5640.c **** 				switch(bRequest)
 2421              		.loc 1 975 0 is_stmt 1
 2422 0908 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2423 090c 840053E3 		cmp	r3, #132
 2424 0910 040000CA 		bgt	.L138
 2425 0914 810053E3 		cmp	r3, #129
 2426 0918 170000AA 		bge	.L139
 2427 091c 010053E3 		cmp	r3, #1
 2428 0920 2C00000A 		beq	.L140
 976:../CX3RDKOV5640.c **** 				{
 977:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 978:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 979:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 980:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 981:../CX3RDKOV5640.c **** 					{
 982:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 983:../CX3RDKOV5640.c **** 					}
 984:../CX3RDKOV5640.c **** 					break;
 985:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 986:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 987:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 988:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 989:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 990:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 991:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 992:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutoExposure(RequestOption);
 993:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 994:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 995:../CX3RDKOV5640.c **** 					{
 996:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 997:../CX3RDKOV5640.c **** 					}
 998:../CX3RDKOV5640.c **** 					break;
 999:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1000:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1001:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1002:../CX3RDKOV5640.c **** 					{
1003:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1004:../CX3RDKOV5640.c **** 					}
1005:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1006:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Exposure= %d",gl8SetControl);
1007:../CX3RDKOV5640.c **** 					esOV5640_SetAutoExposure(gl8SetControl);
1008:../CX3RDKOV5640.c **** 					break;
1009:../CX3RDKOV5640.c **** 				}
1010:../CX3RDKOV5640.c **** 			}
 2429              		.loc 1 1010 0
 2430 0924 510300EA 		b	.L90
 2431              	.L138:
 975:../CX3RDKOV5640.c **** 				{
 2432              		.loc 1 975 0
 2433 0928 860053E3 		cmp	r3, #134
 2434 092c 0200000A 		beq	.L141
 2435 0930 870053E3 		cmp	r3, #135
 2436 0934 1000000A 		beq	.L139
 2437              		.loc 1 1010 0
 2438 0938 4C0300EA 		b	.L90
 2439              	.L141:
 978:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2440              		.loc 1 978 0
 2441 093c F0379FE5 		ldr	r3, .L229+152
 2442 0940 0320A0E3 		mov	r2, #3
 2443 0944 0020C3E5 		strb	r2, [r3]
 979:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2444              		.loc 1 979 0
 2445 0948 0100A0E3 		mov	r0, #1
 2446 094c E0179FE5 		ldr	r1, .L229+152
 2447 0950 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2448 0954 24000BE5 		str	r0, [fp, #-36]
 980:../CX3RDKOV5640.c **** 					{
 2449              		.loc 1 980 0
 2450 0958 24301BE5 		ldr	r3, [fp, #-36]
 2451 095c 000053E3 		cmp	r3, #0
 2452 0960 0400000A 		beq	.L142
 982:../CX3RDKOV5640.c **** 					}
 2453              		.loc 1 982 0
 2454 0964 0400A0E3 		mov	r0, #4
 2455 0968 D0179FE5 		ldr	r1, .L229+164
 2456 096c 24201BE5 		ldr	r2, [fp, #-36]
 2457 0970 FEFFFFEB 		bl	CyU3PDebugPrint
 984:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2458              		.loc 1 984 0
 2459 0974 2A0000EA 		b	.L137
 2460              	.L142:
 2461 0978 290000EA 		b	.L137
 2462              	.L139:
 990:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2463              		.loc 1 990 0
 2464 097c 29305BE5 		ldrb	r3, [fp, #-41]
 2465 0980 0F3003E2 		and	r3, r3, #15
 2466 0984 25304BE5 		strb	r3, [fp, #-37]
 992:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 2467              		.loc 1 992 0
 2468 0988 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2469 098c 0300A0E1 		mov	r0, r3
 2470 0990 FEFFFFEB 		bl	esOV5640_GetAutoExposure
 2471 0994 0030A0E1 		mov	r3, r0
 2472 0998 0320A0E1 		mov	r2, r3
 2473 099c 84379FE5 		ldr	r3, .L229+140
 2474 09a0 B020C3E1 		strh	r2, [r3]	@ movhi
 993:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2475              		.loc 1 993 0
 2476 09a4 0100A0E3 		mov	r0, #1
 2477 09a8 78179FE5 		ldr	r1, .L229+140
 2478 09ac FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2479 09b0 24000BE5 		str	r0, [fp, #-36]
 994:../CX3RDKOV5640.c **** 					{
 2480              		.loc 1 994 0
 2481 09b4 24301BE5 		ldr	r3, [fp, #-36]
 2482 09b8 000053E3 		cmp	r3, #0
 2483 09bc 0400000A 		beq	.L143
 996:../CX3RDKOV5640.c **** 					}
 2484              		.loc 1 996 0
 2485 09c0 0400A0E3 		mov	r0, #4
 2486 09c4 74179FE5 		ldr	r1, .L229+164
 2487 09c8 24201BE5 		ldr	r2, [fp, #-36]
 2488 09cc FEFFFFEB 		bl	CyU3PDebugPrint
 998:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2489              		.loc 1 998 0
 2490 09d0 130000EA 		b	.L137
 2491              	.L143:
 2492 09d4 120000EA 		b	.L137
 2493              	.L140:
1000:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2494              		.loc 1 1000 0
 2495 09d8 32304BE2 		sub	r3, fp, #50
 2496 09dc 1000A0E3 		mov	r0, #16
 2497 09e0 44179FE5 		ldr	r1, .L229+144
 2498 09e4 0320A0E1 		mov	r2, r3
 2499 09e8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2500 09ec 24000BE5 		str	r0, [fp, #-36]
1001:../CX3RDKOV5640.c **** 					{
 2501              		.loc 1 1001 0
 2502 09f0 24301BE5 		ldr	r3, [fp, #-36]
 2503 09f4 000053E3 		cmp	r3, #0
 2504 09f8 0300000A 		beq	.L144
1003:../CX3RDKOV5640.c **** 					}
 2505              		.loc 1 1003 0
 2506 09fc 0400A0E3 		mov	r0, #4
 2507 0a00 38179FE5 		ldr	r1, .L229+164
 2508 0a04 24201BE5 		ldr	r2, [fp, #-36]
 2509 0a08 FEFFFFEB 		bl	CyU3PDebugPrint
 2510              	.L144:
1007:../CX3RDKOV5640.c **** 					break;
 2511              		.loc 1 1007 0
 2512 0a0c 18379FE5 		ldr	r3, .L229+144
 2513 0a10 B030D3E1 		ldrh	r3, [r3]
 2514 0a14 FF3003E2 		and	r3, r3, #255
 2515 0a18 0300A0E1 		mov	r0, r3
 2516 0a1c FEFFFFEB 		bl	esOV5640_SetAutoExposure
1008:../CX3RDKOV5640.c **** 				}
 2517              		.loc 1 1008 0
 2518 0a20 0000A0E1 		mov	r0, r0	@ nop
 2519              	.L137:
 2520              		.loc 1 1010 0
 2521 0a24 110300EA 		b	.L90
 2522              	.L136:
1011:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x300))/*Contrast*/
 2523              		.loc 1 1011 0
 2524 0a28 BE325BE1 		ldrh	r3, [fp, #-46]
 2525 0a2c 020C53E3 		cmp	r3, #512
 2526 0a30 4D00001A 		bne	.L145
 2527              		.loc 1 1011 0 is_stmt 0 discriminator 1
 2528 0a34 BC325BE1 		ldrh	r3, [fp, #-44]
 2529 0a38 030C53E3 		cmp	r3, #768
 2530 0a3c 4A00001A 		bne	.L145
1012:../CX3RDKOV5640.c ****             {
1013:../CX3RDKOV5640.c ****             	switch(bRequest)
 2531              		.loc 1 1013 0 is_stmt 1
 2532 0a40 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2533 0a44 840053E3 		cmp	r3, #132
 2534 0a48 040000CA 		bgt	.L147
 2535 0a4c 810053E3 		cmp	r3, #129
 2536 0a50 170000AA 		bge	.L148
 2537 0a54 010053E3 		cmp	r3, #1
 2538 0a58 2D00000A 		beq	.L149
1014:../CX3RDKOV5640.c **** 				{
1015:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1016:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1017:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1018:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1019:../CX3RDKOV5640.c **** 					{
1020:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1021:../CX3RDKOV5640.c **** 					}
1022:../CX3RDKOV5640.c **** 					break;
1023:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1024:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1025:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1026:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1027:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1028:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1029:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1030:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetContrast(RequestOption);
1031:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1032:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1033:../CX3RDKOV5640.c **** 					{
1034:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1035:../CX3RDKOV5640.c **** 					}
1036:../CX3RDKOV5640.c **** 					break;
1037:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1038:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1039:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1040:../CX3RDKOV5640.c **** 					{
1041:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1042:../CX3RDKOV5640.c **** 					}
1043:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1044:../CX3RDKOV5640.c **** 					esOV5640_SetContrast((int8_t)gl16SetControl);
1045:../CX3RDKOV5640.c **** 					break;
1046:../CX3RDKOV5640.c **** 				}
1047:../CX3RDKOV5640.c ****             }
 2539              		.loc 1 1047 0
 2540 0a5c 030300EA 		b	.L90
 2541              	.L147:
1013:../CX3RDKOV5640.c **** 				{
 2542              		.loc 1 1013 0
 2543 0a60 860053E3 		cmp	r3, #134
 2544 0a64 0200000A 		beq	.L150
 2545 0a68 870053E3 		cmp	r3, #135
 2546 0a6c 1000000A 		beq	.L148
 2547              		.loc 1 1047 0
 2548 0a70 FE0200EA 		b	.L90
 2549              	.L150:
1016:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2550              		.loc 1 1016 0
 2551 0a74 B8369FE5 		ldr	r3, .L229+152
 2552 0a78 0320A0E3 		mov	r2, #3
 2553 0a7c 0020C3E5 		strb	r2, [r3]
1017:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2554              		.loc 1 1017 0
 2555 0a80 0100A0E3 		mov	r0, #1
 2556 0a84 A8169FE5 		ldr	r1, .L229+152
 2557 0a88 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2558 0a8c 24000BE5 		str	r0, [fp, #-36]
1018:../CX3RDKOV5640.c **** 					{
 2559              		.loc 1 1018 0
 2560 0a90 24301BE5 		ldr	r3, [fp, #-36]
 2561 0a94 000053E3 		cmp	r3, #0
 2562 0a98 0400000A 		beq	.L151
1020:../CX3RDKOV5640.c **** 					}
 2563              		.loc 1 1020 0
 2564 0a9c 0400A0E3 		mov	r0, #4
 2565 0aa0 98169FE5 		ldr	r1, .L229+164
 2566 0aa4 24201BE5 		ldr	r2, [fp, #-36]
 2567 0aa8 FEFFFFEB 		bl	CyU3PDebugPrint
1022:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2568              		.loc 1 1022 0
 2569 0aac 2D0000EA 		b	.L146
 2570              	.L151:
 2571 0ab0 2C0000EA 		b	.L146
 2572              	.L148:
1028:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2573              		.loc 1 1028 0
 2574 0ab4 29305BE5 		ldrb	r3, [fp, #-41]
 2575 0ab8 0F3003E2 		and	r3, r3, #15
 2576 0abc 25304BE5 		strb	r3, [fp, #-37]
1030:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2577              		.loc 1 1030 0
 2578 0ac0 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2579 0ac4 0300A0E1 		mov	r0, r3
 2580 0ac8 FEFFFFEB 		bl	esOV5640_GetContrast
 2581 0acc 0030A0E1 		mov	r3, r0
 2582 0ad0 0338A0E1 		mov	r3, r3, asl #16
 2583 0ad4 2328A0E1 		mov	r2, r3, lsr #16
 2584 0ad8 58369FE5 		ldr	r3, .L229+156
 2585 0adc B020C3E1 		strh	r2, [r3]	@ movhi
1031:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2586              		.loc 1 1031 0
 2587 0ae0 0200A0E3 		mov	r0, #2
 2588 0ae4 4C169FE5 		ldr	r1, .L229+156
 2589 0ae8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2590 0aec 24000BE5 		str	r0, [fp, #-36]
1032:../CX3RDKOV5640.c **** 					{
 2591              		.loc 1 1032 0
 2592 0af0 24301BE5 		ldr	r3, [fp, #-36]
 2593 0af4 000053E3 		cmp	r3, #0
 2594 0af8 0400000A 		beq	.L152
1034:../CX3RDKOV5640.c **** 					}
 2595              		.loc 1 1034 0
 2596 0afc 0400A0E3 		mov	r0, #4
 2597 0b00 38169FE5 		ldr	r1, .L229+164
 2598 0b04 24201BE5 		ldr	r2, [fp, #-36]
 2599 0b08 FEFFFFEB 		bl	CyU3PDebugPrint
1036:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2600              		.loc 1 1036 0
 2601 0b0c 150000EA 		b	.L146
 2602              	.L152:
 2603 0b10 140000EA 		b	.L146
 2604              	.L149:
1038:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2605              		.loc 1 1038 0
 2606 0b14 32304BE2 		sub	r3, fp, #50
 2607 0b18 1000A0E3 		mov	r0, #16
 2608 0b1c 18169FE5 		ldr	r1, .L229+160
 2609 0b20 0320A0E1 		mov	r2, r3
 2610 0b24 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2611 0b28 24000BE5 		str	r0, [fp, #-36]
1039:../CX3RDKOV5640.c **** 					{
 2612              		.loc 1 1039 0
 2613 0b2c 24301BE5 		ldr	r3, [fp, #-36]
 2614 0b30 000053E3 		cmp	r3, #0
 2615 0b34 0300000A 		beq	.L153
1041:../CX3RDKOV5640.c **** 					}
 2616              		.loc 1 1041 0
 2617 0b38 0400A0E3 		mov	r0, #4
 2618 0b3c FC159FE5 		ldr	r1, .L229+164
 2619 0b40 24201BE5 		ldr	r2, [fp, #-36]
 2620 0b44 FEFFFFEB 		bl	CyU3PDebugPrint
 2621              	.L153:
1044:../CX3RDKOV5640.c **** 					break;
 2622              		.loc 1 1044 0
 2623 0b48 EC359FE5 		ldr	r3, .L229+160
 2624 0b4c B030D3E1 		ldrh	r3, [r3]
 2625 0b50 FF3003E2 		and	r3, r3, #255
 2626 0b54 033CA0E1 		mov	r3, r3, asl #24
 2627 0b58 433CA0E1 		mov	r3, r3, asr #24
 2628 0b5c 0300A0E1 		mov	r0, r3
 2629 0b60 FEFFFFEB 		bl	esOV5640_SetContrast
1045:../CX3RDKOV5640.c **** 				}
 2630              		.loc 1 1045 0
 2631 0b64 0000A0E1 		mov	r0, r0	@ nop
 2632              	.L146:
 2633              		.loc 1 1047 0
 2634 0b68 C00200EA 		b	.L90
 2635              	.L145:
1048:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x400))/*Manual Exposure*/
 2636              		.loc 1 1048 0
 2637 0b6c BE325BE1 		ldrh	r3, [fp, #-46]
 2638 0b70 010C53E3 		cmp	r3, #256
 2639 0b74 4800001A 		bne	.L154
 2640              		.loc 1 1048 0 is_stmt 0 discriminator 1
 2641 0b78 BC325BE1 		ldrh	r3, [fp, #-44]
 2642 0b7c 010B53E3 		cmp	r3, #1024
 2643 0b80 4500001A 		bne	.L154
1049:../CX3RDKOV5640.c **** 			{
1050:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Exposure ");
1051:../CX3RDKOV5640.c **** 				switch(bRequest)
 2644              		.loc 1 1051 0 is_stmt 1
 2645 0b84 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2646 0b88 840053E3 		cmp	r3, #132
 2647 0b8c 040000CA 		bgt	.L156
 2648 0b90 810053E3 		cmp	r3, #129
 2649 0b94 170000AA 		bge	.L157
 2650 0b98 010053E3 		cmp	r3, #1
 2651 0b9c 2B00000A 		beq	.L158
1052:../CX3RDKOV5640.c **** 				{
1053:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1054:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1055:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1056:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1057:../CX3RDKOV5640.c **** 					{
1058:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1059:../CX3RDKOV5640.c **** 					}
1060:../CX3RDKOV5640.c **** 					break;
1061:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1062:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1063:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1064:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1065:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1066:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1067:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1068:../CX3RDKOV5640.c **** 					gl32GetControl = esOV5640_GetExposure(RequestOption);
1069:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1070:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1071:../CX3RDKOV5640.c **** 					{
1072:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1073:../CX3RDKOV5640.c **** 					}
1074:../CX3RDKOV5640.c **** 					break;
1075:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1076:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1077:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1078:../CX3RDKOV5640.c **** 					{
1079:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1080:../CX3RDKOV5640.c **** 					}
1081:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1082:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Exposure = %d", gl32SetControl);
1083:../CX3RDKOV5640.c **** 					esOV5640_SetExposure(gl32SetControl);
1084:../CX3RDKOV5640.c **** 					break;
1085:../CX3RDKOV5640.c **** 				}
1086:../CX3RDKOV5640.c **** 			}
 2652              		.loc 1 1086 0
 2653 0ba0 B20200EA 		b	.L90
 2654              	.L156:
1051:../CX3RDKOV5640.c **** 				{
 2655              		.loc 1 1051 0
 2656 0ba4 860053E3 		cmp	r3, #134
 2657 0ba8 0200000A 		beq	.L159
 2658 0bac 870053E3 		cmp	r3, #135
 2659 0bb0 1000000A 		beq	.L157
 2660              		.loc 1 1086 0
 2661 0bb4 AD0200EA 		b	.L90
 2662              	.L159:
1054:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2663              		.loc 1 1054 0
 2664 0bb8 74359FE5 		ldr	r3, .L229+152
 2665 0bbc 0320A0E3 		mov	r2, #3
 2666 0bc0 0020C3E5 		strb	r2, [r3]
1055:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2667              		.loc 1 1055 0
 2668 0bc4 0100A0E3 		mov	r0, #1
 2669 0bc8 64159FE5 		ldr	r1, .L229+152
 2670 0bcc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2671 0bd0 24000BE5 		str	r0, [fp, #-36]
1056:../CX3RDKOV5640.c **** 					{
 2672              		.loc 1 1056 0
 2673 0bd4 24301BE5 		ldr	r3, [fp, #-36]
 2674 0bd8 000053E3 		cmp	r3, #0
 2675 0bdc 0400000A 		beq	.L160
1058:../CX3RDKOV5640.c **** 					}
 2676              		.loc 1 1058 0
 2677 0be0 0400A0E3 		mov	r0, #4
 2678 0be4 54159FE5 		ldr	r1, .L229+164
 2679 0be8 24201BE5 		ldr	r2, [fp, #-36]
 2680 0bec FEFFFFEB 		bl	CyU3PDebugPrint
1060:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2681              		.loc 1 1060 0
 2682 0bf0 280000EA 		b	.L155
 2683              	.L160:
 2684 0bf4 270000EA 		b	.L155
 2685              	.L157:
1066:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2686              		.loc 1 1066 0
 2687 0bf8 29305BE5 		ldrb	r3, [fp, #-41]
 2688 0bfc 0F3003E2 		and	r3, r3, #15
 2689 0c00 25304BE5 		strb	r3, [fp, #-37]
1068:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2690              		.loc 1 1068 0
 2691 0c04 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2692 0c08 0300A0E1 		mov	r0, r3
 2693 0c0c FEFFFFEB 		bl	esOV5640_GetExposure
 2694 0c10 0020A0E1 		mov	r2, r0
 2695 0c14 00359FE5 		ldr	r3, .L229+128
 2696 0c18 002083E5 		str	r2, [r3]
1069:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2697              		.loc 1 1069 0
 2698 0c1c 0400A0E3 		mov	r0, #4
 2699 0c20 F4149FE5 		ldr	r1, .L229+128
 2700 0c24 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2701 0c28 24000BE5 		str	r0, [fp, #-36]
1070:../CX3RDKOV5640.c **** 					{
 2702              		.loc 1 1070 0
 2703 0c2c 24301BE5 		ldr	r3, [fp, #-36]
 2704 0c30 000053E3 		cmp	r3, #0
 2705 0c34 0400000A 		beq	.L161
1072:../CX3RDKOV5640.c **** 					}
 2706              		.loc 1 1072 0
 2707 0c38 0400A0E3 		mov	r0, #4
 2708 0c3c FC149FE5 		ldr	r1, .L229+164
 2709 0c40 24201BE5 		ldr	r2, [fp, #-36]
 2710 0c44 FEFFFFEB 		bl	CyU3PDebugPrint
1074:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2711              		.loc 1 1074 0
 2712 0c48 120000EA 		b	.L155
 2713              	.L161:
 2714 0c4c 110000EA 		b	.L155
 2715              	.L158:
1076:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2716              		.loc 1 1076 0
 2717 0c50 32304BE2 		sub	r3, fp, #50
 2718 0c54 1000A0E3 		mov	r0, #16
 2719 0c58 C0149FE5 		ldr	r1, .L229+132
 2720 0c5c 0320A0E1 		mov	r2, r3
 2721 0c60 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2722 0c64 24000BE5 		str	r0, [fp, #-36]
1077:../CX3RDKOV5640.c **** 					{
 2723              		.loc 1 1077 0
 2724 0c68 24301BE5 		ldr	r3, [fp, #-36]
 2725 0c6c 000053E3 		cmp	r3, #0
 2726 0c70 0300000A 		beq	.L162
1079:../CX3RDKOV5640.c **** 					}
 2727              		.loc 1 1079 0
 2728 0c74 0400A0E3 		mov	r0, #4
 2729 0c78 C0149FE5 		ldr	r1, .L229+164
 2730 0c7c 24201BE5 		ldr	r2, [fp, #-36]
 2731 0c80 FEFFFFEB 		bl	CyU3PDebugPrint
 2732              	.L162:
1083:../CX3RDKOV5640.c **** 					break;
 2733              		.loc 1 1083 0
 2734 0c84 94349FE5 		ldr	r3, .L229+132
 2735 0c88 003093E5 		ldr	r3, [r3]
 2736 0c8c 0300A0E1 		mov	r0, r3
 2737 0c90 FEFFFFEB 		bl	esOV5640_SetExposure
1084:../CX3RDKOV5640.c **** 				}
 2738              		.loc 1 1084 0
 2739 0c94 0000A0E1 		mov	r0, r0	@ nop
 2740              	.L155:
 2741              		.loc 1 1086 0
 2742 0c98 740200EA 		b	.L90
 2743              	.L154:
1087:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x600))/*Hue*/
 2744              		.loc 1 1087 0
 2745 0c9c BE325BE1 		ldrh	r3, [fp, #-46]
 2746 0ca0 020C53E3 		cmp	r3, #512
 2747 0ca4 4B00001A 		bne	.L163
 2748              		.loc 1 1087 0 is_stmt 0 discriminator 1
 2749 0ca8 BC325BE1 		ldrh	r3, [fp, #-44]
 2750 0cac 060C53E3 		cmp	r3, #1536
 2751 0cb0 4800001A 		bne	.L163
1088:../CX3RDKOV5640.c **** 			{
1089:../CX3RDKOV5640.c **** 				switch(bRequest)
 2752              		.loc 1 1089 0 is_stmt 1
 2753 0cb4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2754 0cb8 840053E3 		cmp	r3, #132
 2755 0cbc 040000CA 		bgt	.L165
 2756 0cc0 810053E3 		cmp	r3, #129
 2757 0cc4 170000AA 		bge	.L166
 2758 0cc8 010053E3 		cmp	r3, #1
 2759 0ccc 2B00000A 		beq	.L167
1090:../CX3RDKOV5640.c **** 				{
1091:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1092:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1093:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1094:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1095:../CX3RDKOV5640.c **** 					{
1096:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1097:../CX3RDKOV5640.c **** 					}
1098:../CX3RDKOV5640.c **** 					break;
1099:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1100:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1101:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1102:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1103:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1104:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1105:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1106:../CX3RDKOV5640.c **** 					gl32GetControl = (int32_t)esOV5640_GetHue(RequestOption);
1107:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1108:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1109:../CX3RDKOV5640.c **** 					{
1110:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1111:../CX3RDKOV5640.c **** 					}
1112:../CX3RDKOV5640.c **** 					break;
1113:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1114:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1115:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1116:../CX3RDKOV5640.c **** 					{
1117:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1118:../CX3RDKOV5640.c **** 					}
1119:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1120:../CX3RDKOV5640.c **** 					esOV5640_SetHue((int8_t)gl32SetControl);
1121:../CX3RDKOV5640.c **** 					break;
1122:../CX3RDKOV5640.c **** 				}
1123:../CX3RDKOV5640.c **** 			}
 2760              		.loc 1 1123 0
 2761 0cd0 660200EA 		b	.L90
 2762              	.L165:
1089:../CX3RDKOV5640.c **** 				{
 2763              		.loc 1 1089 0
 2764 0cd4 860053E3 		cmp	r3, #134
 2765 0cd8 0200000A 		beq	.L168
 2766 0cdc 870053E3 		cmp	r3, #135
 2767 0ce0 1000000A 		beq	.L166
 2768              		.loc 1 1123 0
 2769 0ce4 610200EA 		b	.L90
 2770              	.L168:
1092:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2771              		.loc 1 1092 0
 2772 0ce8 44349FE5 		ldr	r3, .L229+152
 2773 0cec 0320A0E3 		mov	r2, #3
 2774 0cf0 0020C3E5 		strb	r2, [r3]
1093:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2775              		.loc 1 1093 0
 2776 0cf4 0100A0E3 		mov	r0, #1
 2777 0cf8 34149FE5 		ldr	r1, .L229+152
 2778 0cfc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2779 0d00 24000BE5 		str	r0, [fp, #-36]
1094:../CX3RDKOV5640.c **** 					{
 2780              		.loc 1 1094 0
 2781 0d04 24301BE5 		ldr	r3, [fp, #-36]
 2782 0d08 000053E3 		cmp	r3, #0
 2783 0d0c 0400000A 		beq	.L169
1096:../CX3RDKOV5640.c **** 					}
 2784              		.loc 1 1096 0
 2785 0d10 0400A0E3 		mov	r0, #4
 2786 0d14 24149FE5 		ldr	r1, .L229+164
 2787 0d18 24201BE5 		ldr	r2, [fp, #-36]
 2788 0d1c FEFFFFEB 		bl	CyU3PDebugPrint
1098:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2789              		.loc 1 1098 0
 2790 0d20 2B0000EA 		b	.L164
 2791              	.L169:
 2792 0d24 2A0000EA 		b	.L164
 2793              	.L166:
1104:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2794              		.loc 1 1104 0
 2795 0d28 29305BE5 		ldrb	r3, [fp, #-41]
 2796 0d2c 0F3003E2 		and	r3, r3, #15
 2797 0d30 25304BE5 		strb	r3, [fp, #-37]
1106:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2798              		.loc 1 1106 0
 2799 0d34 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2800 0d38 0300A0E1 		mov	r0, r3
 2801 0d3c FEFFFFEB 		bl	esOV5640_GetHue
 2802 0d40 0020A0E1 		mov	r2, r0
 2803 0d44 D0339FE5 		ldr	r3, .L229+128
 2804 0d48 002083E5 		str	r2, [r3]
1107:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2805              		.loc 1 1107 0
 2806 0d4c 0400A0E3 		mov	r0, #4
 2807 0d50 C4139FE5 		ldr	r1, .L229+128
 2808 0d54 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2809 0d58 24000BE5 		str	r0, [fp, #-36]
1108:../CX3RDKOV5640.c **** 					{
 2810              		.loc 1 1108 0
 2811 0d5c 24301BE5 		ldr	r3, [fp, #-36]
 2812 0d60 000053E3 		cmp	r3, #0
 2813 0d64 0400000A 		beq	.L170
1110:../CX3RDKOV5640.c **** 					}
 2814              		.loc 1 1110 0
 2815 0d68 0400A0E3 		mov	r0, #4
 2816 0d6c CC139FE5 		ldr	r1, .L229+164
 2817 0d70 24201BE5 		ldr	r2, [fp, #-36]
 2818 0d74 FEFFFFEB 		bl	CyU3PDebugPrint
1112:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2819              		.loc 1 1112 0
 2820 0d78 150000EA 		b	.L164
 2821              	.L170:
 2822 0d7c 140000EA 		b	.L164
 2823              	.L167:
1114:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2824              		.loc 1 1114 0
 2825 0d80 32304BE2 		sub	r3, fp, #50
 2826 0d84 1000A0E3 		mov	r0, #16
 2827 0d88 90139FE5 		ldr	r1, .L229+132
 2828 0d8c 0320A0E1 		mov	r2, r3
 2829 0d90 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2830 0d94 24000BE5 		str	r0, [fp, #-36]
1115:../CX3RDKOV5640.c **** 					{
 2831              		.loc 1 1115 0
 2832 0d98 24301BE5 		ldr	r3, [fp, #-36]
 2833 0d9c 000053E3 		cmp	r3, #0
 2834 0da0 0300000A 		beq	.L171
1117:../CX3RDKOV5640.c **** 					}
 2835              		.loc 1 1117 0
 2836 0da4 0400A0E3 		mov	r0, #4
 2837 0da8 90139FE5 		ldr	r1, .L229+164
 2838 0dac 24201BE5 		ldr	r2, [fp, #-36]
 2839 0db0 FEFFFFEB 		bl	CyU3PDebugPrint
 2840              	.L171:
1120:../CX3RDKOV5640.c **** 					break;
 2841              		.loc 1 1120 0
 2842 0db4 64339FE5 		ldr	r3, .L229+132
 2843 0db8 003093E5 		ldr	r3, [r3]
 2844 0dbc FF3003E2 		and	r3, r3, #255
 2845 0dc0 033CA0E1 		mov	r3, r3, asl #24
 2846 0dc4 433CA0E1 		mov	r3, r3, asr #24
 2847 0dc8 0300A0E1 		mov	r0, r3
 2848 0dcc FEFFFFEB 		bl	esOV5640_SetHue
1121:../CX3RDKOV5640.c **** 				}
 2849              		.loc 1 1121 0
 2850 0dd0 0000A0E1 		mov	r0, r0	@ nop
 2851              	.L164:
 2852              		.loc 1 1123 0
 2853 0dd4 250200EA 		b	.L90
 2854              	.L163:
1124:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x600))/*Manual Focus*/
 2855              		.loc 1 1124 0
 2856 0dd8 BE325BE1 		ldrh	r3, [fp, #-46]
 2857 0ddc 010C53E3 		cmp	r3, #256
 2858 0de0 4F00001A 		bne	.L172
 2859              		.loc 1 1124 0 is_stmt 0 discriminator 1
 2860 0de4 BC325BE1 		ldrh	r3, [fp, #-44]
 2861 0de8 060C53E3 		cmp	r3, #1536
 2862 0dec 4C00001A 		bne	.L172
1125:../CX3RDKOV5640.c **** 			{
1126:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Focus ");
1127:../CX3RDKOV5640.c **** 				switch(bRequest)
 2863              		.loc 1 1127 0 is_stmt 1
 2864 0df0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2865 0df4 840053E3 		cmp	r3, #132
 2866 0df8 040000CA 		bgt	.L174
 2867 0dfc 810053E3 		cmp	r3, #129
 2868 0e00 170000AA 		bge	.L175
 2869 0e04 010053E3 		cmp	r3, #1
 2870 0e08 2D00000A 		beq	.L176
1128:../CX3RDKOV5640.c **** 				{
1129:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1130:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1131:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1132:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1133:../CX3RDKOV5640.c **** 					{
1134:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1135:../CX3RDKOV5640.c **** 					}
1136:../CX3RDKOV5640.c **** 					break;
1137:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1138:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1139:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1140:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1141:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1142:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1143:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1144:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
1145:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1146:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1147:../CX3RDKOV5640.c **** 					{
1148:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1149:../CX3RDKOV5640.c **** 					}
1150:../CX3RDKOV5640.c **** 					break;
1151:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1152:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1153:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1154:../CX3RDKOV5640.c **** 					{
1155:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1156:../CX3RDKOV5640.c **** 					}
1157:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1158:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Focus= %d",gl16SetControl);
1159:../CX3RDKOV5640.c **** 					esOV5640_SetManualfocus((uint16_t)gl16SetControl);
1160:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
1161:../CX3RDKOV5640.c **** 					break;
1162:../CX3RDKOV5640.c **** 				}
1163:../CX3RDKOV5640.c **** 			}
 2871              		.loc 1 1163 0
 2872 0e0c 170200EA 		b	.L90
 2873              	.L174:
1127:../CX3RDKOV5640.c **** 				{
 2874              		.loc 1 1127 0
 2875 0e10 860053E3 		cmp	r3, #134
 2876 0e14 0200000A 		beq	.L177
 2877 0e18 870053E3 		cmp	r3, #135
 2878 0e1c 1000000A 		beq	.L175
 2879              		.loc 1 1163 0
 2880 0e20 120200EA 		b	.L90
 2881              	.L177:
1130:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2882              		.loc 1 1130 0
 2883 0e24 08339FE5 		ldr	r3, .L229+152
 2884 0e28 0320A0E3 		mov	r2, #3
 2885 0e2c 0020C3E5 		strb	r2, [r3]
1131:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2886              		.loc 1 1131 0
 2887 0e30 0100A0E3 		mov	r0, #1
 2888 0e34 F8129FE5 		ldr	r1, .L229+152
 2889 0e38 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2890 0e3c 24000BE5 		str	r0, [fp, #-36]
1132:../CX3RDKOV5640.c **** 					{
 2891              		.loc 1 1132 0
 2892 0e40 24301BE5 		ldr	r3, [fp, #-36]
 2893 0e44 000053E3 		cmp	r3, #0
 2894 0e48 0400000A 		beq	.L178
1134:../CX3RDKOV5640.c **** 					}
 2895              		.loc 1 1134 0
 2896 0e4c 0400A0E3 		mov	r0, #4
 2897 0e50 E8129FE5 		ldr	r1, .L229+164
 2898 0e54 24201BE5 		ldr	r2, [fp, #-36]
 2899 0e58 FEFFFFEB 		bl	CyU3PDebugPrint
1136:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2900              		.loc 1 1136 0
 2901 0e5c 2F0000EA 		b	.L173
 2902              	.L178:
 2903 0e60 2E0000EA 		b	.L173
 2904              	.L175:
1143:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
 2905              		.loc 1 1143 0
 2906 0e64 29305BE5 		ldrb	r3, [fp, #-41]
 2907 0e68 0F3003E2 		and	r3, r3, #15
 2908 0e6c 25304BE5 		strb	r3, [fp, #-37]
1144:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2909              		.loc 1 1144 0
 2910 0e70 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2911 0e74 0300A0E1 		mov	r0, r3
 2912 0e78 FEFFFFEB 		bl	esOV5640_GetManualfocus
 2913 0e7c 0030A0E1 		mov	r3, r0
 2914 0e80 0338A0E1 		mov	r3, r3, asl #16
 2915 0e84 2328A0E1 		mov	r2, r3, lsr #16
 2916 0e88 A8329FE5 		ldr	r3, .L229+156
 2917 0e8c B020C3E1 		strh	r2, [r3]	@ movhi
1145:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2918              		.loc 1 1145 0
 2919 0e90 0200A0E3 		mov	r0, #2
 2920 0e94 9C129FE5 		ldr	r1, .L229+156
 2921 0e98 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2922 0e9c 24000BE5 		str	r0, [fp, #-36]
1146:../CX3RDKOV5640.c **** 					{
 2923              		.loc 1 1146 0
 2924 0ea0 24301BE5 		ldr	r3, [fp, #-36]
 2925 0ea4 000053E3 		cmp	r3, #0
 2926 0ea8 0400000A 		beq	.L179
1148:../CX3RDKOV5640.c **** 					}
 2927              		.loc 1 1148 0
 2928 0eac 0400A0E3 		mov	r0, #4
 2929 0eb0 88129FE5 		ldr	r1, .L229+164
 2930 0eb4 24201BE5 		ldr	r2, [fp, #-36]
 2931 0eb8 FEFFFFEB 		bl	CyU3PDebugPrint
1150:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2932              		.loc 1 1150 0
 2933 0ebc 170000EA 		b	.L173
 2934              	.L179:
 2935 0ec0 160000EA 		b	.L173
 2936              	.L176:
1152:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2937              		.loc 1 1152 0
 2938 0ec4 32304BE2 		sub	r3, fp, #50
 2939 0ec8 1000A0E3 		mov	r0, #16
 2940 0ecc 68129FE5 		ldr	r1, .L229+160
 2941 0ed0 0320A0E1 		mov	r2, r3
 2942 0ed4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2943 0ed8 24000BE5 		str	r0, [fp, #-36]
1153:../CX3RDKOV5640.c **** 					{
 2944              		.loc 1 1153 0
 2945 0edc 24301BE5 		ldr	r3, [fp, #-36]
 2946 0ee0 000053E3 		cmp	r3, #0
 2947 0ee4 0300000A 		beq	.L180
1155:../CX3RDKOV5640.c **** 					}
 2948              		.loc 1 1155 0
 2949 0ee8 0400A0E3 		mov	r0, #4
 2950 0eec 4C129FE5 		ldr	r1, .L229+164
 2951 0ef0 24201BE5 		ldr	r2, [fp, #-36]
 2952 0ef4 FEFFFFEB 		bl	CyU3PDebugPrint
 2953              	.L180:
1159:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
 2954              		.loc 1 1159 0
 2955 0ef8 3C329FE5 		ldr	r3, .L229+160
 2956 0efc B030D3E1 		ldrh	r3, [r3]
 2957 0f00 0338A0E1 		mov	r3, r3, asl #16
 2958 0f04 2338A0E1 		mov	r3, r3, lsr #16
 2959 0f08 0300A0E1 		mov	r0, r3
 2960 0f0c FEFFFFEB 		bl	esOV5640_SetManualfocus
1160:../CX3RDKOV5640.c **** 					break;
 2961              		.loc 1 1160 0
 2962 0f10 18329FE5 		ldr	r3, .L229+148
 2963 0f14 0020A0E3 		mov	r2, #0
 2964 0f18 0020C3E5 		strb	r2, [r3]
1161:../CX3RDKOV5640.c **** 				}
 2965              		.loc 1 1161 0
 2966 0f1c 0000A0E1 		mov	r0, r0	@ nop
 2967              	.L173:
 2968              		.loc 1 1163 0
 2969 0f20 D20100EA 		b	.L90
 2970              	.L172:
1164:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x700))/*Saturation*/
 2971              		.loc 1 1164 0
 2972 0f24 BE325BE1 		ldrh	r3, [fp, #-46]
 2973 0f28 020C53E3 		cmp	r3, #512
 2974 0f2c 4C00001A 		bne	.L181
 2975              		.loc 1 1164 0 is_stmt 0 discriminator 1
 2976 0f30 BC325BE1 		ldrh	r3, [fp, #-44]
 2977 0f34 070C53E3 		cmp	r3, #1792
 2978 0f38 4900001A 		bne	.L181
1165:../CX3RDKOV5640.c **** 			{
1166:../CX3RDKOV5640.c **** 				switch(bRequest)
 2979              		.loc 1 1166 0 is_stmt 1
 2980 0f3c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2981 0f40 840053E3 		cmp	r3, #132
 2982 0f44 040000CA 		bgt	.L183
 2983 0f48 810053E3 		cmp	r3, #129
 2984 0f4c 170000AA 		bge	.L184
 2985 0f50 010053E3 		cmp	r3, #1
 2986 0f54 2D00000A 		beq	.L185
1167:../CX3RDKOV5640.c **** 				{
1168:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1169:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1170:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1171:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1172:../CX3RDKOV5640.c **** 					{
1173:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1174:../CX3RDKOV5640.c **** 					}
1175:../CX3RDKOV5640.c **** 					break;
1176:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1177:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1178:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1179:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1180:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1181:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1182:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1183:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSaturation(RequestOption);
1184:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1185:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1186:../CX3RDKOV5640.c **** 					{
1187:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1188:../CX3RDKOV5640.c **** 					}
1189:../CX3RDKOV5640.c **** 					break;
1190:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1191:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1192:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1193:../CX3RDKOV5640.c **** 					{
1194:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1195:../CX3RDKOV5640.c **** 					}
1196:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1197:../CX3RDKOV5640.c **** 					esOV5640_SetSaturation((uint32_t)gl16SetControl);
1198:../CX3RDKOV5640.c **** 					break;
1199:../CX3RDKOV5640.c **** 				}
1200:../CX3RDKOV5640.c **** 			}
 2987              		.loc 1 1200 0
 2988 0f58 C40100EA 		b	.L90
 2989              	.L183:
1166:../CX3RDKOV5640.c **** 				{
 2990              		.loc 1 1166 0
 2991 0f5c 860053E3 		cmp	r3, #134
 2992 0f60 0200000A 		beq	.L186
 2993 0f64 870053E3 		cmp	r3, #135
 2994 0f68 1000000A 		beq	.L184
 2995              		.loc 1 1200 0
 2996 0f6c BF0100EA 		b	.L90
 2997              	.L186:
1169:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2998              		.loc 1 1169 0
 2999 0f70 BC319FE5 		ldr	r3, .L229+152
 3000 0f74 0320A0E3 		mov	r2, #3
 3001 0f78 0020C3E5 		strb	r2, [r3]
1170:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3002              		.loc 1 1170 0
 3003 0f7c 0100A0E3 		mov	r0, #1
 3004 0f80 AC119FE5 		ldr	r1, .L229+152
 3005 0f84 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3006 0f88 24000BE5 		str	r0, [fp, #-36]
1171:../CX3RDKOV5640.c **** 					{
 3007              		.loc 1 1171 0
 3008 0f8c 24301BE5 		ldr	r3, [fp, #-36]
 3009 0f90 000053E3 		cmp	r3, #0
 3010 0f94 0400000A 		beq	.L187
1173:../CX3RDKOV5640.c **** 					}
 3011              		.loc 1 1173 0
 3012 0f98 0400A0E3 		mov	r0, #4
 3013 0f9c 9C119FE5 		ldr	r1, .L229+164
 3014 0fa0 24201BE5 		ldr	r2, [fp, #-36]
 3015 0fa4 FEFFFFEB 		bl	CyU3PDebugPrint
1175:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3016              		.loc 1 1175 0
 3017 0fa8 2C0000EA 		b	.L182
 3018              	.L187:
 3019 0fac 2B0000EA 		b	.L182
 3020              	.L184:
1181:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3021              		.loc 1 1181 0
 3022 0fb0 29305BE5 		ldrb	r3, [fp, #-41]
 3023 0fb4 0F3003E2 		and	r3, r3, #15
 3024 0fb8 25304BE5 		strb	r3, [fp, #-37]
1183:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3025              		.loc 1 1183 0
 3026 0fbc 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3027 0fc0 0300A0E1 		mov	r0, r3
 3028 0fc4 FEFFFFEB 		bl	esOV5640_GetSaturation
 3029 0fc8 0030A0E1 		mov	r3, r0
 3030 0fcc 0338A0E1 		mov	r3, r3, asl #16
 3031 0fd0 2328A0E1 		mov	r2, r3, lsr #16
 3032 0fd4 5C319FE5 		ldr	r3, .L229+156
 3033 0fd8 B020C3E1 		strh	r2, [r3]	@ movhi
1184:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3034              		.loc 1 1184 0
 3035 0fdc 0200A0E3 		mov	r0, #2
 3036 0fe0 50119FE5 		ldr	r1, .L229+156
 3037 0fe4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3038 0fe8 24000BE5 		str	r0, [fp, #-36]
1185:../CX3RDKOV5640.c **** 					{
 3039              		.loc 1 1185 0
 3040 0fec 24301BE5 		ldr	r3, [fp, #-36]
 3041 0ff0 000053E3 		cmp	r3, #0
 3042 0ff4 0400000A 		beq	.L188
1187:../CX3RDKOV5640.c **** 					}
 3043              		.loc 1 1187 0
 3044 0ff8 0400A0E3 		mov	r0, #4
 3045 0ffc 3C119FE5 		ldr	r1, .L229+164
 3046 1000 24201BE5 		ldr	r2, [fp, #-36]
 3047 1004 FEFFFFEB 		bl	CyU3PDebugPrint
1189:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3048              		.loc 1 1189 0
 3049 1008 140000EA 		b	.L182
 3050              	.L188:
 3051 100c 130000EA 		b	.L182
 3052              	.L185:
1191:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3053              		.loc 1 1191 0
 3054 1010 32304BE2 		sub	r3, fp, #50
 3055 1014 1000A0E3 		mov	r0, #16
 3056 1018 1C119FE5 		ldr	r1, .L229+160
 3057 101c 0320A0E1 		mov	r2, r3
 3058 1020 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3059 1024 24000BE5 		str	r0, [fp, #-36]
1192:../CX3RDKOV5640.c **** 					{
 3060              		.loc 1 1192 0
 3061 1028 24301BE5 		ldr	r3, [fp, #-36]
 3062 102c 000053E3 		cmp	r3, #0
 3063 1030 0300000A 		beq	.L189
1194:../CX3RDKOV5640.c **** 					}
 3064              		.loc 1 1194 0
 3065 1034 0400A0E3 		mov	r0, #4
 3066 1038 00119FE5 		ldr	r1, .L229+164
 3067 103c 24201BE5 		ldr	r2, [fp, #-36]
 3068 1040 FEFFFFEB 		bl	CyU3PDebugPrint
 3069              	.L189:
1197:../CX3RDKOV5640.c **** 					break;
 3070              		.loc 1 1197 0
 3071 1044 F0309FE5 		ldr	r3, .L229+160
 3072 1048 B030D3E1 		ldrh	r3, [r3]
 3073 104c 0338A0E1 		mov	r3, r3, asl #16
 3074 1050 4338A0E1 		mov	r3, r3, asr #16
 3075 1054 0300A0E1 		mov	r0, r3
 3076 1058 FEFFFFEB 		bl	esOV5640_SetSaturation
1198:../CX3RDKOV5640.c **** 				}
 3077              		.loc 1 1198 0
 3078 105c 0000A0E1 		mov	r0, r0	@ nop
 3079              	.L182:
 3080              		.loc 1 1200 0
 3081 1060 820100EA 		b	.L90
 3082              	.L181:
1201:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x800))/*Sharpness*/
 3083              		.loc 1 1201 0
 3084 1064 BE325BE1 		ldrh	r3, [fp, #-46]
 3085 1068 020C53E3 		cmp	r3, #512
 3086 106c 7500001A 		bne	.L190
 3087              		.loc 1 1201 0 is_stmt 0 discriminator 1
 3088 1070 BC325BE1 		ldrh	r3, [fp, #-44]
 3089 1074 020B53E3 		cmp	r3, #2048
 3090 1078 7200001A 		bne	.L190
1202:../CX3RDKOV5640.c **** 			{
1203:../CX3RDKOV5640.c **** 				switch(bRequest)
 3091              		.loc 1 1203 0 is_stmt 1
 3092 107c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3093 1080 840053E3 		cmp	r3, #132
 3094 1084 2E0000CA 		bgt	.L192
 3095 1088 810053E3 		cmp	r3, #129
 3096 108c 410000AA 		bge	.L193
 3097 1090 010053E3 		cmp	r3, #1
 3098 1094 5700000A 		beq	.L194
1204:../CX3RDKOV5640.c **** 				{
1205:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1206:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1207:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1208:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1209:../CX3RDKOV5640.c **** 					{
1210:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1211:../CX3RDKOV5640.c **** 					}
1212:../CX3RDKOV5640.c **** 					break;
1213:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1214:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1215:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1216:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1217:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1218:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1219:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1220:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSharpness(RequestOption);
1221:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1222:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1223:../CX3RDKOV5640.c **** 					{
1224:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1225:../CX3RDKOV5640.c **** 					}
1226:../CX3RDKOV5640.c **** 					break;
1227:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1228:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1229:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1230:../CX3RDKOV5640.c **** 					{
1231:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1232:../CX3RDKOV5640.c **** 					}
1233:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1234:../CX3RDKOV5640.c **** 					esOV5640_SetSharpness((uint8_t)gl16SetControl);
1235:../CX3RDKOV5640.c **** 					break;
1236:../CX3RDKOV5640.c **** 				}
1237:../CX3RDKOV5640.c **** 			}
 3099              		.loc 1 1237 0
 3100 1098 740100EA 		b	.L90
 3101              	.L230:
 3102              		.align	2
 3103              	.L229:
 3104 109c C8020000 		.word	.LC16
 3105 10a0 00000000 		.word	glIsApplnActive
 3106 10a4 00000000 		.word	glIsStreamingStarted
 3107 10a8 00000000 		.word	glPreviewStarted
 3108 10ac 00000000 		.word	glIsClearFeature
 3109 10b0 00000000 		.word	glcommitcount
 3110 10b4 18030000 		.word	.LC17
 3111 10b8 00000000 		.word	glIsConfigured
 3112 10bc 00000000 		.word	glCurrentFrameIndex
 3113 10c0 00000000 		.word	glProbeCtrl
 3114 10c4 00000000 		.word	gl5MpProbeCtrl
 3115 10c8 00000000 		.word	gl720pProbeCtrl
 3116 10cc 00000000 		.word	glVga60ProbeCtrl
 3117 10d0 00000000 		.word	gl1080pProbeCtrl
 3118 10d4 00000000 		.word	glVga30ProbeCtrl
 3119 10d8 40030000 		.word	.LC18
 3120 10dc 5C030000 		.word	.LC19
 3121 10e0 00000000 		.word	glStillProbeCtrl
 3122 10e4 00000000 		.word	glCommitCtrl
 3123 10e8 88030000 		.word	.LC20
 3124 10ec B4030000 		.word	.LC21
 3125 10f0 00000000 		.word	glcheckframe
 3126 10f4 00000000 		.word	glFrameIndexToSet
 3127 10f8 D8030000 		.word	.LC22
 3128 10fc 18040000 		.word	.LC23
 3129 1100 00000000 		.word	glStillCommitCtrl
 3130 1104 58040000 		.word	.LC24
 3131 1108 7C040000 		.word	.LC25
 3132 110c 00000000 		.word	glCurrentStillFrameIndex
 3133 1110 00000000 		.word	glStillTriggerCtrl
 3134 1114 00000000 		.word	glStillSkip
 3135 1118 00000000 		.word	glStillCaptureStart
 3136 111c 00000000 		.word	gl32GetControl
 3137 1120 00000000 		.word	gl32SetControl
 3138 1124 C4040000 		.word	.LC27
 3139 1128 00000000 		.word	gl8GetControl
 3140 112c 00000000 		.word	gl8SetControl
 3141 1130 00000000 		.word	g_IsAutoFocus
 3142 1134 00000000 		.word	glGet_Info
 3143 1138 00000000 		.word	gl16GetControl
 3144 113c 00000000 		.word	gl16SetControl
 3145 1140 A4040000 		.word	.LC26
 3146              	.L192:
1203:../CX3RDKOV5640.c **** 				{
 3147              		.loc 1 1203 0
 3148 1144 860053E3 		cmp	r3, #134
 3149 1148 0200000A 		beq	.L195
 3150 114c 870053E3 		cmp	r3, #135
 3151 1150 1000000A 		beq	.L193
 3152              		.loc 1 1237 0
 3153 1154 450100EA 		b	.L90
 3154              	.L195:
1206:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3155              		.loc 1 1206 0
 3156 1158 2C301FE5 		ldr	r3, .L229+152
 3157 115c 0320A0E3 		mov	r2, #3
 3158 1160 0020C3E5 		strb	r2, [r3]
1207:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3159              		.loc 1 1207 0
 3160 1164 0100A0E3 		mov	r0, #1
 3161 1168 3C101FE5 		ldr	r1, .L229+152
 3162 116c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3163 1170 24000BE5 		str	r0, [fp, #-36]
1208:../CX3RDKOV5640.c **** 					{
 3164              		.loc 1 1208 0
 3165 1174 24301BE5 		ldr	r3, [fp, #-36]
 3166 1178 000053E3 		cmp	r3, #0
 3167 117c 0400000A 		beq	.L196
1210:../CX3RDKOV5640.c **** 					}
 3168              		.loc 1 1210 0
 3169 1180 0400A0E3 		mov	r0, #4
 3170 1184 4C101FE5 		ldr	r1, .L229+164
 3171 1188 24201BE5 		ldr	r2, [fp, #-36]
 3172 118c FEFFFFEB 		bl	CyU3PDebugPrint
1212:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3173              		.loc 1 1212 0
 3174 1190 2B0000EA 		b	.L191
 3175              	.L196:
 3176 1194 2A0000EA 		b	.L191
 3177              	.L193:
1218:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3178              		.loc 1 1218 0
 3179 1198 29305BE5 		ldrb	r3, [fp, #-41]
 3180 119c 0F3003E2 		and	r3, r3, #15
 3181 11a0 25304BE5 		strb	r3, [fp, #-37]
1220:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3182              		.loc 1 1220 0
 3183 11a4 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3184 11a8 0300A0E1 		mov	r0, r3
 3185 11ac FEFFFFEB 		bl	esOV5640_GetSharpness
 3186 11b0 0030A0E1 		mov	r3, r0
 3187 11b4 0338A0E1 		mov	r3, r3, asl #16
 3188 11b8 2328A0E1 		mov	r2, r3, lsr #16
 3189 11bc 8C301FE5 		ldr	r3, .L229+156
 3190 11c0 B020C3E1 		strh	r2, [r3]	@ movhi
1221:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3191              		.loc 1 1221 0
 3192 11c4 0200A0E3 		mov	r0, #2
 3193 11c8 98101FE5 		ldr	r1, .L229+156
 3194 11cc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3195 11d0 24000BE5 		str	r0, [fp, #-36]
1222:../CX3RDKOV5640.c **** 					{
 3196              		.loc 1 1222 0
 3197 11d4 24301BE5 		ldr	r3, [fp, #-36]
 3198 11d8 000053E3 		cmp	r3, #0
 3199 11dc 0400000A 		beq	.L197
1224:../CX3RDKOV5640.c **** 					}
 3200              		.loc 1 1224 0
 3201 11e0 0400A0E3 		mov	r0, #4
 3202 11e4 AC101FE5 		ldr	r1, .L229+164
 3203 11e8 24201BE5 		ldr	r2, [fp, #-36]
 3204 11ec FEFFFFEB 		bl	CyU3PDebugPrint
1226:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3205              		.loc 1 1226 0
 3206 11f0 130000EA 		b	.L191
 3207              	.L197:
 3208 11f4 120000EA 		b	.L191
 3209              	.L194:
1228:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3210              		.loc 1 1228 0
 3211 11f8 32304BE2 		sub	r3, fp, #50
 3212 11fc 1000A0E3 		mov	r0, #16
 3213 1200 CC101FE5 		ldr	r1, .L229+160
 3214 1204 0320A0E1 		mov	r2, r3
 3215 1208 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3216 120c 24000BE5 		str	r0, [fp, #-36]
1229:../CX3RDKOV5640.c **** 					{
 3217              		.loc 1 1229 0
 3218 1210 24301BE5 		ldr	r3, [fp, #-36]
 3219 1214 000053E3 		cmp	r3, #0
 3220 1218 0300000A 		beq	.L198
1231:../CX3RDKOV5640.c **** 					}
 3221              		.loc 1 1231 0
 3222 121c 0400A0E3 		mov	r0, #4
 3223 1220 E8101FE5 		ldr	r1, .L229+164
 3224 1224 24201BE5 		ldr	r2, [fp, #-36]
 3225 1228 FEFFFFEB 		bl	CyU3PDebugPrint
 3226              	.L198:
1234:../CX3RDKOV5640.c **** 					break;
 3227              		.loc 1 1234 0
 3228 122c F8301FE5 		ldr	r3, .L229+160
 3229 1230 B030D3E1 		ldrh	r3, [r3]
 3230 1234 FF3003E2 		and	r3, r3, #255
 3231 1238 0300A0E1 		mov	r0, r3
 3232 123c FEFFFFEB 		bl	esOV5640_SetSharpness
1235:../CX3RDKOV5640.c **** 				}
 3233              		.loc 1 1235 0
 3234 1240 0000A0E1 		mov	r0, r0	@ nop
 3235              	.L191:
 3236              		.loc 1 1237 0
 3237 1244 090100EA 		b	.L90
 3238              	.L190:
1238:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x800))/*Auto Focus*/
 3239              		.loc 1 1238 0
 3240 1248 BE325BE1 		ldrh	r3, [fp, #-46]
 3241 124c 010C53E3 		cmp	r3, #256
 3242 1250 5000001A 		bne	.L199
 3243              		.loc 1 1238 0 is_stmt 0 discriminator 1
 3244 1254 BC325BE1 		ldrh	r3, [fp, #-44]
 3245 1258 020B53E3 		cmp	r3, #2048
 3246 125c 4D00001A 		bne	.L199
1239:../CX3RDKOV5640.c **** 			{
1240:../CX3RDKOV5640.c ****             	CyU3PDebugPrint (4, "\n\rAuto Focus");
 3247              		.loc 1 1240 0 is_stmt 1
 3248 1260 0400A0E3 		mov	r0, #4
 3249 1264 48111FE5 		ldr	r1, .L229+136
 3250 1268 FEFFFFEB 		bl	CyU3PDebugPrint
1241:../CX3RDKOV5640.c **** 				switch(bRequest)
 3251              		.loc 1 1241 0
 3252 126c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3253 1270 840053E3 		cmp	r3, #132
 3254 1274 040000CA 		bgt	.L201
 3255 1278 810053E3 		cmp	r3, #129
 3256 127c 170000AA 		bge	.L202
 3257 1280 010053E3 		cmp	r3, #1
 3258 1284 2C00000A 		beq	.L203
1242:../CX3RDKOV5640.c **** 				{
1243:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1244:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1245:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1246:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1247:../CX3RDKOV5640.c **** 					{
1248:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1249:../CX3RDKOV5640.c **** 					}
1250:../CX3RDKOV5640.c **** 					break;
1251:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1252:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1253:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1254:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1255:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1256:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1257:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1258:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutofocus(RequestOption);
1259:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
1260:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1261:../CX3RDKOV5640.c **** 					{
1262:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1263:../CX3RDKOV5640.c **** 					}
1264:../CX3RDKOV5640.c **** 					break;
1265:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1266:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1267:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1268:../CX3RDKOV5640.c **** 					{
1269:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1270:../CX3RDKOV5640.c **** 					}
1271:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1272:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Focus =%d",gl8SetControl);
1273:../CX3RDKOV5640.c **** 					esOV5640_SetAutofocus((uint8_t)gl8SetControl);
1274:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
1275:../CX3RDKOV5640.c **** 					break;
1276:../CX3RDKOV5640.c **** 				}
1277:../CX3RDKOV5640.c **** 			}
 3259              		.loc 1 1277 0
 3260 1288 F80000EA 		b	.L90
 3261              	.L201:
1241:../CX3RDKOV5640.c **** 				switch(bRequest)
 3262              		.loc 1 1241 0
 3263 128c 860053E3 		cmp	r3, #134
 3264 1290 0200000A 		beq	.L204
 3265 1294 870053E3 		cmp	r3, #135
 3266 1298 1000000A 		beq	.L202
 3267              		.loc 1 1277 0
 3268 129c F30000EA 		b	.L90
 3269              	.L204:
1244:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3270              		.loc 1 1244 0
 3271 12a0 74311FE5 		ldr	r3, .L229+152
 3272 12a4 0320A0E3 		mov	r2, #3
 3273 12a8 0020C3E5 		strb	r2, [r3]
1245:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3274              		.loc 1 1245 0
 3275 12ac 0100A0E3 		mov	r0, #1
 3276 12b0 84111FE5 		ldr	r1, .L229+152
 3277 12b4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3278 12b8 24000BE5 		str	r0, [fp, #-36]
1246:../CX3RDKOV5640.c **** 					{
 3279              		.loc 1 1246 0
 3280 12bc 24301BE5 		ldr	r3, [fp, #-36]
 3281 12c0 000053E3 		cmp	r3, #0
 3282 12c4 0400000A 		beq	.L205
1248:../CX3RDKOV5640.c **** 					}
 3283              		.loc 1 1248 0
 3284 12c8 0400A0E3 		mov	r0, #4
 3285 12cc 94111FE5 		ldr	r1, .L229+164
 3286 12d0 24201BE5 		ldr	r2, [fp, #-36]
 3287 12d4 FEFFFFEB 		bl	CyU3PDebugPrint
1250:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3288              		.loc 1 1250 0
 3289 12d8 2D0000EA 		b	.L200
 3290              	.L205:
 3291 12dc 2C0000EA 		b	.L200
 3292              	.L202:
1256:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3293              		.loc 1 1256 0
 3294 12e0 29305BE5 		ldrb	r3, [fp, #-41]
 3295 12e4 0F3003E2 		and	r3, r3, #15
 3296 12e8 25304BE5 		strb	r3, [fp, #-37]
1258:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
 3297              		.loc 1 1258 0
 3298 12ec 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3299 12f0 0300A0E1 		mov	r0, r3
 3300 12f4 FEFFFFEB 		bl	esOV5640_GetAutofocus
 3301 12f8 0030A0E1 		mov	r3, r0
 3302 12fc 0320A0E1 		mov	r2, r3
 3303 1300 E0311FE5 		ldr	r3, .L229+140
 3304 1304 B020C3E1 		strh	r2, [r3]	@ movhi
1259:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3305              		.loc 1 1259 0
 3306 1308 0200A0E3 		mov	r0, #2
 3307 130c EC111FE5 		ldr	r1, .L229+140
 3308 1310 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3309 1314 24000BE5 		str	r0, [fp, #-36]
1260:../CX3RDKOV5640.c **** 					{
 3310              		.loc 1 1260 0
 3311 1318 24301BE5 		ldr	r3, [fp, #-36]
 3312 131c 000053E3 		cmp	r3, #0
 3313 1320 0400000A 		beq	.L206
1262:../CX3RDKOV5640.c **** 					}
 3314              		.loc 1 1262 0
 3315 1324 0400A0E3 		mov	r0, #4
 3316 1328 F0111FE5 		ldr	r1, .L229+164
 3317 132c 24201BE5 		ldr	r2, [fp, #-36]
 3318 1330 FEFFFFEB 		bl	CyU3PDebugPrint
1264:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3319              		.loc 1 1264 0
 3320 1334 160000EA 		b	.L200
 3321              	.L206:
 3322 1338 150000EA 		b	.L200
 3323              	.L203:
1266:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3324              		.loc 1 1266 0
 3325 133c 32304BE2 		sub	r3, fp, #50
 3326 1340 1000A0E3 		mov	r0, #16
 3327 1344 20121FE5 		ldr	r1, .L229+144
 3328 1348 0320A0E1 		mov	r2, r3
 3329 134c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3330 1350 24000BE5 		str	r0, [fp, #-36]
1267:../CX3RDKOV5640.c **** 					{
 3331              		.loc 1 1267 0
 3332 1354 24301BE5 		ldr	r3, [fp, #-36]
 3333 1358 000053E3 		cmp	r3, #0
 3334 135c 0300000A 		beq	.L207
1269:../CX3RDKOV5640.c **** 					}
 3335              		.loc 1 1269 0
 3336 1360 0400A0E3 		mov	r0, #4
 3337 1364 2C121FE5 		ldr	r1, .L229+164
 3338 1368 24201BE5 		ldr	r2, [fp, #-36]
 3339 136c FEFFFFEB 		bl	CyU3PDebugPrint
 3340              	.L207:
1273:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
 3341              		.loc 1 1273 0
 3342 1370 4C321FE5 		ldr	r3, .L229+144
 3343 1374 B030D3E1 		ldrh	r3, [r3]
 3344 1378 FF3003E2 		and	r3, r3, #255
 3345 137c 0300A0E1 		mov	r0, r3
 3346 1380 FEFFFFEB 		bl	esOV5640_SetAutofocus
1274:../CX3RDKOV5640.c **** 					break;
 3347              		.loc 1 1274 0
 3348 1384 5C321FE5 		ldr	r3, .L229+148
 3349 1388 0120A0E3 		mov	r2, #1
 3350 138c 0020C3E5 		strb	r2, [r3]
1275:../CX3RDKOV5640.c **** 				}
 3351              		.loc 1 1275 0
 3352 1390 0000A0E1 		mov	r0, r0	@ nop
 3353              	.L200:
 3354              		.loc 1 1277 0
 3355 1394 B50000EA 		b	.L90
 3356              	.L199:
1278:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xA00))/*White Balance manual*/
 3357              		.loc 1 1278 0
 3358 1398 BE325BE1 		ldrh	r3, [fp, #-46]
 3359 139c 020C53E3 		cmp	r3, #512
 3360 13a0 4A00001A 		bne	.L208
 3361              		.loc 1 1278 0 is_stmt 0 discriminator 1
 3362 13a4 BC325BE1 		ldrh	r3, [fp, #-44]
 3363 13a8 0A0C53E3 		cmp	r3, #2560
 3364 13ac 4700001A 		bne	.L208
1279:../CX3RDKOV5640.c **** 			{
1280:../CX3RDKOV5640.c **** 				switch(bRequest)
 3365              		.loc 1 1280 0 is_stmt 1
 3366 13b0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3367 13b4 840053E3 		cmp	r3, #132
 3368 13b8 040000CA 		bgt	.L210
 3369 13bc 810053E3 		cmp	r3, #129
 3370 13c0 170000AA 		bge	.L211
 3371 13c4 010053E3 		cmp	r3, #1
 3372 13c8 2C00000A 		beq	.L212
1281:../CX3RDKOV5640.c **** 				{
1282:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1283:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1284:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1285:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1286:../CX3RDKOV5640.c **** 					{
1287:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1288:../CX3RDKOV5640.c **** 					}
1289:../CX3RDKOV5640.c **** 					break;
1290:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1291:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1292:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1293:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1294:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1295:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1296:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1297:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetWhiteBalance(RequestOption);
1298:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1299:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1300:../CX3RDKOV5640.c **** 					{
1301:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1302:../CX3RDKOV5640.c **** 					}
1303:../CX3RDKOV5640.c **** 					break;
1304:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1305:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1306:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1307:../CX3RDKOV5640.c **** 					{
1308:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1309:../CX3RDKOV5640.c **** 					}
1310:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1311:../CX3RDKOV5640.c **** 					esOV5640_SetWhiteBalance((uint8_t)gl16SetControl);
1312:../CX3RDKOV5640.c **** 					break;
1313:../CX3RDKOV5640.c **** 				}
1314:../CX3RDKOV5640.c **** 			}
 3373              		.loc 1 1314 0
 3374 13cc A70000EA 		b	.L90
 3375              	.L210:
1280:../CX3RDKOV5640.c **** 				{
 3376              		.loc 1 1280 0
 3377 13d0 860053E3 		cmp	r3, #134
 3378 13d4 0200000A 		beq	.L213
 3379 13d8 870053E3 		cmp	r3, #135
 3380 13dc 1000000A 		beq	.L211
 3381              		.loc 1 1314 0
 3382 13e0 A20000EA 		b	.L90
 3383              	.L213:
1283:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3384              		.loc 1 1283 0
 3385 13e4 B8321FE5 		ldr	r3, .L229+152
 3386 13e8 0320A0E3 		mov	r2, #3
 3387 13ec 0020C3E5 		strb	r2, [r3]
1284:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3388              		.loc 1 1284 0
 3389 13f0 0100A0E3 		mov	r0, #1
 3390 13f4 C8121FE5 		ldr	r1, .L229+152
 3391 13f8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3392 13fc 24000BE5 		str	r0, [fp, #-36]
1285:../CX3RDKOV5640.c **** 					{
 3393              		.loc 1 1285 0
 3394 1400 24301BE5 		ldr	r3, [fp, #-36]
 3395 1404 000053E3 		cmp	r3, #0
 3396 1408 0400000A 		beq	.L214
1287:../CX3RDKOV5640.c **** 					}
 3397              		.loc 1 1287 0
 3398 140c 0400A0E3 		mov	r0, #4
 3399 1410 D8121FE5 		ldr	r1, .L229+164
 3400 1414 24201BE5 		ldr	r2, [fp, #-36]
 3401 1418 FEFFFFEB 		bl	CyU3PDebugPrint
1289:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3402              		.loc 1 1289 0
 3403 141c 2A0000EA 		b	.L209
 3404              	.L214:
 3405 1420 290000EA 		b	.L209
 3406              	.L211:
1295:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3407              		.loc 1 1295 0
 3408 1424 29305BE5 		ldrb	r3, [fp, #-41]
 3409 1428 0F3003E2 		and	r3, r3, #15
 3410 142c 25304BE5 		strb	r3, [fp, #-37]
1297:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3411              		.loc 1 1297 0
 3412 1430 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3413 1434 0300A0E1 		mov	r0, r3
 3414 1438 FEFFFFEB 		bl	esOV5640_GetWhiteBalance
 3415 143c 0030A0E1 		mov	r3, r0
 3416 1440 0320A0E1 		mov	r2, r3
 3417 1444 14331FE5 		ldr	r3, .L229+156
 3418 1448 B020C3E1 		strh	r2, [r3]	@ movhi
1298:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3419              		.loc 1 1298 0
 3420 144c 0200A0E3 		mov	r0, #2
 3421 1450 20131FE5 		ldr	r1, .L229+156
 3422 1454 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3423 1458 24000BE5 		str	r0, [fp, #-36]
1299:../CX3RDKOV5640.c **** 					{
 3424              		.loc 1 1299 0
 3425 145c 24301BE5 		ldr	r3, [fp, #-36]
 3426 1460 000053E3 		cmp	r3, #0
 3427 1464 0400000A 		beq	.L215
1301:../CX3RDKOV5640.c **** 					}
 3428              		.loc 1 1301 0
 3429 1468 0400A0E3 		mov	r0, #4
 3430 146c 34131FE5 		ldr	r1, .L229+164
 3431 1470 24201BE5 		ldr	r2, [fp, #-36]
 3432 1474 FEFFFFEB 		bl	CyU3PDebugPrint
1303:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3433              		.loc 1 1303 0
 3434 1478 130000EA 		b	.L209
 3435              	.L215:
 3436 147c 120000EA 		b	.L209
 3437              	.L212:
1305:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3438              		.loc 1 1305 0
 3439 1480 32304BE2 		sub	r3, fp, #50
 3440 1484 1000A0E3 		mov	r0, #16
 3441 1488 54131FE5 		ldr	r1, .L229+160
 3442 148c 0320A0E1 		mov	r2, r3
 3443 1490 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3444 1494 24000BE5 		str	r0, [fp, #-36]
1306:../CX3RDKOV5640.c **** 					{
 3445              		.loc 1 1306 0
 3446 1498 24301BE5 		ldr	r3, [fp, #-36]
 3447 149c 000053E3 		cmp	r3, #0
 3448 14a0 0300000A 		beq	.L216
1308:../CX3RDKOV5640.c **** 					}
 3449              		.loc 1 1308 0
 3450 14a4 0400A0E3 		mov	r0, #4
 3451 14a8 70131FE5 		ldr	r1, .L229+164
 3452 14ac 24201BE5 		ldr	r2, [fp, #-36]
 3453 14b0 FEFFFFEB 		bl	CyU3PDebugPrint
 3454              	.L216:
1311:../CX3RDKOV5640.c **** 					break;
 3455              		.loc 1 1311 0
 3456 14b4 80331FE5 		ldr	r3, .L229+160
 3457 14b8 B030D3E1 		ldrh	r3, [r3]
 3458 14bc FF3003E2 		and	r3, r3, #255
 3459 14c0 0300A0E1 		mov	r0, r3
 3460 14c4 FEFFFFEB 		bl	esOV5640_SetWhiteBalance
1312:../CX3RDKOV5640.c **** 				}
 3461              		.loc 1 1312 0
 3462 14c8 0000A0E1 		mov	r0, r0	@ nop
 3463              	.L209:
 3464              		.loc 1 1314 0
 3465 14cc 670000EA 		b	.L90
 3466              	.L208:
1315:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xB00))/*White Balance Auto*/
 3467              		.loc 1 1315 0
 3468 14d0 BE325BE1 		ldrh	r3, [fp, #-46]
 3469 14d4 020C53E3 		cmp	r3, #512
 3470 14d8 4A00001A 		bne	.L217
 3471              		.loc 1 1315 0 is_stmt 0 discriminator 1
 3472 14dc BC325BE1 		ldrh	r3, [fp, #-44]
 3473 14e0 0B0C53E3 		cmp	r3, #2816
 3474 14e4 4700001A 		bne	.L217
1316:../CX3RDKOV5640.c **** 			{
1317:../CX3RDKOV5640.c **** 				switch(bRequest)
 3475              		.loc 1 1317 0 is_stmt 1
 3476 14e8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3477 14ec 840053E3 		cmp	r3, #132
 3478 14f0 040000CA 		bgt	.L219
 3479 14f4 810053E3 		cmp	r3, #129
 3480 14f8 170000AA 		bge	.L220
 3481 14fc 010053E3 		cmp	r3, #1
 3482 1500 2C00000A 		beq	.L221
1318:../CX3RDKOV5640.c **** 				{
1319:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1320:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1321:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1322:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1323:../CX3RDKOV5640.c **** 					{
1324:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1325:../CX3RDKOV5640.c **** 					}
1326:../CX3RDKOV5640.c **** 					break;
1327:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1328:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1329:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1330:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1331:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1332:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1333:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1334:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetAutoWhiteBalance(RequestOption);
1335:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1336:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1337:../CX3RDKOV5640.c **** 					{
1338:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1339:../CX3RDKOV5640.c **** 					}
1340:../CX3RDKOV5640.c **** 					break;
1341:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1342:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1343:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1344:../CX3RDKOV5640.c **** 					{
1345:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1346:../CX3RDKOV5640.c **** 					}
1347:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1348:../CX3RDKOV5640.c **** 					esOV5640_SetAutoWhiteBalance((uint8_t)gl16SetControl);
1349:../CX3RDKOV5640.c **** 					break;
1350:../CX3RDKOV5640.c **** 				}
1351:../CX3RDKOV5640.c **** 			}
 3483              		.loc 1 1351 0
 3484 1504 590000EA 		b	.L90
 3485              	.L219:
1317:../CX3RDKOV5640.c **** 				{
 3486              		.loc 1 1317 0
 3487 1508 860053E3 		cmp	r3, #134
 3488 150c 0200000A 		beq	.L222
 3489 1510 870053E3 		cmp	r3, #135
 3490 1514 1000000A 		beq	.L220
 3491              		.loc 1 1351 0
 3492 1518 540000EA 		b	.L90
 3493              	.L222:
1320:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3494              		.loc 1 1320 0
 3495 151c F0331FE5 		ldr	r3, .L229+152
 3496 1520 0320A0E3 		mov	r2, #3
 3497 1524 0020C3E5 		strb	r2, [r3]
1321:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3498              		.loc 1 1321 0
 3499 1528 0100A0E3 		mov	r0, #1
 3500 152c 00141FE5 		ldr	r1, .L229+152
 3501 1530 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3502 1534 24000BE5 		str	r0, [fp, #-36]
1322:../CX3RDKOV5640.c **** 					{
 3503              		.loc 1 1322 0
 3504 1538 24301BE5 		ldr	r3, [fp, #-36]
 3505 153c 000053E3 		cmp	r3, #0
 3506 1540 0400000A 		beq	.L223
1324:../CX3RDKOV5640.c **** 					}
 3507              		.loc 1 1324 0
 3508 1544 0400A0E3 		mov	r0, #4
 3509 1548 10141FE5 		ldr	r1, .L229+164
 3510 154c 24201BE5 		ldr	r2, [fp, #-36]
 3511 1550 FEFFFFEB 		bl	CyU3PDebugPrint
1326:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3512              		.loc 1 1326 0
 3513 1554 2A0000EA 		b	.L218
 3514              	.L223:
 3515 1558 290000EA 		b	.L218
 3516              	.L220:
1332:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3517              		.loc 1 1332 0
 3518 155c 29305BE5 		ldrb	r3, [fp, #-41]
 3519 1560 0F3003E2 		and	r3, r3, #15
 3520 1564 25304BE5 		strb	r3, [fp, #-37]
1334:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3521              		.loc 1 1334 0
 3522 1568 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3523 156c 0300A0E1 		mov	r0, r3
 3524 1570 FEFFFFEB 		bl	esOV5640_GetAutoWhiteBalance
 3525 1574 0030A0E1 		mov	r3, r0
 3526 1578 0320A0E1 		mov	r2, r3
 3527 157c 4C341FE5 		ldr	r3, .L229+156
 3528 1580 B020C3E1 		strh	r2, [r3]	@ movhi
1335:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3529              		.loc 1 1335 0
 3530 1584 0200A0E3 		mov	r0, #2
 3531 1588 58141FE5 		ldr	r1, .L229+156
 3532 158c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3533 1590 24000BE5 		str	r0, [fp, #-36]
1336:../CX3RDKOV5640.c **** 					{
 3534              		.loc 1 1336 0
 3535 1594 24301BE5 		ldr	r3, [fp, #-36]
 3536 1598 000053E3 		cmp	r3, #0
 3537 159c 0400000A 		beq	.L224
1338:../CX3RDKOV5640.c **** 					}
 3538              		.loc 1 1338 0
 3539 15a0 0400A0E3 		mov	r0, #4
 3540 15a4 6C141FE5 		ldr	r1, .L229+164
 3541 15a8 24201BE5 		ldr	r2, [fp, #-36]
 3542 15ac FEFFFFEB 		bl	CyU3PDebugPrint
1340:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3543              		.loc 1 1340 0
 3544 15b0 130000EA 		b	.L218
 3545              	.L224:
 3546 15b4 120000EA 		b	.L218
 3547              	.L221:
1342:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3548              		.loc 1 1342 0
 3549 15b8 32304BE2 		sub	r3, fp, #50
 3550 15bc 1000A0E3 		mov	r0, #16
 3551 15c0 8C141FE5 		ldr	r1, .L229+160
 3552 15c4 0320A0E1 		mov	r2, r3
 3553 15c8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3554 15cc 24000BE5 		str	r0, [fp, #-36]
1343:../CX3RDKOV5640.c **** 					{
 3555              		.loc 1 1343 0
 3556 15d0 24301BE5 		ldr	r3, [fp, #-36]
 3557 15d4 000053E3 		cmp	r3, #0
 3558 15d8 0300000A 		beq	.L225
1345:../CX3RDKOV5640.c **** 					}
 3559              		.loc 1 1345 0
 3560 15dc 0400A0E3 		mov	r0, #4
 3561 15e0 A8141FE5 		ldr	r1, .L229+164
 3562 15e4 24201BE5 		ldr	r2, [fp, #-36]
 3563 15e8 FEFFFFEB 		bl	CyU3PDebugPrint
 3564              	.L225:
1348:../CX3RDKOV5640.c **** 					break;
 3565              		.loc 1 1348 0
 3566 15ec B8341FE5 		ldr	r3, .L229+160
 3567 15f0 B030D3E1 		ldrh	r3, [r3]
 3568 15f4 FF3003E2 		and	r3, r3, #255
 3569 15f8 0300A0E1 		mov	r0, r3
 3570 15fc FEFFFFEB 		bl	esOV5640_SetAutoWhiteBalance
1349:../CX3RDKOV5640.c **** 				}
 3571              		.loc 1 1349 0
 3572 1600 0000A0E1 		mov	r0, r0	@ nop
 3573              	.L218:
 3574              		.loc 1 1351 0
 3575 1604 190000EA 		b	.L90
 3576              	.L217:
1352:../CX3RDKOV5640.c ****             else if((wValue == ES_UVC_VC_REQUEST_ERROR_CODE_CONTROL) && (wIndex == 0x00))
 3577              		.loc 1 1352 0
 3578 1608 BC325BE1 		ldrh	r3, [fp, #-44]
 3579 160c 020C53E3 		cmp	r3, #512
 3580 1610 1200001A 		bne	.L226
 3581              		.loc 1 1352 0 is_stmt 0 discriminator 1
 3582 1614 BE325BE1 		ldrh	r3, [fp, #-46]
 3583 1618 000053E3 		cmp	r3, #0
 3584 161c 0F00001A 		bne	.L226
1353:../CX3RDKOV5640.c ****             {
1354:../CX3RDKOV5640.c ****                 temp = ES_UVC_ERROR_INVALID_CONTROL;
 3585              		.loc 1 1354 0 is_stmt 1
 3586 1620 0630A0E3 		mov	r3, #6
 3587 1624 35304BE5 		strb	r3, [fp, #-53]
1355:../CX3RDKOV5640.c ****                 status = CyU3PUsbSendEP0Data(0x01, &temp);
 3588              		.loc 1 1355 0
 3589 1628 35304BE2 		sub	r3, fp, #53
 3590 162c 0100A0E3 		mov	r0, #1
 3591 1630 0310A0E1 		mov	r1, r3
 3592 1634 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3593 1638 24000BE5 		str	r0, [fp, #-36]
1356:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3594              		.loc 1 1356 0
 3595 163c 24301BE5 		ldr	r3, [fp, #-36]
 3596 1640 000053E3 		cmp	r3, #0
 3597 1644 0400000A 		beq	.L227
1357:../CX3RDKOV5640.c ****                 {
1358:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 3598              		.loc 1 1358 0
 3599 1648 0400A0E3 		mov	r0, #4
 3600 164c 14151FE5 		ldr	r1, .L229+164
 3601 1650 24201BE5 		ldr	r2, [fp, #-36]
 3602 1654 FEFFFFEB 		bl	CyU3PDebugPrint
1356:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3603              		.loc 1 1356 0
 3604 1658 040000EA 		b	.L90
 3605              	.L227:
1356:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3606              		.loc 1 1356 0 is_stmt 0 discriminator 1
 3607 165c 030000EA 		b	.L90
 3608              	.L226:
1359:../CX3RDKOV5640.c ****                 }
1360:../CX3RDKOV5640.c ****             }
1361:../CX3RDKOV5640.c ****             else
1362:../CX3RDKOV5640.c ****                 CyU3PUsbStall(0,CyTrue, CyTrue);
 3609              		.loc 1 1362 0 is_stmt 1
 3610 1660 0000A0E3 		mov	r0, #0
 3611 1664 0110A0E3 		mov	r1, #1
 3612 1668 0120A0E3 		mov	r2, #1
 3613 166c FEFFFFEB 		bl	CyU3PUsbStall
 3614              	.L90:
1363:../CX3RDKOV5640.c ****         }
1364:../CX3RDKOV5640.c ****     }
1365:../CX3RDKOV5640.c ****     return isHandled;
 3615              		.loc 1 1365 0
 3616 1670 20301BE5 		ldr	r3, [fp, #-32]
 3617              	.L228:
1366:../CX3RDKOV5640.c **** }
 3618              		.loc 1 1366 0
 3619 1674 0300A0E1 		mov	r0, r3
 3620 1678 18D04BE2 		sub	sp, fp, #24
 3621              		@ sp needed
 3622 167c F089BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, fp, pc}
 3623              		.cfi_endproc
 3624              	.LFE10:
 3626              		.section	.rodata
 3627 04d1 000000   		.align	2
 3628              	.LC28:
 3629 04d4 0A0D4170 		.ascii	"\012\015AppInit:I2CInit Err = 0x%x.\000"
 3629      70496E69 
 3629      743A4932 
 3629      43496E69 
 3629      74204572 
 3630 04f2 0000     		.align	2
 3631              	.LC29:
 3632 04f4 0A0D4170 		.ascii	"\012\015AppInit:I2CInit\000"
 3632      70496E69 
 3632      743A4932 
 3632      43496E69 
 3632      7400
 3633 0506 0000     		.align	2
 3634              	.LC30:
 3635 0508 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit Err = 0x%x\000"
 3635      70496E69 
 3635      743A4750 
 3635      494F496E 
 3635      69742045 
 3636 0526 0000     		.align	2
 3637              	.LC31:
 3638 0528 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit\000"
 3638      70496E69 
 3638      743A4750 
 3638      494F496E 
 3638      697400
 3639 053b 00       		.align	2
 3640              	.LC32:
 3641 053c 0A0D4170 		.ascii	"\012\015AppInit:PIBInit Err = 0x%x\000"
 3641      70496E69 
 3641      743A5049 
 3641      42496E69 
 3641      74204572 
 3642 0559 000000   		.align	2
 3643              	.LC33:
 3644 055c 0A0D4170 		.ascii	"\012\015AppInit:PIBInit\000"
 3644      70496E69 
 3644      743A5049 
 3644      42496E69 
 3644      7400
 3645 056e 0000     		.align	2
 3646              	.LC34:
 3647 0570 0A0D4170 		.ascii	"\012\015AppInit:UsbStart Err = 0x%x\000"
 3647      70496E69 
 3647      743A5573 
 3647      62537461 
 3647      72742045 
 3648 058e 0000     		.align	2
 3649              	.LC35:
 3650 0590 0A0D4170 		.ascii	"\012\015AppInit:UsbStart\000"
 3650      70496E69 
 3650      743A5573 
 3650      62537461 
 3650      727400
 3651 05a3 00       		.align	2
 3652              	.LC36:
 3653 05a4 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr Err = 0x%x\000"
 3653      70496E69 
 3653      743A5365 
 3653      745F5353 
 3653      5F446576 
 3654              		.align	2
 3655              	.LC37:
 3656 05cc 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr\000"
 3656      70496E69 
 3656      743A5365 
 3656      745F5353 
 3656      5F446576 
 3657 05e9 000000   		.align	2
 3658              	.LC38:
 3659 05ec 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr Err = 0x%x\000"
 3659      70496E69 
 3659      743A5365 
 3659      745F4853 
 3659      5F446576 
 3660              		.align	2
 3661              	.LC39:
 3662 0614 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr\000"
 3662      70496E69 
 3662      743A5365 
 3662      745F4853 
 3662      5F446576 
 3663 0631 000000   		.align	2
 3664              	.LC40:
 3665 0634 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr Err = 0x%x\000"
 3665      70496E69 
 3665      743A5365 
 3665      745F424F 
 3665      535F4473 
 3666 0656 0000     		.align	2
 3667              	.LC41:
 3668 0658 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr\000"
 3668      70496E69 
 3668      743A5365 
 3668      745F424F 
 3668      535F4473 
 3669 066f 00       		.align	2
 3670              	.LC42:
 3671 0670 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr Err = 0x%x\000"
 3671      70496E69 
 3671      743A5365 
 3671      745F4445 
 3671      56515541 
 3672 0696 0000     		.align	2
 3673              	.LC43:
 3674 0698 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr\000"
 3674      70496E69 
 3674      743A5365 
 3674      745F4445 
 3674      56515541 
 3675 06b3 00       		.align	2
 3676              	.LC44:
 3677 06b4 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr Err = 0x%x\000"
 3677      70496E69 
 3677      743A5365 
 3677      745F5353 
 3677      5F434647 
 3678 06d9 000000   		.align	2
 3679              	.LC45:
 3680 06dc 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr\000"
 3680      70496E69 
 3680      743A5365 
 3680      745F5353 
 3680      5F434647 
 3681 06f6 0000     		.align	2
 3682              	.LC46:
 3683 06f8 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr Err = 0x%x\000"
 3683      70496E69 
 3683      743A5365 
 3683      745F4853 
 3683      5F434647 
 3684 071d 000000   		.align	2
 3685              	.LC47:
 3686 0720 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr\000"
 3686      70496E69 
 3686      743A5365 
 3686      745F4853 
 3686      5F434647 
 3687 073a 0000     		.align	2
 3688              	.LC48:
 3689 073c 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr Err = 0x%x\000"
 3689      70496E69 
 3689      743A5365 
 3689      745F4653 
 3689      5F434647 
 3690 0761 000000   		.align	2
 3691              	.LC49:
 3692 0764 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr\000"
 3692      70496E69 
 3692      743A5365 
 3692      745F4653 
 3692      5F434647 
 3693 077e 0000     		.align	2
 3694              	.LC50:
 3695 0780 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr0 Err = 0x%x\000"
 3695      70496E69 
 3695      743A5365 
 3695      745F5354 
 3695      524E475F 
 3696 07a5 000000   		.align	2
 3697              	.LC51:
 3698 07a8 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr1 Err = 0x%x\000"
 3698      70496E69 
 3698      743A5365 
 3698      745F5354 
 3698      524E475F 
 3699 07cd 000000   		.align	2
 3700              	.LC52:
 3701 07d0 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr2 Err = 0x%x\000"
 3701      70496E69 
 3701      743A5365 
 3701      745F5354 
 3701      524E475F 
 3702 07f5 000000   		.align	2
 3703              	.LC53:
 3704 07f8 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr3 Err = 0x%x\000"
 3704      70496E69 
 3704      743A5365 
 3704      745F5354 
 3704      524E475F 
 3705 081d 000000   		.align	2
 3706              	.LC54:
 3707 0820 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr4 Err = 0x%x\000"
 3707      70496E69 
 3707      743A5365 
 3707      745F5354 
 3707      524E475F 
 3708 0845 000000   		.align	2
 3709              	.LC55:
 3710 0848 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr5 Err = 0x%x\000"
 3710      70496E69 
 3710      743A5365 
 3710      745F5354 
 3710      524E475F 
 3711 086d 000000   		.align	2
 3712              	.LC56:
 3713 0870 0A0D4170 		.ascii	"\012\015AppInit:ConnectState Err = 0x%x\000"
 3713      70496E69 
 3713      743A436F 
 3713      6E6E6563 
 3713      74537461 
 3714 0892 0000     		.align	2
 3715              	.LC57:
 3716 0894 6E0D4170 		.ascii	"n\015AppInit:ConnectState\000"
 3716      70496E69 
 3716      743A436F 
 3716      6E6E6563 
 3716      74537461 
 3717 08ab 00       		.align	2
 3718              	.LC58:
 3719 08ac 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x\000"
 3719      70496E69 
 3719      743A4379 
 3719      55335053 
 3719      65744570 
 3720 08d9 000000   		.align	2
 3721              	.LC59:
 3722 08dc 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp Err = 0x%x\000"
 3722      70496E69 
 3722      743A4379 
 3722      55335053 
 3722      65744570 
 3723 0909 000000   		.align	2
 3724              	.LC60:
 3725 090c 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp\000"
 3725      70496E69 
 3725      743A4379 
 3725      55335053 
 3725      65744570 
 3726 092e 0000     		.align	2
 3727              	.LC61:
 3728 0930 0A0D4170 		.ascii	"\012\015AppInit:DmaMultiChannelCreate Err = 0x%x\000"
 3728      70496E69 
 3728      743A446D 
 3728      614D756C 
 3728      74694368 
 3729 095b 00       		.align	2
 3730              	.LC62:
 3731 095c 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset Err = 0x%x\000"
 3731      70496E69 
 3731      743A4D75 
 3731      6C746943 
 3731      68616E6E 
 3732 0983 00       		.align	2
 3733              	.LC63:
 3734 0984 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset\000"
 3734      70496E69 
 3734      743A4D75 
 3734      6C746943 
 3734      68616E6E 
 3735              		.align	2
 3736              	.LC64:
 3737 09a0 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad Err = 0x%x\000"
 3737      70496E69 
 3737      743A4D69 
 3737      70696373 
 3737      69477069 
 3738 09c5 000000   		.align	2
 3739              	.LC65:
 3740 09c8 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad\000"
 3740      70496E69 
 3740      743A4D69 
 3740      70696373 
 3740      69477069 
 3741 09e2 0000     		.align	2
 3742              	.LC66:
 3743 09e4 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart Err = 0x%x\000"
 3743      70496E69 
 3743      743A4770 
 3743      6966534D 
 3743      53746172 
 3744 0a05 000000   		.align	2
 3745              	.LC67:
 3746 0a08 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart\000"
 3746      70496E69 
 3746      743A4770 
 3746      6966534D 
 3746      53746172 
 3747 0a1e 0000     		.align	2
 3748              	.LC68:
 3749 0a20 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit Err = 0x%x\000"
 3749      70496E69 
 3749      743A4D69 
 3749      70696373 
 3749      69496E69 
 3750 0a41 000000   		.align	2
 3751              	.LC69:
 3752 0a44 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit\000"
 3752      70496E69 
 3752      743A4D69 
 3752      70696373 
 3752      69496E69 
 3753 0a5a 0000     		.align	2
 3754              	.LC70:
 3755 0a5c 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams Err = 0x%x\000"
 3755      70496E69 
 3755      743A4D69 
 3755      70696373 
 3755      69536574 
 3756 0a86 0000     		.align	2
 3757              	.LC71:
 3758 0a88 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams\000"
 3758      70496E69 
 3758      743A4D69 
 3758      70696373 
 3758      69536574 
 3759 0aa7 00       		.align	2
 3760              	.LC72:
 3761 0aa8 0A0D4669 		.ascii	"\012\015Firmware Version: %d.%d.%d.%d\000"
 3761      726D7761 
 3761      72652056 
 3761      65727369 
 3761      6F6E3A20 
 3762              		.section	.text.esUVCUvcApplnInit,"ax",%progbits
 3763              		.align	2
 3764              		.global	esUVCUvcApplnInit
 3766              	esUVCUvcApplnInit:
 3767              	.LFB11:
1367:../CX3RDKOV5640.c **** 
1368:../CX3RDKOV5640.c **** 
1369:../CX3RDKOV5640.c **** /* This function initializes the USB Module, creates event group,
1370:../CX3RDKOV5640.c ****    sets the enumeration descriptors, configures the Endpoints and
1371:../CX3RDKOV5640.c ****    configures the DMA module for the UVC Application */
1372:../CX3RDKOV5640.c ****     void
1373:../CX3RDKOV5640.c **** esUVCUvcApplnInit (void)
1374:../CX3RDKOV5640.c **** {
 3768              		.loc 1 1374 0
 3769              		.cfi_startproc
 3770              		@ args = 0, pretend = 0, frame = 56
 3771              		@ frame_needed = 1, uses_anonymous_args = 0
 3772 0000 00482DE9 		stmfd	sp!, {fp, lr}
 3773              	.LCFI22:
 3774              		.cfi_def_cfa_offset 8
 3775              		.cfi_offset 11, -8
 3776              		.cfi_offset 14, -4
 3777 0004 04B08DE2 		add	fp, sp, #4
 3778              	.LCFI23:
 3779              		.cfi_def_cfa 11, 4
 3780 0008 48D04DE2 		sub	sp, sp, #72
1375:../CX3RDKOV5640.c ****     CyU3PEpConfig_t endPointConfig;
1376:../CX3RDKOV5640.c ****     CyU3PDmaMultiChannelConfig_t dmaCfg;
1377:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 3781              		.loc 1 1377 0
 3782 000c 0030A0E3 		mov	r3, #0
 3783 0010 08300BE5 		str	r3, [fp, #-8]
1378:../CX3RDKOV5640.c **** 
1379:../CX3RDKOV5640.c ****     /* Initialize the I2C interface for Mipi Block Usage and Camera. */
1380:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeI2c (CY_U3P_MIPICSI_I2C_400KHZ);
 3784              		.loc 1 1380 0
 3785 0014 0100A0E3 		mov	r0, #1
 3786 0018 FEFFFFEB 		bl	CyU3PMipicsiInitializeI2c
 3787 001c 08000BE5 		str	r0, [fp, #-8]
1381:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3788              		.loc 1 1381 0
 3789 0020 08301BE5 		ldr	r3, [fp, #-8]
 3790 0024 000053E3 		cmp	r3, #0
 3791 0028 0500000A 		beq	.L232
1382:../CX3RDKOV5640.c ****     {
1383:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:I2CInit Err = 0x%x.",status);
 3792              		.loc 1 1383 0
 3793 002c 0400A0E3 		mov	r0, #4
 3794 0030 54189FE5 		ldr	r1, .L263
 3795 0034 08201BE5 		ldr	r2, [fp, #-8]
 3796 0038 FEFFFFEB 		bl	CyU3PDebugPrint
1384:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3797              		.loc 1 1384 0
 3798 003c 08001BE5 		ldr	r0, [fp, #-8]
 3799 0040 FEFFFFEB 		bl	esUVCAppErrorHandler
 3800              	.L232:
1385:../CX3RDKOV5640.c ****     }
1386:../CX3RDKOV5640.c **** #ifdef VISDebug
1387:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:I2CInit");
 3801              		.loc 1 1387 0
 3802 0044 0400A0E3 		mov	r0, #4
 3803 0048 40189FE5 		ldr	r1, .L263+4
 3804 004c FEFFFFEB 		bl	CyU3PDebugPrint
1388:../CX3RDKOV5640.c **** #endif
1389:../CX3RDKOV5640.c ****     /* Initialize GPIO module. */
1390:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeGPIO ();
 3805              		.loc 1 1390 0
 3806 0050 FEFFFFEB 		bl	CyU3PMipicsiInitializeGPIO
 3807 0054 08000BE5 		str	r0, [fp, #-8]
1391:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3808              		.loc 1 1391 0
 3809 0058 08301BE5 		ldr	r3, [fp, #-8]
 3810 005c 000053E3 		cmp	r3, #0
 3811 0060 0500000A 		beq	.L233
1392:../CX3RDKOV5640.c ****     {
1393:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit Err = 0x%x",status);
 3812              		.loc 1 1393 0
 3813 0064 0400A0E3 		mov	r0, #4
 3814 0068 24189FE5 		ldr	r1, .L263+8
 3815 006c 08201BE5 		ldr	r2, [fp, #-8]
 3816 0070 FEFFFFEB 		bl	CyU3PDebugPrint
1394:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3817              		.loc 1 1394 0
 3818 0074 08001BE5 		ldr	r0, [fp, #-8]
 3819 0078 FEFFFFEB 		bl	esUVCAppErrorHandler
 3820              	.L233:
1395:../CX3RDKOV5640.c ****     }
1396:../CX3RDKOV5640.c **** #ifdef VISDebug
1397:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit");
 3821              		.loc 1 1397 0
 3822 007c 0400A0E3 		mov	r0, #4
 3823 0080 10189FE5 		ldr	r1, .L263+12
 3824 0084 FEFFFFEB 		bl	CyU3PDebugPrint
1398:../CX3RDKOV5640.c **** #endif
1399:../CX3RDKOV5640.c ****     /* Initialize the PIB block */
1400:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializePIB ();
 3825              		.loc 1 1400 0
 3826 0088 FEFFFFEB 		bl	CyU3PMipicsiInitializePIB
 3827 008c 08000BE5 		str	r0, [fp, #-8]
1401:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3828              		.loc 1 1401 0
 3829 0090 08301BE5 		ldr	r3, [fp, #-8]
 3830 0094 000053E3 		cmp	r3, #0
 3831 0098 0500000A 		beq	.L234
1402:../CX3RDKOV5640.c ****     {
1403:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:PIBInit Err = 0x%x",status);
 3832              		.loc 1 1403 0
 3833 009c 0400A0E3 		mov	r0, #4
 3834 00a0 F4179FE5 		ldr	r1, .L263+16
 3835 00a4 08201BE5 		ldr	r2, [fp, #-8]
 3836 00a8 FEFFFFEB 		bl	CyU3PDebugPrint
1404:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3837              		.loc 1 1404 0
 3838 00ac 08001BE5 		ldr	r0, [fp, #-8]
 3839 00b0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3840              	.L234:
1405:../CX3RDKOV5640.c ****     }
1406:../CX3RDKOV5640.c **** #ifdef VISDebug
1407:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:PIBInit");
 3841              		.loc 1 1407 0
 3842 00b4 0400A0E3 		mov	r0, #4
 3843 00b8 E0179FE5 		ldr	r1, .L263+20
 3844 00bc FEFFFFEB 		bl	CyU3PDebugPrint
1408:../CX3RDKOV5640.c **** #endif
1409:../CX3RDKOV5640.c ****     /* Start the USB functionality */
1410:../CX3RDKOV5640.c ****     status = CyU3PUsbStart();
 3845              		.loc 1 1410 0
 3846 00c0 FEFFFFEB 		bl	CyU3PUsbStart
 3847 00c4 08000BE5 		str	r0, [fp, #-8]
1411:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3848              		.loc 1 1411 0
 3849 00c8 08301BE5 		ldr	r3, [fp, #-8]
 3850 00cc 000053E3 		cmp	r3, #0
 3851 00d0 0500000A 		beq	.L235
1412:../CX3RDKOV5640.c ****     {
1413:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:UsbStart Err = 0x%x",status);
 3852              		.loc 1 1413 0
 3853 00d4 0400A0E3 		mov	r0, #4
 3854 00d8 C4179FE5 		ldr	r1, .L263+24
 3855 00dc 08201BE5 		ldr	r2, [fp, #-8]
 3856 00e0 FEFFFFEB 		bl	CyU3PDebugPrint
1414:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3857              		.loc 1 1414 0
 3858 00e4 08001BE5 		ldr	r0, [fp, #-8]
 3859 00e8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3860              	.L235:
1415:../CX3RDKOV5640.c ****     }
1416:../CX3RDKOV5640.c **** #ifdef VISDebug
1417:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:UsbStart");
 3861              		.loc 1 1417 0
 3862 00ec 0400A0E3 		mov	r0, #4
 3863 00f0 B0179FE5 		ldr	r1, .L263+28
 3864 00f4 FEFFFFEB 		bl	CyU3PDebugPrint
1418:../CX3RDKOV5640.c **** #endif
1419:../CX3RDKOV5640.c ****     /* The fast enumeration is the easiest way to setup a USB connection,
1420:../CX3RDKOV5640.c ****      * where all enumeration phase is handled by the library. Only the
1421:../CX3RDKOV5640.c ****      * class / vendor requests need to be handled by the application. */
1422:../CX3RDKOV5640.c ****     CyU3PUsbRegisterSetupCallback(esUVCUvcApplnUSBSetupCB, CyTrue);
 3865              		.loc 1 1422 0
 3866 00f8 AC079FE5 		ldr	r0, .L263+32
 3867 00fc 0110A0E3 		mov	r1, #1
 3868 0100 FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
1423:../CX3RDKOV5640.c **** 
1424:../CX3RDKOV5640.c ****     /* Setup the callback to handle the USB events */
1425:../CX3RDKOV5640.c ****     CyU3PUsbRegisterEventCallback(esUVCUvcApplnUSBEventCB);
 3869              		.loc 1 1425 0
 3870 0104 A4079FE5 		ldr	r0, .L263+36
 3871 0108 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
1426:../CX3RDKOV5640.c **** 
1427:../CX3RDKOV5640.c ****     /* Register a callback to handle LPM requests from the USB 3.0 host. */
1428:../CX3RDKOV5640.c ****     CyU3PUsbRegisterLPMRequestCallback (esUVCApplnLPMRqtCB);
 3872              		.loc 1 1428 0
 3873 010c A0079FE5 		ldr	r0, .L263+40
 3874 0110 FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
1429:../CX3RDKOV5640.c **** 
1430:../CX3RDKOV5640.c ****     /* Set the USB Enumeration descriptors */
1431:../CX3RDKOV5640.c **** 
1432:../CX3RDKOV5640.c ****     /* Super speed device descriptor. */
1433:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB30DeviceDscr);
 3875              		.loc 1 1433 0
 3876 0114 0000A0E3 		mov	r0, #0
 3877 0118 0010A0E3 		mov	r1, #0
 3878 011c 94279FE5 		ldr	r2, .L263+44
 3879 0120 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3880 0124 08000BE5 		str	r0, [fp, #-8]
1434:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3881              		.loc 1 1434 0
 3882 0128 08301BE5 		ldr	r3, [fp, #-8]
 3883 012c 000053E3 		cmp	r3, #0
 3884 0130 0500000A 		beq	.L236
1435:../CX3RDKOV5640.c ****     {
1436:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr Err = 0x%x", status);
 3885              		.loc 1 1436 0
 3886 0134 0400A0E3 		mov	r0, #4
 3887 0138 7C179FE5 		ldr	r1, .L263+48
 3888 013c 08201BE5 		ldr	r2, [fp, #-8]
 3889 0140 FEFFFFEB 		bl	CyU3PDebugPrint
1437:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3890              		.loc 1 1437 0
 3891 0144 08001BE5 		ldr	r0, [fp, #-8]
 3892 0148 FEFFFFEB 		bl	esUVCAppErrorHandler
 3893              	.L236:
1438:../CX3RDKOV5640.c ****     }
1439:../CX3RDKOV5640.c **** #ifdef VISDebug
1440:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr");
 3894              		.loc 1 1440 0
 3895 014c 0400A0E3 		mov	r0, #4
 3896 0150 68179FE5 		ldr	r1, .L263+52
 3897 0154 FEFFFFEB 		bl	CyU3PDebugPrint
1441:../CX3RDKOV5640.c **** #endif
1442:../CX3RDKOV5640.c ****     /* High speed device descriptor. */
1443:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB20DeviceDscr);
 3898              		.loc 1 1443 0
 3899 0158 0100A0E3 		mov	r0, #1
 3900 015c 0010A0E3 		mov	r1, #0
 3901 0160 5C279FE5 		ldr	r2, .L263+56
 3902 0164 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3903 0168 08000BE5 		str	r0, [fp, #-8]
1444:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3904              		.loc 1 1444 0
 3905 016c 08301BE5 		ldr	r3, [fp, #-8]
 3906 0170 000053E3 		cmp	r3, #0
 3907 0174 0500000A 		beq	.L237
1445:../CX3RDKOV5640.c ****     {
1446:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr Err = 0x%x", status);
 3908              		.loc 1 1446 0
 3909 0178 0400A0E3 		mov	r0, #4
 3910 017c 44179FE5 		ldr	r1, .L263+60
 3911 0180 08201BE5 		ldr	r2, [fp, #-8]
 3912 0184 FEFFFFEB 		bl	CyU3PDebugPrint
1447:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3913              		.loc 1 1447 0
 3914 0188 08001BE5 		ldr	r0, [fp, #-8]
 3915 018c FEFFFFEB 		bl	esUVCAppErrorHandler
 3916              	.L237:
1448:../CX3RDKOV5640.c ****     }
1449:../CX3RDKOV5640.c **** #ifdef VISDebug
1450:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr");
 3917              		.loc 1 1450 0
 3918 0190 0400A0E3 		mov	r0, #4
 3919 0194 30179FE5 		ldr	r1, .L263+64
 3920 0198 FEFFFFEB 		bl	CyU3PDebugPrint
1451:../CX3RDKOV5640.c **** #endif
1452:../CX3RDKOV5640.c ****     /* BOS descriptor */
1453:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, 0, (uint8_t *)esUVCUSBBOSDscr);
 3921              		.loc 1 1453 0
 3922 019c 0700A0E3 		mov	r0, #7
 3923 01a0 0010A0E3 		mov	r1, #0
 3924 01a4 24279FE5 		ldr	r2, .L263+68
 3925 01a8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3926 01ac 08000BE5 		str	r0, [fp, #-8]
1454:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3927              		.loc 1 1454 0
 3928 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3929 01b4 000053E3 		cmp	r3, #0
 3930 01b8 0500000A 		beq	.L238
1455:../CX3RDKOV5640.c ****     {
1456:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr Err = 0x%x", status);
 3931              		.loc 1 1456 0
 3932 01bc 0400A0E3 		mov	r0, #4
 3933 01c0 0C179FE5 		ldr	r1, .L263+72
 3934 01c4 08201BE5 		ldr	r2, [fp, #-8]
 3935 01c8 FEFFFFEB 		bl	CyU3PDebugPrint
1457:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3936              		.loc 1 1457 0
 3937 01cc 08001BE5 		ldr	r0, [fp, #-8]
 3938 01d0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3939              	.L238:
1458:../CX3RDKOV5640.c ****     }
1459:../CX3RDKOV5640.c **** #ifdef VISDebug
1460:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr");
 3940              		.loc 1 1460 0
 3941 01d4 0400A0E3 		mov	r0, #4
 3942 01d8 F8169FE5 		ldr	r1, .L263+76
 3943 01dc FEFFFFEB 		bl	CyU3PDebugPrint
1461:../CX3RDKOV5640.c **** #endif
1462:../CX3RDKOV5640.c ****     /* Device qualifier descriptor */
1463:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, 0, (uint8_t *)esUVCUSBDeviceQualDscr);
 3944              		.loc 1 1463 0
 3945 01e0 0200A0E3 		mov	r0, #2
 3946 01e4 0010A0E3 		mov	r1, #0
 3947 01e8 EC269FE5 		ldr	r2, .L263+80
 3948 01ec FEFFFFEB 		bl	CyU3PUsbSetDesc
 3949 01f0 08000BE5 		str	r0, [fp, #-8]
1464:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3950              		.loc 1 1464 0
 3951 01f4 08301BE5 		ldr	r3, [fp, #-8]
 3952 01f8 000053E3 		cmp	r3, #0
 3953 01fc 0500000A 		beq	.L239
1465:../CX3RDKOV5640.c ****     {
1466:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr Err = 0x%x", status);
 3954              		.loc 1 1466 0
 3955 0200 0400A0E3 		mov	r0, #4
 3956 0204 D4169FE5 		ldr	r1, .L263+84
 3957 0208 08201BE5 		ldr	r2, [fp, #-8]
 3958 020c FEFFFFEB 		bl	CyU3PDebugPrint
1467:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3959              		.loc 1 1467 0
 3960 0210 08001BE5 		ldr	r0, [fp, #-8]
 3961 0214 FEFFFFEB 		bl	esUVCAppErrorHandler
 3962              	.L239:
1468:../CX3RDKOV5640.c ****     }
1469:../CX3RDKOV5640.c **** #ifdef VISDebug
1470:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr");
 3963              		.loc 1 1470 0
 3964 0218 0400A0E3 		mov	r0, #4
 3965 021c C0169FE5 		ldr	r1, .L263+88
 3966 0220 FEFFFFEB 		bl	CyU3PDebugPrint
1471:../CX3RDKOV5640.c **** #endif
1472:../CX3RDKOV5640.c ****     /* Super speed configuration descriptor */
1473:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBSSConfigDscr);
 3967              		.loc 1 1473 0
 3968 0224 0600A0E3 		mov	r0, #6
 3969 0228 0010A0E3 		mov	r1, #0
 3970 022c B4269FE5 		ldr	r2, .L263+92
 3971 0230 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3972 0234 08000BE5 		str	r0, [fp, #-8]
1474:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3973              		.loc 1 1474 0
 3974 0238 08301BE5 		ldr	r3, [fp, #-8]
 3975 023c 000053E3 		cmp	r3, #0
 3976 0240 0500000A 		beq	.L240
1475:../CX3RDKOV5640.c ****     {
1476:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr Err = 0x%x", status);
 3977              		.loc 1 1476 0
 3978 0244 0400A0E3 		mov	r0, #4
 3979 0248 9C169FE5 		ldr	r1, .L263+96
 3980 024c 08201BE5 		ldr	r2, [fp, #-8]
 3981 0250 FEFFFFEB 		bl	CyU3PDebugPrint
1477:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3982              		.loc 1 1477 0
 3983 0254 08001BE5 		ldr	r0, [fp, #-8]
 3984 0258 FEFFFFEB 		bl	esUVCAppErrorHandler
 3985              	.L240:
1478:../CX3RDKOV5640.c ****     }
1479:../CX3RDKOV5640.c **** #ifdef VISDebug
1480:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr");
 3986              		.loc 1 1480 0
 3987 025c 0400A0E3 		mov	r0, #4
 3988 0260 88169FE5 		ldr	r1, .L263+100
 3989 0264 FEFFFFEB 		bl	CyU3PDebugPrint
1481:../CX3RDKOV5640.c **** #endif
1482:../CX3RDKOV5640.c ****     /* High speed configuration descriptor */
1483:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBHSConfigDscr);
 3990              		.loc 1 1483 0
 3991 0268 0400A0E3 		mov	r0, #4
 3992 026c 0010A0E3 		mov	r1, #0
 3993 0270 7C269FE5 		ldr	r2, .L263+104
 3994 0274 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3995 0278 08000BE5 		str	r0, [fp, #-8]
1484:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3996              		.loc 1 1484 0
 3997 027c 08301BE5 		ldr	r3, [fp, #-8]
 3998 0280 000053E3 		cmp	r3, #0
 3999 0284 0500000A 		beq	.L241
1485:../CX3RDKOV5640.c ****     {
1486:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr Err = 0x%x", status);
 4000              		.loc 1 1486 0
 4001 0288 0400A0E3 		mov	r0, #4
 4002 028c 64169FE5 		ldr	r1, .L263+108
 4003 0290 08201BE5 		ldr	r2, [fp, #-8]
 4004 0294 FEFFFFEB 		bl	CyU3PDebugPrint
1487:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4005              		.loc 1 1487 0
 4006 0298 08001BE5 		ldr	r0, [fp, #-8]
 4007 029c FEFFFFEB 		bl	esUVCAppErrorHandler
 4008              	.L241:
1488:../CX3RDKOV5640.c ****     }
1489:../CX3RDKOV5640.c **** #ifdef VISDebug
1490:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr");
 4009              		.loc 1 1490 0
 4010 02a0 0400A0E3 		mov	r0, #4
 4011 02a4 50169FE5 		ldr	r1, .L263+112
 4012 02a8 FEFFFFEB 		bl	CyU3PDebugPrint
1491:../CX3RDKOV5640.c **** #endif
1492:../CX3RDKOV5640.c ****     /* Full speed configuration descriptor */
1493:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBFSConfigDscr);
 4013              		.loc 1 1493 0
 4014 02ac 0300A0E3 		mov	r0, #3
 4015 02b0 0010A0E3 		mov	r1, #0
 4016 02b4 44269FE5 		ldr	r2, .L263+116
 4017 02b8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4018 02bc 08000BE5 		str	r0, [fp, #-8]
1494:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4019              		.loc 1 1494 0
 4020 02c0 08301BE5 		ldr	r3, [fp, #-8]
 4021 02c4 000053E3 		cmp	r3, #0
 4022 02c8 0500000A 		beq	.L242
1495:../CX3RDKOV5640.c ****     {
1496:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr Err = 0x%x", status);
 4023              		.loc 1 1496 0
 4024 02cc 0400A0E3 		mov	r0, #4
 4025 02d0 2C169FE5 		ldr	r1, .L263+120
 4026 02d4 08201BE5 		ldr	r2, [fp, #-8]
 4027 02d8 FEFFFFEB 		bl	CyU3PDebugPrint
1497:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4028              		.loc 1 1497 0
 4029 02dc 08001BE5 		ldr	r0, [fp, #-8]
 4030 02e0 FEFFFFEB 		bl	esUVCAppErrorHandler
 4031              	.L242:
1498:../CX3RDKOV5640.c ****     }
1499:../CX3RDKOV5640.c **** #ifdef VISDebug
1500:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr");
 4032              		.loc 1 1500 0
 4033 02e4 0400A0E3 		mov	r0, #4
 4034 02e8 18169FE5 		ldr	r1, .L263+124
 4035 02ec FEFFFFEB 		bl	CyU3PDebugPrint
1501:../CX3RDKOV5640.c **** #endif
1502:../CX3RDKOV5640.c ****     /* String descriptor 0 */
1503:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)esUVCUSBStringLangIDDscr);
 4036              		.loc 1 1503 0
 4037 02f0 0500A0E3 		mov	r0, #5
 4038 02f4 0010A0E3 		mov	r1, #0
 4039 02f8 0C269FE5 		ldr	r2, .L263+128
 4040 02fc FEFFFFEB 		bl	CyU3PUsbSetDesc
 4041 0300 08000BE5 		str	r0, [fp, #-8]
1504:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4042              		.loc 1 1504 0
 4043 0304 08301BE5 		ldr	r3, [fp, #-8]
 4044 0308 000053E3 		cmp	r3, #0
 4045 030c 0500000A 		beq	.L243
1505:../CX3RDKOV5640.c ****     {
1506:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr0 Err = 0x%x", status);
 4046              		.loc 1 1506 0
 4047 0310 0400A0E3 		mov	r0, #4
 4048 0314 F4159FE5 		ldr	r1, .L263+132
 4049 0318 08201BE5 		ldr	r2, [fp, #-8]
 4050 031c FEFFFFEB 		bl	CyU3PDebugPrint
1507:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4051              		.loc 1 1507 0
 4052 0320 08001BE5 		ldr	r0, [fp, #-8]
 4053 0324 FEFFFFEB 		bl	esUVCAppErrorHandler
 4054              	.L243:
1508:../CX3RDKOV5640.c ****     }
1509:../CX3RDKOV5640.c **** 
1510:../CX3RDKOV5640.c ****     /* String descriptor 1 */
1511:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)esUVCUSBManufactureDscr);
 4055              		.loc 1 1511 0
 4056 0328 0500A0E3 		mov	r0, #5
 4057 032c 0110A0E3 		mov	r1, #1
 4058 0330 DC259FE5 		ldr	r2, .L263+136
 4059 0334 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4060 0338 08000BE5 		str	r0, [fp, #-8]
1512:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4061              		.loc 1 1512 0
 4062 033c 08301BE5 		ldr	r3, [fp, #-8]
 4063 0340 000053E3 		cmp	r3, #0
 4064 0344 0500000A 		beq	.L244
1513:../CX3RDKOV5640.c ****     {
1514:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr1 Err = 0x%x", status);
 4065              		.loc 1 1514 0
 4066 0348 0400A0E3 		mov	r0, #4
 4067 034c C4159FE5 		ldr	r1, .L263+140
 4068 0350 08201BE5 		ldr	r2, [fp, #-8]
 4069 0354 FEFFFFEB 		bl	CyU3PDebugPrint
1515:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4070              		.loc 1 1515 0
 4071 0358 08001BE5 		ldr	r0, [fp, #-8]
 4072 035c FEFFFFEB 		bl	esUVCAppErrorHandler
 4073              	.L244:
1516:../CX3RDKOV5640.c ****     }
1517:../CX3RDKOV5640.c **** 
1518:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1519:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)esUVCUSBProductDscr);
 4074              		.loc 1 1519 0
 4075 0360 0500A0E3 		mov	r0, #5
 4076 0364 0210A0E3 		mov	r1, #2
 4077 0368 AC259FE5 		ldr	r2, .L263+144
 4078 036c FEFFFFEB 		bl	CyU3PUsbSetDesc
 4079 0370 08000BE5 		str	r0, [fp, #-8]
1520:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4080              		.loc 1 1520 0
 4081 0374 08301BE5 		ldr	r3, [fp, #-8]
 4082 0378 000053E3 		cmp	r3, #0
 4083 037c 0500000A 		beq	.L245
1521:../CX3RDKOV5640.c ****     {
1522:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr2 Err = 0x%x", status);
 4084              		.loc 1 1522 0
 4085 0380 0400A0E3 		mov	r0, #4
 4086 0384 94159FE5 		ldr	r1, .L263+148
 4087 0388 08201BE5 		ldr	r2, [fp, #-8]
 4088 038c FEFFFFEB 		bl	CyU3PDebugPrint
1523:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4089              		.loc 1 1523 0
 4090 0390 08001BE5 		ldr	r0, [fp, #-8]
 4091 0394 FEFFFFEB 		bl	esUVCAppErrorHandler
 4092              	.L245:
1524:../CX3RDKOV5640.c ****     }
1525:../CX3RDKOV5640.c ****     /* String descriptor 3 */
1526:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 3, (uint8_t *)esUVCUSBConfigSSDscr);
 4093              		.loc 1 1526 0
 4094 0398 0500A0E3 		mov	r0, #5
 4095 039c 0310A0E3 		mov	r1, #3
 4096 03a0 7C259FE5 		ldr	r2, .L263+152
 4097 03a4 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4098 03a8 08000BE5 		str	r0, [fp, #-8]
1527:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4099              		.loc 1 1527 0
 4100 03ac 08301BE5 		ldr	r3, [fp, #-8]
 4101 03b0 000053E3 		cmp	r3, #0
 4102 03b4 0500000A 		beq	.L246
1528:../CX3RDKOV5640.c ****     {
1529:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr3 Err = 0x%x", status);
 4103              		.loc 1 1529 0
 4104 03b8 0400A0E3 		mov	r0, #4
 4105 03bc 64159FE5 		ldr	r1, .L263+156
 4106 03c0 08201BE5 		ldr	r2, [fp, #-8]
 4107 03c4 FEFFFFEB 		bl	CyU3PDebugPrint
1530:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4108              		.loc 1 1530 0
 4109 03c8 08001BE5 		ldr	r0, [fp, #-8]
 4110 03cc FEFFFFEB 		bl	esUVCAppErrorHandler
 4111              	.L246:
1531:../CX3RDKOV5640.c ****     }
1532:../CX3RDKOV5640.c **** 
1533:../CX3RDKOV5640.c ****     /* String descriptor 4 */
1534:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 4, (uint8_t *)esUVCUSBConfigHSDscr);
 4112              		.loc 1 1534 0
 4113 03d0 0500A0E3 		mov	r0, #5
 4114 03d4 0410A0E3 		mov	r1, #4
 4115 03d8 4C259FE5 		ldr	r2, .L263+160
 4116 03dc FEFFFFEB 		bl	CyU3PUsbSetDesc
 4117 03e0 08000BE5 		str	r0, [fp, #-8]
1535:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4118              		.loc 1 1535 0
 4119 03e4 08301BE5 		ldr	r3, [fp, #-8]
 4120 03e8 000053E3 		cmp	r3, #0
 4121 03ec 0500000A 		beq	.L247
1536:../CX3RDKOV5640.c ****     {
1537:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr4 Err = 0x%x", status);
 4122              		.loc 1 1537 0
 4123 03f0 0400A0E3 		mov	r0, #4
 4124 03f4 34159FE5 		ldr	r1, .L263+164
 4125 03f8 08201BE5 		ldr	r2, [fp, #-8]
 4126 03fc FEFFFFEB 		bl	CyU3PDebugPrint
1538:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4127              		.loc 1 1538 0
 4128 0400 08001BE5 		ldr	r0, [fp, #-8]
 4129 0404 FEFFFFEB 		bl	esUVCAppErrorHandler
 4130              	.L247:
1539:../CX3RDKOV5640.c ****     }
1540:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1541:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 5, (uint8_t *)esUVCUSBConfigFSDscr);
 4131              		.loc 1 1541 0
 4132 0408 0500A0E3 		mov	r0, #5
 4133 040c 0510A0E3 		mov	r1, #5
 4134 0410 1C259FE5 		ldr	r2, .L263+168
 4135 0414 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4136 0418 08000BE5 		str	r0, [fp, #-8]
1542:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4137              		.loc 1 1542 0
 4138 041c 08301BE5 		ldr	r3, [fp, #-8]
 4139 0420 000053E3 		cmp	r3, #0
 4140 0424 0500000A 		beq	.L248
1543:../CX3RDKOV5640.c ****     {
1544:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr5 Err = 0x%x", status);
 4141              		.loc 1 1544 0
 4142 0428 0400A0E3 		mov	r0, #4
 4143 042c 04159FE5 		ldr	r1, .L263+172
 4144 0430 08201BE5 		ldr	r2, [fp, #-8]
 4145 0434 FEFFFFEB 		bl	CyU3PDebugPrint
1545:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4146              		.loc 1 1545 0
 4147 0438 08001BE5 		ldr	r0, [fp, #-8]
 4148 043c FEFFFFEB 		bl	esUVCAppErrorHandler
 4149              	.L248:
1546:../CX3RDKOV5640.c ****     }
1547:../CX3RDKOV5640.c **** 
1548:../CX3RDKOV5640.c ****     CyU3PUsbVBattEnable (CyTrue);
 4150              		.loc 1 1548 0
 4151 0440 0100A0E3 		mov	r0, #1
 4152 0444 FEFFFFEB 		bl	CyU3PUsbVBattEnable
1549:../CX3RDKOV5640.c ****     CyU3PUsbControlVBusDetect (CyFalse, CyTrue);
 4153              		.loc 1 1549 0
 4154 0448 0000A0E3 		mov	r0, #0
 4155 044c 0110A0E3 		mov	r1, #1
 4156 0450 FEFFFFEB 		bl	CyU3PUsbControlVBusDetect
1550:../CX3RDKOV5640.c **** 
1551:../CX3RDKOV5640.c ****     //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings 
1552:../CX3RDKOV5640.c ****     /* Setup Image Sensor */
1553:../CX3RDKOV5640.c **** 	esOV5640_Base_Config();
 4157              		.loc 1 1553 0
 4158 0454 FEFFFFEB 		bl	esOV5640_Base_Config
1554:../CX3RDKOV5640.c **** 	 //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings fo
1555:../CX3RDKOV5640.c **** 	esOV5640_Auto_Focus_Config();
 4159              		.loc 1 1555 0
 4160 0458 FEFFFFEB 		bl	esOV5640_Auto_Focus_Config
1556:../CX3RDKOV5640.c **** 	//TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
1557:../CX3RDKOV5640.c **** 	esCamera_Power_Down();
 4161              		.loc 1 1557 0
 4162 045c FEFFFFEB 		bl	esCamera_Power_Down
1558:../CX3RDKOV5640.c **** 
1559:../CX3RDKOV5640.c ****     /* Connect the USB pins and enable super speed operation */
1560:../CX3RDKOV5640.c ****     status = CyU3PConnectState(CyTrue, CyTrue);
 4163              		.loc 1 1560 0
 4164 0460 0100A0E3 		mov	r0, #1
 4165 0464 0110A0E3 		mov	r1, #1
 4166 0468 FEFFFFEB 		bl	CyU3PConnectState
 4167 046c 08000BE5 		str	r0, [fp, #-8]
1561:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4168              		.loc 1 1561 0
 4169 0470 08301BE5 		ldr	r3, [fp, #-8]
 4170 0474 000053E3 		cmp	r3, #0
 4171 0478 0500000A 		beq	.L249
1562:../CX3RDKOV5640.c ****     {
1563:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:ConnectState Err = 0x%x", status);
 4172              		.loc 1 1563 0
 4173 047c 0400A0E3 		mov	r0, #4
 4174 0480 B4149FE5 		ldr	r1, .L263+176
 4175 0484 08201BE5 		ldr	r2, [fp, #-8]
 4176 0488 FEFFFFEB 		bl	CyU3PDebugPrint
1564:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4177              		.loc 1 1564 0
 4178 048c 08001BE5 		ldr	r0, [fp, #-8]
 4179 0490 FEFFFFEB 		bl	esUVCAppErrorHandler
 4180              	.L249:
1565:../CX3RDKOV5640.c ****     }
1566:../CX3RDKOV5640.c **** #ifdef VISDebug
1567:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "n\rAppInit:ConnectState");
 4181              		.loc 1 1567 0
 4182 0494 0400A0E3 		mov	r0, #4
 4183 0498 A0149FE5 		ldr	r1, .L263+180
 4184 049c FEFFFFEB 		bl	CyU3PDebugPrint
1568:../CX3RDKOV5640.c **** #endif
1569:../CX3RDKOV5640.c ****     /* Since the status interrupt endpoint is not used in this application,
1570:../CX3RDKOV5640.c ****      * just enable the EP in the beginning. */
1571:../CX3RDKOV5640.c ****     /* Control status interrupt endpoint configuration */
1572:../CX3RDKOV5640.c ****     endPointConfig.enable = 1;
 4185              		.loc 1 1572 0
 4186 04a0 0130A0E3 		mov	r3, #1
 4187 04a4 14300BE5 		str	r3, [fp, #-20]
1573:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_INTR;
 4188              		.loc 1 1573 0
 4189 04a8 0330A0E3 		mov	r3, #3
 4190 04ac 10304BE5 		strb	r3, [fp, #-16]
1574:../CX3RDKOV5640.c ****     endPointConfig.pcktSize = 64;
 4191              		.loc 1 1574 0
 4192 04b0 4030A0E3 		mov	r3, #64
 4193 04b4 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1575:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 1;
 4194              		.loc 1 1575 0
 4195 04b8 0130A0E3 		mov	r3, #1
 4196 04bc 09304BE5 		strb	r3, [fp, #-9]
1576:../CX3RDKOV5640.c ****     endPointConfig.burstLen = 1;
 4197              		.loc 1 1576 0
 4198 04c0 0130A0E3 		mov	r3, #1
 4199 04c4 0A304BE5 		strb	r3, [fp, #-10]
1577:../CX3RDKOV5640.c **** 
1578:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_CONTROL_STATUS, &endPointConfig);
 4200              		.loc 1 1578 0
 4201 04c8 14304BE2 		sub	r3, fp, #20
 4202 04cc 8200A0E3 		mov	r0, #130
 4203 04d0 0310A0E1 		mov	r1, r3
 4204 04d4 FEFFFFEB 		bl	CyU3PSetEpConfig
 4205 04d8 08000BE5 		str	r0, [fp, #-8]
1579:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4206              		.loc 1 1579 0
 4207 04dc 08301BE5 		ldr	r3, [fp, #-8]
 4208 04e0 000053E3 		cmp	r3, #0
 4209 04e4 0500000A 		beq	.L250
1580:../CX3RDKOV5640.c ****     {
1581:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x", status);
 4210              		.loc 1 1581 0
 4211 04e8 0400A0E3 		mov	r0, #4
 4212 04ec 50149FE5 		ldr	r1, .L263+184
 4213 04f0 08201BE5 		ldr	r2, [fp, #-8]
 4214 04f4 FEFFFFEB 		bl	CyU3PDebugPrint
1582:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4215              		.loc 1 1582 0
 4216 04f8 08001BE5 		ldr	r0, [fp, #-8]
 4217 04fc FEFFFFEB 		bl	esUVCAppErrorHandler
 4218              	.L250:
1583:../CX3RDKOV5640.c ****     }
1584:../CX3RDKOV5640.c **** 
1585:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_CONTROL_STATUS);
 4219              		.loc 1 1585 0
 4220 0500 8200A0E3 		mov	r0, #130
 4221 0504 FEFFFFEB 		bl	CyU3PUsbFlushEp
1586:../CX3RDKOV5640.c **** 
1587:../CX3RDKOV5640.c ****     /* Setup the Bulk endpoint used for Video Streaming */
1588:../CX3RDKOV5640.c ****     endPointConfig.enable = CyTrue;
 4222              		.loc 1 1588 0
 4223 0508 0130A0E3 		mov	r3, #1
 4224 050c 14300BE5 		str	r3, [fp, #-20]
1589:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_BULK;
 4225              		.loc 1 1589 0
 4226 0510 0230A0E3 		mov	r3, #2
 4227 0514 10304BE5 		strb	r3, [fp, #-16]
1590:../CX3RDKOV5640.c **** 
1591:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 0;
 4228              		.loc 1 1591 0
 4229 0518 0030A0E3 		mov	r3, #0
 4230 051c 09304BE5 		strb	r3, [fp, #-9]
1592:../CX3RDKOV5640.c ****     endPointConfig.streams = 0;
 4231              		.loc 1 1592 0
 4232 0520 0030A0E3 		mov	r3, #0
 4233 0524 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1593:../CX3RDKOV5640.c **** 
1594:../CX3RDKOV5640.c ****     CyU3PThreadSleep(1000);
 4234              		.loc 1 1594 0
 4235 0528 FA0FA0E3 		mov	r0, #1000
 4236 052c FEFFFFEB 		bl	_tx_thread_sleep
1595:../CX3RDKOV5640.c **** 
1596:../CX3RDKOV5640.c ****     switch(CyU3PUsbGetSpeed())
 4237              		.loc 1 1596 0
 4238 0530 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 4239 0534 0030A0E1 		mov	r3, r0
 4240 0538 010053E3 		cmp	r3, #1
 4241 053c 0F00000A 		beq	.L252
 4242 0540 020053E3 		cmp	r3, #2
 4243 0544 1200001A 		bne	.L262
1597:../CX3RDKOV5640.c ****     {
1598:../CX3RDKOV5640.c ****         case CY_U3P_HIGH_SPEED:
1599:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x200;
 4244              		.loc 1 1599 0
 4245 0548 023CA0E3 		mov	r3, #512
 4246 054c BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1600:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4247              		.loc 1 1600 0
 4248 0550 0130A0E3 		mov	r3, #1
 4249 0554 0A304BE5 		strb	r3, [fp, #-10]
1601:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_HS_STREAM_BUF_SIZE;
 4250              		.loc 1 1601 0
 4251 0558 E8339FE5 		ldr	r3, .L263+188
 4252 055c 032BA0E3 		mov	r2, #3072
 4253 0560 B020C3E1 		strh	r2, [r3]	@ movhi
1602:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_HS_DATA_BUF_SIZE;
 4254              		.loc 1 1602 0
 4255 0564 E0339FE5 		ldr	r3, .L263+192
 4256 0568 BF2EA0E3 		mov	r2, #3056
 4257 056c B020C3E1 		strh	r2, [r3]	@ movhi
1603:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_HS_STREAM_BUF_COUNT;
 4258              		.loc 1 1603 0
 4259 0570 D8339FE5 		ldr	r3, .L263+196
 4260 0574 0820A0E3 		mov	r2, #8
 4261 0578 0020C3E5 		strb	r2, [r3]
1604:../CX3RDKOV5640.c ****             break;
 4262              		.loc 1 1604 0
 4263 057c 120000EA 		b	.L254
 4264              	.L252:
1605:../CX3RDKOV5640.c **** 
1606:../CX3RDKOV5640.c ****         case CY_U3P_FULL_SPEED:
1607:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x40;
 4265              		.loc 1 1607 0
 4266 0580 4030A0E3 		mov	r3, #64
 4267 0584 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1608:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4268              		.loc 1 1608 0
 4269 0588 0130A0E3 		mov	r3, #1
 4270 058c 0A304BE5 		strb	r3, [fp, #-10]
1609:../CX3RDKOV5640.c ****             break;
 4271              		.loc 1 1609 0
 4272 0590 0D0000EA 		b	.L254
 4273              	.L262:
1610:../CX3RDKOV5640.c **** 
1611:../CX3RDKOV5640.c ****         case CY_U3P_SUPER_SPEED:
1612:../CX3RDKOV5640.c ****         default:
1613:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = ES_UVC_EP_BULK_VIDEO_PKT_SIZE;
 4274              		.loc 1 1613 0
 4275 0594 013BA0E3 		mov	r3, #1024
 4276 0598 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1614:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 16;
 4277              		.loc 1 1614 0
 4278 059c 1030A0E3 		mov	r3, #16
 4279 05a0 0A304BE5 		strb	r3, [fp, #-10]
1615:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_SS_STREAM_BUF_SIZE;
 4280              		.loc 1 1615 0
 4281 05a4 9C339FE5 		ldr	r3, .L263+188
 4282 05a8 062AA0E3 		mov	r2, #24576
 4283 05ac B020C3E1 		strh	r2, [r3]	@ movhi
1616:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_SS_DATA_BUF_SIZE;
 4284              		.loc 1 1616 0
 4285 05b0 94339FE5 		ldr	r3, .L263+192
 4286 05b4 98239FE5 		ldr	r2, .L263+200
 4287 05b8 B020C3E1 		strh	r2, [r3]	@ movhi
1617:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_SS_STREAM_BUF_COUNT;
 4288              		.loc 1 1617 0
 4289 05bc 8C339FE5 		ldr	r3, .L263+196
 4290 05c0 0420A0E3 		mov	r2, #4
 4291 05c4 0020C3E5 		strb	r2, [r3]
1618:../CX3RDKOV5640.c ****             break;
 4292              		.loc 1 1618 0
 4293 05c8 0000A0E1 		mov	r0, r0	@ nop
 4294              	.L254:
1619:../CX3RDKOV5640.c ****     }
1620:../CX3RDKOV5640.c **** 
1621:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_BULK_VIDEO, &endPointConfig);
 4295              		.loc 1 1621 0
 4296 05cc 14304BE2 		sub	r3, fp, #20
 4297 05d0 8300A0E3 		mov	r0, #131
 4298 05d4 0310A0E1 		mov	r1, r3
 4299 05d8 FEFFFFEB 		bl	CyU3PSetEpConfig
 4300 05dc 08000BE5 		str	r0, [fp, #-8]
1622:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4301              		.loc 1 1622 0
 4302 05e0 08301BE5 		ldr	r3, [fp, #-8]
 4303 05e4 000053E3 		cmp	r3, #0
 4304 05e8 0500000A 		beq	.L255
1623:../CX3RDKOV5640.c ****     {
1624:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp Err = 0x%x", status);
 4305              		.loc 1 1624 0
 4306 05ec 0400A0E3 		mov	r0, #4
 4307 05f0 60139FE5 		ldr	r1, .L263+204
 4308 05f4 08201BE5 		ldr	r2, [fp, #-8]
 4309 05f8 FEFFFFEB 		bl	CyU3PDebugPrint
1625:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4310              		.loc 1 1625 0
 4311 05fc 08001BE5 		ldr	r0, [fp, #-8]
 4312 0600 FEFFFFEB 		bl	esUVCAppErrorHandler
 4313              	.L255:
1626:../CX3RDKOV5640.c ****     }
1627:../CX3RDKOV5640.c **** #ifdef VISDebug
1628:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp");
 4314              		.loc 1 1628 0
 4315 0604 0400A0E3 		mov	r0, #4
 4316 0608 4C139FE5 		ldr	r1, .L263+208
 4317 060c FEFFFFEB 		bl	CyU3PDebugPrint
1629:../CX3RDKOV5640.c **** #endif
1630:../CX3RDKOV5640.c ****     CyU3PUsbEPSetBurstMode (ES_UVC_EP_BULK_VIDEO, CyTrue);
 4318              		.loc 1 1630 0
 4319 0610 8300A0E3 		mov	r0, #131
 4320 0614 0110A0E3 		mov	r1, #1
 4321 0618 FEFFFFEB 		bl	CyU3PUsbEPSetBurstMode
1631:../CX3RDKOV5640.c **** 
1632:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
1633:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 4322              		.loc 1 1633 0
 4323 061c 8300A0E3 		mov	r0, #131
 4324 0620 FEFFFFEB 		bl	CyU3PUsbFlushEp
1634:../CX3RDKOV5640.c **** 
1635:../CX3RDKOV5640.c ****     /* Create a DMA Manual OUT channel for streaming data */
1636:../CX3RDKOV5640.c ****     /* Video streaming Channel is not active till a stream request is received */
1637:../CX3RDKOV5640.c ****     dmaCfg.size                 = ES_UVC_STREAM_BUF_SIZE;
 4325              		.loc 1 1637 0
 4326 0624 1C339FE5 		ldr	r3, .L263+188
 4327 0628 B030D3E1 		ldrh	r3, [r3]
 4328 062c BC334BE1 		strh	r3, [fp, #-60]	@ movhi
1638:../CX3RDKOV5640.c ****     dmaCfg.count                = ES_UVC_STREAM_BUF_COUNT;
 4329              		.loc 1 1638 0
 4330 0630 18339FE5 		ldr	r3, .L263+196
 4331 0634 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 0638 BA334BE1 		strh	r3, [fp, #-58]	@ movhi
1639:../CX3RDKOV5640.c ****     dmaCfg.validSckCount        = 2;
 4333              		.loc 1 1639 0
 4334 063c 0230A0E3 		mov	r3, #2
 4335 0640 B8334BE1 		strh	r3, [fp, #-56]	@ movhi
1640:../CX3RDKOV5640.c **** 
1641:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[0]         = ES_UVC_PRODUCER_PPORT_SOCKET_0;
 4336              		.loc 1 1641 0
 4337 0644 013CA0E3 		mov	r3, #256
 4338 0648 B6334BE1 		strh	r3, [fp, #-54]	@ movhi
1642:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[1]         = ES_UVC_PRODUCER_PPORT_SOCKET_1;
 4339              		.loc 1 1642 0
 4340 064c 0C339FE5 		ldr	r3, .L263+212
 4341 0650 B4334BE1 		strh	r3, [fp, #-52]	@ movhi
1643:../CX3RDKOV5640.c **** 
1644:../CX3RDKOV5640.c ****     dmaCfg.consSckId[0]         = ES_UVC_EP_VIDEO_CONS_SOCKET;
 4342              		.loc 1 1644 0
 4343 0654 08339FE5 		ldr	r3, .L263+216
 4344 0658 BE324BE1 		strh	r3, [fp, #-46]	@ movhi
1645:../CX3RDKOV5640.c ****     dmaCfg.dmaMode              = CY_U3P_DMA_MODE_BYTE;
 4345              		.loc 1 1645 0
 4346 065c 0030A0E3 		mov	r3, #0
 4347 0660 1E304BE5 		strb	r3, [fp, #-30]
1646:../CX3RDKOV5640.c ****     dmaCfg.notification         = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
 4348              		.loc 1 1646 0
 4349 0664 1830A0E3 		mov	r3, #24
 4350 0668 1C300BE5 		str	r3, [fp, #-28]
1647:../CX3RDKOV5640.c ****     dmaCfg.cb                   = esUVCUvcAppDmaCallback;
 4351              		.loc 1 1647 0
 4352 066c F4329FE5 		ldr	r3, .L263+220
 4353 0670 18300BE5 		str	r3, [fp, #-24]
1648:../CX3RDKOV5640.c ****     dmaCfg.prodHeader           = ES_UVC_PROD_HEADER;
 4354              		.loc 1 1648 0
 4355 0674 0C30A0E3 		mov	r3, #12
 4356 0678 B4324BE1 		strh	r3, [fp, #-36]	@ movhi
1649:../CX3RDKOV5640.c ****     dmaCfg.prodFooter           = ES_UVC_PROD_FOOTER;
 4357              		.loc 1 1649 0
 4358 067c 0430A0E3 		mov	r3, #4
 4359 0680 B2324BE1 		strh	r3, [fp, #-34]	@ movhi
1650:../CX3RDKOV5640.c ****     dmaCfg.consHeader           = 0;
 4360              		.loc 1 1650 0
 4361 0684 0030A0E3 		mov	r3, #0
 4362 0688 B0324BE1 		strh	r3, [fp, #-32]	@ movhi
1651:../CX3RDKOV5640.c ****     dmaCfg.prodAvailCount       = 0;
 4363              		.loc 1 1651 0
 4364 068c 0030A0E3 		mov	r3, #0
 4365 0690 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
1652:../CX3RDKOV5640.c **** 
1653:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE ,
 4366              		.loc 1 1653 0
 4367 0694 3C304BE2 		sub	r3, fp, #60
 4368 0698 CC029FE5 		ldr	r0, .L263+224
 4369 069c 0710A0E3 		mov	r1, #7
 4370 06a0 0320A0E1 		mov	r2, r3
 4371 06a4 FEFFFFEB 		bl	CyU3PDmaMultiChannelCreate
 4372 06a8 08000BE5 		str	r0, [fp, #-8]
1654:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4373              		.loc 1 1654 0
 4374 06ac 08301BE5 		ldr	r3, [fp, #-8]
 4375 06b0 000053E3 		cmp	r3, #0
 4376 06b4 0300000A 		beq	.L256
1655:../CX3RDKOV5640.c ****     {
1656:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:DmaMultiChannelCreate Err = 0x%x", status);
 4377              		.loc 1 1656 0
 4378 06b8 0400A0E3 		mov	r0, #4
 4379 06bc AC129FE5 		ldr	r1, .L263+228
 4380 06c0 08201BE5 		ldr	r2, [fp, #-8]
 4381 06c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4382              	.L256:
1657:../CX3RDKOV5640.c ****     }
1658:../CX3RDKOV5640.c ****     CyU3PThreadSleep(100);
 4383              		.loc 1 1658 0
 4384 06c8 6400A0E3 		mov	r0, #100
 4385 06cc FEFFFFEB 		bl	_tx_thread_sleep
1659:../CX3RDKOV5640.c **** 
1660:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set
1661:../CX3RDKOV5640.c ****        DSCR_SIZE field in DSCR memory */
1662:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 4386              		.loc 1 1662 0
 4387 06d0 94029FE5 		ldr	r0, .L263+224
 4388 06d4 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 4389 06d8 08000BE5 		str	r0, [fp, #-8]
1663:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4390              		.loc 1 1663 0
 4391 06dc 08301BE5 		ldr	r3, [fp, #-8]
 4392 06e0 000053E3 		cmp	r3, #0
 4393 06e4 0300000A 		beq	.L257
1664:../CX3RDKOV5640.c ****     {
1665:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAppInit:MultiChannelReset Err = 0x%x", status);
 4394              		.loc 1 1665 0
 4395 06e8 0400A0E3 		mov	r0, #4
 4396 06ec 80129FE5 		ldr	r1, .L263+232
 4397 06f0 08201BE5 		ldr	r2, [fp, #-8]
 4398 06f4 FEFFFFEB 		bl	CyU3PDebugPrint
 4399              	.L257:
1666:../CX3RDKOV5640.c ****     }
1667:../CX3RDKOV5640.c **** #ifdef VISDebug
1668:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MultiChannelReset");
 4400              		.loc 1 1668 0
 4401 06f8 0400A0E3 		mov	r0, #4
 4402 06fc 74129FE5 		ldr	r1, .L263+236
 4403 0700 FEFFFFEB 		bl	CyU3PDebugPrint
1669:../CX3RDKOV5640.c **** #endif
1670:../CX3RDKOV5640.c ****     /* Configure the Fixed Function GPIF on the CX3 to use a 16 bit bus, and
1671:../CX3RDKOV5640.c ****      * a DMA Buffer of size CX3_UVC_DATA_BUF_SIZE
1672:../CX3RDKOV5640.c ****      */
1673:../CX3RDKOV5640.c ****     status = CyU3PMipicsiGpifLoad(CY_U3P_MIPICSI_BUS_16, ES_UVC_DATA_BUF_SIZE);
 4404              		.loc 1 1673 0
 4405 0704 40329FE5 		ldr	r3, .L263+192
 4406 0708 B030D3E1 		ldrh	r3, [r3]
 4407 070c 0100A0E3 		mov	r0, #1
 4408 0710 0310A0E1 		mov	r1, r3
 4409 0714 FEFFFFEB 		bl	CyU3PMipicsiGpifLoad
 4410 0718 08000BE5 		str	r0, [fp, #-8]
1674:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4411              		.loc 1 1674 0
 4412 071c 08301BE5 		ldr	r3, [fp, #-8]
 4413 0720 000053E3 		cmp	r3, #0
 4414 0724 0500000A 		beq	.L258
1675:../CX3RDKOV5640.c ****     {
1676:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad Err = 0x%x", status);
 4415              		.loc 1 1676 0
 4416 0728 0400A0E3 		mov	r0, #4
 4417 072c 48129FE5 		ldr	r1, .L263+240
 4418 0730 08201BE5 		ldr	r2, [fp, #-8]
 4419 0734 FEFFFFEB 		bl	CyU3PDebugPrint
1677:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4420              		.loc 1 1677 0
 4421 0738 08001BE5 		ldr	r0, [fp, #-8]
 4422 073c FEFFFFEB 		bl	esUVCAppErrorHandler
 4423              	.L258:
1678:../CX3RDKOV5640.c ****     }
1679:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4424              		.loc 1 1679 0
 4425 0740 3200A0E3 		mov	r0, #50
 4426 0744 FEFFFFEB 		bl	_tx_thread_sleep
1680:../CX3RDKOV5640.c **** #ifdef VISDebug
1681:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad");
 4427              		.loc 1 1681 0
 4428 0748 0400A0E3 		mov	r0, #4
 4429 074c 2C129FE5 		ldr	r1, .L263+244
 4430 0750 FEFFFFEB 		bl	CyU3PDebugPrint
1682:../CX3RDKOV5640.c **** #endif
1683:../CX3RDKOV5640.c ****     CyU3PGpifRegisterCallback(esUVCGpifCB);
 4431              		.loc 1 1683 0
 4432 0754 28029FE5 		ldr	r0, .L263+248
 4433 0758 FEFFFFEB 		bl	CyU3PGpifRegisterCallback
1684:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4434              		.loc 1 1684 0
 4435 075c 3200A0E3 		mov	r0, #50
 4436 0760 FEFFFFEB 		bl	_tx_thread_sleep
1685:../CX3RDKOV5640.c **** 
1686:../CX3RDKOV5640.c ****     /* Start the state machine. */
1687:../CX3RDKOV5640.c ****     status = CyU3PGpifSMStart (CX3_START_SCK0, ALPHA_CX3_START_SCK0);
 4437              		.loc 1 1687 0
 4438 0764 0000A0E3 		mov	r0, #0
 4439 0768 0010A0E3 		mov	r1, #0
 4440 076c FEFFFFEB 		bl	CyU3PGpifSMStart
 4441 0770 08000BE5 		str	r0, [fp, #-8]
1688:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4442              		.loc 1 1688 0
 4443 0774 08301BE5 		ldr	r3, [fp, #-8]
 4444 0778 000053E3 		cmp	r3, #0
 4445 077c 0500000A 		beq	.L259
1689:../CX3RDKOV5640.c ****     {
1690:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart Err = 0x%x", status);
 4446              		.loc 1 1690 0
 4447 0780 0400A0E3 		mov	r0, #4
 4448 0784 FC119FE5 		ldr	r1, .L263+252
 4449 0788 08201BE5 		ldr	r2, [fp, #-8]
 4450 078c FEFFFFEB 		bl	CyU3PDebugPrint
1691:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4451              		.loc 1 1691 0
 4452 0790 08001BE5 		ldr	r0, [fp, #-8]
 4453 0794 FEFFFFEB 		bl	esUVCAppErrorHandler
 4454              	.L259:
1692:../CX3RDKOV5640.c ****     }
1693:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4455              		.loc 1 1693 0
 4456 0798 3200A0E3 		mov	r0, #50
 4457 079c FEFFFFEB 		bl	_tx_thread_sleep
1694:../CX3RDKOV5640.c **** #ifdef VISDebug
1695:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart");
 4458              		.loc 1 1695 0
 4459 07a0 0400A0E3 		mov	r0, #4
 4460 07a4 E0119FE5 		ldr	r1, .L263+256
 4461 07a8 FEFFFFEB 		bl	CyU3PDebugPrint
1696:../CX3RDKOV5640.c **** #endif
1697:../CX3RDKOV5640.c ****     /* Pause the GPIF*/
1698:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 4462              		.loc 1 1698 0
 4463 07ac 0100A0E3 		mov	r0, #1
 4464 07b0 FEFFFFEB 		bl	CyU3PGpifSMControl
1699:../CX3RDKOV5640.c **** 
1700:../CX3RDKOV5640.c ****     /* Initialize the MIPI block */
1701:../CX3RDKOV5640.c ****     status =  CyU3PMipicsiInit();
 4465              		.loc 1 1701 0
 4466 07b4 FEFFFFEB 		bl	CyU3PMipicsiInit
 4467 07b8 08000BE5 		str	r0, [fp, #-8]
1702:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4468              		.loc 1 1702 0
 4469 07bc 08301BE5 		ldr	r3, [fp, #-8]
 4470 07c0 000053E3 		cmp	r3, #0
 4471 07c4 0500000A 		beq	.L260
1703:../CX3RDKOV5640.c ****     {
1704:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit Err = 0x%x", status);
 4472              		.loc 1 1704 0
 4473 07c8 0400A0E3 		mov	r0, #4
 4474 07cc BC119FE5 		ldr	r1, .L263+260
 4475 07d0 08201BE5 		ldr	r2, [fp, #-8]
 4476 07d4 FEFFFFEB 		bl	CyU3PDebugPrint
1705:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4477              		.loc 1 1705 0
 4478 07d8 08001BE5 		ldr	r0, [fp, #-8]
 4479 07dc FEFFFFEB 		bl	esUVCAppErrorHandler
 4480              	.L260:
1706:../CX3RDKOV5640.c ****     }
1707:../CX3RDKOV5640.c **** #ifdef VISDebug
1708:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit");
 4481              		.loc 1 1708 0
 4482 07e0 0400A0E3 		mov	r0, #4
 4483 07e4 A8119FE5 		ldr	r1, .L263+264
 4484 07e8 FEFFFFEB 		bl	CyU3PDebugPrint
1709:../CX3RDKOV5640.c **** #endif
1710:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSetIntfParams(&cfgUvcVgaNoMclk, CyFalse);
 4485              		.loc 1 1710 0
 4486 07ec A4019FE5 		ldr	r0, .L263+268
 4487 07f0 0010A0E3 		mov	r1, #0
 4488 07f4 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 4489 07f8 08000BE5 		str	r0, [fp, #-8]
1711:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4490              		.loc 1 1711 0
 4491 07fc 08301BE5 		ldr	r3, [fp, #-8]
 4492 0800 000053E3 		cmp	r3, #0
 4493 0804 0500000A 		beq	.L261
1712:../CX3RDKOV5640.c ****     {
1713:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams Err = 0x%x",status);
 4494              		.loc 1 1713 0
 4495 0808 0400A0E3 		mov	r0, #4
 4496 080c 88119FE5 		ldr	r1, .L263+272
 4497 0810 08201BE5 		ldr	r2, [fp, #-8]
 4498 0814 FEFFFFEB 		bl	CyU3PDebugPrint
1714:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4499              		.loc 1 1714 0
 4500 0818 08001BE5 		ldr	r0, [fp, #-8]
 4501 081c FEFFFFEB 		bl	esUVCAppErrorHandler
 4502              	.L261:
1715:../CX3RDKOV5640.c ****     }
1716:../CX3RDKOV5640.c **** #ifdef VISDebug
1717:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams");
 4503              		.loc 1 1717 0
 4504 0820 0400A0E3 		mov	r0, #4
 4505 0824 74119FE5 		ldr	r1, .L263+276
 4506 0828 FEFFFFEB 		bl	CyU3PDebugPrint
1718:../CX3RDKOV5640.c **** #endif
1719:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1720:../CX3RDKOV5640.c ****     CyU3PTimerCreate (&UvcTimer, UvcAppProgressTimer, 0x00, TIMER_PERIOD, 0, CYU3P_NO_ACTIVATE);
 4507              		.loc 1 1720 0
 4508 082c 7D3FA0E3 		mov	r3, #500
 4509 0830 00308DE5 		str	r3, [sp]
 4510 0834 0030A0E3 		mov	r3, #0
 4511 0838 04308DE5 		str	r3, [sp, #4]
 4512 083c 0030A0E3 		mov	r3, #0
 4513 0840 08308DE5 		str	r3, [sp, #8]
 4514 0844 2C30A0E3 		mov	r3, #44
 4515 0848 0C308DE5 		str	r3, [sp, #12]
 4516 084c 50019FE5 		ldr	r0, .L263+280
 4517 0850 0010A0E3 		mov	r1, #0
 4518 0854 4C219FE5 		ldr	r2, .L263+284
 4519 0858 0030A0E3 		mov	r3, #0
 4520 085c FEFFFFEB 		bl	_txe_timer_create
1721:../CX3RDKOV5640.c **** #endif
1722:../CX3RDKOV5640.c **** 
1723:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rFirmware Version: %d.%d.%d.%d",MajorVersion,MinorVersion,SubVersion,Su
 4521              		.loc 1 1723 0
 4522 0860 8530A0E3 		mov	r3, #133
 4523 0864 00308DE5 		str	r3, [sp]
 4524 0868 3C319FE5 		ldr	r3, .L263+288
 4525 086c 04308DE5 		str	r3, [sp, #4]
 4526 0870 0400A0E3 		mov	r0, #4
 4527 0874 34119FE5 		ldr	r1, .L263+292
 4528 0878 0120A0E3 		mov	r2, #1
 4529 087c 0330A0E3 		mov	r3, #3
 4530 0880 FEFFFFEB 		bl	CyU3PDebugPrint
1724:../CX3RDKOV5640.c **** }
 4531              		.loc 1 1724 0
 4532 0884 04D04BE2 		sub	sp, fp, #4
 4533              		@ sp needed
 4534 0888 0088BDE8 		ldmfd	sp!, {fp, pc}
 4535              	.L264:
 4536              		.align	2
 4537              	.L263:
 4538 088c D4040000 		.word	.LC28
 4539 0890 F4040000 		.word	.LC29
 4540 0894 08050000 		.word	.LC30
 4541 0898 28050000 		.word	.LC31
 4542 089c 3C050000 		.word	.LC32
 4543 08a0 5C050000 		.word	.LC33
 4544 08a4 70050000 		.word	.LC34
 4545 08a8 90050000 		.word	.LC35
 4546 08ac 00000000 		.word	esUVCUvcApplnUSBSetupCB
 4547 08b0 00000000 		.word	esUVCUvcApplnUSBEventCB
 4548 08b4 00000000 		.word	esUVCApplnLPMRqtCB
 4549 08b8 00000000 		.word	esUVCUSB30DeviceDscr
 4550 08bc A4050000 		.word	.LC36
 4551 08c0 CC050000 		.word	.LC37
 4552 08c4 00000000 		.word	esUVCUSB20DeviceDscr
 4553 08c8 EC050000 		.word	.LC38
 4554 08cc 14060000 		.word	.LC39
 4555 08d0 00000000 		.word	esUVCUSBBOSDscr
 4556 08d4 34060000 		.word	.LC40
 4557 08d8 58060000 		.word	.LC41
 4558 08dc 00000000 		.word	esUVCUSBDeviceQualDscr
 4559 08e0 70060000 		.word	.LC42
 4560 08e4 98060000 		.word	.LC43
 4561 08e8 00000000 		.word	esUVCUSBSSConfigDscr
 4562 08ec B4060000 		.word	.LC44
 4563 08f0 DC060000 		.word	.LC45
 4564 08f4 00000000 		.word	esUVCUSBHSConfigDscr
 4565 08f8 F8060000 		.word	.LC46
 4566 08fc 20070000 		.word	.LC47
 4567 0900 00000000 		.word	esUVCUSBFSConfigDscr
 4568 0904 3C070000 		.word	.LC48
 4569 0908 64070000 		.word	.LC49
 4570 090c 00000000 		.word	esUVCUSBStringLangIDDscr
 4571 0910 80070000 		.word	.LC50
 4572 0914 00000000 		.word	esUVCUSBManufactureDscr
 4573 0918 A8070000 		.word	.LC51
 4574 091c 00000000 		.word	esUVCUSBProductDscr
 4575 0920 D0070000 		.word	.LC52
 4576 0924 00000000 		.word	esUVCUSBConfigSSDscr
 4577 0928 F8070000 		.word	.LC53
 4578 092c 00000000 		.word	esUVCUSBConfigHSDscr
 4579 0930 20080000 		.word	.LC54
 4580 0934 00000000 		.word	esUVCUSBConfigFSDscr
 4581 0938 48080000 		.word	.LC55
 4582 093c 70080000 		.word	.LC56
 4583 0940 94080000 		.word	.LC57
 4584 0944 AC080000 		.word	.LC58
 4585 0948 00000000 		.word	ES_UVC_STREAM_BUF_SIZE
 4586 094c 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 4587 0950 00000000 		.word	ES_UVC_STREAM_BUF_COUNT
 4588 0954 F05F0000 		.word	24560
 4589 0958 DC080000 		.word	.LC59
 4590 095c 0C090000 		.word	.LC60
 4591 0960 01010000 		.word	257
 4592 0964 03030000 		.word	771
 4593 0968 00000000 		.word	esUVCUvcAppDmaCallback
 4594 096c 00000000 		.word	glChHandleUVCStream
 4595 0970 30090000 		.word	.LC61
 4596 0974 5C090000 		.word	.LC62
 4597 0978 84090000 		.word	.LC63
 4598 097c A0090000 		.word	.LC64
 4599 0980 C8090000 		.word	.LC65
 4600 0984 00000000 		.word	esUVCGpifCB
 4601 0988 E4090000 		.word	.LC66
 4602 098c 080A0000 		.word	.LC67
 4603 0990 200A0000 		.word	.LC68
 4604 0994 440A0000 		.word	.LC69
 4605 0998 00000000 		.word	cfgUvcVgaNoMclk
 4606 099c 5C0A0000 		.word	.LC70
 4607 09a0 880A0000 		.word	.LC71
 4608 09a4 00000000 		.word	UvcTimer
 4609 09a8 00000000 		.word	UvcAppProgressTimer
 4610 09ac 35010000 		.word	309
 4611 09b0 A80A0000 		.word	.LC72
 4612              		.cfi_endproc
 4613              	.LFE11:
 4615              		.section	.rodata
 4616              		.align	2
 4617              	.LC73:
 4618 0ac8 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartInit failed"
 4618      55564355 
 4618      76634170 
 4618      706C6E44 
 4618      65627567 
 4619 0af5 20457272 		.ascii	" Error = 0x%x\000"
 4619      6F72203D 
 4619      20307825 
 4619      7800
 4620 0b03 00       		.align	2
 4621              	.LC74:
 4622 0b04 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartSetConfig f"
 4622      55564355 
 4622      76634170 
 4622      706C6E44 
 4622      65627567 
 4623 0b31 61696C65 		.ascii	"ailed Error = 0x%x\000"
 4623      64204572 
 4623      726F7220 
 4623      3D203078 
 4623      257800
 4624              		.align	2
 4625              	.LC75:
 4626 0b44 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartTxSetBlockX"
 4626      55564355 
 4626      76634170 
 4626      706C6E44 
 4626      65627567 
 4627 0b71 66657220 		.ascii	"fer failed Error = 0x%x\000"
 4627      6661696C 
 4627      65642045 
 4627      72726F72 
 4627      203D2030 
 4628 0b89 000000   		.align	2
 4629              	.LC76:
 4630 0b8c 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PDebugInit faile"
 4630      55564355 
 4630      76634170 
 4630      706C6E44 
 4630      65627567 
 4631 0bb9 64204572 		.ascii	"d Error = 0x%x\000"
 4631      726F7220 
 4631      3D203078 
 4631      257800
 4632              		.section	.text.esUVCUvcApplnDebugInit,"ax",%progbits
 4633              		.align	2
 4634              		.global	esUVCUvcApplnDebugInit
 4636              	esUVCUvcApplnDebugInit:
 4637              	.LFB12:
1725:../CX3RDKOV5640.c **** 
1726:../CX3RDKOV5640.c **** /* This function initializes the debug module for the UVC application */
1727:../CX3RDKOV5640.c ****     void
1728:../CX3RDKOV5640.c **** esUVCUvcApplnDebugInit (void)
1729:../CX3RDKOV5640.c **** {
 4638              		.loc 1 1729 0
 4639              		.cfi_startproc
 4640              		@ args = 0, pretend = 0, frame = 32
 4641              		@ frame_needed = 1, uses_anonymous_args = 0
 4642 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4643              	.LCFI24:
 4644              		.cfi_def_cfa_offset 8
 4645              		.cfi_offset 11, -8
 4646              		.cfi_offset 14, -4
 4647 0004 04B08DE2 		add	fp, sp, #4
 4648              	.LCFI25:
 4649              		.cfi_def_cfa 11, 4
 4650 0008 20D04DE2 		sub	sp, sp, #32
1730:../CX3RDKOV5640.c ****     CyU3PUartConfig_t uartConfig;
1731:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4651              		.loc 1 1731 0
 4652 000c 0030A0E3 		mov	r3, #0
 4653 0010 08300BE5 		str	r3, [fp, #-8]
1732:../CX3RDKOV5640.c **** 
1733:../CX3RDKOV5640.c ****     /* Initialize the UART for printing debug messages */
1734:../CX3RDKOV5640.c ****     status = CyU3PUartInit();
 4654              		.loc 1 1734 0
 4655 0014 FEFFFFEB 		bl	CyU3PUartInit
 4656 0018 08000BE5 		str	r0, [fp, #-8]
1735:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4657              		.loc 1 1735 0
 4658 001c 08301BE5 		ldr	r3, [fp, #-8]
 4659 0020 000053E3 		cmp	r3, #0
 4660 0024 0300000A 		beq	.L266
1736:../CX3RDKOV5640.c ****     {
1737:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartInit failed Error = 0x%x",status);
 4661              		.loc 1 1737 0
 4662 0028 0400A0E3 		mov	r0, #4
 4663 002c D0109FE5 		ldr	r1, .L270
 4664 0030 08201BE5 		ldr	r2, [fp, #-8]
 4665 0034 FEFFFFEB 		bl	CyU3PDebugPrint
 4666              	.L266:
1738:../CX3RDKOV5640.c ****     }
1739:../CX3RDKOV5640.c **** 
1740:../CX3RDKOV5640.c ****     /* Set UART Configuration */
1741:../CX3RDKOV5640.c ****     uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 4667              		.loc 1 1741 0
 4668 0038 C8309FE5 		ldr	r3, .L270+4
 4669 003c 10300BE5 		str	r3, [fp, #-16]
1742:../CX3RDKOV5640.c ****     uartConfig.stopBit = CY_U3P_UART_ONE_STOP_BIT;
 4670              		.loc 1 1742 0
 4671 0040 0130A0E3 		mov	r3, #1
 4672 0044 0C304BE5 		strb	r3, [fp, #-12]
1743:../CX3RDKOV5640.c ****     uartConfig.parity = CY_U3P_UART_NO_PARITY;
 4673              		.loc 1 1743 0
 4674 0048 0030A0E3 		mov	r3, #0
 4675 004c 0B304BE5 		strb	r3, [fp, #-11]
1744:../CX3RDKOV5640.c ****     uartConfig.txEnable = CyTrue;
 4676              		.loc 1 1744 0
 4677 0050 0130A0E3 		mov	r3, #1
 4678 0054 20300BE5 		str	r3, [fp, #-32]
1745:../CX3RDKOV5640.c ****     uartConfig.rxEnable = CyFalse;
 4679              		.loc 1 1745 0
 4680 0058 0030A0E3 		mov	r3, #0
 4681 005c 1C300BE5 		str	r3, [fp, #-28]
1746:../CX3RDKOV5640.c ****     uartConfig.flowCtrl = CyFalse;
 4682              		.loc 1 1746 0
 4683 0060 0030A0E3 		mov	r3, #0
 4684 0064 18300BE5 		str	r3, [fp, #-24]
1747:../CX3RDKOV5640.c ****     uartConfig.isDma = CyTrue;
 4685              		.loc 1 1747 0
 4686 0068 0130A0E3 		mov	r3, #1
 4687 006c 14300BE5 		str	r3, [fp, #-20]
1748:../CX3RDKOV5640.c **** 
1749:../CX3RDKOV5640.c ****     /* Set the UART configuration */
1750:../CX3RDKOV5640.c ****     status = CyU3PUartSetConfig (&uartConfig, NULL);
 4688              		.loc 1 1750 0
 4689 0070 20304BE2 		sub	r3, fp, #32
 4690 0074 0300A0E1 		mov	r0, r3
 4691 0078 0010A0E3 		mov	r1, #0
 4692 007c FEFFFFEB 		bl	CyU3PUartSetConfig
 4693 0080 08000BE5 		str	r0, [fp, #-8]
1751:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4694              		.loc 1 1751 0
 4695 0084 08301BE5 		ldr	r3, [fp, #-8]
 4696 0088 000053E3 		cmp	r3, #0
 4697 008c 0300000A 		beq	.L267
1752:../CX3RDKOV5640.c ****     {
1753:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartSetConfig failed Error = 0x%x",sta
 4698              		.loc 1 1753 0
 4699 0090 0400A0E3 		mov	r0, #4
 4700 0094 70109FE5 		ldr	r1, .L270+8
 4701 0098 08201BE5 		ldr	r2, [fp, #-8]
 4702 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4703              	.L267:
1754:../CX3RDKOV5640.c ****     }
1755:../CX3RDKOV5640.c **** 
1756:../CX3RDKOV5640.c ****     /* Set the UART transfer */
1757:../CX3RDKOV5640.c ****     status = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
 4704              		.loc 1 1757 0
 4705 00a0 0000E0E3 		mvn	r0, #0
 4706 00a4 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 4707 00a8 08000BE5 		str	r0, [fp, #-8]
1758:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4708              		.loc 1 1758 0
 4709 00ac 08301BE5 		ldr	r3, [fp, #-8]
 4710 00b0 000053E3 		cmp	r3, #0
 4711 00b4 0300000A 		beq	.L268
1759:../CX3RDKOV5640.c ****     {
1760:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartTxSetBlockXfer failed Error = 0x%x
 4712              		.loc 1 1760 0
 4713 00b8 0400A0E3 		mov	r0, #4
 4714 00bc 4C109FE5 		ldr	r1, .L270+12
 4715 00c0 08201BE5 		ldr	r2, [fp, #-8]
 4716 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4717              	.L268:
1761:../CX3RDKOV5640.c ****     }
1762:../CX3RDKOV5640.c **** 
1763:../CX3RDKOV5640.c ****     /* Initialize the debug application */
1764:../CX3RDKOV5640.c ****     status = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 8);
 4718              		.loc 1 1764 0
 4719 00c8 0300A0E3 		mov	r0, #3
 4720 00cc 0810A0E3 		mov	r1, #8
 4721 00d0 FEFFFFEB 		bl	CyU3PDebugInit
 4722 00d4 08000BE5 		str	r0, [fp, #-8]
1765:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4723              		.loc 1 1765 0
 4724 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4725 00dc 000053E3 		cmp	r3, #0
 4726 00e0 0300000A 		beq	.L269
1766:../CX3RDKOV5640.c ****     {
1767:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PDebugInit failed Error = 0x%x",status)
 4727              		.loc 1 1767 0
 4728 00e4 0400A0E3 		mov	r0, #4
 4729 00e8 24109FE5 		ldr	r1, .L270+16
 4730 00ec 08201BE5 		ldr	r2, [fp, #-8]
 4731 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
 4732              	.L269:
1768:../CX3RDKOV5640.c ****     }
1769:../CX3RDKOV5640.c ****     CyU3PDebugPreamble (CyFalse);
 4733              		.loc 1 1769 0
 4734 00f4 0000A0E3 		mov	r0, #0
 4735 00f8 FEFFFFEB 		bl	CyU3PDebugPreamble
1770:../CX3RDKOV5640.c **** 
1771:../CX3RDKOV5640.c **** }
 4736              		.loc 1 1771 0
 4737 00fc 04D04BE2 		sub	sp, fp, #4
 4738              		@ sp needed
 4739 0100 0088BDE8 		ldmfd	sp!, {fp, pc}
 4740              	.L271:
 4741              		.align	2
 4742              	.L270:
 4743 0104 C80A0000 		.word	.LC73
 4744 0108 00C20100 		.word	115200
 4745 010c 040B0000 		.word	.LC74
 4746 0110 440B0000 		.word	.LC75
 4747 0114 8C0B0000 		.word	.LC76
 4748              		.cfi_endproc
 4749              	.LFE12:
 4751              		.section	.rodata
 4752              		.align	2
 4753              	.LC77:
 4754 0bc8 0A0D4553 		.ascii	"\012\015ES_TIMER_RESET_EVENT: esUVCUvcApplnStop\000"
 4754      5F54494D 
 4754      45525F52 
 4754      45534554 
 4754      5F455645 
 4755 0bf2 0000     		.align	2
 4756              	.LC78:
 4757 0bf4 0A0D4553 		.ascii	"\012\015ES_TIMER_RESET_EVENT: esUVCUvcApplnStart\000"
 4757      5F54494D 
 4757      45525F52 
 4757      45534554 
 4757      5F455645 
 4758 0c1f 00       		.align	2
 4759              	.LC79:
 4760 0c20 0A0D4553 		.ascii	"\012\015ES_USB_SUSP_EVENT_FLAG %x\000"
 4760      5F555342 
 4760      5F535553 
 4760      505F4556 
 4760      454E545F 
 4761              		.align	2
 4762              	.LC80:
 4763 0c3c 0A0D4553 		.ascii	"\012\015ES_USB_SUSP_EVENT_FLAG: esCamera_Power_Up\000"
 4763      5F555342 
 4763      5F535553 
 4763      505F4556 
 4763      454E545F 
 4764              		.align	2
 4765              	.LC81:
 4766 0c68 0A0D4170 		.ascii	"\012\015App Thread Loop\000"
 4766      70205468 
 4766      72656164 
 4766      204C6F6F 
 4766      7000
 4767              		.section	.text.esUVCUvcAppThread_Entry,"ax",%progbits
 4768              		.align	2
 4769              		.global	esUVCUvcAppThread_Entry
 4771              	esUVCUvcAppThread_Entry:
 4772              	.LFB13:
1772:../CX3RDKOV5640.c **** 
1773:../CX3RDKOV5640.c **** /* Entry function for the UVC application thread. */
1774:../CX3RDKOV5640.c ****     void
1775:../CX3RDKOV5640.c **** esUVCUvcAppThread_Entry (
1776:../CX3RDKOV5640.c ****         uint32_t input)
1777:../CX3RDKOV5640.c **** {
 4773              		.loc 1 1777 0
 4774              		.cfi_startproc
 4775              		@ args = 0, pretend = 0, frame = 16
 4776              		@ frame_needed = 1, uses_anonymous_args = 0
 4777 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4778              	.LCFI26:
 4779              		.cfi_def_cfa_offset 8
 4780              		.cfi_offset 11, -8
 4781              		.cfi_offset 14, -4
 4782 0004 04B08DE2 		add	fp, sp, #4
 4783              	.LCFI27:
 4784              		.cfi_def_cfa 11, 4
 4785 0008 18D04DE2 		sub	sp, sp, #24
 4786 000c 10000BE5 		str	r0, [fp, #-16]
1778:../CX3RDKOV5640.c ****     uint16_t wakeReason;
1779:../CX3RDKOV5640.c ****     uint32_t eventFlag;
1780:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status;
1781:../CX3RDKOV5640.c **** 
1782:../CX3RDKOV5640.c ****     /* Initialize the Debug Module */
1783:../CX3RDKOV5640.c ****     esUVCUvcApplnDebugInit();
 4787              		.loc 1 1783 0
 4788 0010 FEFFFFEB 		bl	esUVCUvcApplnDebugInit
1784:../CX3RDKOV5640.c **** 
1785:../CX3RDKOV5640.c ****     /* Initialize the UVC Application */
1786:../CX3RDKOV5640.c ****     esUVCUvcApplnInit();
 4789              		.loc 1 1786 0
 4790 0014 FEFFFFEB 		bl	esUVCUvcApplnInit
 4791              	.L279:
1787:../CX3RDKOV5640.c **** 
1788:../CX3RDKOV5640.c ****     for (;;)
1789:../CX3RDKOV5640.c ****     {
1790:../CX3RDKOV5640.c ****         CyU3PEventGet (&glTimerEvent,ES_USB_SUSP_EVENT_FLAG|ES_TIMER_RESET_EVENT, CYU3P_EVENT_OR_CL
 4792              		.loc 1 1790 0
 4793 0018 0C304BE2 		sub	r3, fp, #12
 4794 001c 0020E0E3 		mvn	r2, #0
 4795 0020 00208DE5 		str	r2, [sp]
 4796 0024 E4009FE5 		ldr	r0, .L280
 4797 0028 3010A0E3 		mov	r1, #48
 4798 002c 0120A0E3 		mov	r2, #1
 4799 0030 FEFFFFEB 		bl	_txe_event_flags_get
1791:../CX3RDKOV5640.c **** 
1792:../CX3RDKOV5640.c ****         /* Handle TimerReset Event*/
1793:../CX3RDKOV5640.c ****         if( eventFlag & ES_TIMER_RESET_EVENT)
 4800              		.loc 1 1793 0
 4801 0034 0C301BE5 		ldr	r3, [fp, #-12]
 4802 0038 103003E2 		and	r3, r3, #16
 4803 003c 000053E3 		cmp	r3, #0
 4804 0040 1A00000A 		beq	.L273
1794:../CX3RDKOV5640.c ****         {
1795:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 4805              		.loc 1 1795 0
 4806 0044 C8309FE5 		ldr	r3, .L280+4
 4807 0048 003093E5 		ldr	r3, [r3]
 4808 004c 000053E3 		cmp	r3, #0
 4809 0050 0600000A 		beq	.L274
1796:../CX3RDKOV5640.c ****             {
1797:../CX3RDKOV5640.c ****             	glIsClearFeature = CyFalse;
 4810              		.loc 1 1797 0
 4811 0054 BC309FE5 		ldr	r3, .L280+8
 4812 0058 0020A0E3 		mov	r2, #0
 4813 005c 002083E5 		str	r2, [r3]
1798:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop();
 4814              		.loc 1 1798 0
 4815 0060 FEFFFFEB 		bl	esUVCUvcApplnStop
1799:../CX3RDKOV5640.c **** #ifdef VISDebug
1800:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStop");
 4816              		.loc 1 1800 0
 4817 0064 0400A0E3 		mov	r0, #4
 4818 0068 AC109FE5 		ldr	r1, .L280+12
 4819 006c FEFFFFEB 		bl	CyU3PDebugPrint
 4820              	.L274:
1801:../CX3RDKOV5640.c **** #endif
1802:../CX3RDKOV5640.c ****             }
1803:../CX3RDKOV5640.c ****             if(glPreviewStarted == CyTrue)
 4821              		.loc 1 1803 0
 4822 0070 A8309FE5 		ldr	r3, .L280+16
 4823 0074 003093E5 		ldr	r3, [r3]
 4824 0078 010053E3 		cmp	r3, #1
 4825 007c 0700001A 		bne	.L275
1804:../CX3RDKOV5640.c ****             {
1805:../CX3RDKOV5640.c ****             	//TODO Change this function with "Sensor Specific" function to write the sensor settin
1806:../CX3RDKOV5640.c ****             	esSetCameraResolution(glFrameIndexToSet);
 4826              		.loc 1 1806 0
 4827 0080 9C309FE5 		ldr	r3, .L280+20
 4828 0084 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4829 0088 0300A0E1 		mov	r0, r3
 4830 008c FEFFFFEB 		bl	esSetCameraResolution
1807:../CX3RDKOV5640.c ****             	esUVCUvcApplnStart();
 4831              		.loc 1 1807 0
 4832 0090 FEFFFFEB 		bl	esUVCUvcApplnStart
1808:../CX3RDKOV5640.c **** #ifdef VISDebug
1809:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStart");
 4833              		.loc 1 1809 0
 4834 0094 0400A0E3 		mov	r0, #4
 4835 0098 88109FE5 		ldr	r1, .L280+24
 4836 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4837              	.L275:
1810:../CX3RDKOV5640.c **** #endif
1811:../CX3RDKOV5640.c ****             }
1812:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1813:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 4838              		.loc 1 1813 0
 4839 00a0 84009FE5 		ldr	r0, .L280+28
 4840 00a4 7D1FA0E3 		mov	r1, #500
 4841 00a8 0020A0E3 		mov	r2, #0
 4842 00ac FEFFFFEB 		bl	_txe_timer_change
 4843              	.L273:
1814:../CX3RDKOV5640.c **** #endif
1815:../CX3RDKOV5640.c ****         }
1816:../CX3RDKOV5640.c ****         /* Handle Suspend Event*/
1817:../CX3RDKOV5640.c ****         if(eventFlag & ES_USB_SUSP_EVENT_FLAG)
 4844              		.loc 1 1817 0
 4845 00b0 0C301BE5 		ldr	r3, [fp, #-12]
 4846 00b4 203003E2 		and	r3, r3, #32
 4847 00b8 000053E3 		cmp	r3, #0
 4848 00bc 0E00000A 		beq	.L276
1818:../CX3RDKOV5640.c ****         {
1819:../CX3RDKOV5640.c ****             /* Place CX3 in Low Power Suspend mode, with USB bus activity as the wakeup source. */
1820:../CX3RDKOV5640.c ****             //CyU3PMipicsiSleep();
1821:../CX3RDKOV5640.c ****             //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the 
1822:../CX3RDKOV5640.c ****             //esCamera_Power_Down();
1823:../CX3RDKOV5640.c **** 
1824:../CX3RDKOV5640.c ****             //status = CyU3PSysEnterSuspendMode (CY_U3P_SYS_USB_BUS_ACTVTY_WAKEUP_SRC, 0, &wakeReas
1825:../CX3RDKOV5640.c **** #ifdef VISDebug
1826:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG %x", status);
 4849              		.loc 1 1826 0
 4850 00c0 0400A0E3 		mov	r0, #4
 4851 00c4 64109FE5 		ldr	r1, .L280+32
 4852 00c8 08201BE5 		ldr	r2, [fp, #-8]
 4853 00cc FEFFFFEB 		bl	CyU3PDebugPrint
1827:../CX3RDKOV5640.c **** #endif
1828:../CX3RDKOV5640.c ****     		if(glMipiActive)
 4854              		.loc 1 1828 0
 4855 00d0 5C309FE5 		ldr	r3, .L280+36
 4856 00d4 003093E5 		ldr	r3, [r3]
 4857 00d8 000053E3 		cmp	r3, #0
 4858 00dc 0500000A 		beq	.L277
1829:../CX3RDKOV5640.c ****             {
1830:../CX3RDKOV5640.c ****                 CyU3PMipicsiWakeup();
 4859              		.loc 1 1830 0
 4860 00e0 FEFFFFEB 		bl	CyU3PMipicsiWakeup
1831:../CX3RDKOV5640.c ****                 //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the 
1832:../CX3RDKOV5640.c ****                 esCamera_Power_Up();
 4861              		.loc 1 1832 0
 4862 00e4 FEFFFFEB 		bl	esCamera_Power_Up
1833:../CX3RDKOV5640.c **** #ifdef VISDebug
1834:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG: esCamera_Power_Up");
 4863              		.loc 1 1834 0
 4864 00e8 0400A0E3 		mov	r0, #4
 4865 00ec 44109FE5 		ldr	r1, .L280+40
 4866 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
1835:../CX3RDKOV5640.c **** #endif
1836:../CX3RDKOV5640.c ****             }
1837:../CX3RDKOV5640.c ****             continue;
 4867              		.loc 1 1837 0
 4868 00f4 040000EA 		b	.L278
 4869              	.L277:
 4870 00f8 030000EA 		b	.L278
 4871              	.L276:
1838:../CX3RDKOV5640.c ****         }
1839:../CX3RDKOV5640.c **** #ifdef VISDebug
1840:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApp Thread Loop");
 4872              		.loc 1 1840 0
 4873 00fc 0400A0E3 		mov	r0, #4
 4874 0100 34109FE5 		ldr	r1, .L280+44
 4875 0104 FEFFFFEB 		bl	CyU3PDebugPrint
1841:../CX3RDKOV5640.c **** #endif
1842:../CX3RDKOV5640.c ****     } /* End of for(;;) */
 4876              		.loc 1 1842 0
 4877 0108 C2FFFFEA 		b	.L279
 4878              	.L278:
 4879 010c C1FFFFEA 		b	.L279
 4880              	.L281:
 4881              		.align	2
 4882              	.L280:
 4883 0110 00000000 		.word	glTimerEvent
 4884 0114 00000000 		.word	glIsApplnActive
 4885 0118 00000000 		.word	glIsClearFeature
 4886 011c C80B0000 		.word	.LC77
 4887 0120 00000000 		.word	glPreviewStarted
 4888 0124 00000000 		.word	glFrameIndexToSet
 4889 0128 F40B0000 		.word	.LC78
 4890 012c 00000000 		.word	UvcTimer
 4891 0130 200C0000 		.word	.LC79
 4892 0134 00000000 		.word	glMipiActive
 4893 0138 3C0C0000 		.word	.LC80
 4894 013c 680C0000 		.word	.LC81
 4895              		.cfi_endproc
 4896              	.LFE13:
 4898              		.section	.rodata
 4899 0c7a 0000     		.align	2
 4900              	.LC82:
 4901 0c7c 33303A55 		.ascii	"30:UVC_app_thread\000"
 4901      56435F61 
 4901      70705F74 
 4901      68726561 
 4901      6400
 4902 0c8e 0000     		.section	.text.CyFxApplicationDefine,"ax",%progbits
 4903              		.align	2
 4904              		.global	CyFxApplicationDefine
 4906              	CyFxApplicationDefine:
 4907              	.LFB14:
1843:../CX3RDKOV5640.c **** }
1844:../CX3RDKOV5640.c **** 
1845:../CX3RDKOV5640.c **** 
1846:../CX3RDKOV5640.c **** /* Application define function which creates the threads. */
1847:../CX3RDKOV5640.c ****     void
1848:../CX3RDKOV5640.c **** CyFxApplicationDefine (
1849:../CX3RDKOV5640.c ****         void)
1850:../CX3RDKOV5640.c **** {
 4908              		.loc 1 1850 0
 4909              		.cfi_startproc
 4910              		@ args = 0, pretend = 0, frame = 8
 4911              		@ frame_needed = 1, uses_anonymous_args = 0
 4912 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4913              	.LCFI28:
 4914              		.cfi_def_cfa_offset 8
 4915              		.cfi_offset 11, -8
 4916              		.cfi_offset 14, -4
 4917 0004 04B08DE2 		add	fp, sp, #4
 4918              	.LCFI29:
 4919              		.cfi_def_cfa 11, 4
 4920 0008 28D04DE2 		sub	sp, sp, #40
1851:../CX3RDKOV5640.c ****     void *ptr = NULL;
 4921              		.loc 1 1851 0
 4922 000c 0030A0E3 		mov	r3, #0
 4923 0010 08300BE5 		str	r3, [fp, #-8]
1852:../CX3RDKOV5640.c ****     uint32_t retThrdCreate = CY_U3P_SUCCESS;
 4924              		.loc 1 1852 0
 4925 0014 0030A0E3 		mov	r3, #0
 4926 0018 0C300BE5 		str	r3, [fp, #-12]
1853:../CX3RDKOV5640.c **** 
1854:../CX3RDKOV5640.c ****     /* Allocate the memory for the thread and create the thread */
1855:../CX3RDKOV5640.c ****     ptr = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
 4927              		.loc 1 1855 0
 4928 001c 010AA0E3 		mov	r0, #4096
 4929 0020 FEFFFFEB 		bl	CyU3PMemAlloc
 4930 0024 08000BE5 		str	r0, [fp, #-8]
1856:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
 4931              		.loc 1 1856 0
 4932 0028 08301BE5 		ldr	r3, [fp, #-8]
 4933 002c 00308DE5 		str	r3, [sp]
 4934 0030 013AA0E3 		mov	r3, #4096
 4935 0034 04308DE5 		str	r3, [sp, #4]
 4936 0038 0830A0E3 		mov	r3, #8
 4937 003c 08308DE5 		str	r3, [sp, #8]
 4938 0040 0830A0E3 		mov	r3, #8
 4939 0044 0C308DE5 		str	r3, [sp, #12]
 4940 0048 0030A0E3 		mov	r3, #0
 4941 004c 10308DE5 		str	r3, [sp, #16]
 4942 0050 0130A0E3 		mov	r3, #1
 4943 0054 14308DE5 		str	r3, [sp, #20]
 4944 0058 A830A0E3 		mov	r3, #168
 4945 005c 18308DE5 		str	r3, [sp, #24]
 4946 0060 4C009FE5 		ldr	r0, .L287
 4947 0064 4C109FE5 		ldr	r1, .L287+4
 4948 0068 4C209FE5 		ldr	r2, .L287+8
 4949 006c 0030A0E3 		mov	r3, #0
 4950 0070 FEFFFFEB 		bl	_txe_thread_create
 4951 0074 0C000BE5 		str	r0, [fp, #-12]
1857:../CX3RDKOV5640.c ****             "30:UVC_app_thread",         /* Thread Id and name */
1858:../CX3RDKOV5640.c ****             esUVCUvcAppThread_Entry,          /* UVC Application Thread Entry function */
1859:../CX3RDKOV5640.c ****             0,                           /* No input parameter to thread */
1860:../CX3RDKOV5640.c ****             ptr,                         /* Pointer to the allocated thread stack */
1861:../CX3RDKOV5640.c ****             UVC_APP_THREAD_STACK,        /* UVC Application Thread stack size */
1862:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* UVC Application Thread priority */
1863:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* Pre-emption threshold */
1864:../CX3RDKOV5640.c ****             CYU3P_NO_TIME_SLICE,         /* No time slice for the application thread */
1865:../CX3RDKOV5640.c ****             CYU3P_AUTO_START             /* Start the Thread immediately */
1866:../CX3RDKOV5640.c ****             );
1867:../CX3RDKOV5640.c **** 
1868:../CX3RDKOV5640.c ****     /* Check the return code */
1869:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4952              		.loc 1 1869 0
 4953 0078 0C301BE5 		ldr	r3, [fp, #-12]
 4954 007c 000053E3 		cmp	r3, #0
 4955 0080 0000000A 		beq	.L283
 4956              	.L284:
1870:../CX3RDKOV5640.c ****     {
1871:../CX3RDKOV5640.c ****         /* Thread Creation failed with the error code retThrdCreate */
1872:../CX3RDKOV5640.c **** 
1873:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1874:../CX3RDKOV5640.c **** 
1875:../CX3RDKOV5640.c ****         /* Application cannot continue */
1876:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1877:../CX3RDKOV5640.c ****         while(1);
 4957              		.loc 1 1877 0 discriminator 1
 4958 0084 FEFFFFEA 		b	.L284
 4959              	.L283:
1878:../CX3RDKOV5640.c ****     }
1879:../CX3RDKOV5640.c **** 
1880:../CX3RDKOV5640.c ****     /* Create GPIO application event group */
1881:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PEventCreate(&glTimerEvent);
 4960              		.loc 1 1881 0
 4961 0088 30009FE5 		ldr	r0, .L287+12
 4962 008c 0010A0E3 		mov	r1, #0
 4963 0090 2820A0E3 		mov	r2, #40
 4964 0094 FEFFFFEB 		bl	_txe_event_flags_create
 4965 0098 0C000BE5 		str	r0, [fp, #-12]
1882:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4966              		.loc 1 1882 0
 4967 009c 0C301BE5 		ldr	r3, [fp, #-12]
 4968 00a0 000053E3 		cmp	r3, #0
 4969 00a4 0000000A 		beq	.L282
 4970              	.L286:
1883:../CX3RDKOV5640.c ****     {
1884:../CX3RDKOV5640.c ****         /* Event group creation failed with the error code retThrdCreate */
1885:../CX3RDKOV5640.c **** 
1886:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1887:../CX3RDKOV5640.c **** 
1888:../CX3RDKOV5640.c ****         /* Application cannot continue */
1889:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1890:../CX3RDKOV5640.c ****         while(1);
 4971              		.loc 1 1890 0 discriminator 1
 4972 00a8 FEFFFFEA 		b	.L286
 4973              	.L282:
1891:../CX3RDKOV5640.c ****     }
1892:../CX3RDKOV5640.c **** }
 4974              		.loc 1 1892 0
 4975 00ac 04D04BE2 		sub	sp, fp, #4
 4976              		@ sp needed
 4977 00b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4978              	.L288:
 4979              		.align	2
 4980              	.L287:
 4981 00b4 00000000 		.word	uvcAppThread
 4982 00b8 7C0C0000 		.word	.LC82
 4983 00bc 00000000 		.word	esUVCUvcAppThread_Entry
 4984 00c0 00000000 		.word	glTimerEvent
 4985              		.cfi_endproc
 4986              	.LFE14:
 4988              		.section	.text.main,"ax",%progbits
 4989              		.align	2
 4990              		.global	main
 4992              	main:
 4993              	.LFB15:
1893:../CX3RDKOV5640.c **** 
1894:../CX3RDKOV5640.c **** /*
1895:../CX3RDKOV5640.c ****  * Main function
1896:../CX3RDKOV5640.c ****  */
1897:../CX3RDKOV5640.c **** 
1898:../CX3RDKOV5640.c ****     int
1899:../CX3RDKOV5640.c **** main (void)
1900:../CX3RDKOV5640.c **** {
 4994              		.loc 1 1900 0
 4995              		.cfi_startproc
 4996              		@ args = 0, pretend = 0, frame = 48
 4997              		@ frame_needed = 1, uses_anonymous_args = 0
 4998 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4999              	.LCFI30:
 5000              		.cfi_def_cfa_offset 8
 5001              		.cfi_offset 11, -8
 5002              		.cfi_offset 14, -4
 5003 0004 04B08DE2 		add	fp, sp, #4
 5004              	.LCFI31:
 5005              		.cfi_def_cfa 11, 4
 5006 0008 30D04DE2 		sub	sp, sp, #48
1901:../CX3RDKOV5640.c ****     CyU3PIoMatrixConfig_t io_cfg;
1902:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 5007              		.loc 1 1902 0
 5008 000c 0030A0E3 		mov	r3, #0
 5009 0010 08300BE5 		str	r3, [fp, #-8]
1903:../CX3RDKOV5640.c **** 
1904:../CX3RDKOV5640.c ****     /* Initialize the device */
1905:../CX3RDKOV5640.c ****     status = CyU3PDeviceInit (NULL);
 5010              		.loc 1 1905 0
 5011 0014 0000A0E3 		mov	r0, #0
 5012 0018 FEFFFFEB 		bl	CyU3PDeviceInit
 5013 001c 08000BE5 		str	r0, [fp, #-8]
1906:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5014              		.loc 1 1906 0
 5015 0020 08301BE5 		ldr	r3, [fp, #-8]
 5016 0024 000053E3 		cmp	r3, #0
 5017 0028 0000000A 		beq	.L290
1907:../CX3RDKOV5640.c ****     {
1908:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5018              		.loc 1 1908 0
 5019 002c 270000EA 		b	.L291
 5020              	.L290:
1909:../CX3RDKOV5640.c ****     }
1910:../CX3RDKOV5640.c **** 
1911:../CX3RDKOV5640.c ****     /* Initialize the caches. Enable instruction cache and keep data cache disabled.
1912:../CX3RDKOV5640.c ****      * The data cache is useful only when there is a large amount of CPU based memory
1913:../CX3RDKOV5640.c ****      * accesses. When used in simple cases, it can decrease performance due to large
1914:../CX3RDKOV5640.c ****      * number of cache flushes and cleans and also it adds to the complexity of the
1915:../CX3RDKOV5640.c ****      * code. */
1916:../CX3RDKOV5640.c ****     status = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
 5021              		.loc 1 1916 0
 5022 0030 0100A0E3 		mov	r0, #1
 5023 0034 0010A0E3 		mov	r1, #0
 5024 0038 0020A0E3 		mov	r2, #0
 5025 003c FEFFFFEB 		bl	CyU3PDeviceCacheControl
 5026 0040 08000BE5 		str	r0, [fp, #-8]
1917:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5027              		.loc 1 1917 0
 5028 0044 08301BE5 		ldr	r3, [fp, #-8]
 5029 0048 000053E3 		cmp	r3, #0
 5030 004c 0000000A 		beq	.L292
1918:../CX3RDKOV5640.c ****     {
1919:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5031              		.loc 1 1919 0
 5032 0050 1E0000EA 		b	.L291
 5033              	.L292:
1920:../CX3RDKOV5640.c ****     }
1921:../CX3RDKOV5640.c **** 
1922:../CX3RDKOV5640.c ****     /* Configure the IO matrix for the device.*/
1923:../CX3RDKOV5640.c ****     io_cfg.isDQ32Bit = CyFalse;
 5034              		.loc 1 1923 0
 5035 0054 0030A0E3 		mov	r3, #0
 5036 0058 30300BE5 		str	r3, [fp, #-48]
1924:../CX3RDKOV5640.c **** 
1925:../CX3RDKOV5640.c ****     io_cfg.useUart   = CyTrue;
 5037              		.loc 1 1925 0
 5038 005c 0130A0E3 		mov	r3, #1
 5039 0060 2C300BE5 		str	r3, [fp, #-44]
1926:../CX3RDKOV5640.c ****     io_cfg.useI2C    = CyTrue;
 5040              		.loc 1 1926 0
 5041 0064 0130A0E3 		mov	r3, #1
 5042 0068 28300BE5 		str	r3, [fp, #-40]
1927:../CX3RDKOV5640.c ****     io_cfg.useI2S    = CyFalse;
 5043              		.loc 1 1927 0
 5044 006c 0030A0E3 		mov	r3, #0
 5045 0070 24300BE5 		str	r3, [fp, #-36]
1928:../CX3RDKOV5640.c ****     io_cfg.useSpi    = CyFalse;
 5046              		.loc 1 1928 0
 5047 0074 0030A0E3 		mov	r3, #0
 5048 0078 20300BE5 		str	r3, [fp, #-32]
1929:../CX3RDKOV5640.c ****     io_cfg.lppMode   = CY_U3P_IO_MATRIX_LPP_DEFAULT;
 5049              		.loc 1 1929 0
 5050 007c 0030A0E3 		mov	r3, #0
 5051 0080 1A304BE5 		strb	r3, [fp, #-26]
1930:../CX3RDKOV5640.c ****     /* No GPIOs are enabled. */
1931:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[0]  = 0;
 5052              		.loc 1 1931 0
 5053 0084 0030A0E3 		mov	r3, #0
 5054 0088 18300BE5 		str	r3, [fp, #-24]
1932:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[1]  = 0;
 5055              		.loc 1 1932 0
 5056 008c 0030A0E3 		mov	r3, #0
 5057 0090 14300BE5 		str	r3, [fp, #-20]
1933:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[0] = 0;
 5058              		.loc 1 1933 0
 5059 0094 0030A0E3 		mov	r3, #0
 5060 0098 10300BE5 		str	r3, [fp, #-16]
1934:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[1] = 0;
 5061              		.loc 1 1934 0
 5062 009c 0030A0E3 		mov	r3, #0
 5063 00a0 0C300BE5 		str	r3, [fp, #-12]
1935:../CX3RDKOV5640.c ****     status = CyU3PDeviceConfigureIOMatrix (&io_cfg);
 5064              		.loc 1 1935 0
 5065 00a4 30304BE2 		sub	r3, fp, #48
 5066 00a8 0300A0E1 		mov	r0, r3
 5067 00ac FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
 5068 00b0 08000BE5 		str	r0, [fp, #-8]
1936:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5069              		.loc 1 1936 0
 5070 00b4 08301BE5 		ldr	r3, [fp, #-8]
 5071 00b8 000053E3 		cmp	r3, #0
 5072 00bc 0000000A 		beq	.L293
1937:../CX3RDKOV5640.c ****     {
1938:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5073              		.loc 1 1938 0
 5074 00c0 020000EA 		b	.L291
 5075              	.L293:
1939:../CX3RDKOV5640.c ****     }
1940:../CX3RDKOV5640.c **** 
1941:../CX3RDKOV5640.c ****     /* This is a non returnable call for initializing the RTOS kernel */
1942:../CX3RDKOV5640.c ****     CyU3PKernelEntry ();
 5076              		.loc 1 1942 0
 5077 00c4 FEFFFFEB 		bl	_tx_initialize_kernel_enter
1943:../CX3RDKOV5640.c **** 
1944:../CX3RDKOV5640.c ****     /* Dummy return to make the compiler happy */
1945:../CX3RDKOV5640.c ****     return 0;
 5078              		.loc 1 1945 0
 5079 00c8 0030A0E3 		mov	r3, #0
 5080 00cc 000000EA 		b	.L295
 5081              	.L291:
1946:../CX3RDKOV5640.c **** 
1947:../CX3RDKOV5640.c **** handle_fatal_error:
1948:../CX3RDKOV5640.c ****     /* Cannot recover from this error. */
1949:../CX3RDKOV5640.c ****     while (1);
 5082              		.loc 1 1949 0 discriminator 1
 5083 00d0 FEFFFFEA 		b	.L291
 5084              	.L295:
1950:../CX3RDKOV5640.c **** }
 5085              		.loc 1 1950 0
 5086 00d4 0300A0E1 		mov	r0, r3
 5087 00d8 04D04BE2 		sub	sp, fp, #4
 5088              		@ sp needed
 5089 00dc 0088BDE8 		ldmfd	sp!, {fp, pc}
 5090              		.cfi_endproc
 5091              	.LFE15:
 5093              		.text
 5094              	.Letext0:
 5095              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 5096              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5097              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 5098              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 5099              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 5100              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5101              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5102              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5103              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5104              		.file 11 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5105              		.file 12 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5106              		.file 13 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5107              		.file 14 "..\\..\\CX3OV5640LIB\\INC/CX3OV5640Lib.h"
 5108              		.file 15 "../CX3RDKOV5640.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CX3RDKOV5640.c
                            *COM*:00000004 gl32SetControl
                            *COM*:00000002 gl16SetControl
                            *COM*:000000a8 uvcAppThread
                            *COM*:00000028 glTimerEvent
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:21     .bss.UvcTimer:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:24     .bss.UvcTimer:00000000 UvcTimer
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:27     .text.UvcAppProgressTimer:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:29     .text.UvcAppProgressTimer:00000000 UvcAppProgressTimer
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:58     .text.UvcAppProgressTimer:00000028 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:67     .bss.glDMATxCount:00000000 glDMATxCount
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:64     .bss.glDMATxCount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:74     .bss.glDmaDone:00000000 glDmaDone
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:71     .bss.glDmaDone:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:80     .bss.glActiveSocket:00000000 glActiveSocket
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:81     .bss.glActiveSocket:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:87     .data.doLpmDisable:00000000 doLpmDisable
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:84     .data.doLpmDisable:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:94     .bss.glHitFV:00000000 glHitFV
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:91     .bss.glHitFV:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:101    .bss.glMipiActive:00000000 glMipiActive
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:98     .bss.glMipiActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:108    .bss.glIsClearFeature:00000000 glIsClearFeature
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:105    .bss.glIsClearFeature:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:115    .bss.glPreviewStarted:00000000 glPreviewStarted
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:112    .bss.glPreviewStarted:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:122    .data.glUVCHeader:00000000 glUVCHeader
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:119    .data.glUVCHeader:00000000 $d
                            *COM*:00000020 glCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:140    .data.glCurrentFrameIndex:00000000 glCurrentFrameIndex
                            *COM*:00000020 glStillCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:147    .data.glCurrentStillFrameIndex:00000000 glCurrentStillFrameIndex
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:153    .bss.glStillTriggerCtrl:00000000 glStillTriggerCtrl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:154    .bss.glStillTriggerCtrl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:159    .bss.glFrameIndexToSet:00000000 glFrameIndexToSet
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:160    .bss.glFrameIndexToSet:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:166    .bss.glStillCaptureStart:00000000 glStillCaptureStart
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:163    .bss.glStillCaptureStart:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:173    .bss.glStillCaptured:00000000 glStillCaptured
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:170    .bss.glStillCaptured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:179    .bss.glStillSkip:00000000 glStillSkip
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:180    .bss.glStillSkip:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:186    .bss.glIsApplnActive:00000000 glIsApplnActive
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:183    .bss.glIsApplnActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:193    .bss.glIsConfigured:00000000 glIsConfigured
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:190    .bss.glIsConfigured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:200    .bss.glIsStreamingStarted:00000000 glIsStreamingStarted
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:197    .bss.glIsStreamingStarted:00000000 $d
                            *COM*:000000e8 glChHandleUVCStream
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:208    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 ES_UVC_STREAM_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:205    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:215    .bss.ES_UVC_DATA_BUF_SIZE:00000000 ES_UVC_DATA_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:212    .bss.ES_UVC_DATA_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:221    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 ES_UVC_STREAM_BUF_COUNT
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:222    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:227    .data.g_IsAutoFocus:00000000 g_IsAutoFocus
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:233    .bss.glGet_Info:00000000 glGet_Info
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:234    .bss.glGet_Info:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:240    .bss.gl8GetControl:00000000 gl8GetControl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:237    .bss.gl8GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:247    .bss.gl8SetControl:00000000 gl8SetControl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:244    .bss.gl8SetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:254    .bss.gl16GetControl:00000000 gl16GetControl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:251    .bss.gl16GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:261    .bss.gl32GetControl:00000000 gl32GetControl
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:258    .bss.gl32GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:267    .bss.glcommitcount:00000000 glcommitcount
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:268    .bss.glcommitcount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:273    .data.glcheckframe:00000000 glcheckframe
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:276    .text.esUVCAppErrorHandler:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:279    .text.esUVCAppErrorHandler:00000000 esUVCAppErrorHandler
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:305    .text.esUVCUvcAddHeader:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:307    .text.esUVCUvcAddHeader:00000000 esUVCUvcAddHeader
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:358    .text.esUVCUvcAddHeader:00000074 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:363    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:370    .text.esUVCUvcApplnStart:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:373    .text.esUVCUvcApplnStart:00000000 esUVCUvcApplnStart
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:520    .text.esUVCUvcApplnStart:0000017c $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:542    .text.esUVCUvcApplnStop:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:545    .text.esUVCUvcApplnStop:00000000 esUVCUvcApplnStop
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:648    .text.esUVCUvcApplnStop:000000f8 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:667    .text.esUVCGpifCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:670    .text.esUVCGpifCB:00000000 esUVCGpifCB
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:742    .text.esUVCGpifCB:000000ac $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:758    .text.esUVCUvcAppDmaCallback:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:761    .text.esUVCUvcAppDmaCallback:00000000 esUVCUvcAppDmaCallback
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1087   .text.esUVCUvcAppDmaCallback:000003c4 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1125   .text.esUVCUvcApplnUSBEventCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1127   .text.esUVCUvcApplnUSBEventCB:00000000 esUVCUvcApplnUSBEventCB
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1157   .text.esUVCUvcApplnUSBEventCB:0000003c $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1167   .text.esUVCUvcApplnUSBEventCB:0000005c $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1307   .text.esUVCUvcApplnUSBEventCB:000001d0 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1322   .text.esUVCApplnLPMRqtCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1324   .text.esUVCApplnLPMRqtCB:00000000 esUVCApplnLPMRqtCB
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1369   .text.esSetCameraResolution:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1372   .text.esSetCameraResolution:00000000 esSetCameraResolution
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1543   .text.esSetCameraResolution:000001b8 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1596   .text.esUVCUvcApplnUSBSetupCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:1598   .text.esUVCUvcApplnUSBSetupCB:00000000 esUVCUvcApplnUSBSetupCB
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:3104   .text.esUVCUvcApplnUSBSetupCB:0000109c $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:3148   .text.esUVCUvcApplnUSBSetupCB:00001144 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:3763   .text.esUVCUvcApplnInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:3766   .text.esUVCUvcApplnInit:00000000 esUVCUvcApplnInit
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4538   .text.esUVCUvcApplnInit:0000088c $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4633   .text.esUVCUvcApplnDebugInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4636   .text.esUVCUvcApplnDebugInit:00000000 esUVCUvcApplnDebugInit
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4743   .text.esUVCUvcApplnDebugInit:00000104 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4768   .text.esUVCUvcAppThread_Entry:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4771   .text.esUVCUvcAppThread_Entry:00000000 esUVCUvcAppThread_Entry
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4883   .text.esUVCUvcAppThread_Entry:00000110 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4903   .text.CyFxApplicationDefine:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4906   .text.CyFxApplicationDefine:00000000 CyFxApplicationDefine
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4981   .text.CyFxApplicationDefine:000000b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4989   .text.main:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccedqNMm.s:4992   .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.29463082a45126943f020ea30bda05c8
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.219.8eb38badc3f446ace4f0fbbdc7b4e018
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.cyu3types.h.80.f5310e165127de2daf78c334a454267e
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.ec713094ff7b80200da61a1b94cca956
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.tx_port.h.95.54ef54ef950923016df123872c81f77f
                           .group:00000000 wm4.tx_api.h.90.d18ffa804751aa80b6d59c3d596c2234
                           .group:00000000 wm4.cyu3tx.h.61.421a5eac9b37f3e2677fcfe17ba1c9c3
                           .group:00000000 wm4.cyu3dma.h.569.521da17a880bb7dc9c063e240d18d9bc
                           .group:00000000 wm4.cyu3system.h.43.0fbd82548e591beefe95401c72410881
                           .group:00000000 wm4.cyu3usbconst.h.37.502980e110c2142a7316d50a53794397
                           .group:00000000 wm4.cyu3usb.h.302.ade7bb9b5b6e92c233eea1baf2851afa
                           .group:00000000 wm4.cyu3lpp.h.138.66435309bc2407b6684483dfed574450
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.cyu3utils.h.45.ea1b88089ccad3d50489f6f768ad8e9f
                           .group:00000000 wm4.cyu3pib.h.192.a1483c513c81c352d6719814a4b66283
                           .group:00000000 wm4.cyu3descriptor.h.104.486178ff96f7d84792762d8905519d09
                           .group:00000000 wm4.cyu3socket.h.153.0d077cd39632ba9c913ec648cfa0f9e9
                           .group:00000000 wm4.sock_regs.h.24.15d70ab2b2a99b01b4189217fc091bd3
                           .group:00000000 wm4.cyu3sib.h.59.b1cff9a75023363cc612aef2b2314b23
                           .group:00000000 wm4.cyu3gpif.h.52.b01ef1bece12652336136a0aaabab45b
                           .group:00000000 wm4.cyu3mipicsi.h.46.b99df5b141b2543db3c56d6e408e0c5e
                           .group:00000000 wm4.CX3OV5640Lib.h.18.ebed1e57f77d2633a42de60cae388313
                           .group:00000000 wm4.CX3RDKOV5640.h.34.16f03605a9abf281a0c637c9029be977

UNDEFINED SYMBOLS
_txe_event_flags_set
_tx_thread_sleep
CyU3PMemCopy
_txe_timer_deactivate
CyU3PUsbSetEpNak
CyFx3BusyWait
CyU3PUsbFlushEp
CyU3PDmaMultiChannelReset
CyU3PDebugPrint
CyU3PDmaMultiChannelSetXfer
CyU3PGpifSMControl
CyU3PGpifSMSwitch
CyU3PMipicsiWakeup
esCamera_Power_Up
esOV5640_SetAutofocus
CyU3PMipicsiSleep
esCamera_Power_Down
CyU3PUsbStall
CyU3PUsbLPMEnable
CyU3PDmaMultiChannelSetWrapUp
CyU3PUsbGetSpeed
CyU3PUsbLPMDisable
CyU3PUsbSetLinkPowerState
_txe_timer_activate
CyU3PDmaMultiChannelGetBuffer
CyU3PDmaMultiChannelCommitBuffer
_txe_timer_change
CyU3PMipicsiSetIntfParams
esOV5640_1080P_config
esOV5640_VGA_config
esOV5640_720P_config
esOV5640_5MP_config
esOV5640_VGA_HS_config
cfgUvc1080p30NoMclk
cfgUvcVga30NoMclk
cfgUvc720p60NoMclk
cfgUvc5Mp15NoMclk
CyU3PUsbAckSetup
CyU3PUsbSendEP0Data
CyU3PUsbGetEP0Data
esOV5640_GetBrightness
esOV5640_SetBrightness
esOV5640_GetAutoExposure
esOV5640_SetAutoExposure
esOV5640_GetContrast
esOV5640_SetContrast
esOV5640_GetExposure
esOV5640_SetExposure
esOV5640_GetHue
esOV5640_SetHue
esOV5640_GetManualfocus
esOV5640_SetManualfocus
esOV5640_GetSaturation
esOV5640_SetSaturation
glProbeCtrl
gl5MpProbeCtrl
gl720pProbeCtrl
glVga60ProbeCtrl
gl1080pProbeCtrl
glVga30ProbeCtrl
glStillProbeCtrl
esOV5640_GetSharpness
esOV5640_SetSharpness
esOV5640_GetAutofocus
esOV5640_GetWhiteBalance
esOV5640_SetWhiteBalance
esOV5640_GetAutoWhiteBalance
esOV5640_SetAutoWhiteBalance
CyU3PMipicsiInitializeI2c
CyU3PMipicsiInitializeGPIO
CyU3PMipicsiInitializePIB
CyU3PUsbStart
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterEventCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbSetDesc
CyU3PUsbVBattEnable
CyU3PUsbControlVBusDetect
esOV5640_Base_Config
esOV5640_Auto_Focus_Config
CyU3PConnectState
CyU3PSetEpConfig
CyU3PUsbEPSetBurstMode
CyU3PDmaMultiChannelCreate
CyU3PMipicsiGpifLoad
CyU3PGpifRegisterCallback
CyU3PGpifSMStart
CyU3PMipicsiInit
_txe_timer_create
esUVCUSB30DeviceDscr
esUVCUSB20DeviceDscr
esUVCUSBBOSDscr
esUVCUSBDeviceQualDscr
esUVCUSBSSConfigDscr
esUVCUSBHSConfigDscr
esUVCUSBFSConfigDscr
esUVCUSBStringLangIDDscr
esUVCUSBManufactureDscr
esUVCUSBProductDscr
esUVCUSBConfigSSDscr
esUVCUSBConfigHSDscr
esUVCUSBConfigFSDscr
cfgUvcVgaNoMclk
CyU3PUartInit
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
_txe_event_flags_get
CyU3PMemAlloc
_txe_thread_create
_txe_event_flags_create
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
