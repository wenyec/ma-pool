   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"CX3RDKOV5640.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.comm	gl32SetControl,4,4
  17              		.comm	gl16SetControl,2,2
  18              		.comm	uvcAppThread,168,4
  19              		.comm	glTimerEvent,40,4
  20              		.section	.bss.UvcTimer,"aw",%nobits
  21              		.align	2
  24              	UvcTimer:
  25 0000 00000000 		.space	44
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.UvcAppProgressTimer,"ax",%progbits
  27              		.align	2
  29              	UvcAppProgressTimer:
  30              	.LFB0:
  31              		.file 1 "../CX3RDKOV5640.c"
   1:../CX3RDKOV5640.c **** /*
   2:../CX3RDKOV5640.c ****  ## e-con Systems USB UVC Stack – See3CAMCX3RDK Platform
   3:../CX3RDKOV5640.c **** 
   4:../CX3RDKOV5640.c ****  ## source file : CX3RDKOV5640.c
   5:../CX3RDKOV5640.c ****  ## ===========================
   6:../CX3RDKOV5640.c ****  ##
   7:../CX3RDKOV5640.c ****  ##  Copyright E-Con Systems, 2013-2014,
   8:../CX3RDKOV5640.c ****  ##  All Rights Reserved
   9:../CX3RDKOV5640.c ****  ##  UNPUBLISHED, LICENSED SOFTWARE.
  10:../CX3RDKOV5640.c ****  ##
  11:../CX3RDKOV5640.c ****  ##  CONFIDENTIAL AND PROPRIETARY INFORMATION
  12:../CX3RDKOV5640.c ****  ##  PROPERTY OF ECON SYSTEMS
  13:../CX3RDKOV5640.c **** 
  14:../CX3RDKOV5640.c ****  ## www.e-consystems.com
  15:../CX3RDKOV5640.c ****  ##
  16:../CX3RDKOV5640.c ****  ##
  17:../CX3RDKOV5640.c ****  ## ===========================
  18:../CX3RDKOV5640.c **** */
  19:../CX3RDKOV5640.c **** 
  20:../CX3RDKOV5640.c **** #include "cyu3system.h"
  21:../CX3RDKOV5640.c **** #include "cyu3os.h"
  22:../CX3RDKOV5640.c **** #include "cyu3dma.h"
  23:../CX3RDKOV5640.c **** #include "cyu3error.h"
  24:../CX3RDKOV5640.c **** #include "cyu3usb.h"
  25:../CX3RDKOV5640.c **** #include "cyu3i2c.h"
  26:../CX3RDKOV5640.c **** #include "cyu3uart.h"
  27:../CX3RDKOV5640.c **** #include "cyu3gpio.h"
  28:../CX3RDKOV5640.c **** #include "cyu3utils.h"
  29:../CX3RDKOV5640.c **** #include "cyu3pib.h"
  30:../CX3RDKOV5640.c **** #include "cyu3socket.h"
  31:../CX3RDKOV5640.c **** #include "sock_regs.h"
  32:../CX3RDKOV5640.c **** #include "cyu3mipicsi.h"
  33:../CX3RDKOV5640.c **** 
  34:../CX3RDKOV5640.c **** #include "CX3OV5640Lib.h"
  35:../CX3RDKOV5640.c **** #include "CX3RDKOV5640.h"
  36:../CX3RDKOV5640.c **** 
  37:../CX3RDKOV5640.c **** /* Event generated on Timer overflow*/
  38:../CX3RDKOV5640.c **** #define ES_TIMER_RESET_EVENT		(1<<4)
  39:../CX3RDKOV5640.c **** 
  40:../CX3RDKOV5640.c **** /* Event generated on a USB Suspend Request*/
  41:../CX3RDKOV5640.c **** #define ES_USB_SUSP_EVENT_FLAG		(1<<5)
  42:../CX3RDKOV5640.c **** 
  43:../CX3RDKOV5640.c **** /* Firmware version*/
  44:../CX3RDKOV5640.c **** #define MajorVersion 				1
  45:../CX3RDKOV5640.c **** #define MinorVersion 				3
  46:../CX3RDKOV5640.c **** #define SubVersion					133
  47:../CX3RDKOV5640.c **** #define SubVersion1					309
  48:../CX3RDKOV5640.c **** #define RESET_TIMER_ENABLE 1
  49:../CX3RDKOV5640.c **** 
  50:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
  51:../CX3RDKOV5640.c **** #define TIMER_PERIOD	(500)
  52:../CX3RDKOV5640.c **** 
  53:../CX3RDKOV5640.c **** /****** for VIS debugging ******/
  54:../CX3RDKOV5640.c **** #define VISDebug
  55:../CX3RDKOV5640.c **** 
  56:../CX3RDKOV5640.c **** /*************End***************/
  57:../CX3RDKOV5640.c **** 
  58:../CX3RDKOV5640.c **** static CyU3PTimer        UvcTimer;
  59:../CX3RDKOV5640.c **** 
  60:../CX3RDKOV5640.c **** static void UvcAppProgressTimer (uint32_t arg)
  61:../CX3RDKOV5640.c **** {
  32              		.loc 1 61 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 00482DE9 		stmfd	sp!, {fp, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 11, -8
  40              		.cfi_offset 14, -4
  41 0004 04B08DE2 		add	fp, sp, #4
  42              	.LCFI1:
  43              		.cfi_def_cfa 11, 4
  44 0008 08D04DE2 		sub	sp, sp, #8
  45 000c 08000BE5 		str	r0, [fp, #-8]
  62:../CX3RDKOV5640.c ****     /* This frame has taken too long to complete.
  63:../CX3RDKOV5640.c ****      * Abort it, so that the next frame can be started. */
  64:../CX3RDKOV5640.c ****     CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
  46              		.loc 1 64 0
  47 0010 10009FE5 		ldr	r0, .L2
  48 0014 1010A0E3 		mov	r1, #16
  49 0018 0020A0E3 		mov	r2, #0
  50 001c FEFFFFEB 		bl	_txe_event_flags_set
  65:../CX3RDKOV5640.c **** }
  51              		.loc 1 65 0
  52 0020 04D04BE2 		sub	sp, fp, #4
  53              		@ sp needed
  54 0024 0088BDE8 		ldmfd	sp!, {fp, pc}
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0028 00000000 		.word	glTimerEvent
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.global	glDMATxCount
  63              		.section	.bss.glDMATxCount,"aw",%nobits
  64              		.align	2
  67              	glDMATxCount:
  68 0000 00000000 		.space	4
  69              		.global	glDmaDone
  70              		.section	.bss.glDmaDone,"aw",%nobits
  71              		.align	2
  74              	glDmaDone:
  75 0000 00000000 		.space	4
  76              		.global	glActiveSocket
  77              		.section	.bss.glActiveSocket,"aw",%nobits
  80              	glActiveSocket:
  81 0000 00       		.space	1
  82              		.global	doLpmDisable
  83              		.section	.data.doLpmDisable,"aw",%progbits
  84              		.align	2
  87              	doLpmDisable:
  88 0000 01000000 		.word	1
  89              		.global	glHitFV
  90              		.section	.bss.glHitFV,"aw",%nobits
  91              		.align	2
  94              	glHitFV:
  95 0000 00000000 		.space	4
  96              		.global	glMipiActive
  97              		.section	.bss.glMipiActive,"aw",%nobits
  98              		.align	2
 101              	glMipiActive:
 102 0000 00000000 		.space	4
 103              		.global	glIsClearFeature
 104              		.section	.bss.glIsClearFeature,"aw",%nobits
 105              		.align	2
 108              	glIsClearFeature:
 109 0000 00000000 		.space	4
 110              		.global	glPreviewStarted
 111              		.section	.bss.glPreviewStarted,"aw",%nobits
 112              		.align	2
 115              	glPreviewStarted:
 116 0000 00000000 		.space	4
 117              		.global	glUVCHeader
 118              		.section	.data.glUVCHeader,"aw",%progbits
 119              		.align	2
 122              	glUVCHeader:
 123 0000 0C       		.byte	12
 124 0001 8C       		.byte	-116
 125 0002 00       		.byte	0
 126 0003 00       		.byte	0
 127 0004 00       		.byte	0
 128 0005 00       		.byte	0
 129 0006 00       		.byte	0
 130 0007 00       		.byte	0
 131 0008 00       		.byte	0
 132 0009 00       		.byte	0
 133 000a 00       		.byte	0
 134 000b 00       		.byte	0
 135              		.comm	glCommitCtrl,32,4
 136              		.global	glCurrentFrameIndex
 137              		.section	.data.glCurrentFrameIndex,"aw",%progbits
 140              	glCurrentFrameIndex:
 141 0000 01       		.byte	1
 142              		.comm	glStillCommitCtrl,32,4
 143              		.global	glCurrentStillFrameIndex
 144              		.section	.data.glCurrentStillFrameIndex,"aw",%progbits
 147              	glCurrentStillFrameIndex:
 148 0000 01       		.byte	1
 149              		.global	glStillTriggerCtrl
 150              		.section	.bss.glStillTriggerCtrl,"aw",%nobits
 153              	glStillTriggerCtrl:
 154 0000 00       		.space	1
 155              		.global	glFrameIndexToSet
 156              		.section	.bss.glFrameIndexToSet,"aw",%nobits
 159              	glFrameIndexToSet:
 160 0000 00       		.space	1
 161              		.global	glStillCaptureStart
 162              		.section	.bss.glStillCaptureStart,"aw",%nobits
 163              		.align	2
 166              	glStillCaptureStart:
 167 0000 00000000 		.space	4
 168              		.global	glStillCaptured
 169              		.section	.bss.glStillCaptured,"aw",%nobits
 170              		.align	2
 173              	glStillCaptured:
 174 0000 00000000 		.space	4
 175              		.global	glStillSkip
 176              		.section	.bss.glStillSkip,"aw",%nobits
 179              	glStillSkip:
 180 0000 00       		.space	1
 181              		.global	glIsApplnActive
 182              		.section	.bss.glIsApplnActive,"aw",%nobits
 183              		.align	2
 186              	glIsApplnActive:
 187 0000 00000000 		.space	4
 188              		.global	glIsConfigured
 189              		.section	.bss.glIsConfigured,"aw",%nobits
 190              		.align	2
 193              	glIsConfigured:
 194 0000 00000000 		.space	4
 195              		.global	glIsStreamingStarted
 196              		.section	.bss.glIsStreamingStarted,"aw",%nobits
 197              		.align	2
 200              	glIsStreamingStarted:
 201 0000 00000000 		.space	4
 202              		.comm	glChHandleUVCStream,232,4
 203              		.global	ES_UVC_STREAM_BUF_SIZE
 204              		.section	.bss.ES_UVC_STREAM_BUF_SIZE,"aw",%nobits
 205              		.align	1
 208              	ES_UVC_STREAM_BUF_SIZE:
 209 0000 0000     		.space	2
 210              		.global	ES_UVC_DATA_BUF_SIZE
 211              		.section	.bss.ES_UVC_DATA_BUF_SIZE,"aw",%nobits
 212              		.align	1
 215              	ES_UVC_DATA_BUF_SIZE:
 216 0000 0000     		.space	2
 217              		.global	ES_UVC_STREAM_BUF_COUNT
 218              		.section	.bss.ES_UVC_STREAM_BUF_COUNT,"aw",%nobits
 221              	ES_UVC_STREAM_BUF_COUNT:
 222 0000 00       		.space	1
 223              		.global	g_IsAutoFocus
 224              		.section	.data.g_IsAutoFocus,"aw",%progbits
 227              	g_IsAutoFocus:
 228 0000 01       		.byte	1
 229              		.global	glGet_Info
 230              		.section	.bss.glGet_Info,"aw",%nobits
 233              	glGet_Info:
 234 0000 00       		.space	1
 235              		.global	gl8GetControl
 236              		.section	.bss.gl8GetControl,"aw",%nobits
 237              		.align	1
 240              	gl8GetControl:
 241 0000 0000     		.space	2
 242              		.global	gl8SetControl
 243              		.section	.bss.gl8SetControl,"aw",%nobits
 244              		.align	1
 247              	gl8SetControl:
 248 0000 0000     		.space	2
 249              		.global	gl16GetControl
 250              		.section	.bss.gl16GetControl,"aw",%nobits
 251              		.align	1
 254              	gl16GetControl:
 255 0000 0000     		.space	2
 256              		.global	gl32GetControl
 257              		.section	.bss.gl32GetControl,"aw",%nobits
 258              		.align	2
 261              	gl32GetControl:
 262 0000 00000000 		.space	4
 263              		.global	glcommitcount
 264              		.section	.bss.glcommitcount,"aw",%nobits
 267              	glcommitcount:
 268 0000 00       		.space	1
 269              		.global	glcheckframe
 270              		.section	.data.glcheckframe,"aw",%progbits
 273              	glcheckframe:
 274 0000 01       		.byte	1
 275              		.section	.text.esUVCAppErrorHandler,"ax",%progbits
 276              		.align	2
 277              		.global	esUVCAppErrorHandler
 279              	esUVCAppErrorHandler:
 280              	.LFB1:
  66:../CX3RDKOV5640.c **** #endif
  67:../CX3RDKOV5640.c **** 
  68:../CX3RDKOV5640.c **** volatile int32_t glDMATxCount = 0;          /* Counter used to count the Dma Transfers */
  69:../CX3RDKOV5640.c **** volatile int32_t glDmaDone = 0;
  70:../CX3RDKOV5640.c **** volatile uint8_t glActiveSocket = 0;
  71:../CX3RDKOV5640.c **** volatile CyBool_t doLpmDisable = CyTrue;	/* Flag used to Enable/Disable low USB 3.0 LPM */
  72:../CX3RDKOV5640.c **** CyBool_t glHitFV = CyFalse;             	/* Flag used for state of FV signal. */
  73:../CX3RDKOV5640.c **** CyBool_t glMipiActive = CyFalse;        	/* Flag set to true when Mipi interface is active. Used fo
  74:../CX3RDKOV5640.c **** CyBool_t glIsClearFeature = CyFalse;    	/* Flag to signal when AppStop is called from the ClearFea
  75:../CX3RDKOV5640.c **** CyBool_t glPreviewStarted = CyFalse;		/* Flag to support Mac os */
  76:../CX3RDKOV5640.c **** 
  77:../CX3RDKOV5640.c **** /* UVC Header */
  78:../CX3RDKOV5640.c **** uint8_t glUVCHeader[ES_UVC_HEADER_LENGTH] =
  79:../CX3RDKOV5640.c **** {
  80:../CX3RDKOV5640.c ****     0x0C,                           /* Header Length */
  81:../CX3RDKOV5640.c ****     0x8C,                           /* Bit field header field */
  82:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,            /* Presentation time stamp field */
  83:../CX3RDKOV5640.c ****     0x00,0x00,0x00,0x00,0x00,0x00   /* Source clock reference field */
  84:../CX3RDKOV5640.c **** };
  85:../CX3RDKOV5640.c **** 
  86:../CX3RDKOV5640.c **** /* Video Probe Commit Control */
  87:../CX3RDKOV5640.c **** uint8_t glCommitCtrl[ES_UVC_MAX_PROBE_SETTING_ALIGNED];
  88:../CX3RDKOV5640.c **** uint8_t glCurrentFrameIndex = 1;
  89:../CX3RDKOV5640.c **** uint8_t glStillCommitCtrl[ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED];
  90:../CX3RDKOV5640.c **** uint8_t glCurrentStillFrameIndex = 1;
  91:../CX3RDKOV5640.c **** uint8_t glStillTriggerCtrl = 0;
  92:../CX3RDKOV5640.c **** uint8_t glFrameIndexToSet = 0;
  93:../CX3RDKOV5640.c **** CyBool_t glStillCaptureStart = CyFalse;
  94:../CX3RDKOV5640.c **** CyBool_t glStillCaptured = CyFalse;
  95:../CX3RDKOV5640.c **** uint8_t glStillSkip = 0;
  96:../CX3RDKOV5640.c **** 
  97:../CX3RDKOV5640.c **** CyBool_t glIsApplnActive = CyFalse;             /* Whether the Mipi->USB application is active or n
  98:../CX3RDKOV5640.c **** CyBool_t glIsConfigured = CyFalse;              /* Whether Application is in configured state or no
  99:../CX3RDKOV5640.c **** CyBool_t glIsStreamingStarted = CyFalse;        /* Whether streaming has started - Used for MAC OS 
 100:../CX3RDKOV5640.c **** 
 101:../CX3RDKOV5640.c **** /* DMA Channel */
 102:../CX3RDKOV5640.c **** CyU3PDmaMultiChannel glChHandleUVCStream;       /* DMA Channel Handle for UVC Stream  */
 103:../CX3RDKOV5640.c **** uint16_t ES_UVC_STREAM_BUF_SIZE=0;
 104:../CX3RDKOV5640.c **** uint16_t ES_UVC_DATA_BUF_SIZE=0;
 105:../CX3RDKOV5640.c **** uint8_t ES_UVC_STREAM_BUF_COUNT=0;
 106:../CX3RDKOV5640.c **** 
 107:../CX3RDKOV5640.c **** uint8_t g_IsAutoFocus=1;						/* Check the AutoFocus is Enabled or not*/
 108:../CX3RDKOV5640.c **** 
 109:../CX3RDKOV5640.c **** /* USB control request processing variables*/
 110:../CX3RDKOV5640.c **** #if 1
 111:../CX3RDKOV5640.c **** 
 112:../CX3RDKOV5640.c **** uint8_t glGet_Info = 0;
 113:../CX3RDKOV5640.c **** int16_t gl8GetControl = 0;
 114:../CX3RDKOV5640.c **** int16_t gl8SetControl = 0;
 115:../CX3RDKOV5640.c **** int16_t gl16GetControl = 0;
 116:../CX3RDKOV5640.c **** 
 117:../CX3RDKOV5640.c **** int32_t gl32GetControl = 0;
 118:../CX3RDKOV5640.c **** 
 119:../CX3RDKOV5640.c **** #endif
 120:../CX3RDKOV5640.c **** 
 121:../CX3RDKOV5640.c **** uint8_t glcommitcount=0,glcheckframe=1;
 122:../CX3RDKOV5640.c **** 
 123:../CX3RDKOV5640.c **** /* Application critical error handler */
 124:../CX3RDKOV5640.c ****     void
 125:../CX3RDKOV5640.c **** esUVCAppErrorHandler (
 126:../CX3RDKOV5640.c ****         CyU3PReturnStatus_t status        /* API return status */
 127:../CX3RDKOV5640.c ****         )
 128:../CX3RDKOV5640.c **** {
 281              		.loc 1 128 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 00482DE9 		stmfd	sp!, {fp, lr}
 286              	.LCFI2:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 04B08DE2 		add	fp, sp, #4
 291              	.LCFI3:
 292              		.cfi_def_cfa 11, 4
 293 0008 08D04DE2 		sub	sp, sp, #8
 294 000c 08000BE5 		str	r0, [fp, #-8]
 295              	.L5:
 129:../CX3RDKOV5640.c ****     /* Application failed with the error code status */
 130:../CX3RDKOV5640.c **** 
 131:../CX3RDKOV5640.c ****     /* Add custom debug or recovery actions here */
 132:../CX3RDKOV5640.c **** 
 133:../CX3RDKOV5640.c ****     /* Loop indefinitely */
 134:../CX3RDKOV5640.c ****     for (;;)
 135:../CX3RDKOV5640.c ****     {
 136:../CX3RDKOV5640.c ****         /* Thread sleep : 100 ms */
 137:../CX3RDKOV5640.c ****         CyU3PThreadSleep (100);
 296              		.loc 1 137 0 discriminator 1
 297 0010 6400A0E3 		mov	r0, #100
 298 0014 FEFFFFEB 		bl	_tx_thread_sleep
 138:../CX3RDKOV5640.c ****     }
 299              		.loc 1 138 0 discriminator 1
 300 0018 FCFFFFEA 		b	.L5
 301              		.cfi_endproc
 302              	.LFE1:
 304              		.section	.text.esUVCUvcAddHeader,"ax",%progbits
 305              		.align	2
 307              	esUVCUvcAddHeader:
 308              	.LFB2:
 139:../CX3RDKOV5640.c **** }
 140:../CX3RDKOV5640.c **** 
 141:../CX3RDKOV5640.c **** 
 142:../CX3RDKOV5640.c **** /* UVC header addition function */
 143:../CX3RDKOV5640.c ****     static void
 144:../CX3RDKOV5640.c **** esUVCUvcAddHeader (
 145:../CX3RDKOV5640.c ****         uint8_t *buffer_p,      /* Buffer pointer */
 146:../CX3RDKOV5640.c ****         uint8_t frameInd        /* EOF or normal frame indication */
 147:../CX3RDKOV5640.c ****         )
 148:../CX3RDKOV5640.c **** {
 309              		.loc 1 148 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 00482DE9 		stmfd	sp!, {fp, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 11, -8
 317              		.cfi_offset 14, -4
 318 0004 04B08DE2 		add	fp, sp, #4
 319              	.LCFI5:
 320              		.cfi_def_cfa 11, 4
 321 0008 08D04DE2 		sub	sp, sp, #8
 322 000c 08000BE5 		str	r0, [fp, #-8]
 323 0010 0130A0E1 		mov	r3, r1
 324 0014 09304BE5 		strb	r3, [fp, #-9]
 149:../CX3RDKOV5640.c ****     /* Copy header to buffer */
 150:../CX3RDKOV5640.c ****     CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, ES_UVC_HEADER_LENGTH);
 325              		.loc 1 150 0
 326 0018 08001BE5 		ldr	r0, [fp, #-8]
 327 001c 50109FE5 		ldr	r1, .L8
 328 0020 0C20A0E3 		mov	r2, #12
 329 0024 FEFFFFEB 		bl	CyU3PMemCopy
 151:../CX3RDKOV5640.c **** 
 152:../CX3RDKOV5640.c ****     /* Check if last packet of the frame. */
 153:../CX3RDKOV5640.c ****     if (frameInd == ES_UVC_HEADER_EOF)
 330              		.loc 1 153 0
 331 0028 09305BE5 		ldrb	r3, [fp, #-9]	@ zero_extendqisi2
 332 002c 020053E3 		cmp	r3, #2
 333 0030 0D00001A 		bne	.L6
 154:../CX3RDKOV5640.c ****     {
 155:../CX3RDKOV5640.c ****         /* Modify UVC header to toggle Frame ID */
 156:../CX3RDKOV5640.c ****         glUVCHeader[1] ^= ES_UVC_HEADER_FRAME_ID;
 334              		.loc 1 156 0
 335 0034 38309FE5 		ldr	r3, .L8
 336 0038 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 337 003c 013023E2 		eor	r3, r3, #1
 338 0040 FF2003E2 		and	r2, r3, #255
 339 0044 28309FE5 		ldr	r3, .L8
 340 0048 0120C3E5 		strb	r2, [r3, #1]
 157:../CX3RDKOV5640.c **** 
 158:../CX3RDKOV5640.c ****         /* Indicate End of Frame in the buffer */
 159:../CX3RDKOV5640.c ****         buffer_p[1] |=  ES_UVC_HEADER_EOF;
 341              		.loc 1 159 0
 342 004c 08301BE5 		ldr	r3, [fp, #-8]
 343 0050 013083E2 		add	r3, r3, #1
 344 0054 08201BE5 		ldr	r2, [fp, #-8]
 345 0058 012082E2 		add	r2, r2, #1
 346 005c 0020D2E5 		ldrb	r2, [r2]	@ zero_extendqisi2
 347 0060 022082E3 		orr	r2, r2, #2
 348 0064 FF2002E2 		and	r2, r2, #255
 349 0068 0020C3E5 		strb	r2, [r3]
 350              	.L6:
 160:../CX3RDKOV5640.c ****     }
 161:../CX3RDKOV5640.c **** }
 351              		.loc 1 161 0
 352 006c 04D04BE2 		sub	sp, fp, #4
 353              		@ sp needed
 354 0070 0088BDE8 		ldmfd	sp!, {fp, pc}
 355              	.L9:
 356              		.align	2
 357              	.L8:
 358 0074 00000000 		.word	glUVCHeader
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0A0D4170 		.ascii	"\012\015AplnStrt:ChannelReset Err = 0x%x\000"
 365      6C6E5374 
 365      72743A43 
 365      68616E6E 
 365      656C5265 
 366 0023 00       		.align	2
 367              	.LC1:
 368 0024 0A0D4170 		.ascii	"\012\015AplnStrt:SetXfer Err = 0x%x\000"
 368      6C6E5374 
 368      72743A53 
 368      65745866 
 368      65722045 
 369              		.section	.text.esUVCUvcApplnStart,"ax",%progbits
 370              		.align	2
 371              		.global	esUVCUvcApplnStart
 373              	esUVCUvcApplnStart:
 374              	.LFB3:
 162:../CX3RDKOV5640.c **** 
 163:../CX3RDKOV5640.c **** 
 164:../CX3RDKOV5640.c **** /* This function starts the video streaming application. It is called
 165:../CX3RDKOV5640.c ****  * when there is a SET_INTERFACE event for alternate interface 1
 166:../CX3RDKOV5640.c ****  * (in case of UVC over Isochronous Endpoint usage) or when a
 167:../CX3RDKOV5640.c ****  * COMMIT_CONTROL(SET_CUR) request is received (when using BULK only UVC).
 168:../CX3RDKOV5640.c ****  */
 169:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t
 170:../CX3RDKOV5640.c **** esUVCUvcApplnStart (void)
 171:../CX3RDKOV5640.c **** {
 375              		.loc 1 171 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 00482DE9 		stmfd	sp!, {fp, lr}
 380              	.LCFI6:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 11, -8
 383              		.cfi_offset 14, -4
 384 0004 04B08DE2 		add	fp, sp, #4
 385              	.LCFI7:
 386              		.cfi_def_cfa 11, 4
 387 0008 10D04DE2 		sub	sp, sp, #16
 172:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 388              		.loc 1 172 0
 389 000c 0030A0E3 		mov	r3, #0
 390 0010 08300BE5 		str	r3, [fp, #-8]
 173:../CX3RDKOV5640.c **** 
 174:../CX3RDKOV5640.c ****     glIsApplnActive = CyTrue;
 391              		.loc 1 174 0
 392 0014 60319FE5 		ldr	r3, .L15
 393 0018 0120A0E3 		mov	r2, #1
 394 001c 002083E5 		str	r2, [r3]
 175:../CX3RDKOV5640.c ****     glDmaDone = 0;
 395              		.loc 1 175 0
 396 0020 58319FE5 		ldr	r3, .L15+4
 397 0024 0020A0E3 		mov	r2, #0
 398 0028 002083E5 		str	r2, [r3]
 176:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 399              		.loc 1 176 0
 400 002c 50319FE5 		ldr	r3, .L15+8
 401 0030 0020A0E3 		mov	r2, #0
 402 0034 002083E5 		str	r2, [r3]
 177:../CX3RDKOV5640.c ****     glHitFV = CyFalse;
 403              		.loc 1 177 0
 404 0038 48319FE5 		ldr	r3, .L15+12
 405 003c 0020A0E3 		mov	r2, #0
 406 0040 002083E5 		str	r2, [r3]
 178:../CX3RDKOV5640.c ****     doLpmDisable = CyTrue;
 407              		.loc 1 178 0
 408 0044 40319FE5 		ldr	r3, .L15+16
 409 0048 0120A0E3 		mov	r2, #1
 410 004c 002083E5 		str	r2, [r3]
 179:../CX3RDKOV5640.c **** 
 180:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 181:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 411              		.loc 1 181 0
 412 0050 38019FE5 		ldr	r0, .L15+20
 413 0054 FEFFFFEB 		bl	_txe_timer_deactivate
 182:../CX3RDKOV5640.c **** #endif
 183:../CX3RDKOV5640.c **** 
 184:../CX3RDKOV5640.c **** 
 185:../CX3RDKOV5640.c ****     /* Place the EP in NAK mode before cleaning up the pipe. */
 186:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 414              		.loc 1 186 0
 415 0058 8300A0E3 		mov	r0, #131
 416 005c 0110A0E3 		mov	r1, #1
 417 0060 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 187:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 418              		.loc 1 187 0
 419 0064 6400A0E3 		mov	r0, #100
 420 0068 FEFFFFEB 		bl	CyFx3BusyWait
 188:../CX3RDKOV5640.c **** 
 189:../CX3RDKOV5640.c ****     /* Reset USB EP and DMA */
 190:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 421              		.loc 1 190 0
 422 006c 8300A0E3 		mov	r0, #131
 423 0070 FEFFFFEB 		bl	CyU3PUsbFlushEp
 191:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 424              		.loc 1 191 0
 425 0074 18019FE5 		ldr	r0, .L15+24
 426 0078 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 427 007c 08000BE5 		str	r0, [fp, #-8]
 192:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 428              		.loc 1 192 0
 429 0080 08301BE5 		ldr	r3, [fp, #-8]
 430 0084 000053E3 		cmp	r3, #0
 431 0088 0500000A 		beq	.L11
 193:../CX3RDKOV5640.c ****     {
 194:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 432              		.loc 1 194 0
 433 008c 0400A0E3 		mov	r0, #4
 434 0090 00119FE5 		ldr	r1, .L15+28
 435 0094 08201BE5 		ldr	r2, [fp, #-8]
 436 0098 FEFFFFEB 		bl	CyU3PDebugPrint
 195:../CX3RDKOV5640.c ****         return status;
 437              		.loc 1 195 0
 438 009c 08301BE5 		ldr	r3, [fp, #-8]
 439 00a0 320000EA 		b	.L12
 440              	.L11:
 196:../CX3RDKOV5640.c ****     }
 197:../CX3RDKOV5640.c **** 
 198:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 441              		.loc 1 198 0
 442 00a4 E8009FE5 		ldr	r0, .L15+24
 443 00a8 0010A0E3 		mov	r1, #0
 444 00ac 0020A0E3 		mov	r2, #0
 445 00b0 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetXfer
 446 00b4 08000BE5 		str	r0, [fp, #-8]
 199:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 447              		.loc 1 199 0
 448 00b8 08301BE5 		ldr	r3, [fp, #-8]
 449 00bc 000053E3 		cmp	r3, #0
 450 00c0 0500000A 		beq	.L13
 200:../CX3RDKOV5640.c ****     {
 201:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 451              		.loc 1 201 0
 452 00c4 0400A0E3 		mov	r0, #4
 453 00c8 CC109FE5 		ldr	r1, .L15+32
 454 00cc 08201BE5 		ldr	r2, [fp, #-8]
 455 00d0 FEFFFFEB 		bl	CyU3PDebugPrint
 202:../CX3RDKOV5640.c ****         return status;
 456              		.loc 1 202 0
 457 00d4 08301BE5 		ldr	r3, [fp, #-8]
 458 00d8 240000EA 		b	.L12
 459              	.L13:
 203:../CX3RDKOV5640.c ****     }
 204:../CX3RDKOV5640.c **** 
 205:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 460              		.loc 1 205 0
 461 00dc 8300A0E3 		mov	r0, #131
 462 00e0 0010A0E3 		mov	r1, #0
 463 00e4 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 206:../CX3RDKOV5640.c ****     CyU3PBusyWait (200);
 464              		.loc 1 206 0
 465 00e8 C800A0E3 		mov	r0, #200
 466 00ec FEFFFFEB 		bl	CyFx3BusyWait
 207:../CX3RDKOV5640.c **** //
 208:../CX3RDKOV5640.c **** //    /* Place the EP in NAK mode before cleaning up the pipe. */
 209:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 210:../CX3RDKOV5640.c **** //    CyU3PBusyWait (100);
 211:../CX3RDKOV5640.c **** //
 212:../CX3RDKOV5640.c **** //    /* Reset USB EP and DMA */
 213:../CX3RDKOV5640.c **** //    CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 214:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
 215:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 216:../CX3RDKOV5640.c **** //    {
 217:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4,"\n\rAplnStrt:ChannelReset Err = 0x%x", status);
 218:../CX3RDKOV5640.c **** //        return status;
 219:../CX3RDKOV5640.c **** //    }
 220:../CX3RDKOV5640.c **** //    status = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
 221:../CX3RDKOV5640.c **** //    if (status != CY_U3P_SUCCESS)
 222:../CX3RDKOV5640.c **** //    {
 223:../CX3RDKOV5640.c **** //        CyU3PDebugPrint (4, "\n\rAplnStrt:SetXfer Err = 0x%x", status);
 224:../CX3RDKOV5640.c **** //        return status;
 225:../CX3RDKOV5640.c **** //    }
 226:../CX3RDKOV5640.c **** //    CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 227:../CX3RDKOV5640.c **** //    CyU3PBusyWait (200);
 228:../CX3RDKOV5640.c **** 
 229:../CX3RDKOV5640.c **** 	 /* Night Mode function
 230:../CX3RDKOV5640.c **** 	 *  --------------------
 231:../CX3RDKOV5640.c **** 	 *  esOV5640_Nightmode API is used to enable the Nightmode
 232:../CX3RDKOV5640.c **** 	 *  of OV5640 sensor.
 233:../CX3RDKOV5640.c **** 	 *  Set Enable -- Cytrue to enable Nightmode
 234:../CX3RDKOV5640.c **** 	 * 				  CyFalse to Disable Nightmode
 235:../CX3RDKOV5640.c **** 	 *
 236:../CX3RDKOV5640.c **** 	 *  Set NightMode_option -- 1 to 6 to set different night modes
 237:../CX3RDKOV5640.c **** 	 *
 238:../CX3RDKOV5640.c **** 	 * To test different night modes, uncomment the below statement and build the firmware
 239:../CX3RDKOV5640.c **** 	 */
 240:../CX3RDKOV5640.c ****     //TODO Change this Function to "Sensor Specific" Nightmode Function to enable the nightmode(If 
 241:../CX3RDKOV5640.c **** 	/*esOV5640_Nightmode(CyTrue,3);*/
 242:../CX3RDKOV5640.c **** 
 243:../CX3RDKOV5640.c **** 
 244:../CX3RDKOV5640.c ****     /* Resume the Fixed Function GPIF State machine */
 245:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyFalse);
 467              		.loc 1 245 0
 468 00f0 0000A0E3 		mov	r0, #0
 469 00f4 FEFFFFEB 		bl	CyU3PGpifSMControl
 246:../CX3RDKOV5640.c **** 
 247:../CX3RDKOV5640.c ****     glActiveSocket = 0;
 470              		.loc 1 247 0
 471 00f8 A0309FE5 		ldr	r3, .L15+36
 472 00fc 0020A0E3 		mov	r2, #0
 473 0100 0020C3E5 		strb	r2, [r3]
 248:../CX3RDKOV5640.c ****     CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 474              		.loc 1 248 0
 475 0104 0230A0E3 		mov	r3, #2
 476 0108 00308DE5 		str	r3, [sp]
 477 010c 90009FE5 		ldr	r0, .L15+40
 478 0110 0010A0E3 		mov	r1, #0
 479 0114 88209FE5 		ldr	r2, .L15+40
 480 0118 0030A0E3 		mov	r3, #0
 481 011c FEFFFFEB 		bl	CyU3PGpifSMSwitch
 249:../CX3RDKOV5640.c ****     		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 250:../CX3RDKOV5640.c **** 
 251:../CX3RDKOV5640.c ****     CyU3PThreadSleep(10);
 482              		.loc 1 251 0
 483 0120 0A00A0E3 		mov	r0, #10
 484 0124 FEFFFFEB 		bl	_tx_thread_sleep
 252:../CX3RDKOV5640.c **** 
 253:../CX3RDKOV5640.c ****     /* Wake Mipi interface and Image Sensor */
 254:../CX3RDKOV5640.c ****     CyU3PMipicsiWakeup();
 485              		.loc 1 254 0
 486 0128 FEFFFFEB 		bl	CyU3PMipicsiWakeup
 255:../CX3RDKOV5640.c **** 
 256:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the sensor
 257:../CX3RDKOV5640.c ****     esCamera_Power_Up();
 487              		.loc 1 257 0
 488 012c FEFFFFEB 		bl	esCamera_Power_Up
 258:../CX3RDKOV5640.c **** 
 259:../CX3RDKOV5640.c ****     glMipiActive = CyTrue;
 489              		.loc 1 259 0
 490 0130 70309FE5 		ldr	r3, .L15+44
 491 0134 0120A0E3 		mov	r2, #1
 492 0138 002083E5 		str	r2, [r3]
 260:../CX3RDKOV5640.c **** 
 261:../CX3RDKOV5640.c ****     //TODO Change this Function with "Sensor Specific" AutoFocus Function to Set the AutoFocus of t
 262:../CX3RDKOV5640.c **** 	if(glStillCaptureStart!= CyTrue)
 493              		.loc 1 262 0
 494 013c 68309FE5 		ldr	r3, .L15+48
 495 0140 003093E5 		ldr	r3, [r3]
 496 0144 010053E3 		cmp	r3, #1
 497 0148 0700000A 		beq	.L14
 263:../CX3RDKOV5640.c **** 	{
 264:../CX3RDKOV5640.c **** 		if(g_IsAutoFocus)
 498              		.loc 1 264 0
 499 014c 5C309FE5 		ldr	r3, .L15+52
 500 0150 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0154 000053E3 		cmp	r3, #0
 502 0158 0300000A 		beq	.L14
 265:../CX3RDKOV5640.c **** 			esOV5640_SetAutofocus(g_IsAutoFocus);
 503              		.loc 1 265 0
 504 015c 4C309FE5 		ldr	r3, .L15+52
 505 0160 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0164 0300A0E1 		mov	r0, r3
 507 0168 FEFFFFEB 		bl	esOV5640_SetAutofocus
 508              	.L14:
 266:../CX3RDKOV5640.c **** 	}
 267:../CX3RDKOV5640.c ****     return CY_U3P_SUCCESS;
 509              		.loc 1 267 0
 510 016c 0030A0E3 		mov	r3, #0
 511              	.L12:
 268:../CX3RDKOV5640.c **** }
 512              		.loc 1 268 0
 513 0170 0300A0E1 		mov	r0, r3
 514 0174 04D04BE2 		sub	sp, fp, #4
 515              		@ sp needed
 516 0178 0088BDE8 		ldmfd	sp!, {fp, pc}
 517              	.L16:
 518              		.align	2
 519              	.L15:
 520 017c 00000000 		.word	glIsApplnActive
 521 0180 00000000 		.word	glDmaDone
 522 0184 00000000 		.word	glDMATxCount
 523 0188 00000000 		.word	glHitFV
 524 018c 00000000 		.word	doLpmDisable
 525 0190 00000000 		.word	UvcTimer
 526 0194 00000000 		.word	glChHandleUVCStream
 527 0198 00000000 		.word	.LC0
 528 019c 24000000 		.word	.LC1
 529 01a0 00000000 		.word	glActiveSocket
 530 01a4 01010000 		.word	257
 531 01a8 00000000 		.word	glMipiActive
 532 01ac 00000000 		.word	glStillCaptureStart
 533 01b0 00000000 		.word	g_IsAutoFocus
 534              		.cfi_endproc
 535              	.LFE3:
 537              		.section	.rodata
 538 0042 0000     		.align	2
 539              	.LC2:
 540 0044 0A0D4170 		.ascii	"\012\015AplnStop:ChannelReset Err = 0x%x\000"
 540      6C6E5374 
 540      6F703A43 
 540      68616E6E 
 540      656C5265 
 541              		.section	.text.esUVCUvcApplnStop,"ax",%progbits
 542              		.align	2
 543              		.global	esUVCUvcApplnStop
 545              	esUVCUvcApplnStop:
 546              	.LFB4:
 269:../CX3RDKOV5640.c **** 
 270:../CX3RDKOV5640.c **** /* This function stops the video streaming. It is called from the USB event
 271:../CX3RDKOV5640.c ****  * handler, when there is a reset / disconnect or SET_INTERFACE for alternate
 272:../CX3RDKOV5640.c ****  * interface 0 in case of ischronous implementation or when a Clear Feature (Halt)
 273:../CX3RDKOV5640.c ****  * request is received (in case of bulk only implementation).
 274:../CX3RDKOV5640.c ****  */
 275:../CX3RDKOV5640.c ****     void
 276:../CX3RDKOV5640.c **** esUVCUvcApplnStop(void)
 277:../CX3RDKOV5640.c **** {
 547              		.loc 1 277 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 00482DE9 		stmfd	sp!, {fp, lr}
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 11, -8
 555              		.cfi_offset 14, -4
 556 0004 04B08DE2 		add	fp, sp, #4
 557              	.LCFI9:
 558              		.cfi_def_cfa 11, 4
 559 0008 08D04DE2 		sub	sp, sp, #8
 278:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 560              		.loc 1 278 0
 561 000c 0030A0E3 		mov	r3, #0
 562 0010 08300BE5 		str	r3, [fp, #-8]
 279:../CX3RDKOV5640.c **** 
 280:../CX3RDKOV5640.c ****     /* Update the flag so that the application thread is notified of this. */
 281:../CX3RDKOV5640.c ****     glIsApplnActive = CyFalse;
 563              		.loc 1 281 0
 564 0014 DC309FE5 		ldr	r3, .L20
 565 0018 0020A0E3 		mov	r2, #0
 566 001c 002083E5 		str	r2, [r3]
 282:../CX3RDKOV5640.c **** 
 283:../CX3RDKOV5640.c ****     /* Stop the image sensor and CX3 mipi interface */
 284:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSleep();
 567              		.loc 1 284 0
 568 0020 FEFFFFEB 		bl	CyU3PMipicsiSleep
 569 0024 08000BE5 		str	r0, [fp, #-8]
 285:../CX3RDKOV5640.c **** 
 286:../CX3RDKOV5640.c ****     //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
 287:../CX3RDKOV5640.c ****     esCamera_Power_Down();
 570              		.loc 1 287 0
 571 0028 FEFFFFEB 		bl	esCamera_Power_Down
 288:../CX3RDKOV5640.c **** 
 289:../CX3RDKOV5640.c ****     glMipiActive = CyFalse;
 572              		.loc 1 289 0
 573 002c C8309FE5 		ldr	r3, .L20+4
 574 0030 0020A0E3 		mov	r2, #0
 575 0034 002083E5 		str	r2, [r3]
 290:../CX3RDKOV5640.c **** 
 291:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 292:../CX3RDKOV5640.c ****     CyU3PTimerStop (&UvcTimer);
 576              		.loc 1 292 0
 577 0038 C0009FE5 		ldr	r0, .L20+8
 578 003c FEFFFFEB 		bl	_txe_timer_deactivate
 293:../CX3RDKOV5640.c **** #endif
 294:../CX3RDKOV5640.c **** 
 295:../CX3RDKOV5640.c ****     /* Pause the GPIF interface*/
 296:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 579              		.loc 1 296 0
 580 0040 0100A0E3 		mov	r0, #1
 581 0044 FEFFFFEB 		bl	CyU3PGpifSMControl
 297:../CX3RDKOV5640.c **** 
 298:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyTrue);
 582              		.loc 1 298 0
 583 0048 8300A0E3 		mov	r0, #131
 584 004c 0110A0E3 		mov	r1, #1
 585 0050 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 299:../CX3RDKOV5640.c ****     CyU3PBusyWait (100);
 586              		.loc 1 299 0
 587 0054 6400A0E3 		mov	r0, #100
 588 0058 FEFFFFEB 		bl	CyFx3BusyWait
 300:../CX3RDKOV5640.c **** 
 301:../CX3RDKOV5640.c ****     /* Abort and destroy the video streaming channel */
 302:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set DSCR_SIZE field i
 303:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);
 589              		.loc 1 303 0
 590 005c A0009FE5 		ldr	r0, .L20+12
 591 0060 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 592 0064 08000BE5 		str	r0, [fp, #-8]
 304:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 593              		.loc 1 304 0
 594 0068 08301BE5 		ldr	r3, [fp, #-8]
 595 006c 000053E3 		cmp	r3, #0
 596 0070 0300000A 		beq	.L18
 305:../CX3RDKOV5640.c ****     {
 306:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAplnStop:ChannelReset Err = 0x%x",status);
 597              		.loc 1 306 0
 598 0074 0400A0E3 		mov	r0, #4
 599 0078 88109FE5 		ldr	r1, .L20+16
 600 007c 08201BE5 		ldr	r2, [fp, #-8]
 601 0080 FEFFFFEB 		bl	CyU3PDebugPrint
 602              	.L18:
 307:../CX3RDKOV5640.c ****     }
 308:../CX3RDKOV5640.c ****     CyU3PThreadSleep(25);
 603              		.loc 1 308 0
 604 0084 1900A0E3 		mov	r0, #25
 605 0088 FEFFFFEB 		bl	_tx_thread_sleep
 309:../CX3RDKOV5640.c **** 
 310:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
 311:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 606              		.loc 1 311 0
 607 008c 8300A0E3 		mov	r0, #131
 608 0090 FEFFFFEB 		bl	CyU3PUsbFlushEp
 312:../CX3RDKOV5640.c ****     /* Clear the stall condition and sequence numbers if ClearFeature. */
 313:../CX3RDKOV5640.c ****     if (glIsClearFeature)
 609              		.loc 1 313 0
 610 0094 70309FE5 		ldr	r3, .L20+20
 611 0098 003093E5 		ldr	r3, [r3]
 612 009c 000053E3 		cmp	r3, #0
 613 00a0 0600000A 		beq	.L19
 314:../CX3RDKOV5640.c ****     {
 315:../CX3RDKOV5640.c ****         CyU3PUsbStall (ES_UVC_EP_BULK_VIDEO, CyFalse, CyTrue);
 614              		.loc 1 315 0
 615 00a4 8300A0E3 		mov	r0, #131
 616 00a8 0010A0E3 		mov	r1, #0
 617 00ac 0120A0E3 		mov	r2, #1
 618 00b0 FEFFFFEB 		bl	CyU3PUsbStall
 316:../CX3RDKOV5640.c ****         glIsClearFeature = CyFalse;
 619              		.loc 1 316 0
 620 00b4 50309FE5 		ldr	r3, .L20+20
 621 00b8 0020A0E3 		mov	r2, #0
 622 00bc 002083E5 		str	r2, [r3]
 623              	.L19:
 317:../CX3RDKOV5640.c ****     }
 318:../CX3RDKOV5640.c ****     CyU3PUsbSetEpNak (ES_UVC_EP_BULK_VIDEO, CyFalse);
 624              		.loc 1 318 0
 625 00c0 8300A0E3 		mov	r0, #131
 626 00c4 0010A0E3 		mov	r1, #0
 627 00c8 FEFFFFEB 		bl	CyU3PUsbSetEpNak
 319:../CX3RDKOV5640.c **** 	CyU3PBusyWait (200);
 628              		.loc 1 319 0
 629 00cc C800A0E3 		mov	r0, #200
 630 00d0 FEFFFFEB 		bl	CyFx3BusyWait
 320:../CX3RDKOV5640.c **** 
 321:../CX3RDKOV5640.c ****     glDMATxCount = 0;
 631              		.loc 1 321 0
 632 00d4 34309FE5 		ldr	r3, .L20+24
 633 00d8 0020A0E3 		mov	r2, #0
 634 00dc 002083E5 		str	r2, [r3]
 322:../CX3RDKOV5640.c ****     glDmaDone = 0;
 635              		.loc 1 322 0
 636 00e0 2C309FE5 		ldr	r3, .L20+28
 637 00e4 0020A0E3 		mov	r2, #0
 638 00e8 002083E5 		str	r2, [r3]
 323:../CX3RDKOV5640.c **** 
 324:../CX3RDKOV5640.c ****     /* Enable USB 3.0 LPM */
 325:../CX3RDKOV5640.c ****     CyU3PUsbLPMEnable ();
 639              		.loc 1 325 0
 640 00ec FEFFFFEB 		bl	CyU3PUsbLPMEnable
 326:../CX3RDKOV5640.c **** }
 641              		.loc 1 326 0
 642 00f0 04D04BE2 		sub	sp, fp, #4
 643              		@ sp needed
 644 00f4 0088BDE8 		ldmfd	sp!, {fp, pc}
 645              	.L21:
 646              		.align	2
 647              	.L20:
 648 00f8 00000000 		.word	glIsApplnActive
 649 00fc 00000000 		.word	glMipiActive
 650 0100 00000000 		.word	UvcTimer
 651 0104 00000000 		.word	glChHandleUVCStream
 652 0108 44000000 		.word	.LC2
 653 010c 00000000 		.word	glIsClearFeature
 654 0110 00000000 		.word	glDMATxCount
 655 0114 00000000 		.word	glDmaDone
 656              		.cfi_endproc
 657              	.LFE4:
 659              		.section	.rodata
 660 0067 00       		.align	2
 661              	.LC3:
 662 0068 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK0 Err = 0x%x\000"
 662      69664342 
 662      3A577261 
 662      70557020 
 662      53434B30 
 663              		.align	2
 664              	.LC4:
 665 0088 0A0D4770 		.ascii	"\012\015GpifCB:WrapUp SCK1 Err = 0x%x\000"
 665      69664342 
 665      3A577261 
 665      70557020 
 665      53434B31 
 666              		.align	2
 667              	.LC5:
 668 00a8 0A0D4A75 		.ascii	"\012\015Jump into GPIFCB: event %d currentState %d\000"
 668      6D702069 
 668      6E746F20 
 668      47504946 
 668      43423A20 
 669              		.section	.text.esUVCGpifCB,"ax",%progbits
 670              		.align	2
 671              		.global	esUVCGpifCB
 673              	esUVCGpifCB:
 674              	.LFB5:
 327:../CX3RDKOV5640.c **** 
 328:../CX3RDKOV5640.c **** /* GpifCB callback function is invoked when FV triggers GPIF interrupt */
 329:../CX3RDKOV5640.c ****     void
 330:../CX3RDKOV5640.c **** esUVCGpifCB (
 331:../CX3RDKOV5640.c ****         CyU3PGpifEventType event,
 332:../CX3RDKOV5640.c ****         uint8_t currentState
 333:../CX3RDKOV5640.c ****         )
 334:../CX3RDKOV5640.c **** {
 675              		.loc 1 334 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 16
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679 0000 00482DE9 		stmfd	sp!, {fp, lr}
 680              	.LCFI10:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 11, -8
 683              		.cfi_offset 14, -4
 684 0004 04B08DE2 		add	fp, sp, #4
 685              	.LCFI11:
 686              		.cfi_def_cfa 11, 4
 687 0008 10D04DE2 		sub	sp, sp, #16
 688 000c 0020A0E1 		mov	r2, r0
 689 0010 0130A0E1 		mov	r3, r1
 690 0014 0D204BE5 		strb	r2, [fp, #-13]
 691 0018 0E304BE5 		strb	r3, [fp, #-14]
 335:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 692              		.loc 1 335 0
 693 001c 0030A0E3 		mov	r3, #0
 694 0020 08300BE5 		str	r3, [fp, #-8]
 336:../CX3RDKOV5640.c ****     /* Handle interrupt from the State Machine */
 337:../CX3RDKOV5640.c ****     if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
 695              		.loc 1 337 0
 696 0024 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 697 0028 010053E3 		cmp	r3, #1
 698 002c 1C00001A 		bne	.L23
 338:../CX3RDKOV5640.c ****     {
 339:../CX3RDKOV5640.c ****         /* Wrapup Socket 0*/
 340:../CX3RDKOV5640.c ****         if(currentState == CX3_PARTIAL_BUFFER_IN_SCK0)
 699              		.loc 1 340 0
 700 0030 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 701 0034 090053E3 		cmp	r3, #9
 702 0038 0B00001A 		bne	.L24
 341:../CX3RDKOV5640.c ****         {
 342:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,0);
 703              		.loc 1 342 0
 704 003c 7C009FE5 		ldr	r0, .L26
 705 0040 0010A0E3 		mov	r1, #0
 706 0044 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 707 0048 08000BE5 		str	r0, [fp, #-8]
 343:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 708              		.loc 1 343 0
 709 004c 08301BE5 		ldr	r3, [fp, #-8]
 710 0050 000053E3 		cmp	r3, #0
 711 0054 1200000A 		beq	.L23
 344:../CX3RDKOV5640.c ****             {
 345:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK0 Err = 0x%x",status);
 712              		.loc 1 345 0
 713 0058 0400A0E3 		mov	r0, #4
 714 005c 60109FE5 		ldr	r1, .L26+4
 715 0060 08201BE5 		ldr	r2, [fp, #-8]
 716 0064 FEFFFFEB 		bl	CyU3PDebugPrint
 717 0068 0D0000EA 		b	.L23
 718              	.L24:
 346:../CX3RDKOV5640.c ****             }
 347:../CX3RDKOV5640.c ****         }
 348:../CX3RDKOV5640.c ****         /* Wrapup Socket 1 */
 349:../CX3RDKOV5640.c ****         else if(currentState == CX3_PARTIAL_BUFFER_IN_SCK1)
 719              		.loc 1 349 0
 720 006c 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 721 0070 0A0053E3 		cmp	r3, #10
 722 0074 0A00001A 		bne	.L23
 350:../CX3RDKOV5640.c ****         {
 351:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelSetWrapUp(&glChHandleUVCStream,1);
 723              		.loc 1 351 0
 724 0078 40009FE5 		ldr	r0, .L26
 725 007c 0110A0E3 		mov	r1, #1
 726 0080 FEFFFFEB 		bl	CyU3PDmaMultiChannelSetWrapUp
 727 0084 08000BE5 		str	r0, [fp, #-8]
 352:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 728              		.loc 1 352 0
 729 0088 08301BE5 		ldr	r3, [fp, #-8]
 730 008c 000053E3 		cmp	r3, #0
 731 0090 0300000A 		beq	.L23
 353:../CX3RDKOV5640.c ****             {
 354:../CX3RDKOV5640.c ****                 CyU3PDebugPrint (4, "\n\rGpifCB:WrapUp SCK1 Err = 0x%x",status);
 732              		.loc 1 354 0
 733 0094 0400A0E3 		mov	r0, #4
 734 0098 28109FE5 		ldr	r1, .L26+8
 735 009c 08201BE5 		ldr	r2, [fp, #-8]
 736 00a0 FEFFFFEB 		bl	CyU3PDebugPrint
 737              	.L23:
 355:../CX3RDKOV5640.c ****             }
 356:../CX3RDKOV5640.c ****         }
 357:../CX3RDKOV5640.c ****     }
 358:../CX3RDKOV5640.c **** #ifdef VISDebug
 359:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rJump into GPIFCB: event %d currentState %d", event, currentState);
 738              		.loc 1 359 0
 739 00a4 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 740 00a8 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 741 00ac 0400A0E3 		mov	r0, #4
 742 00b0 14109FE5 		ldr	r1, .L26+12
 743 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 360:../CX3RDKOV5640.c **** #endif
 361:../CX3RDKOV5640.c **** }
 744              		.loc 1 361 0
 745 00b8 04D04BE2 		sub	sp, fp, #4
 746              		@ sp needed
 747 00bc 0088BDE8 		ldmfd	sp!, {fp, pc}
 748              	.L27:
 749              		.align	2
 750              	.L26:
 751 00c0 00000000 		.word	glChHandleUVCStream
 752 00c4 68000000 		.word	.LC3
 753 00c8 88000000 		.word	.LC4
 754 00cc A8000000 		.word	.LC5
 755              		.cfi_endproc
 756              	.LFE5:
 758              		.section	.rodata
 759 00d5 000000   		.align	2
 760              	.LC6:
 761 00d8 0A0D4170 		.ascii	"\012\015AppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT cou"
 761      70446D61 
 761      43616C6C 
 761      6261636B 
 761      3A43595F 
 762 0105 6E742025 		.ascii	"nt %x glDMATxCount++ %x\000"
 762      7820676C 
 762      444D4154 
 762      78436F75 
 762      6E742B2B 
 763 011d 000000   		.align	2
 764              	.LC7:
 765 0120 0A0D4170 		.ascii	"\012\015AppDmaCallback:CY_U3P_DMA_CB_CONS_EVENT glA"
 765      70446D61 
 765      43616C6C 
 765      6261636B 
 765      3A43595F 
 766 014d 63746976 		.ascii	"ctiveSocket  %x\000"
 766      65536F63 
 766      6B657420 
 766      20257800 
 767              		.section	.text.esUVCUvcAppDmaCallback,"ax",%progbits
 768              		.align	2
 769              		.global	esUVCUvcAppDmaCallback
 771              	esUVCUvcAppDmaCallback:
 772              	.LFB6:
 362:../CX3RDKOV5640.c **** 
 363:../CX3RDKOV5640.c **** 
 364:../CX3RDKOV5640.c **** /* DMA callback function to handle the produce and consume events. */
 365:../CX3RDKOV5640.c ****     void
 366:../CX3RDKOV5640.c **** esUVCUvcAppDmaCallback (
 367:../CX3RDKOV5640.c ****         CyU3PDmaMultiChannel   *chHandle,
 368:../CX3RDKOV5640.c ****         CyU3PDmaCbType_t  type,
 369:../CX3RDKOV5640.c ****         CyU3PDmaCBInput_t *input
 370:../CX3RDKOV5640.c ****         )
 371:../CX3RDKOV5640.c **** {
 773              		.loc 1 371 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 32
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 00482DE9 		stmfd	sp!, {fp, lr}
 778              	.LCFI12:
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 11, -8
 781              		.cfi_offset 14, -4
 782 0004 04B08DE2 		add	fp, sp, #4
 783              	.LCFI13:
 784              		.cfi_def_cfa 11, 4
 785 0008 28D04DE2 		sub	sp, sp, #40
 786 000c 18000BE5 		str	r0, [fp, #-24]
 787 0010 0130A0E1 		mov	r3, r1
 788 0014 20200BE5 		str	r2, [fp, #-32]
 789 0018 BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 372:../CX3RDKOV5640.c ****     CyU3PDmaBuffer_t DmaBuffer;
 373:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 790              		.loc 1 373 0
 791 001c 0030A0E3 		mov	r3, #0
 792 0020 08300BE5 		str	r3, [fp, #-8]
 374:../CX3RDKOV5640.c **** 
 375:../CX3RDKOV5640.c ****     if (type == CY_U3P_DMA_CB_PROD_EVENT)
 793              		.loc 1 375 0
 794 0024 BA315BE1 		ldrh	r3, [fp, #-26]
 795 0028 080053E3 		cmp	r3, #8
 796 002c 6200001A 		bne	.L29
 376:../CX3RDKOV5640.c ****     {
 377:../CX3RDKOV5640.c ****         /* This is a produce event notification to the CPU. This notification is
 378:../CX3RDKOV5640.c ****          * received upon reception of every buffer. The buffer will not be sent
 379:../CX3RDKOV5640.c ****          * out unless it is explicitly committed. The call shall fail if there
 380:../CX3RDKOV5640.c ****          * is a bus reset / usb disconnect or if there is any application error. */
 381:../CX3RDKOV5640.c **** 
 382:../CX3RDKOV5640.c ****         /* Disable USB 3.0 LPM while Buffer is being transmitted out*/
 383:../CX3RDKOV5640.c ****         if ((CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED) && (doLpmDisable))
 797              		.loc 1 383 0
 798 0030 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 799 0034 0030A0E1 		mov	r3, r0
 800 0038 030053E3 		cmp	r3, #3
 801 003c 0B00001A 		bne	.L30
 802              		.loc 1 383 0 is_stmt 0 discriminator 1
 803 0040 7C339FE5 		ldr	r3, .L43
 804 0044 003093E5 		ldr	r3, [r3]
 805 0048 000053E3 		cmp	r3, #0
 806 004c 0700000A 		beq	.L30
 384:../CX3RDKOV5640.c ****         {
 385:../CX3RDKOV5640.c ****             CyU3PUsbLPMDisable ();
 807              		.loc 1 385 0 is_stmt 1
 808 0050 FEFFFFEB 		bl	CyU3PUsbLPMDisable
 386:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 809              		.loc 1 386 0
 810 0054 0000A0E3 		mov	r0, #0
 811 0058 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 387:../CX3RDKOV5640.c ****             CyU3PBusyWait (200);
 812              		.loc 1 387 0
 813 005c C800A0E3 		mov	r0, #200
 814 0060 FEFFFFEB 		bl	CyFx3BusyWait
 388:../CX3RDKOV5640.c **** 
 389:../CX3RDKOV5640.c ****             doLpmDisable = CyFalse;
 815              		.loc 1 389 0
 816 0064 58339FE5 		ldr	r3, .L43
 817 0068 0020A0E3 		mov	r2, #0
 818 006c 002083E5 		str	r2, [r3]
 819              	.L30:
 390:../CX3RDKOV5640.c ****         }
 391:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 392:../CX3RDKOV5640.c ****             CyU3PTimerStart (&UvcTimer);
 820              		.loc 1 392 0
 821 0070 50039FE5 		ldr	r0, .L43+4
 822 0074 FEFFFFEB 		bl	_txe_timer_activate
 393:../CX3RDKOV5640.c **** #endif
 394:../CX3RDKOV5640.c **** 
 395:../CX3RDKOV5640.c ****         status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 823              		.loc 1 395 0
 824 0078 14304BE2 		sub	r3, fp, #20
 825 007c 18001BE5 		ldr	r0, [fp, #-24]
 826 0080 0310A0E1 		mov	r1, r3
 827 0084 0020A0E3 		mov	r2, #0
 828 0088 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 829 008c 08000BE5 		str	r0, [fp, #-8]
 396:../CX3RDKOV5640.c **** #ifdef VISDebug
 397:../CX3RDKOV5640.c **** //    CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT CyU3PDmaMultiChannelGetBuffe
 398:../CX3RDKOV5640.c **** #endif
 399:../CX3RDKOV5640.c ****         while (status == CY_U3P_SUCCESS)
 830              		.loc 1 399 0
 831 0090 450000EA 		b	.L31
 832              	.L36:
 400:../CX3RDKOV5640.c ****         {
 401:../CX3RDKOV5640.c ****             /* Add Headers*/
 402:../CX3RDKOV5640.c ****             if(DmaBuffer.count < ES_UVC_DATA_BUF_SIZE)
 833              		.loc 1 402 0
 834 0094 B0215BE1 		ldrh	r2, [fp, #-16]
 835 0098 2C339FE5 		ldr	r3, .L43+8
 836 009c B030D3E1 		ldrh	r3, [r3]
 837 00a0 030052E1 		cmp	r2, r3
 838 00a4 1200002A 		bcs	.L32
 403:../CX3RDKOV5640.c ****             {
 404:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_EOF);
 839              		.loc 1 404 0
 840 00a8 14301BE5 		ldr	r3, [fp, #-20]
 841 00ac 0C3043E2 		sub	r3, r3, #12
 842 00b0 0300A0E1 		mov	r0, r3
 843 00b4 0210A0E3 		mov	r1, #2
 844 00b8 FEFFFFEB 		bl	esUVCUvcAddHeader
 405:../CX3RDKOV5640.c ****                 glHitFV = CyTrue;
 845              		.loc 1 405 0
 846 00bc 0C339FE5 		ldr	r3, .L43+12
 847 00c0 0120A0E3 		mov	r2, #1
 848 00c4 002083E5 		str	r2, [r3]
 406:../CX3RDKOV5640.c **** #ifdef VISDebug
 407:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_PROD_EVENT count %x glDMATxCount++ %x", D
 849              		.loc 1 407 0
 850 00c8 B0315BE1 		ldrh	r3, [fp, #-16]
 851 00cc 0320A0E1 		mov	r2, r3
 852 00d0 FC329FE5 		ldr	r3, .L43+16
 853 00d4 003093E5 		ldr	r3, [r3]
 854 00d8 010083E2 		add	r0, r3, #1
 855 00dc F0129FE5 		ldr	r1, .L43+16
 856 00e0 000081E5 		str	r0, [r1]
 857 00e4 0400A0E3 		mov	r0, #4
 858 00e8 E8129FE5 		ldr	r1, .L43+20
 859 00ec FEFFFFEB 		bl	CyU3PDebugPrint
 860 00f0 040000EA 		b	.L33
 861              	.L32:
 408:../CX3RDKOV5640.c **** #endif
 409:../CX3RDKOV5640.c **** 
 410:../CX3RDKOV5640.c ****             }
 411:../CX3RDKOV5640.c ****             else
 412:../CX3RDKOV5640.c ****             {
 413:../CX3RDKOV5640.c ****                 esUVCUvcAddHeader ((DmaBuffer.buffer - ES_UVC_PROD_HEADER), ES_UVC_HEADER_FRAME);
 862              		.loc 1 413 0
 863 00f4 14301BE5 		ldr	r3, [fp, #-20]
 864 00f8 0C3043E2 		sub	r3, r3, #12
 865 00fc 0300A0E1 		mov	r0, r3
 866 0100 0010A0E3 		mov	r1, #0
 867 0104 FEFFFFEB 		bl	esUVCUvcAddHeader
 868              	.L33:
 414:../CX3RDKOV5640.c ****             }
 415:../CX3RDKOV5640.c **** 
 416:../CX3RDKOV5640.c ****             /* Commit Buffer to USB*/
 417:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelCommitBuffer (chHandle, (DmaBuffer.count + 12), 0);
 869              		.loc 1 417 0
 870 0108 B0315BE1 		ldrh	r3, [fp, #-16]
 871 010c 0C3083E2 		add	r3, r3, #12
 872 0110 0338A0E1 		mov	r3, r3, asl #16
 873 0114 2338A0E1 		mov	r3, r3, lsr #16
 874 0118 18001BE5 		ldr	r0, [fp, #-24]
 875 011c 0310A0E1 		mov	r1, r3
 876 0120 0020A0E3 		mov	r2, #0
 877 0124 FEFFFFEB 		bl	CyU3PDmaMultiChannelCommitBuffer
 878 0128 08000BE5 		str	r0, [fp, #-8]
 418:../CX3RDKOV5640.c ****             if (status != CY_U3P_SUCCESS)
 879              		.loc 1 418 0
 880 012c 08301BE5 		ldr	r3, [fp, #-8]
 881 0130 000053E3 		cmp	r3, #0
 882 0134 0500000A 		beq	.L34
 419:../CX3RDKOV5640.c ****             {
 420:../CX3RDKOV5640.c ****                    CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 883              		.loc 1 420 0
 884 0138 9C029FE5 		ldr	r0, .L43+24
 885 013c 1010A0E3 		mov	r1, #16
 886 0140 0020A0E3 		mov	r2, #0
 887 0144 FEFFFFEB 		bl	_txe_event_flags_set
 421:../CX3RDKOV5640.c ****                    break;
 888              		.loc 1 421 0
 889 0148 0000A0E1 		mov	r0, r0	@ nop
 890 014c 9A0000EA 		b	.L28
 891              	.L34:
 422:../CX3RDKOV5640.c ****             }
 423:../CX3RDKOV5640.c ****             else
 424:../CX3RDKOV5640.c ****             {
 425:../CX3RDKOV5640.c ****                 glDMATxCount++;
 892              		.loc 1 425 0
 893 0150 7C329FE5 		ldr	r3, .L43+16
 894 0154 003093E5 		ldr	r3, [r3]
 895 0158 012083E2 		add	r2, r3, #1
 896 015c 70329FE5 		ldr	r3, .L43+16
 897 0160 002083E5 		str	r2, [r3]
 426:../CX3RDKOV5640.c ****                 glDmaDone++;
 898              		.loc 1 426 0
 899 0164 74329FE5 		ldr	r3, .L43+28
 900 0168 003093E5 		ldr	r3, [r3]
 901 016c 012083E2 		add	r2, r3, #1
 902 0170 68329FE5 		ldr	r3, .L43+28
 903 0174 002083E5 		str	r2, [r3]
 427:../CX3RDKOV5640.c ****             }
 428:../CX3RDKOV5640.c **** 
 429:../CX3RDKOV5640.c ****             glActiveSocket ^= 1; /* Toggle the Active Socket */
 904              		.loc 1 429 0
 905 0178 64329FE5 		ldr	r3, .L43+32
 906 017c 0030D3E5 		ldrb	r3, [r3]
 907 0180 FF3003E2 		and	r3, r3, #255
 908 0184 013023E2 		eor	r3, r3, #1
 909 0188 FF2003E2 		and	r2, r3, #255
 910 018c 50329FE5 		ldr	r3, .L43+32
 911 0190 0020C3E5 		strb	r2, [r3]
 430:../CX3RDKOV5640.c ****             status = CyU3PDmaMultiChannelGetBuffer(chHandle, &DmaBuffer, CYU3P_NO_WAIT);
 912              		.loc 1 430 0
 913 0194 14304BE2 		sub	r3, fp, #20
 914 0198 18001BE5 		ldr	r0, [fp, #-24]
 915 019c 0310A0E1 		mov	r1, r3
 916 01a0 0020A0E3 		mov	r2, #0
 917 01a4 FEFFFFEB 		bl	CyU3PDmaMultiChannelGetBuffer
 918 01a8 08000BE5 		str	r0, [fp, #-8]
 919              	.L31:
 399:../CX3RDKOV5640.c ****         {
 920              		.loc 1 399 0 discriminator 1
 921 01ac 08301BE5 		ldr	r3, [fp, #-8]
 922 01b0 000053E3 		cmp	r3, #0
 923 01b4 B6FFFF0A 		beq	.L36
 924 01b8 7F0000EA 		b	.L28
 925              	.L29:
 431:../CX3RDKOV5640.c ****         }
 432:../CX3RDKOV5640.c ****     }
 433:../CX3RDKOV5640.c ****     else if(type == CY_U3P_DMA_CB_CONS_EVENT)
 926              		.loc 1 433 0
 927 01bc BA315BE1 		ldrh	r3, [fp, #-26]
 928 01c0 100053E3 		cmp	r3, #16
 929 01c4 7C00001A 		bne	.L28
 434:../CX3RDKOV5640.c ****     {
 435:../CX3RDKOV5640.c ****         glDmaDone--;
 930              		.loc 1 435 0
 931 01c8 10329FE5 		ldr	r3, .L43+28
 932 01cc 003093E5 		ldr	r3, [r3]
 933 01d0 012043E2 		sub	r2, r3, #1
 934 01d4 04329FE5 		ldr	r3, .L43+28
 935 01d8 002083E5 		str	r2, [r3]
 436:../CX3RDKOV5640.c **** 
 437:../CX3RDKOV5640.c ****         /* Check if Frame is completely transferred */
 438:../CX3RDKOV5640.c ****         glIsStreamingStarted = CyTrue;
 936              		.loc 1 438 0
 937 01dc 04329FE5 		ldr	r3, .L43+36
 938 01e0 0120A0E3 		mov	r2, #1
 939 01e4 002083E5 		str	r2, [r3]
 439:../CX3RDKOV5640.c **** 
 440:../CX3RDKOV5640.c ****         if((glHitFV == CyTrue) && (glDmaDone == 0))
 940              		.loc 1 440 0
 941 01e8 E0319FE5 		ldr	r3, .L43+12
 942 01ec 003093E5 		ldr	r3, [r3]
 943 01f0 010053E3 		cmp	r3, #1
 944 01f4 7000001A 		bne	.L28
 945              		.loc 1 440 0 is_stmt 0 discriminator 1
 946 01f8 E0319FE5 		ldr	r3, .L43+28
 947 01fc 003093E5 		ldr	r3, [r3]
 948 0200 000053E3 		cmp	r3, #0
 949 0204 6C00001A 		bne	.L28
 441:../CX3RDKOV5640.c ****         {
 442:../CX3RDKOV5640.c ****             glHitFV = CyFalse;
 950              		.loc 1 442 0 is_stmt 1
 951 0208 C0319FE5 		ldr	r3, .L43+12
 952 020c 0020A0E3 		mov	r2, #0
 953 0210 002083E5 		str	r2, [r3]
 443:../CX3RDKOV5640.c ****             glDMATxCount=0;
 954              		.loc 1 443 0
 955 0214 B8319FE5 		ldr	r3, .L43+16
 956 0218 0020A0E3 		mov	r2, #0
 957 021c 002083E5 		str	r2, [r3]
 444:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 445:../CX3RDKOV5640.c ****             CyU3PTimerStop (&UvcTimer);
 958              		.loc 1 445 0
 959 0220 A0019FE5 		ldr	r0, .L43+4
 960 0224 FEFFFFEB 		bl	_txe_timer_deactivate
 446:../CX3RDKOV5640.c **** #endif
 447:../CX3RDKOV5640.c **** 
 448:../CX3RDKOV5640.c ****             if (glActiveSocket)
 961              		.loc 1 448 0
 962 0228 B4319FE5 		ldr	r3, .L43+32
 963 022c 0030D3E5 		ldrb	r3, [r3]
 964 0230 FF3003E2 		and	r3, r3, #255
 965 0234 000053E3 		cmp	r3, #0
 966 0238 0700000A 		beq	.L38
 449:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK1,
 967              		.loc 1 449 0
 968 023c 0230A0E3 		mov	r3, #2
 969 0240 00308DE5 		str	r3, [sp]
 970 0244 A0019FE5 		ldr	r0, .L43+40
 971 0248 0D10A0E3 		mov	r1, #13
 972 024c 98219FE5 		ldr	r2, .L43+40
 973 0250 0030A0E3 		mov	r3, #0
 974 0254 FEFFFFEB 		bl	CyU3PGpifSMSwitch
 975 0258 060000EA 		b	.L39
 976              	.L38:
 450:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK1, ES_UVC_GPIF_SWITCH_TIMEOUT);
 451:../CX3RDKOV5640.c ****             else
 452:../CX3RDKOV5640.c ****                 CyU3PGpifSMSwitch(ES_UVC_INVALID_GPIF_STATE, CX3_START_SCK0,
 977              		.loc 1 452 0
 978 025c 0230A0E3 		mov	r3, #2
 979 0260 00308DE5 		str	r3, [sp]
 980 0264 80019FE5 		ldr	r0, .L43+40
 981 0268 0010A0E3 		mov	r1, #0
 982 026c 78219FE5 		ldr	r2, .L43+40
 983 0270 0030A0E3 		mov	r3, #0
 984 0274 FEFFFFEB 		bl	CyU3PGpifSMSwitch
 985              	.L39:
 453:../CX3RDKOV5640.c ****                 		ES_UVC_INVALID_GPIF_STATE, ALPHA_CX3_START_SCK0, ES_UVC_GPIF_SWITCH_TIMEOUT);
 454:../CX3RDKOV5640.c **** #ifdef VISDebug
 455:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppDmaCallback:CY_U3P_DMA_CB_CONS_EVENT glActiveSocket  %x", glActiveS
 986              		.loc 1 455 0
 987 0278 64319FE5 		ldr	r3, .L43+32
 988 027c 0030D3E5 		ldrb	r3, [r3]
 989 0280 FF3003E2 		and	r3, r3, #255
 990 0284 0400A0E3 		mov	r0, #4
 991 0288 60119FE5 		ldr	r1, .L43+44
 992 028c 0320A0E1 		mov	r2, r3
 993 0290 FEFFFFEB 		bl	CyU3PDebugPrint
 456:../CX3RDKOV5640.c **** #endif
 457:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 994              		.loc 1 457 0
 995 0294 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 458:../CX3RDKOV5640.c ****             doLpmDisable = CyTrue;
 996              		.loc 1 458 0
 997 0298 24319FE5 		ldr	r3, .L43
 998 029c 0120A0E3 		mov	r2, #1
 999 02a0 002083E5 		str	r2, [r3]
 459:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
 460:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 1000              		.loc 1 460 0
 1001 02a4 1C019FE5 		ldr	r0, .L43+4
 1002 02a8 7D1FA0E3 		mov	r1, #500
 1003 02ac 0020A0E3 		mov	r2, #0
 1004 02b0 FEFFFFEB 		bl	_txe_timer_change
 461:../CX3RDKOV5640.c **** #endif
 462:../CX3RDKOV5640.c **** 
 463:../CX3RDKOV5640.c ****             if(glStillCaptured == CyTrue)
 1005              		.loc 1 463 0
 1006 02b4 38319FE5 		ldr	r3, .L43+48
 1007 02b8 003093E5 		ldr	r3, [r3]
 1008 02bc 010053E3 		cmp	r3, #1
 1009 02c0 1000001A 		bne	.L40
 464:../CX3RDKOV5640.c ****             {
 465:../CX3RDKOV5640.c ****             	glStillCaptured = CyFalse;
 1010              		.loc 1 465 0
 1011 02c4 28319FE5 		ldr	r3, .L43+48
 1012 02c8 0020A0E3 		mov	r2, #0
 1013 02cc 002083E5 		str	r2, [r3]
 466:../CX3RDKOV5640.c ****             	glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1014              		.loc 1 466 0
 1015 02d0 20319FE5 		ldr	r3, .L43+52
 1016 02d4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1017 02d8 203023E2 		eor	r3, r3, #32
 1018 02dc FF2003E2 		and	r2, r3, #255
 1019 02e0 10319FE5 		ldr	r3, .L43+52
 1020 02e4 0120C3E5 		strb	r2, [r3, #1]
 467:../CX3RDKOV5640.c ****             	glFrameIndexToSet = glCurrentFrameIndex;
 1021              		.loc 1 467 0
 1022 02e8 0C319FE5 		ldr	r3, .L43+56
 1023 02ec 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 1024 02f0 08319FE5 		ldr	r3, .L43+60
 1025 02f4 0020C3E5 		strb	r2, [r3]
 468:../CX3RDKOV5640.c ****             	CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1026              		.loc 1 468 0
 1027 02f8 DC009FE5 		ldr	r0, .L43+24
 1028 02fc 1010A0E3 		mov	r1, #16
 1029 0300 0020A0E3 		mov	r2, #0
 1030 0304 FEFFFFEB 		bl	_txe_event_flags_set
 1031              	.L40:
 469:../CX3RDKOV5640.c ****             }
 470:../CX3RDKOV5640.c ****             if(glStillCaptureStart == CyTrue)
 1032              		.loc 1 470 0
 1033 0308 F4309FE5 		ldr	r3, .L43+64
 1034 030c 003093E5 		ldr	r3, [r3]
 1035 0310 010053E3 		cmp	r3, #1
 1036 0314 2800001A 		bne	.L28
 471:../CX3RDKOV5640.c ****             {
 472:../CX3RDKOV5640.c ****             	if(glStillSkip == 3)
 1037              		.loc 1 472 0
 1038 0318 E8309FE5 		ldr	r3, .L43+68
 1039 031c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 0320 030053E3 		cmp	r3, #3
 1041 0324 0D00001A 		bne	.L41
 473:../CX3RDKOV5640.c **** 				{
 474:../CX3RDKOV5640.c ****             		glStillSkip--;
 1042              		.loc 1 474 0
 1043 0328 D8309FE5 		ldr	r3, .L43+68
 1044 032c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1045 0330 013043E2 		sub	r3, r3, #1
 1046 0334 FF2003E2 		and	r2, r3, #255
 1047 0338 C8309FE5 		ldr	r3, .L43+68
 1048 033c 0020C3E5 		strb	r2, [r3]
 475:../CX3RDKOV5640.c ****             		glFrameIndexToSet = 4;
 1049              		.loc 1 475 0
 1050 0340 B8309FE5 		ldr	r3, .L43+60
 1051 0344 0420A0E3 		mov	r2, #4
 1052 0348 0020C3E5 		strb	r2, [r3]
 476:../CX3RDKOV5640.c **** 					CyU3PEventSet(&glTimerEvent, ES_TIMER_RESET_EVENT,CYU3P_EVENT_OR);
 1053              		.loc 1 476 0
 1054 034c 88009FE5 		ldr	r0, .L43+24
 1055 0350 1010A0E3 		mov	r1, #16
 1056 0354 0020A0E3 		mov	r2, #0
 1057 0358 FEFFFFEB 		bl	_txe_event_flags_set
 1058 035c 160000EA 		b	.L28
 1059              	.L41:
 477:../CX3RDKOV5640.c **** 				}
 478:../CX3RDKOV5640.c ****             	else if(glStillSkip == 0)
 1060              		.loc 1 478 0
 1061 0360 A0309FE5 		ldr	r3, .L43+68
 1062 0364 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 0368 000053E3 		cmp	r3, #0
 1064 036c 0C00001A 		bne	.L42
 479:../CX3RDKOV5640.c ****             	{
 480:../CX3RDKOV5640.c ****             		glStillCaptureStart = CyFalse;
 1065              		.loc 1 480 0
 1066 0370 8C309FE5 		ldr	r3, .L43+64
 1067 0374 0020A0E3 		mov	r2, #0
 1068 0378 002083E5 		str	r2, [r3]
 481:../CX3RDKOV5640.c **** 					glStillCaptured = CyTrue;
 1069              		.loc 1 481 0
 1070 037c 70309FE5 		ldr	r3, .L43+48
 1071 0380 0120A0E3 		mov	r2, #1
 1072 0384 002083E5 		str	r2, [r3]
 482:../CX3RDKOV5640.c **** 					glUVCHeader[1]^=ES_UVC_HEADER_STILL_IMAGE;
 1073              		.loc 1 482 0
 1074 0388 68309FE5 		ldr	r3, .L43+52
 1075 038c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1076 0390 203023E2 		eor	r3, r3, #32
 1077 0394 FF2003E2 		and	r2, r3, #255
 1078 0398 58309FE5 		ldr	r3, .L43+52
 1079 039c 0120C3E5 		strb	r2, [r3, #1]
 1080 03a0 050000EA 		b	.L28
 1081              	.L42:
 483:../CX3RDKOV5640.c ****             	}
 484:../CX3RDKOV5640.c ****             	else
 485:../CX3RDKOV5640.c ****             		glStillSkip--;
 1082              		.loc 1 485 0
 1083 03a4 5C309FE5 		ldr	r3, .L43+68
 1084 03a8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1085 03ac 013043E2 		sub	r3, r3, #1
 1086 03b0 FF2003E2 		and	r2, r3, #255
 1087 03b4 4C309FE5 		ldr	r3, .L43+68
 1088 03b8 0020C3E5 		strb	r2, [r3]
 1089              	.L28:
 486:../CX3RDKOV5640.c ****             }
 487:../CX3RDKOV5640.c ****         }
 488:../CX3RDKOV5640.c ****     }
 489:../CX3RDKOV5640.c **** }
 1090              		.loc 1 489 0
 1091 03bc 04D04BE2 		sub	sp, fp, #4
 1092              		@ sp needed
 1093 03c0 0088BDE8 		ldmfd	sp!, {fp, pc}
 1094              	.L44:
 1095              		.align	2
 1096              	.L43:
 1097 03c4 00000000 		.word	doLpmDisable
 1098 03c8 00000000 		.word	UvcTimer
 1099 03cc 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 1100 03d0 00000000 		.word	glHitFV
 1101 03d4 00000000 		.word	glDMATxCount
 1102 03d8 D8000000 		.word	.LC6
 1103 03dc 00000000 		.word	glTimerEvent
 1104 03e0 00000000 		.word	glDmaDone
 1105 03e4 00000000 		.word	glActiveSocket
 1106 03e8 00000000 		.word	glIsStreamingStarted
 1107 03ec 01010000 		.word	257
 1108 03f0 20010000 		.word	.LC7
 1109 03f4 00000000 		.word	glStillCaptured
 1110 03f8 00000000 		.word	glUVCHeader
 1111 03fc 00000000 		.word	glCurrentFrameIndex
 1112 0400 00000000 		.word	glFrameIndexToSet
 1113 0404 00000000 		.word	glStillCaptureStart
 1114 0408 00000000 		.word	glStillSkip
 1115              		.cfi_endproc
 1116              	.LFE6:
 1118              		.section	.rodata
 1119 015d 000000   		.align	2
 1120              	.LC8:
 1121 0160 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTE"
 1121      5F553350 
 1121      5F555342 
 1121      5F455645 
 1121      4E545F53 
 1122 018d 52464143 		.ascii	"RFACE: esUVCUvcApplnStop\000"
 1122      453A2065 
 1122      73555643 
 1122      55766341 
 1122      70706C6E 
 1123 01a6 0000     		.align	2
 1124              	.LC9:
 1125 01a8 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTE"
 1125      5F553350 
 1125      5F555342 
 1125      5F455645 
 1125      4E545F53 
 1126 01d5 52464143 		.ascii	"RFACE: esUVCUvcApplnStart\000"
 1126      453A2065 
 1126      73555643 
 1126      55766341 
 1126      70706C6E 
 1127 01ef 00       		.align	2
 1128              	.LC10:
 1129 01f0 0A0D4359 		.ascii	"\012\015CY_U3P_USB_EVENT_SETINTF: esUVCUvcApplnStop"
 1129      5F553350 
 1129      5F555342 
 1129      5F455645 
 1129      4E545F53 
 1130 021d 00       		.ascii	"\000"
 1131 021e 0000     		.align	2
 1132              	.LC11:
 1133 0220 0A0D4576 		.ascii	"\012\015Event %x: esUVCUvcApplnStop\000"
 1133      656E7420 
 1133      25783A20 
 1133      65735556 
 1133      43557663 
 1134              		.section	.text.esUVCUvcApplnUSBEventCB,"ax",%progbits
 1135              		.align	2
 1137              	esUVCUvcApplnUSBEventCB:
 1138              	.LFB7:
 490:../CX3RDKOV5640.c **** 
 491:../CX3RDKOV5640.c **** /* This is the Callback function to handle the USB Events */
 492:../CX3RDKOV5640.c ****     static void
 493:../CX3RDKOV5640.c **** esUVCUvcApplnUSBEventCB (
 494:../CX3RDKOV5640.c ****         CyU3PUsbEventType_t evtype,     /* Event type */
 495:../CX3RDKOV5640.c ****         uint16_t            evdata      /* Event data */
 496:../CX3RDKOV5640.c ****         )
 497:../CX3RDKOV5640.c **** {
 1139              		.loc 1 497 0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 16
 1142              		@ frame_needed = 1, uses_anonymous_args = 0
 1143 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1144              	.LCFI14:
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 11, -8
 1147              		.cfi_offset 14, -4
 1148 0004 04B08DE2 		add	fp, sp, #4
 1149              	.LCFI15:
 1150              		.cfi_def_cfa 11, 4
 1151 0008 10D04DE2 		sub	sp, sp, #16
 1152 000c 0020A0E1 		mov	r2, r0
 1153 0010 0130A0E1 		mov	r3, r1
 1154 0014 0D204BE5 		strb	r2, [fp, #-13]
 1155 0018 B0314BE1 		strh	r3, [fp, #-16]	@ movhi
 498:../CX3RDKOV5640.c ****     uint8_t interface = 0, altSetting = 0;
 1156              		.loc 1 498 0
 1157 001c 0030A0E3 		mov	r3, #0
 1158 0020 05304BE5 		strb	r3, [fp, #-5]
 1159 0024 0030A0E3 		mov	r3, #0
 1160 0028 06304BE5 		strb	r3, [fp, #-6]
 499:../CX3RDKOV5640.c **** 
 500:../CX3RDKOV5640.c ****     switch (evtype)
 1161              		.loc 1 500 0
 1162 002c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1163 0030 070053E3 		cmp	r3, #7
 1164 0034 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1165 0038 610000EA 		b	.L58
 1166              	.L48:
 1167 003c 50010000 		.word	.L47
 1168 0040 50010000 		.word	.L47
 1169 0044 5C000000 		.word	.L49
 1170 0048 C4010000 		.word	.L58
 1171 004c 50010000 		.word	.L47
 1172 0050 50010000 		.word	.L47
 1173 0054 C4010000 		.word	.L58
 1174 0058 7C000000 		.word	.L50
 1175              	.L49:
 501:../CX3RDKOV5640.c ****     {
 502:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SUSPEND:
 503:../CX3RDKOV5640.c ****             /* Suspend the device with Wake On Bus Activity set */
 504:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1176              		.loc 1 504 0
 1177 005c 6C319FE5 		ldr	r3, .L59
 1178 0060 0020A0E3 		mov	r2, #0
 1179 0064 002083E5 		str	r2, [r3]
 505:../CX3RDKOV5640.c ****             CyU3PEventSet (&glTimerEvent, ES_USB_SUSP_EVENT_FLAG, CYU3P_EVENT_OR);
 1180              		.loc 1 505 0
 1181 0068 64019FE5 		ldr	r0, .L59+4
 1182 006c 2010A0E3 		mov	r1, #32
 1183 0070 0020A0E3 		mov	r2, #0
 1184 0074 FEFFFFEB 		bl	_txe_event_flags_set
 506:../CX3RDKOV5640.c ****             break;
 1185              		.loc 1 506 0
 1186 0078 520000EA 		b	.L45
 1187              	.L50:
 507:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETINTF:
 508:../CX3RDKOV5640.c ****             /* Start the video streamer application if the
 509:../CX3RDKOV5640.c ****              * interface requested was 1. If not, stop the
 510:../CX3RDKOV5640.c ****              * streamer. */
 511:../CX3RDKOV5640.c ****             interface = CY_U3P_GET_MSB(evdata);
 1188              		.loc 1 511 0
 1189 007c B0315BE1 		ldrh	r3, [fp, #-16]
 1190 0080 2334A0E1 		mov	r3, r3, lsr #8
 1191 0084 0338A0E1 		mov	r3, r3, asl #16
 1192 0088 2338A0E1 		mov	r3, r3, lsr #16
 1193 008c 05304BE5 		strb	r3, [fp, #-5]
 512:../CX3RDKOV5640.c ****             altSetting = CY_U3P_GET_LSB(evdata);
 1194              		.loc 1 512 0
 1195 0090 B0315BE1 		ldrh	r3, [fp, #-16]	@ movhi
 1196 0094 06304BE5 		strb	r3, [fp, #-6]
 513:../CX3RDKOV5640.c **** 
 514:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1197              		.loc 1 514 0
 1198 0098 30319FE5 		ldr	r3, .L59
 1199 009c 0020A0E3 		mov	r2, #0
 1200 00a0 002083E5 		str	r2, [r3]
 515:../CX3RDKOV5640.c **** 
 516:../CX3RDKOV5640.c ****             if ((altSetting == ES_UVC_STREAM_INTERFACE) && (interface == 1))
 1201              		.loc 1 516 0
 1202 00a4 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1203 00a8 010053E3 		cmp	r3, #1
 1204 00ac 1200001A 		bne	.L52
 1205              		.loc 1 516 0 is_stmt 0 discriminator 1
 1206 00b0 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1207 00b4 010053E3 		cmp	r3, #1
 1208 00b8 0F00001A 		bne	.L52
 517:../CX3RDKOV5640.c ****             {
 518:../CX3RDKOV5640.c ****                 /* Stop the application before re-starting. */
 519:../CX3RDKOV5640.c ****                 if (glIsApplnActive)
 1209              		.loc 1 519 0 is_stmt 1
 1210 00bc 14319FE5 		ldr	r3, .L59+8
 1211 00c0 003093E5 		ldr	r3, [r3]
 1212 00c4 000053E3 		cmp	r3, #0
 1213 00c8 0600000A 		beq	.L53
 520:../CX3RDKOV5640.c ****                 {
 521:../CX3RDKOV5640.c ****                 	glIsClearFeature = CyTrue;
 1214              		.loc 1 521 0
 1215 00cc 08319FE5 		ldr	r3, .L59+12
 1216 00d0 0120A0E3 		mov	r2, #1
 1217 00d4 002083E5 		str	r2, [r3]
 522:../CX3RDKOV5640.c ****                     esUVCUvcApplnStop ();
 1218              		.loc 1 522 0
 1219 00d8 FEFFFFEB 		bl	esUVCUvcApplnStop
 523:../CX3RDKOV5640.c **** #ifdef VISDebug
 524:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStop");
 1220              		.loc 1 524 0
 1221 00dc 0400A0E3 		mov	r0, #4
 1222 00e0 F8109FE5 		ldr	r1, .L59+16
 1223 00e4 FEFFFFEB 		bl	CyU3PDebugPrint
 1224              	.L53:
 525:../CX3RDKOV5640.c **** #endif
 526:../CX3RDKOV5640.c ****                 }
 527:../CX3RDKOV5640.c ****                 esUVCUvcApplnStart ();
 1225              		.loc 1 527 0
 1226 00e8 FEFFFFEB 		bl	esUVCUvcApplnStart
 528:../CX3RDKOV5640.c **** #ifdef VISDebug
 529:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF&ES_UVC_STREAM_INTERFACE: esUVCUvcApplnStart")
 1227              		.loc 1 529 0
 1228 00ec 0400A0E3 		mov	r0, #4
 1229 00f0 EC109FE5 		ldr	r1, .L59+20
 1230 00f4 FEFFFFEB 		bl	CyU3PDebugPrint
 1231 00f8 130000EA 		b	.L54
 1232              	.L52:
 530:../CX3RDKOV5640.c **** #endif
 531:../CX3RDKOV5640.c **** 
 532:../CX3RDKOV5640.c ****             }
 533:../CX3RDKOV5640.c ****             else if ((altSetting == 0x00) && (interface == 1))
 1233              		.loc 1 533 0
 1234 00fc 06305BE5 		ldrb	r3, [fp, #-6]	@ zero_extendqisi2
 1235 0100 000053E3 		cmp	r3, #0
 1236 0104 1000001A 		bne	.L54
 1237              		.loc 1 533 0 is_stmt 0 discriminator 1
 1238 0108 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 1239 010c 010053E3 		cmp	r3, #1
 1240 0110 0D00001A 		bne	.L54
 534:../CX3RDKOV5640.c ****             {
 535:../CX3RDKOV5640.c ****             	glPreviewStarted = CyFalse;
 1241              		.loc 1 535 0 is_stmt 1
 1242 0114 CC309FE5 		ldr	r3, .L59+24
 1243 0118 0020A0E3 		mov	r2, #0
 1244 011c 002083E5 		str	r2, [r3]
 536:../CX3RDKOV5640.c ****             	/* Stop the application before re-starting. */
 537:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1245              		.loc 1 537 0
 1246 0120 B4309FE5 		ldr	r3, .L59+12
 1247 0124 0120A0E3 		mov	r2, #1
 1248 0128 002083E5 		str	r2, [r3]
 538:../CX3RDKOV5640.c **** 				esUVCUvcApplnStop ();
 1249              		.loc 1 538 0
 1250 012c FEFFFFEB 		bl	esUVCUvcApplnStop
 539:../CX3RDKOV5640.c **** 
 540:../CX3RDKOV5640.c **** 				glcommitcount = 0;
 1251              		.loc 1 540 0
 1252 0130 B4309FE5 		ldr	r3, .L59+28
 1253 0134 0020A0E3 		mov	r2, #0
 1254 0138 0020C3E5 		strb	r2, [r3]
 541:../CX3RDKOV5640.c **** #ifdef VISDebug
 542:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rCY_U3P_USB_EVENT_SETINTF: esUVCUvcApplnStop");
 1255              		.loc 1 542 0
 1256 013c 0400A0E3 		mov	r0, #4
 1257 0140 A8109FE5 		ldr	r1, .L59+32
 1258 0144 FEFFFFEB 		bl	CyU3PDebugPrint
 543:../CX3RDKOV5640.c **** #endif
 544:../CX3RDKOV5640.c ****             }
 545:../CX3RDKOV5640.c ****             break;
 1259              		.loc 1 545 0
 1260 0148 1E0000EA 		b	.L45
 1261              	.L54:
 1262 014c 1D0000EA 		b	.L45
 1263              	.L47:
 546:../CX3RDKOV5640.c **** 
 547:../CX3RDKOV5640.c ****             /* Fall-through. */
 548:../CX3RDKOV5640.c **** 
 549:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_SETCONF:
 550:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_RESET:
 551:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_DISCONNECT:
 552:../CX3RDKOV5640.c ****         case CY_U3P_USB_EVENT_CONNECT:
 553:../CX3RDKOV5640.c ****             glIsStreamingStarted = CyFalse;
 1264              		.loc 1 553 0
 1265 0150 78309FE5 		ldr	r3, .L59
 1266 0154 0020A0E3 		mov	r2, #0
 1267 0158 002083E5 		str	r2, [r3]
 554:../CX3RDKOV5640.c ****             if (evtype == CY_U3P_USB_EVENT_SETCONF)
 1268              		.loc 1 554 0
 1269 015c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1270 0160 050053E3 		cmp	r3, #5
 1271 0164 0300001A 		bne	.L55
 555:../CX3RDKOV5640.c ****                 glIsConfigured = CyTrue;
 1272              		.loc 1 555 0
 1273 0168 84309FE5 		ldr	r3, .L59+36
 1274 016c 0120A0E3 		mov	r2, #1
 1275 0170 002083E5 		str	r2, [r3]
 1276 0174 020000EA 		b	.L56
 1277              	.L55:
 556:../CX3RDKOV5640.c ****             else
 557:../CX3RDKOV5640.c ****                 glIsConfigured = CyFalse;
 1278              		.loc 1 557 0
 1279 0178 74309FE5 		ldr	r3, .L59+36
 1280 017c 0020A0E3 		mov	r2, #0
 1281 0180 002083E5 		str	r2, [r3]
 1282              	.L56:
 558:../CX3RDKOV5640.c **** 
 559:../CX3RDKOV5640.c ****             /* Stop the video streamer application and enable LPM. */
 560:../CX3RDKOV5640.c ****             CyU3PUsbLPMEnable ();
 1283              		.loc 1 560 0
 1284 0184 FEFFFFEB 		bl	CyU3PUsbLPMEnable
 561:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 1285              		.loc 1 561 0
 1286 0188 48309FE5 		ldr	r3, .L59+8
 1287 018c 003093E5 		ldr	r3, [r3]
 1288 0190 000053E3 		cmp	r3, #0
 1289 0194 0900000A 		beq	.L57
 562:../CX3RDKOV5640.c ****             {
 563:../CX3RDKOV5640.c ****             	glIsClearFeature = CyTrue;
 1290              		.loc 1 563 0
 1291 0198 3C309FE5 		ldr	r3, .L59+12
 1292 019c 0120A0E3 		mov	r2, #1
 1293 01a0 002083E5 		str	r2, [r3]
 564:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop ();
 1294              		.loc 1 564 0
 1295 01a4 FEFFFFEB 		bl	esUVCUvcApplnStop
 565:../CX3RDKOV5640.c **** #ifdef VISDebug
 566:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rEvent %x: esUVCUvcApplnStop", evtype);
 1296              		.loc 1 566 0
 1297 01a8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1298 01ac 0400A0E3 		mov	r0, #4
 1299 01b0 40109FE5 		ldr	r1, .L59+40
 1300 01b4 0320A0E1 		mov	r2, r3
 1301 01b8 FEFFFFEB 		bl	CyU3PDebugPrint
 567:../CX3RDKOV5640.c **** #endif
 568:../CX3RDKOV5640.c ****             }
 569:../CX3RDKOV5640.c ****             break;
 1302              		.loc 1 569 0
 1303 01bc 010000EA 		b	.L45
 1304              	.L57:
 1305 01c0 000000EA 		b	.L45
 1306              	.L58:
 570:../CX3RDKOV5640.c ****         default:
 571:../CX3RDKOV5640.c ****             break;
 1307              		.loc 1 571 0
 1308 01c4 0000A0E1 		mov	r0, r0	@ nop
 1309              	.L45:
 572:../CX3RDKOV5640.c ****     }
 573:../CX3RDKOV5640.c **** }
 1310              		.loc 1 573 0
 1311 01c8 04D04BE2 		sub	sp, fp, #4
 1312              		@ sp needed
 1313 01cc 0088BDE8 		ldmfd	sp!, {fp, pc}
 1314              	.L60:
 1315              		.align	2
 1316              	.L59:
 1317 01d0 00000000 		.word	glIsStreamingStarted
 1318 01d4 00000000 		.word	glTimerEvent
 1319 01d8 00000000 		.word	glIsApplnActive
 1320 01dc 00000000 		.word	glIsClearFeature
 1321 01e0 60010000 		.word	.LC8
 1322 01e4 A8010000 		.word	.LC9
 1323 01e8 00000000 		.word	glPreviewStarted
 1324 01ec 00000000 		.word	glcommitcount
 1325 01f0 F0010000 		.word	.LC10
 1326 01f4 00000000 		.word	glIsConfigured
 1327 01f8 20020000 		.word	.LC11
 1328              		.cfi_endproc
 1329              	.LFE7:
 1331              		.section	.text.esUVCApplnLPMRqtCB,"ax",%progbits
 1332              		.align	2
 1334              	esUVCApplnLPMRqtCB:
 1335              	.LFB8:
 574:../CX3RDKOV5640.c **** 
 575:../CX3RDKOV5640.c **** /* Callback for LPM requests. Always return true to allow host to transition device
 576:../CX3RDKOV5640.c ****  * into required LPM state U1/U2/U3. When data transmission is active LPM management
 577:../CX3RDKOV5640.c ****  * is explicitly disabled to prevent data transmission errors.
 578:../CX3RDKOV5640.c ****  */
 579:../CX3RDKOV5640.c **** static CyBool_t esUVCApplnLPMRqtCB (
 580:../CX3RDKOV5640.c ****         CyU3PUsbLinkPowerMode link_mode         /*USB 3.0 linkmode requested by Host */
 581:../CX3RDKOV5640.c ****         )
 582:../CX3RDKOV5640.c **** {
 1336              		.loc 1 582 0
 1337              		.cfi_startproc
 1338              		@ args = 0, pretend = 0, frame = 8
 1339              		@ frame_needed = 1, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341 0000 04B02DE5 		str	fp, [sp, #-4]!
 1342              	.LCFI16:
 1343              		.cfi_def_cfa_offset 4
 1344              		.cfi_offset 11, -4
 1345 0004 00B08DE2 		add	fp, sp, #0
 1346              	.LCFI17:
 1347              		.cfi_def_cfa_register 11
 1348 0008 0CD04DE2 		sub	sp, sp, #12
 1349 000c 0030A0E1 		mov	r3, r0
 1350 0010 05304BE5 		strb	r3, [fp, #-5]
 583:../CX3RDKOV5640.c ****     return CyTrue;
 1351              		.loc 1 583 0
 1352 0014 0130A0E3 		mov	r3, #1
 584:../CX3RDKOV5640.c **** }
 1353              		.loc 1 584 0
 1354 0018 0300A0E1 		mov	r0, r3
 1355 001c 00D04BE2 		sub	sp, fp, #0
 1356              		@ sp needed
 1357 0020 04B09DE4 		ldr	fp, [sp], #4
 1358 0024 1EFF2FE1 		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE8:
 1362              		.section	.rodata
 1363 023e 0000     		.align	2
 1364              	.LC12:
 1365 0240 0A0D6573 		.ascii	"\012\015esSetCameraResolution %d\000"
 1365      53657443 
 1365      616D6572 
 1365      61526573 
 1365      6F6C7574 
 1366 025b 00       		.align	2
 1367              	.LC13:
 1368 025c 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS1 Err = 0x%x\000"
 1368      42537470 
 1368      43423A53 
 1368      6574496E 
 1368      74665061 
 1369              		.align	2
 1370              	.LC14:
 1371 0284 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams FS Err = 0x%x\000"
 1371      42537470 
 1371      43423A53 
 1371      6574496E 
 1371      74665061 
 1372 02ab 00       		.align	2
 1373              	.LC15:
 1374 02ac 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams SS2 Err = 0x%x\000"
 1374      42537470 
 1374      43423A53 
 1374      6574496E 
 1374      74665061 
 1375              		.align	2
 1376              	.LC16:
 1377 02d4 0A0D5553 		.ascii	"\012\015USBStpCB:SetIntfParams HS Err = 0x%x\000"
 1377      42537470 
 1377      43423A53 
 1377      6574496E 
 1377      74665061 
 1378              		.section	.text.esSetCameraResolution,"ax",%progbits
 1379              		.align	2
 1380              		.global	esSetCameraResolution
 1382              	esSetCameraResolution:
 1383              	.LFB9:
 585:../CX3RDKOV5640.c **** 
 586:../CX3RDKOV5640.c **** //TODO Change this function with "Sensor Specific" function to write the sensor settings & configur
 587:../CX3RDKOV5640.c **** void esSetCameraResolution(uint8_t FrameIndex)
 588:../CX3RDKOV5640.c **** {
 1384              		.loc 1 588 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 16
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 00482DE9 		stmfd	sp!, {fp, lr}
 1389              	.LCFI18:
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 11, -8
 1392              		.cfi_offset 14, -4
 1393 0004 04B08DE2 		add	fp, sp, #4
 1394              	.LCFI19:
 1395              		.cfi_def_cfa 11, 4
 1396 0008 10D04DE2 		sub	sp, sp, #16
 1397 000c 0030A0E1 		mov	r3, r0
 1398 0010 0D304BE5 		strb	r3, [fp, #-13]
 589:../CX3RDKOV5640.c **** 	CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1399              		.loc 1 589 0
 1400 0014 0030A0E3 		mov	r3, #0
 1401 0018 08300BE5 		str	r3, [fp, #-8]
 590:../CX3RDKOV5640.c **** 	CyU3PDebugPrint (4, "\n\resSetCameraResolution %d", FrameIndex);
 1402              		.loc 1 590 0
 1403 001c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1404 0020 0400A0E3 		mov	r0, #4
 1405 0024 9C119FE5 		ldr	r1, .L76
 1406 0028 0320A0E1 		mov	r2, r3
 1407 002c FEFFFFEB 		bl	CyU3PDebugPrint
 591:../CX3RDKOV5640.c **** 	FrameIndex = 0x03; //force to set VGA 30fps -debug
 1408              		.loc 1 591 0
 1409 0030 0330A0E3 		mov	r3, #3
 1410 0034 0D304BE5 		strb	r3, [fp, #-13]
 592:../CX3RDKOV5640.c **** 	/* Super Speed USB Streams*/
 593:../CX3RDKOV5640.c **** 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1411              		.loc 1 593 0
 1412 0038 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1413 003c 0030A0E1 		mov	r3, r0
 1414 0040 030053E3 		cmp	r3, #3
 1415 0044 3F00001A 		bne	.L64
 594:../CX3RDKOV5640.c **** 	{
 595:../CX3RDKOV5640.c **** 		if(FrameIndex == 0x01)
 1416              		.loc 1 595 0
 1417 0048 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1418 004c 010053E3 		cmp	r3, #1
 1419 0050 0C00001A 		bne	.L65
 596:../CX3RDKOV5640.c **** 		{
 597:../CX3RDKOV5640.c **** 			/* Write 1080pSettings */
 598:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc1080p30NoMclk, CyFalse);
 1420              		.loc 1 598 0
 1421 0054 70019FE5 		ldr	r0, .L76+4
 1422 0058 0010A0E3 		mov	r1, #0
 1423 005c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1424 0060 08000BE5 		str	r0, [fp, #-8]
 599:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1425              		.loc 1 599 0
 1426 0064 08301BE5 		ldr	r3, [fp, #-8]
 1427 0068 000053E3 		cmp	r3, #0
 1428 006c 0300000A 		beq	.L66
 600:../CX3RDKOV5640.c **** 			{
 601:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS1 Err = 0x%x", status);
 1429              		.loc 1 601 0
 1430 0070 0400A0E3 		mov	r0, #4
 1431 0074 54119FE5 		ldr	r1, .L76+8
 1432 0078 08201BE5 		ldr	r2, [fp, #-8]
 1433 007c FEFFFFEB 		bl	CyU3PDebugPrint
 1434              	.L66:
 602:../CX3RDKOV5640.c **** 			}
 603:../CX3RDKOV5640.c **** 			esOV5640_1080P_config();
 1435              		.loc 1 603 0
 1436 0080 FEFFFFEB 		bl	esOV5640_1080P_config
 1437 0084 4D0000EA 		b	.L63
 1438              	.L65:
 604:../CX3RDKOV5640.c **** 		}
 605:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x02)
 1439              		.loc 1 605 0
 1440 0088 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1441 008c 020053E3 		cmp	r3, #2
 1442 0090 0C00001A 		bne	.L68
 606:../CX3RDKOV5640.c **** 		{
 607:../CX3RDKOV5640.c **** 			/* Write VGA Settings */
 608:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1443              		.loc 1 608 0
 1444 0094 38019FE5 		ldr	r0, .L76+12
 1445 0098 0010A0E3 		mov	r1, #0
 1446 009c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1447 00a0 08000BE5 		str	r0, [fp, #-8]
 609:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1448              		.loc 1 609 0
 1449 00a4 08301BE5 		ldr	r3, [fp, #-8]
 1450 00a8 000053E3 		cmp	r3, #0
 1451 00ac 0300000A 		beq	.L69
 610:../CX3RDKOV5640.c **** 			{
 611:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1452              		.loc 1 611 0
 1453 00b0 0400A0E3 		mov	r0, #4
 1454 00b4 1C119FE5 		ldr	r1, .L76+16
 1455 00b8 08201BE5 		ldr	r2, [fp, #-8]
 1456 00bc FEFFFFEB 		bl	CyU3PDebugPrint
 1457              	.L69:
 612:../CX3RDKOV5640.c **** 			}
 613:../CX3RDKOV5640.c **** 			esOV5640_VGA_config(); //for experiment
 1458              		.loc 1 613 0
 1459 00c0 FEFFFFEB 		bl	esOV5640_VGA_config
 1460 00c4 3D0000EA 		b	.L63
 1461              	.L68:
 614:../CX3RDKOV5640.c **** 		}
 615:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x03)
 1462              		.loc 1 615 0
 1463 00c8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1464 00cc 030053E3 		cmp	r3, #3
 1465 00d0 0C00001A 		bne	.L70
 616:../CX3RDKOV5640.c **** 		{
 617:../CX3RDKOV5640.c **** 			/* Write 720pSettings */
 618:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc720p60NoMclk, CyFalse);
 1466              		.loc 1 618 0
 1467 00d4 00019FE5 		ldr	r0, .L76+20
 1468 00d8 0010A0E3 		mov	r1, #0
 1469 00dc FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1470 00e0 08000BE5 		str	r0, [fp, #-8]
 619:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1471              		.loc 1 619 0
 1472 00e4 08301BE5 		ldr	r3, [fp, #-8]
 1473 00e8 000053E3 		cmp	r3, #0
 1474 00ec 0300000A 		beq	.L71
 620:../CX3RDKOV5640.c **** 			{
 621:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1475              		.loc 1 621 0
 1476 00f0 0400A0E3 		mov	r0, #4
 1477 00f4 E4109FE5 		ldr	r1, .L76+24
 1478 00f8 08201BE5 		ldr	r2, [fp, #-8]
 1479 00fc FEFFFFEB 		bl	CyU3PDebugPrint
 1480              	.L71:
 622:../CX3RDKOV5640.c **** 			}
 623:../CX3RDKOV5640.c **** 			esOV5640_VGA_config();//esOV5640_720P_config(); //for experiment
 1481              		.loc 1 623 0
 1482 0100 FEFFFFEB 		bl	esOV5640_VGA_config
 1483 0104 2D0000EA 		b	.L63
 1484              	.L70:
 624:../CX3RDKOV5640.c **** 		}
 625:../CX3RDKOV5640.c **** 		else if(FrameIndex == 0x04)
 1485              		.loc 1 625 0
 1486 0108 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 1487 010c 040053E3 		cmp	r3, #4
 1488 0110 2A00001A 		bne	.L63
 626:../CX3RDKOV5640.c **** 		{
 627:../CX3RDKOV5640.c **** 			status = CyU3PMipicsiSetIntfParams (&cfgUvc5Mp15NoMclk, CyFalse);
 1489              		.loc 1 627 0
 1490 0114 C8009FE5 		ldr	r0, .L76+28
 1491 0118 0010A0E3 		mov	r1, #0
 1492 011c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1493 0120 08000BE5 		str	r0, [fp, #-8]
 628:../CX3RDKOV5640.c **** 			if (status != CY_U3P_SUCCESS)
 1494              		.loc 1 628 0
 1495 0124 08301BE5 		ldr	r3, [fp, #-8]
 1496 0128 000053E3 		cmp	r3, #0
 1497 012c 0300000A 		beq	.L72
 629:../CX3RDKOV5640.c **** 			{
 630:../CX3RDKOV5640.c **** 				CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams SS2 Err = 0x%x", status);
 1498              		.loc 1 630 0
 1499 0130 0400A0E3 		mov	r0, #4
 1500 0134 A4109FE5 		ldr	r1, .L76+24
 1501 0138 08201BE5 		ldr	r2, [fp, #-8]
 1502 013c FEFFFFEB 		bl	CyU3PDebugPrint
 1503              	.L72:
 631:../CX3RDKOV5640.c **** 			}
 632:../CX3RDKOV5640.c **** 			esOV5640_5MP_config();
 1504              		.loc 1 632 0
 1505 0140 FEFFFFEB 		bl	esOV5640_5MP_config
 1506 0144 1D0000EA 		b	.L63
 1507              	.L64:
 633:../CX3RDKOV5640.c **** 		}
 634:../CX3RDKOV5640.c **** 	}
 635:../CX3RDKOV5640.c **** 	/* High Speed USB Streams*/
 636:../CX3RDKOV5640.c **** 	else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1508              		.loc 1 636 0
 1509 0148 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1510 014c 0030A0E1 		mov	r3, r0
 1511 0150 020053E3 		cmp	r3, #2
 1512 0154 0D00001A 		bne	.L74
 637:../CX3RDKOV5640.c **** 	{
 638:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 639:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1513              		.loc 1 639 0
 1514 0158 74009FE5 		ldr	r0, .L76+12
 1515 015c 0010A0E3 		mov	r1, #0
 1516 0160 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1517 0164 08000BE5 		str	r0, [fp, #-8]
 640:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1518              		.loc 1 640 0
 1519 0168 08301BE5 		ldr	r3, [fp, #-8]
 1520 016c 000053E3 		cmp	r3, #0
 1521 0170 0300000A 		beq	.L75
 641:../CX3RDKOV5640.c **** 		{
 642:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams HS Err = 0x%x", status);
 1522              		.loc 1 642 0
 1523 0174 0400A0E3 		mov	r0, #4
 1524 0178 68109FE5 		ldr	r1, .L76+32
 1525 017c 08201BE5 		ldr	r2, [fp, #-8]
 1526 0180 FEFFFFEB 		bl	CyU3PDebugPrint
 1527              	.L75:
 643:../CX3RDKOV5640.c **** 		}
 644:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1528              		.loc 1 644 0
 1529 0184 FEFFFFEB 		bl	esOV5640_VGA_config
 645:../CX3RDKOV5640.c **** 		esOV5640_VGA_HS_config();
 1530              		.loc 1 645 0
 1531 0188 FEFFFFEB 		bl	esOV5640_VGA_HS_config
 1532 018c 0B0000EA 		b	.L63
 1533              	.L74:
 646:../CX3RDKOV5640.c **** 	}
 647:../CX3RDKOV5640.c **** 	/* Full Speed USB Streams*/
 648:../CX3RDKOV5640.c **** 	else
 649:../CX3RDKOV5640.c **** 	{
 650:../CX3RDKOV5640.c **** 		/* Write VGA Settings */
 651:../CX3RDKOV5640.c **** 		esOV5640_VGA_config();
 1534              		.loc 1 651 0
 1535 0190 FEFFFFEB 		bl	esOV5640_VGA_config
 652:../CX3RDKOV5640.c **** 		status = CyU3PMipicsiSetIntfParams (&cfgUvcVga30NoMclk, CyFalse);
 1536              		.loc 1 652 0
 1537 0194 38009FE5 		ldr	r0, .L76+12
 1538 0198 0010A0E3 		mov	r1, #0
 1539 019c FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 1540 01a0 08000BE5 		str	r0, [fp, #-8]
 653:../CX3RDKOV5640.c **** 		if (status != CY_U3P_SUCCESS)
 1541              		.loc 1 653 0
 1542 01a4 08301BE5 		ldr	r3, [fp, #-8]
 1543 01a8 000053E3 		cmp	r3, #0
 1544 01ac 0300000A 		beq	.L63
 654:../CX3RDKOV5640.c **** 		{
 655:../CX3RDKOV5640.c **** 			CyU3PDebugPrint (4, "\n\rUSBStpCB:SetIntfParams FS Err = 0x%x", status);
 1545              		.loc 1 655 0
 1546 01b0 0400A0E3 		mov	r0, #4
 1547 01b4 1C109FE5 		ldr	r1, .L76+16
 1548 01b8 08201BE5 		ldr	r2, [fp, #-8]
 1549 01bc FEFFFFEB 		bl	CyU3PDebugPrint
 1550              	.L63:
 656:../CX3RDKOV5640.c **** 		}
 657:../CX3RDKOV5640.c **** 	}
 658:../CX3RDKOV5640.c **** }
 1551              		.loc 1 658 0
 1552 01c0 04D04BE2 		sub	sp, fp, #4
 1553              		@ sp needed
 1554 01c4 0088BDE8 		ldmfd	sp!, {fp, pc}
 1555              	.L77:
 1556              		.align	2
 1557              	.L76:
 1558 01c8 40020000 		.word	.LC12
 1559 01cc 00000000 		.word	cfgUvc1080p30NoMclk
 1560 01d0 5C020000 		.word	.LC13
 1561 01d4 00000000 		.word	cfgUvcVga30NoMclk
 1562 01d8 84020000 		.word	.LC14
 1563 01dc 00000000 		.word	cfgUvc720p60NoMclk
 1564 01e0 AC020000 		.word	.LC15
 1565 01e4 00000000 		.word	cfgUvc5Mp15NoMclk
 1566 01e8 D4020000 		.word	.LC16
 1567              		.cfi_endproc
 1568              	.LFE9:
 1570              		.section	.rodata
 1571 02fb 00       		.align	2
 1572              	.LC17:
 1573 02fc 0A0D6252 		.ascii	"\012\015bRType = 0x%x, bRequest = 0x%x, wValue = 0x"
 1573      54797065 
 1573      203D2030 
 1573      7825782C 
 1573      20625265 
 1574 0329 25782C20 		.ascii	"%x, wIndex = 0x%x, wLength= 0x%x\000"
 1574      77496E64 
 1574      6578203D 
 1574      20307825 
 1574      782C2077 
 1575 034a 0000     		.align	2
 1576              	.LC18:
 1577 034c 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB: esUVCUvcApplnStop\000"
 1577      706C6E55 
 1577      53425365 
 1577      74757043 
 1577      423A2065 
 1578 0371 000000   		.align	2
 1579              	.LC19:
 1580 0374 0A0D4675 		.ascii	"\012\015Full Speed Not Supported!\000"
 1580      6C6C2053 
 1580      70656564 
 1580      204E6F74 
 1580      20537570 
 1581              		.align	2
 1582              	.LC20:
 1583 0390 0A0D5553 		.ascii	"\012\015USBStpCB:GET_CUR:SendEP0Data Err = 0x%x\000"
 1583      42537470 
 1583      43423A47 
 1583      45545F43 
 1583      55523A53 
 1584 03ba 0000     		.align	2
 1585              	.LC21:
 1586 03bc 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:GetEP0Data Err = 0x%x.\000"
 1586      42537470 
 1586      43423A53 
 1586      45545F43 
 1586      55523A47 
 1587 03e6 0000     		.align	2
 1588              	.LC22:
 1589 03e8 0A0D5553 		.ascii	"\012\015USBStpCB:Invalid SET_CUR Rqt Len.\000"
 1589      42537470 
 1589      43423A49 
 1589      6E76616C 
 1589      69642053 
 1590              		.align	2
 1591              	.LC23:
 1592 040c 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL es"
 1592      706C6E55 
 1592      53425365 
 1592      74757043 
 1592      423A4553 
 1593 0439 55564355 		.ascii	"UVCUvcApplnStop\000"
 1593      76634170 
 1593      706C6E53 
 1593      746F7000 
 1594 0449 000000   		.align	2
 1595              	.LC24:
 1596 044c 0A0D4170 		.ascii	"\012\015ApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL es"
 1596      706C6E55 
 1596      53425365 
 1596      74757043 
 1596      423A4553 
 1597 0479 55564355 		.ascii	"UVCUvcApplnStart\000"
 1597      76634170 
 1597      706C6E53 
 1597      74617274 
 1597      00
 1598 048a 0000     		.align	2
 1599              	.LC25:
 1600 048c 0A0D5553 		.ascii	"\012\015USBStpCB:SET_CUR:still = 0x%x.\000"
 1600      42537470 
 1600      43423A53 
 1600      45545F43 
 1600      55523A73 
 1601 04ad 000000   		.align	2
 1602              	.LC26:
 1603 04b0 0A0D2025 		.ascii	"\012\015 %d %d %d %d %d %d %d %d %d %d %d\015\012\000"
 1603      64202564 
 1603      20256420 
 1603      25642025 
 1603      64202564 
 1604 04d6 0000     		.align	2
 1605              	.LC27:
 1606 04d8 0A0D5553 		.ascii	"\012\015USBStpCB:VCI SendEP0Data = %d\000"
 1606      42537470 
 1606      43423A56 
 1606      43492053 
 1606      656E6445 
 1607              		.align	2
 1608              	.LC28:
 1609 04f8 0A0D4175 		.ascii	"\012\015Auto Focus\000"
 1609      746F2046 
 1609      6F637573 
 1609      00
 1610              		.section	.text.esUVCUvcApplnUSBSetupCB,"ax",%progbits
 1611              		.align	2
 1613              	esUVCUvcApplnUSBSetupCB:
 1614              	.LFB10:
 659:../CX3RDKOV5640.c **** 
 660:../CX3RDKOV5640.c **** /* Callback to handle the USB Setup Requests and UVC Class events */
 661:../CX3RDKOV5640.c ****     static CyBool_t
 662:../CX3RDKOV5640.c **** esUVCUvcApplnUSBSetupCB (
 663:../CX3RDKOV5640.c ****         uint32_t setupdat0,     /* SETUP Data 0 */
 664:../CX3RDKOV5640.c ****         uint32_t setupdat1      /* SETUP Data 1 */
 665:../CX3RDKOV5640.c ****         )
 666:../CX3RDKOV5640.c **** {
 1615              		.loc 1 666 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 40
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619 0000 F0492DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, fp, lr}
 1620              	.LCFI20:
 1621              		.cfi_def_cfa_offset 28
 1622              		.cfi_offset 4, -28
 1623              		.cfi_offset 5, -24
 1624              		.cfi_offset 6, -20
 1625              		.cfi_offset 7, -16
 1626              		.cfi_offset 8, -12
 1627              		.cfi_offset 11, -8
 1628              		.cfi_offset 14, -4
 1629 0004 18B08DE2 		add	fp, sp, #24
 1630              	.LCFI21:
 1631              		.cfi_def_cfa 11, 4
 1632 0008 54D04DE2 		sub	sp, sp, #84
 1633 000c 40000BE5 		str	r0, [fp, #-64]
 1634 0010 44100BE5 		str	r1, [fp, #-68]
 667:../CX3RDKOV5640.c ****     uint8_t  bRequest, bType,bRType, bTarget;
 668:../CX3RDKOV5640.c ****     uint16_t wValue, wIndex, wLength;
 669:../CX3RDKOV5640.c ****     uint16_t readCount = 0;
 1635              		.loc 1 669 0
 1636 0014 0030A0E3 		mov	r3, #0
 1637 0018 B2334BE1 		strh	r3, [fp, #-50]	@ movhi
 670:../CX3RDKOV5640.c ****     uint8_t  ep0Buf[2];
 671:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 1638              		.loc 1 671 0
 1639 001c 0030A0E3 		mov	r3, #0
 1640 0020 24300BE5 		str	r3, [fp, #-36]
 672:../CX3RDKOV5640.c ****     uint8_t temp = 0;
 1641              		.loc 1 672 0
 1642 0024 0030A0E3 		mov	r3, #0
 1643 0028 35304BE5 		strb	r3, [fp, #-53]
 673:../CX3RDKOV5640.c ****     CyBool_t isHandled = CyFalse;
 1644              		.loc 1 673 0
 1645 002c 0030A0E3 		mov	r3, #0
 1646 0030 20300BE5 		str	r3, [fp, #-32]
 674:../CX3RDKOV5640.c ****     uint8_t RequestOption = 0;
 1647              		.loc 1 674 0
 1648 0034 0030A0E3 		mov	r3, #0
 1649 0038 25304BE5 		strb	r3, [fp, #-37]
 675:../CX3RDKOV5640.c **** 
 676:../CX3RDKOV5640.c ****     /* Decode the fields from the setup request. */
 677:../CX3RDKOV5640.c ****     bRType = (setupdat0 & CY_U3P_USB_REQUEST_TYPE_MASK);
 1650              		.loc 1 677 0
 1651 003c 40301BE5 		ldr	r3, [fp, #-64]
 1652 0040 26304BE5 		strb	r3, [fp, #-38]
 678:../CX3RDKOV5640.c ****     bType    = (bRType & CY_U3P_USB_TYPE_MASK);
 1653              		.loc 1 678 0
 1654 0044 26305BE5 		ldrb	r3, [fp, #-38]
 1655 0048 603003E2 		and	r3, r3, #96
 1656 004c 27304BE5 		strb	r3, [fp, #-39]
 679:../CX3RDKOV5640.c ****     bTarget  = (bRType & CY_U3P_USB_TARGET_MASK);
 1657              		.loc 1 679 0
 1658 0050 26305BE5 		ldrb	r3, [fp, #-38]
 1659 0054 033003E2 		and	r3, r3, #3
 1660 0058 28304BE5 		strb	r3, [fp, #-40]
 680:../CX3RDKOV5640.c ****     bRequest = ((setupdat0 & CY_U3P_USB_REQUEST_MASK) >> CY_U3P_USB_REQUEST_POS);
 1661              		.loc 1 680 0
 1662 005c 40301BE5 		ldr	r3, [fp, #-64]
 1663 0060 FF3C03E2 		and	r3, r3, #65280
 1664 0064 2334A0E1 		mov	r3, r3, lsr #8
 1665 0068 29304BE5 		strb	r3, [fp, #-41]
 681:../CX3RDKOV5640.c ****     wValue   = ((setupdat0 & CY_U3P_USB_VALUE_MASK)   >> CY_U3P_USB_VALUE_POS);
 1666              		.loc 1 681 0
 1667 006c 40301BE5 		ldr	r3, [fp, #-64]
 1668 0070 2338A0E1 		mov	r3, r3, lsr #16
 1669 0074 BC324BE1 		strh	r3, [fp, #-44]	@ movhi
 682:../CX3RDKOV5640.c ****     wIndex   = ((setupdat1 & CY_U3P_USB_INDEX_MASK)   >> CY_U3P_USB_INDEX_POS);
 1670              		.loc 1 682 0
 1671 0078 44301BE5 		ldr	r3, [fp, #-68]
 1672 007c BE324BE1 		strh	r3, [fp, #-46]	@ movhi
 683:../CX3RDKOV5640.c ****     wLength  = ((setupdat1 & CY_U3P_USB_LENGTH_MASK)  >> CY_U3P_USB_LENGTH_POS);
 1673              		.loc 1 683 0
 1674 0080 44301BE5 		ldr	r3, [fp, #-68]
 1675 0084 2338A0E1 		mov	r3, r3, lsr #16
 1676 0088 B0334BE1 		strh	r3, [fp, #-48]	@ movhi
 684:../CX3RDKOV5640.c **** 
 685:../CX3RDKOV5640.c **** #if 1
 686:../CX3RDKOV5640.c ****    	CyU3PDebugPrint(4, "\n\rbRType = 0x%x, bRequest = 0x%x, wValue = 0x%x, wIndex = 0x%x, wLength= 
 1677              		.loc 1 686 0
 1678 008c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1679 0090 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1680 0094 BCC25BE1 		ldrh	ip, [fp, #-44]
 1681 0098 BE025BE1 		ldrh	r0, [fp, #-46]
 1682 009c B0135BE1 		ldrh	r1, [fp, #-48]
 1683 00a0 00C08DE5 		str	ip, [sp]
 1684 00a4 04008DE5 		str	r0, [sp, #4]
 1685 00a8 08108DE5 		str	r1, [sp, #8]
 1686 00ac 0400A0E3 		mov	r0, #4
 1687 00b0 E41F9FE5 		ldr	r1, .L229
 1688 00b4 FEFFFFEB 		bl	CyU3PDebugPrint
 687:../CX3RDKOV5640.c **** #endif
 688:../CX3RDKOV5640.c **** 
 689:../CX3RDKOV5640.c ****     /* ClearFeature(Endpoint_Halt) received on the Streaming Endpoint. Stop Streaming */
 690:../CX3RDKOV5640.c ****     if((bTarget == CY_U3P_USB_TARGET_ENDPT) && (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
 1689              		.loc 1 690 0
 1690 00b8 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1691 00bc 020053E3 		cmp	r3, #2
 1692 00c0 1F00001A 		bne	.L79
 1693              		.loc 1 690 0 is_stmt 0 discriminator 1
 1694 00c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1695 00c8 010053E3 		cmp	r3, #1
 1696 00cc 1C00001A 		bne	.L79
 691:../CX3RDKOV5640.c ****             && (wIndex == ES_UVC_EP_BULK_VIDEO) && (wValue == CY_U3P_USBX_FS_EP_HALT))
 1697              		.loc 1 691 0 is_stmt 1
 1698 00d0 BE325BE1 		ldrh	r3, [fp, #-46]
 1699 00d4 830053E3 		cmp	r3, #131
 1700 00d8 1900001A 		bne	.L79
 1701              		.loc 1 691 0 is_stmt 0 discriminator 1
 1702 00dc BC325BE1 		ldrh	r3, [fp, #-44]
 1703 00e0 000053E3 		cmp	r3, #0
 1704 00e4 1600001A 		bne	.L79
 692:../CX3RDKOV5640.c ****     {
 693:../CX3RDKOV5640.c ****         if ((glIsApplnActive) && (glIsStreamingStarted))
 1705              		.loc 1 693 0 is_stmt 1
 1706 00e8 B03F9FE5 		ldr	r3, .L229+4
 1707 00ec 003093E5 		ldr	r3, [r3]
 1708 00f0 000053E3 		cmp	r3, #0
 1709 00f4 1000000A 		beq	.L80
 1710              		.loc 1 693 0 is_stmt 0 discriminator 1
 1711 00f8 A43F9FE5 		ldr	r3, .L229+8
 1712 00fc 003093E5 		ldr	r3, [r3]
 1713 0100 000053E3 		cmp	r3, #0
 1714 0104 0C00000A 		beq	.L80
 694:../CX3RDKOV5640.c ****         {
 695:../CX3RDKOV5640.c ****         	glPreviewStarted = CyFalse;
 1715              		.loc 1 695 0 is_stmt 1
 1716 0108 983F9FE5 		ldr	r3, .L229+12
 1717 010c 0020A0E3 		mov	r2, #0
 1718 0110 002083E5 		str	r2, [r3]
 696:../CX3RDKOV5640.c ****             glIsClearFeature = CyTrue;
 1719              		.loc 1 696 0
 1720 0114 903F9FE5 		ldr	r3, .L229+16
 1721 0118 0120A0E3 		mov	r2, #1
 1722 011c 002083E5 		str	r2, [r3]
 697:../CX3RDKOV5640.c ****             esUVCUvcApplnStop();
 1723              		.loc 1 697 0
 1724 0120 FEFFFFEB 		bl	esUVCUvcApplnStop
 698:../CX3RDKOV5640.c ****             glcommitcount = 0;
 1725              		.loc 1 698 0
 1726 0124 843F9FE5 		ldr	r3, .L229+20
 1727 0128 0020A0E3 		mov	r2, #0
 1728 012c 0020C3E5 		strb	r2, [r3]
 699:../CX3RDKOV5640.c **** #ifdef VISDebug
 700:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB: esUVCUvcApplnStop");
 1729              		.loc 1 700 0
 1730 0130 0400A0E3 		mov	r0, #4
 1731 0134 781F9FE5 		ldr	r1, .L229+24
 1732 0138 FEFFFFEB 		bl	CyU3PDebugPrint
 1733              	.L80:
 701:../CX3RDKOV5640.c **** #endif
 702:../CX3RDKOV5640.c ****         }
 703:../CX3RDKOV5640.c ****         return CyFalse;
 1734              		.loc 1 703 0
 1735 013c 0030A0E3 		mov	r3, #0
 1736 0140 4B0500EA 		b	.L228
 1737              	.L79:
 704:../CX3RDKOV5640.c ****     }
 705:../CX3RDKOV5640.c **** 
 706:../CX3RDKOV5640.c ****     if( bRType == CY_U3P_USB_GS_DEVICE)
 1738              		.loc 1 706 0
 1739 0144 26305BE5 		ldrb	r3, [fp, #-38]	@ zero_extendqisi2
 1740 0148 800053E3 		cmp	r3, #128
 1741 014c 0500001A 		bne	.L82
 707:../CX3RDKOV5640.c ****     {
 708:../CX3RDKOV5640.c ****         /* Make sure that we bring the link back to U0, so that the ERDY can be sent. */
 709:../CX3RDKOV5640.c ****         if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1742              		.loc 1 709 0
 1743 0150 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1744 0154 0030A0E1 		mov	r3, r0
 1745 0158 030053E3 		cmp	r3, #3
 1746 015c 0100001A 		bne	.L82
 710:../CX3RDKOV5640.c ****             CyU3PUsbSetLinkPowerState (CyU3PUsbLPM_U0);
 1747              		.loc 1 710 0
 1748 0160 0000A0E3 		mov	r0, #0
 1749 0164 FEFFFFEB 		bl	CyU3PUsbSetLinkPowerState
 1750              	.L82:
 711:../CX3RDKOV5640.c ****     }
 712:../CX3RDKOV5640.c **** 
 713:../CX3RDKOV5640.c ****     if ((bTarget == CY_U3P_USB_TARGET_INTF) && ((bRequest == CY_U3P_USB_SC_SET_FEATURE)
 1751              		.loc 1 713 0
 1752 0168 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1753 016c 010053E3 		cmp	r3, #1
 1754 0170 1400001A 		bne	.L83
 1755              		.loc 1 713 0 is_stmt 0 discriminator 1
 1756 0174 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1757 0178 030053E3 		cmp	r3, #3
 1758 017c 0200000A 		beq	.L84
 714:../CX3RDKOV5640.c ****                 || (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)) && (wValue == 0))
 1759              		.loc 1 714 0 is_stmt 1
 1760 0180 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1761 0184 010053E3 		cmp	r3, #1
 1762 0188 0E00001A 		bne	.L83
 1763              	.L84:
 1764              		.loc 1 714 0 is_stmt 0 discriminator 1
 1765 018c BC325BE1 		ldrh	r3, [fp, #-44]
 1766 0190 000053E3 		cmp	r3, #0
 1767 0194 0B00001A 		bne	.L83
 715:../CX3RDKOV5640.c ****     {
 716:../CX3RDKOV5640.c ****         if (glIsConfigured)
 1768              		.loc 1 716 0 is_stmt 1
 1769 0198 183F9FE5 		ldr	r3, .L229+28
 1770 019c 003093E5 		ldr	r3, [r3]
 1771 01a0 000053E3 		cmp	r3, #0
 1772 01a4 0100000A 		beq	.L85
 717:../CX3RDKOV5640.c ****         {
 718:../CX3RDKOV5640.c ****             CyU3PUsbAckSetup ();
 1773              		.loc 1 718 0
 1774 01a8 FEFFFFEB 		bl	CyU3PUsbAckSetup
 1775 01ac 030000EA 		b	.L86
 1776              	.L85:
 719:../CX3RDKOV5640.c ****         }
 720:../CX3RDKOV5640.c ****         else
 721:../CX3RDKOV5640.c ****         {
 722:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1777              		.loc 1 722 0
 1778 01b0 0000A0E3 		mov	r0, #0
 1779 01b4 0110A0E3 		mov	r1, #1
 1780 01b8 0020A0E3 		mov	r2, #0
 1781 01bc FEFFFFEB 		bl	CyU3PUsbStall
 1782              	.L86:
 723:../CX3RDKOV5640.c ****         }
 724:../CX3RDKOV5640.c ****         return CyTrue;
 1783              		.loc 1 724 0
 1784 01c0 0130A0E3 		mov	r3, #1
 1785 01c4 2A0500EA 		b	.L228
 1786              	.L83:
 725:../CX3RDKOV5640.c ****     }
 726:../CX3RDKOV5640.c **** 
 727:../CX3RDKOV5640.c ****     if ((bRequest == CY_U3P_USB_SC_GET_STATUS) &&
 1787              		.loc 1 727 0
 1788 01c8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1789 01cc 000053E3 		cmp	r3, #0
 1790 01d0 1400001A 		bne	.L87
 1791              		.loc 1 727 0 is_stmt 0 discriminator 1
 1792 01d4 28305BE5 		ldrb	r3, [fp, #-40]	@ zero_extendqisi2
 1793 01d8 010053E3 		cmp	r3, #1
 1794 01dc 1100001A 		bne	.L87
 728:../CX3RDKOV5640.c ****             (bTarget == CY_U3P_USB_TARGET_INTF))
 729:../CX3RDKOV5640.c ****     {
 730:../CX3RDKOV5640.c ****         /* We support only interface 0. */
 731:../CX3RDKOV5640.c ****         if (wIndex == 0)
 1795              		.loc 1 731 0 is_stmt 1
 1796 01e0 BE325BE1 		ldrh	r3, [fp, #-46]
 1797 01e4 000053E3 		cmp	r3, #0
 1798 01e8 0800001A 		bne	.L88
 732:../CX3RDKOV5640.c ****         {
 733:../CX3RDKOV5640.c ****             ep0Buf[0] = 0;
 1799              		.loc 1 733 0
 1800 01ec 0030A0E3 		mov	r3, #0
 1801 01f0 34304BE5 		strb	r3, [fp, #-52]
 734:../CX3RDKOV5640.c ****             ep0Buf[1] = 0;
 1802              		.loc 1 734 0
 1803 01f4 0030A0E3 		mov	r3, #0
 1804 01f8 33304BE5 		strb	r3, [fp, #-51]
 735:../CX3RDKOV5640.c ****             CyU3PUsbSendEP0Data (0x02, ep0Buf);
 1805              		.loc 1 735 0
 1806 01fc 34304BE2 		sub	r3, fp, #52
 1807 0200 0200A0E3 		mov	r0, #2
 1808 0204 0310A0E1 		mov	r1, r3
 1809 0208 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1810 020c 030000EA 		b	.L89
 1811              	.L88:
 736:../CX3RDKOV5640.c ****         }
 737:../CX3RDKOV5640.c ****         else
 738:../CX3RDKOV5640.c ****             CyU3PUsbStall (0, CyTrue, CyFalse);
 1812              		.loc 1 738 0
 1813 0210 0000A0E3 		mov	r0, #0
 1814 0214 0110A0E3 		mov	r1, #1
 1815 0218 0020A0E3 		mov	r2, #0
 1816 021c FEFFFFEB 		bl	CyU3PUsbStall
 1817              	.L89:
 739:../CX3RDKOV5640.c ****         return CyTrue;
 1818              		.loc 1 739 0
 1819 0220 0130A0E3 		mov	r3, #1
 1820 0224 120500EA 		b	.L228
 1821              	.L87:
 740:../CX3RDKOV5640.c ****     }
 741:../CX3RDKOV5640.c **** 
 742:../CX3RDKOV5640.c ****     /* Check for UVC Class Requests */
 743:../CX3RDKOV5640.c ****     if (bType == CY_U3P_USB_CLASS_RQT)
 1822              		.loc 1 743 0
 1823 0228 27305BE5 		ldrb	r3, [fp, #-39]	@ zero_extendqisi2
 1824 022c 200053E3 		cmp	r3, #32
 1825 0230 0E05001A 		bne	.L90
 744:../CX3RDKOV5640.c ****     {
 745:../CX3RDKOV5640.c **** 
 746:../CX3RDKOV5640.c ****         /* UVC Class Requests */
 747:../CX3RDKOV5640.c ****         /* Requests to the Video Streaming Interface (IF 1) */
 748:../CX3RDKOV5640.c ****         if((wIndex & 0x00FF) == ES_UVC_STREAM_INTERFACE)
 1826              		.loc 1 748 0
 1827 0234 BE325BE1 		ldrh	r3, [fp, #-46]
 1828 0238 FF3003E2 		and	r3, r3, #255
 1829 023c 010053E3 		cmp	r3, #1
 1830 0240 5301001A 		bne	.L91
 749:../CX3RDKOV5640.c ****         {
 750:../CX3RDKOV5640.c ****             /* GET_CUR Request Handling Probe/Commit Controls*/
 751:../CX3RDKOV5640.c ****             if ((bRequest == ES_UVC_USB_GET_CUR_REQ)||(bRequest == ES_UVC_USB_GET_MIN_REQ) || (bReq
 1831              		.loc 1 751 0
 1832 0244 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1833 0248 810053E3 		cmp	r3, #129
 1834 024c 0800000A 		beq	.L92
 1835              		.loc 1 751 0 is_stmt 0 discriminator 1
 1836 0250 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1837 0254 820053E3 		cmp	r3, #130
 1838 0258 0500000A 		beq	.L92
 1839 025c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1840 0260 830053E3 		cmp	r3, #131
 1841 0264 0200000A 		beq	.L92
 1842 0268 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1843 026c 870053E3 		cmp	r3, #135
 1844 0270 5F00001A 		bne	.L93
 1845              	.L92:
 752:../CX3RDKOV5640.c ****             {
 753:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1846              		.loc 1 753 0 is_stmt 1
 1847 0274 0130A0E3 		mov	r3, #1
 1848 0278 20300BE5 		str	r3, [fp, #-32]
 754:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1849              		.loc 1 754 0
 1850 027c BC325BE1 		ldrh	r3, [fp, #-44]
 1851 0280 010C53E3 		cmp	r3, #256
 1852 0284 0200000A 		beq	.L94
 1853              		.loc 1 754 0 is_stmt 0 discriminator 1
 1854 0288 BC325BE1 		ldrh	r3, [fp, #-44]
 1855 028c 020C53E3 		cmp	r3, #512
 1856 0290 4000001A 		bne	.L95
 1857              	.L94:
 755:../CX3RDKOV5640.c ****                 {
 756:../CX3RDKOV5640.c ****                 	//TODO Modify this "glProbeCtrl" according to the Supported Preview Resolutions th
 757:../CX3RDKOV5640.c **** 
 758:../CX3RDKOV5640.c **** 					/* Host requests for probe data of 34 bytes (UVC 1.1) or 26 Bytes (UVC1.0). Send it over EP0. 
 759:../CX3RDKOV5640.c **** 					if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1858              		.loc 1 759 0 is_stmt 1
 1859 0294 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1860 0298 0030A0E1 		mov	r3, r0
 1861 029c 030053E3 		cmp	r3, #3
 1862 02a0 2300001A 		bne	.L96
 760:../CX3RDKOV5640.c **** 					{
 761:../CX3RDKOV5640.c **** 						if(glCurrentFrameIndex == 4)
 1863              		.loc 1 761 0
 1864 02a4 103E9FE5 		ldr	r3, .L229+32
 1865 02a8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1866 02ac 040053E3 		cmp	r3, #4
 1867 02b0 0400001A 		bne	.L97
 762:../CX3RDKOV5640.c **** 						{
 763:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl5MpProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1868              		.loc 1 763 0
 1869 02b4 040E9FE5 		ldr	r0, .L229+36
 1870 02b8 041E9FE5 		ldr	r1, .L229+40
 1871 02bc 1A20A0E3 		mov	r2, #26
 1872 02c0 FEFFFFEB 		bl	CyU3PMemCopy
 1873 02c4 260000EA 		b	.L101
 1874              	.L97:
 764:../CX3RDKOV5640.c **** 						}
 765:../CX3RDKOV5640.c **** 						/* Probe Control for 1280x720 stream*/
 766:../CX3RDKOV5640.c **** 						else if(glCurrentFrameIndex == 3)
 1875              		.loc 1 766 0
 1876 02c8 EC3D9FE5 		ldr	r3, .L229+32
 1877 02cc 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 02d0 030053E3 		cmp	r3, #3
 1879 02d4 0400001A 		bne	.L99
 767:../CX3RDKOV5640.c **** 						{
 768:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl720pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1880              		.loc 1 768 0
 1881 02d8 E00D9FE5 		ldr	r0, .L229+36
 1882 02dc E41D9FE5 		ldr	r1, .L229+44
 1883 02e0 1A20A0E3 		mov	r2, #26
 1884 02e4 FEFFFFEB 		bl	CyU3PMemCopy
 1885 02e8 1D0000EA 		b	.L101
 1886              	.L99:
 769:../CX3RDKOV5640.c **** 						}
 770:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 771:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 2)
 1887              		.loc 1 771 0
 1888 02ec C83D9FE5 		ldr	r3, .L229+32
 1889 02f0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1890 02f4 020053E3 		cmp	r3, #2
 1891 02f8 0400001A 		bne	.L100
 772:../CX3RDKOV5640.c **** 						{
 773:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga60ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1892              		.loc 1 773 0
 1893 02fc BC0D9FE5 		ldr	r0, .L229+36
 1894 0300 C41D9FE5 		ldr	r1, .L229+48
 1895 0304 1A20A0E3 		mov	r2, #26
 1896 0308 FEFFFFEB 		bl	CyU3PMemCopy
 1897 030c 140000EA 		b	.L101
 1898              	.L100:
 774:../CX3RDKOV5640.c **** 						}
 775:../CX3RDKOV5640.c **** 						/* Probe Control for 1920x1080 stream*/
 776:../CX3RDKOV5640.c **** 						else  if(glCurrentFrameIndex == 1)
 1899              		.loc 1 776 0
 1900 0310 A43D9FE5 		ldr	r3, .L229+32
 1901 0314 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 1902 0318 010053E3 		cmp	r3, #1
 1903 031c 1000001A 		bne	.L101
 777:../CX3RDKOV5640.c **** 						{
 778:../CX3RDKOV5640.c **** 							CyU3PMemCopy(glProbeCtrl, (uint8_t *)gl1080pProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1904              		.loc 1 778 0
 1905 0320 980D9FE5 		ldr	r0, .L229+36
 1906 0324 A41D9FE5 		ldr	r1, .L229+52
 1907 0328 1A20A0E3 		mov	r2, #26
 1908 032c FEFFFFEB 		bl	CyU3PMemCopy
 1909 0330 0B0000EA 		b	.L101
 1910              	.L96:
 779:../CX3RDKOV5640.c **** 						}
 780:../CX3RDKOV5640.c **** 
 781:../CX3RDKOV5640.c **** 					}
 782:../CX3RDKOV5640.c **** 					else if (CyU3PUsbGetSpeed () == CY_U3P_HIGH_SPEED)
 1911              		.loc 1 782 0
 1912 0334 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1913 0338 0030A0E1 		mov	r3, r0
 1914 033c 020053E3 		cmp	r3, #2
 1915 0340 0400001A 		bne	.L102
 783:../CX3RDKOV5640.c **** 					{
 784:../CX3RDKOV5640.c **** 						/* Probe Control for 640x480 stream*/
 785:../CX3RDKOV5640.c **** 						CyU3PMemCopy(glProbeCtrl, (uint8_t *)glVga30ProbeCtrl, ES_UVC_MAX_PROBE_SETTING);
 1916              		.loc 1 785 0
 1917 0344 740D9FE5 		ldr	r0, .L229+36
 1918 0348 841D9FE5 		ldr	r1, .L229+56
 1919 034c 1A20A0E3 		mov	r2, #26
 1920 0350 FEFFFFEB 		bl	CyU3PMemCopy
 1921 0354 020000EA 		b	.L101
 1922              	.L102:
 786:../CX3RDKOV5640.c **** 					}
 787:../CX3RDKOV5640.c **** 					else /* FULL-Speed*/
 788:../CX3RDKOV5640.c **** 					{
 789:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rFull Speed Not Supported!");
 1923              		.loc 1 789 0
 1924 0358 0400A0E3 		mov	r0, #4
 1925 035c 741D9FE5 		ldr	r1, .L229+60
 1926 0360 FEFFFFEB 		bl	CyU3PDebugPrint
 1927              	.L101:
 790:../CX3RDKOV5640.c **** 					}
 791:../CX3RDKOV5640.c **** 
 792:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(ES_UVC_MAX_PROBE_SETTING, glProbeCtrl);
 1928              		.loc 1 792 0
 1929 0364 1A00A0E3 		mov	r0, #26
 1930 0368 501D9FE5 		ldr	r1, .L229+36
 1931 036c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1932 0370 24000BE5 		str	r0, [fp, #-36]
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1933              		.loc 1 793 0
 1934 0374 24301BE5 		ldr	r3, [fp, #-36]
 1935 0378 000053E3 		cmp	r3, #0
 1936 037c 0400000A 		beq	.L103
 794:../CX3RDKOV5640.c **** 					{
 795:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1937              		.loc 1 795 0
 1938 0380 0400A0E3 		mov	r0, #4
 1939 0384 501D9FE5 		ldr	r1, .L229+64
 1940 0388 24201BE5 		ldr	r2, [fp, #-36]
 1941 038c FEFFFFEB 		bl	CyU3PDebugPrint
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1942              		.loc 1 793 0
 1943 0390 160000EA 		b	.L104
 1944              	.L103:
 793:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 1945              		.loc 1 793 0 is_stmt 0 discriminator 1
 1946 0394 150000EA 		b	.L104
 1947              	.L95:
 796:../CX3RDKOV5640.c **** 					}
 797:../CX3RDKOV5640.c ****                 }
 798:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 1948              		.loc 1 798 0 is_stmt 1
 1949 0398 BC325BE1 		ldrh	r3, [fp, #-44]
 1950 039c 030C53E3 		cmp	r3, #768
 1951 03a0 0200000A 		beq	.L105
 1952              		.loc 1 798 0 is_stmt 0 discriminator 1
 1953 03a4 BC325BE1 		ldrh	r3, [fp, #-44]
 1954 03a8 010B53E3 		cmp	r3, #1024
 1955 03ac 0F00001A 		bne	.L104
 1956              	.L105:
 799:../CX3RDKOV5640.c ****                 {
 800:../CX3RDKOV5640.c ****                 	if (CyU3PUsbGetSpeed () == CY_U3P_SUPER_SPEED)
 1957              		.loc 1 800 0 is_stmt 1
 1958 03b0 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 1959 03b4 0030A0E1 		mov	r3, r0
 1960 03b8 030053E3 		cmp	r3, #3
 1961 03bc 0B00001A 		bne	.L104
 801:../CX3RDKOV5640.c ****                 	{
 802:../CX3RDKOV5640.c **** 						status = CyU3PUsbSendEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING, glStillProbeCtrl);
 1962              		.loc 1 802 0
 1963 03c0 0B00A0E3 		mov	r0, #11
 1964 03c4 141D9FE5 		ldr	r1, .L229+68
 1965 03c8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 1966 03cc 24000BE5 		str	r0, [fp, #-36]
 803:../CX3RDKOV5640.c **** 						if (status != CY_U3P_SUCCESS)
 1967              		.loc 1 803 0
 1968 03d0 24301BE5 		ldr	r3, [fp, #-36]
 1969 03d4 000053E3 		cmp	r3, #0
 1970 03d8 0400000A 		beq	.L104
 804:../CX3RDKOV5640.c **** 						{
 805:../CX3RDKOV5640.c **** 							CyU3PDebugPrint (4, "\n\rUSBStpCB:GET_CUR:SendEP0Data Err = 0x%x", status);
 1971              		.loc 1 805 0
 1972 03dc 0400A0E3 		mov	r0, #4
 1973 03e0 F41C9FE5 		ldr	r1, .L229+64
 1974 03e4 24201BE5 		ldr	r2, [fp, #-36]
 1975 03e8 FEFFFFEB 		bl	CyU3PDebugPrint
 754:../CX3RDKOV5640.c ****                 {
 1976              		.loc 1 754 0
 1977 03ec E70000EA 		b	.L106
 1978              	.L104:
 1979 03f0 E60000EA 		b	.L106
 1980              	.L93:
 806:../CX3RDKOV5640.c **** 						}
 807:../CX3RDKOV5640.c ****                 	}
 808:../CX3RDKOV5640.c ****                 }
 809:../CX3RDKOV5640.c ****             }
 810:../CX3RDKOV5640.c ****             /* SET_CUR request handling Probe/Commit controls */
 811:../CX3RDKOV5640.c ****             else if (bRequest == ES_UVC_USB_SET_CUR_REQ)
 1981              		.loc 1 811 0
 1982 03f4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 1983 03f8 010053E3 		cmp	r3, #1
 1984 03fc E000001A 		bne	.L107
 812:../CX3RDKOV5640.c ****             {
 813:../CX3RDKOV5640.c ****                 isHandled = CyTrue;
 1985              		.loc 1 813 0
 1986 0400 0130A0E3 		mov	r3, #1
 1987 0404 20300BE5 		str	r3, [fp, #-32]
 814:../CX3RDKOV5640.c ****                 if((wValue == ES_UVC_VS_PROBE_CONTROL) || (wValue == ES_UVC_VS_COMMIT_CONTROL))
 1988              		.loc 1 814 0
 1989 0408 BC325BE1 		ldrh	r3, [fp, #-44]
 1990 040c 010C53E3 		cmp	r3, #256
 1991 0410 0200000A 		beq	.L108
 1992              		.loc 1 814 0 is_stmt 0 discriminator 1
 1993 0414 BC325BE1 		ldrh	r3, [fp, #-44]
 1994 0418 020C53E3 		cmp	r3, #512
 1995 041c 5A00001A 		bne	.L109
 1996              	.L108:
 815:../CX3RDKOV5640.c ****                 {
 816:../CX3RDKOV5640.c **** 					/* Get the UVC probe/commit control data from EP0 */
 817:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_PROBE_SETTING_ALIGNED,
 1997              		.loc 1 817 0 is_stmt 1
 1998 0420 32304BE2 		sub	r3, fp, #50
 1999 0424 2000A0E3 		mov	r0, #32
 2000 0428 B41C9FE5 		ldr	r1, .L229+72
 2001 042c 0320A0E1 		mov	r2, r3
 2002 0430 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2003 0434 24000BE5 		str	r0, [fp, #-36]
 818:../CX3RDKOV5640.c **** 							glCommitCtrl, &readCount);
 819:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2004              		.loc 1 819 0
 2005 0438 24301BE5 		ldr	r3, [fp, #-36]
 2006 043c 000053E3 		cmp	r3, #0
 2007 0440 0300000A 		beq	.L110
 820:../CX3RDKOV5640.c **** 					{
 821:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2008              		.loc 1 821 0
 2009 0444 0400A0E3 		mov	r0, #4
 2010 0448 981C9FE5 		ldr	r1, .L229+76
 2011 044c 24201BE5 		ldr	r2, [fp, #-36]
 2012 0450 FEFFFFEB 		bl	CyU3PDebugPrint
 2013              	.L110:
 822:../CX3RDKOV5640.c **** 					}
 823:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 824:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_PROBE_SETTING)
 2014              		.loc 1 824 0
 2015 0454 B2335BE1 		ldrh	r3, [fp, #-50]
 2016 0458 1A0053E3 		cmp	r3, #26
 2017 045c 0300009A 		bls	.L111
 825:../CX3RDKOV5640.c **** 					{
 826:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2018              		.loc 1 826 0
 2019 0460 0400A0E3 		mov	r0, #4
 2020 0464 801C9FE5 		ldr	r1, .L229+80
 2021 0468 FEFFFFEB 		bl	CyU3PDebugPrint
 2022 046c 450000EA 		b	.L112
 2023              	.L111:
 827:../CX3RDKOV5640.c **** 					}
 828:../CX3RDKOV5640.c **** 					else
 829:../CX3RDKOV5640.c **** 					{
 830:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 831:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_VS_PROBE_CONTROL)
 2024              		.loc 1 831 0
 2025 0470 BC325BE1 		ldrh	r3, [fp, #-44]
 2026 0474 010C53E3 		cmp	r3, #256
 2027 0478 0400001A 		bne	.L113
 832:../CX3RDKOV5640.c **** 						{
 833:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2028              		.loc 1 833 0
 2029 047c 603C9FE5 		ldr	r3, .L229+72
 2030 0480 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2031 0484 303C9FE5 		ldr	r3, .L229+32
 2032 0488 0020C3E5 		strb	r2, [r3]
 2033 048c 3D0000EA 		b	.L112
 2034              	.L113:
 834:../CX3RDKOV5640.c **** 						}
 835:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 836:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_VS_COMMIT_CONTROL)
 2035              		.loc 1 836 0
 2036 0490 BC325BE1 		ldrh	r3, [fp, #-44]
 2037 0494 020C53E3 		cmp	r3, #512
 2038 0498 3A00001A 		bne	.L112
 837:../CX3RDKOV5640.c **** 						{
 838:../CX3RDKOV5640.c **** 
 839:../CX3RDKOV5640.c **** 							if((glcommitcount==0)||(glcheckframe!=glCommitCtrl[3]))
 2039              		.loc 1 839 0
 2040 049c 0C3C9FE5 		ldr	r3, .L229+20
 2041 04a0 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2042 04a4 000053E3 		cmp	r3, #0
 2043 04a8 0500000A 		beq	.L114
 2044              		.loc 1 839 0 is_stmt 0 discriminator 1
 2045 04ac 303C9FE5 		ldr	r3, .L229+72
 2046 04b0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2047 04b4 343C9FE5 		ldr	r3, .L229+84
 2048 04b8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 04bc 030052E1 		cmp	r2, r3
 2050 04c0 3000000A 		beq	.L112
 2051              	.L114:
 840:../CX3RDKOV5640.c **** 							{
 841:../CX3RDKOV5640.c **** 								glcommitcount++;
 2052              		.loc 1 841 0 is_stmt 1
 2053 04c4 E43B9FE5 		ldr	r3, .L229+20
 2054 04c8 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2055 04cc 013083E2 		add	r3, r3, #1
 2056 04d0 FF2003E2 		and	r2, r3, #255
 2057 04d4 D43B9FE5 		ldr	r3, .L229+20
 2058 04d8 0020C3E5 		strb	r2, [r3]
 842:../CX3RDKOV5640.c **** 								glcheckframe=glCommitCtrl[3];
 2059              		.loc 1 842 0
 2060 04dc 003C9FE5 		ldr	r3, .L229+72
 2061 04e0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2062 04e4 043C9FE5 		ldr	r3, .L229+84
 2063 04e8 0020C3E5 		strb	r2, [r3]
 843:../CX3RDKOV5640.c **** 							glCurrentFrameIndex = glCommitCtrl[3];
 2064              		.loc 1 843 0
 2065 04ec F03B9FE5 		ldr	r3, .L229+72
 2066 04f0 0320D3E5 		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2067 04f4 C03B9FE5 		ldr	r3, .L229+32
 2068 04f8 0020C3E5 		strb	r2, [r3]
 844:../CX3RDKOV5640.c **** 							glFrameIndexToSet = glCurrentFrameIndex;
 2069              		.loc 1 844 0
 2070 04fc B83B9FE5 		ldr	r3, .L229+32
 2071 0500 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 2072 0504 E83B9FE5 		ldr	r3, .L229+88
 2073 0508 0020C3E5 		strb	r2, [r3]
 845:../CX3RDKOV5640.c **** 							glPreviewStarted = CyTrue;
 2074              		.loc 1 845 0
 2075 050c 943B9FE5 		ldr	r3, .L229+12
 2076 0510 0120A0E3 		mov	r2, #1
 2077 0514 002083E5 		str	r2, [r3]
 846:../CX3RDKOV5640.c **** 
 847:../CX3RDKOV5640.c **** 							//TODO Change this function with "Sensor Specific" function to write the sensor settings & c
 848:../CX3RDKOV5640.c **** 						//	esSetCameraResolution(glCurrentFrameIndex);
 849:../CX3RDKOV5640.c **** 							esSetCameraResolution(glCommitCtrl[3]);
 2078              		.loc 1 849 0
 2079 0518 C43B9FE5 		ldr	r3, .L229+72
 2080 051c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2081 0520 0300A0E1 		mov	r0, r3
 2082 0524 FEFFFFEB 		bl	esSetCameraResolution
 850:../CX3RDKOV5640.c **** 
 851:../CX3RDKOV5640.c **** 							if (glIsApplnActive)
 2083              		.loc 1 851 0
 2084 0528 703B9FE5 		ldr	r3, .L229+4
 2085 052c 003093E5 		ldr	r3, [r3]
 2086 0530 000053E3 		cmp	r3, #0
 2087 0534 0E00000A 		beq	.L115
 852:../CX3RDKOV5640.c **** 							{
 853:../CX3RDKOV5640.c **** 								if(glcommitcount)
 2088              		.loc 1 853 0
 2089 0538 703B9FE5 		ldr	r3, .L229+20
 2090 053c 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2091 0540 000053E3 		cmp	r3, #0
 2092 0544 0300000A 		beq	.L116
 854:../CX3RDKOV5640.c **** 									glIsClearFeature = CyFalse;
 2093              		.loc 1 854 0
 2094 0548 5C3B9FE5 		ldr	r3, .L229+16
 2095 054c 0020A0E3 		mov	r2, #0
 2096 0550 002083E5 		str	r2, [r3]
 2097 0554 020000EA 		b	.L117
 2098              	.L116:
 855:../CX3RDKOV5640.c **** 								else
 856:../CX3RDKOV5640.c **** 									glIsClearFeature = CyTrue;
 2099              		.loc 1 856 0
 2100 0558 4C3B9FE5 		ldr	r3, .L229+16
 2101 055c 0120A0E3 		mov	r2, #1
 2102 0560 002083E5 		str	r2, [r3]
 2103              	.L117:
 857:../CX3RDKOV5640.c **** 
 858:../CX3RDKOV5640.c **** 								esUVCUvcApplnStop();
 2104              		.loc 1 858 0
 2105 0564 FEFFFFEB 		bl	esUVCUvcApplnStop
 859:../CX3RDKOV5640.c **** #ifdef VISDebug
 860:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStop");
 2106              		.loc 1 860 0
 2107 0568 0400A0E3 		mov	r0, #4
 2108 056c 841B9FE5 		ldr	r1, .L229+92
 2109 0570 FEFFFFEB 		bl	CyU3PDebugPrint
 2110              	.L115:
 861:../CX3RDKOV5640.c **** #endif
 862:../CX3RDKOV5640.c **** 							}
 863:../CX3RDKOV5640.c **** 							esUVCUvcApplnStart();
 2111              		.loc 1 863 0
 2112 0574 FEFFFFEB 		bl	esUVCUvcApplnStart
 864:../CX3RDKOV5640.c **** #ifdef VISDebug
 865:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApplnUSBSetupCB:ES_UVC_VS_COMMIT_CONTROL esUVCUvcApplnStart");
 2113              		.loc 1 865 0
 2114 0578 0400A0E3 		mov	r0, #4
 2115 057c 781B9FE5 		ldr	r1, .L229+96
 2116 0580 FEFFFFEB 		bl	CyU3PDebugPrint
 824:../CX3RDKOV5640.c **** 					{
 2117              		.loc 1 824 0
 2118 0584 7D0000EA 		b	.L118
 2119              	.L112:
 2120 0588 7C0000EA 		b	.L118
 2121              	.L109:
 866:../CX3RDKOV5640.c **** #endif
 867:../CX3RDKOV5640.c **** 							}
 868:../CX3RDKOV5640.c **** 						}
 869:../CX3RDKOV5640.c **** 					}
 870:../CX3RDKOV5640.c ****                 }
 871:../CX3RDKOV5640.c ****                 else if((wValue == ES_UVC_STILL_PROBE_CONTROL) || (wValue == ES_UVC_STILL_COMMIT_CO
 2122              		.loc 1 871 0
 2123 058c BC325BE1 		ldrh	r3, [fp, #-44]
 2124 0590 030C53E3 		cmp	r3, #768
 2125 0594 0200000A 		beq	.L119
 2126              		.loc 1 871 0 is_stmt 0 discriminator 1
 2127 0598 BC325BE1 		ldrh	r3, [fp, #-44]
 2128 059c 010B53E3 		cmp	r3, #1024
 2129 05a0 5400001A 		bne	.L120
 2130              	.L119:
 872:../CX3RDKOV5640.c ****                 {
 873:../CX3RDKOV5640.c ****                 	/* Get the UVC STILL probe/commit control data from EP0 */
 874:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_MAX_STILL_PROBE_SETTING_ALIGNED,glStillCommitCtrl, &readCou
 2131              		.loc 1 874 0 is_stmt 1
 2132 05a4 32304BE2 		sub	r3, fp, #50
 2133 05a8 2000A0E3 		mov	r0, #32
 2134 05ac 4C1B9FE5 		ldr	r1, .L229+100
 2135 05b0 0320A0E1 		mov	r2, r3
 2136 05b4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2137 05b8 24000BE5 		str	r0, [fp, #-36]
 875:../CX3RDKOV5640.c **** 					CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:still = 0x%x.", wValue);
 2138              		.loc 1 875 0
 2139 05bc BC325BE1 		ldrh	r3, [fp, #-44]
 2140 05c0 0400A0E3 		mov	r0, #4
 2141 05c4 381B9FE5 		ldr	r1, .L229+104
 2142 05c8 0320A0E1 		mov	r2, r3
 2143 05cc FEFFFFEB 		bl	CyU3PDebugPrint
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 877:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[0], glStillCommitCtrl[1],  glStillCommitCtrl[2], glStillCom
 2144              		.loc 1 877 0
 2145 05d0 283B9FE5 		ldr	r3, .L229+100
 2146 05d4 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2147              		.loc 1 876 0
 2148 05d8 0320A0E1 		mov	r2, r3
 2149              		.loc 1 877 0
 2150 05dc 1C3B9FE5 		ldr	r3, .L229+100
 2151 05e0 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2152 05e4 141B9FE5 		ldr	r1, .L229+100
 2153 05e8 0210D1E5 		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2154              		.loc 1 876 0
 2155 05ec 0180A0E1 		mov	r8, r1
 2156              		.loc 1 877 0
 2157 05f0 081B9FE5 		ldr	r1, .L229+100
 2158 05f4 0310D1E5 		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2159              		.loc 1 876 0
 2160 05f8 0170A0E1 		mov	r7, r1
 878:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[4], glStillCommitCtrl[5],  glStillCommitCtrl[6], glStillCom
 2161              		.loc 1 878 0
 2162 05fc FC1A9FE5 		ldr	r1, .L229+100
 2163 0600 0410D1E5 		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2164              		.loc 1 876 0
 2165 0604 0160A0E1 		mov	r6, r1
 2166              		.loc 1 878 0
 2167 0608 F01A9FE5 		ldr	r1, .L229+100
 2168 060c 0510D1E5 		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2169              		.loc 1 876 0
 2170 0610 0150A0E1 		mov	r5, r1
 2171              		.loc 1 878 0
 2172 0614 E41A9FE5 		ldr	r1, .L229+100
 2173 0618 0610D1E5 		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2174              		.loc 1 876 0
 2175 061c 0140A0E1 		mov	r4, r1
 2176              		.loc 1 878 0
 2177 0620 D81A9FE5 		ldr	r1, .L229+100
 2178 0624 0710D1E5 		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2179              		.loc 1 876 0
 2180 0628 01E0A0E1 		mov	lr, r1
 879:../CX3RDKOV5640.c ****                     		glStillCommitCtrl[8], glStillCommitCtrl[9], glStillCommitCtrl[10]);
 2181              		.loc 1 879 0
 2182 062c CC1A9FE5 		ldr	r1, .L229+100
 2183 0630 0810D1E5 		ldrb	r1, [r1, #8]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2184              		.loc 1 876 0
 2185 0634 01C0A0E1 		mov	ip, r1
 2186              		.loc 1 879 0
 2187 0638 C01A9FE5 		ldr	r1, .L229+100
 2188 063c 0910D1E5 		ldrb	r1, [r1, #9]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2189              		.loc 1 876 0
 2190 0640 0100A0E1 		mov	r0, r1
 2191              		.loc 1 879 0
 2192 0644 B41A9FE5 		ldr	r1, .L229+100
 2193 0648 0A10D1E5 		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 876:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\r %d %d %d %d %d %d %d %d %d %d %d\r\n",
 2194              		.loc 1 876 0
 2195 064c 00808DE5 		str	r8, [sp]
 2196 0650 04708DE5 		str	r7, [sp, #4]
 2197 0654 08608DE5 		str	r6, [sp, #8]
 2198 0658 0C508DE5 		str	r5, [sp, #12]
 2199 065c 10408DE5 		str	r4, [sp, #16]
 2200 0660 14E08DE5 		str	lr, [sp, #20]
 2201 0664 18C08DE5 		str	ip, [sp, #24]
 2202 0668 1C008DE5 		str	r0, [sp, #28]
 2203 066c 20108DE5 		str	r1, [sp, #32]
 2204 0670 0400A0E3 		mov	r0, #4
 2205 0674 8C1A9FE5 		ldr	r1, .L229+108
 2206 0678 FEFFFFEB 		bl	CyU3PDebugPrint
 880:../CX3RDKOV5640.c **** 
 881:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2207              		.loc 1 881 0
 2208 067c 24301BE5 		ldr	r3, [fp, #-36]
 2209 0680 000053E3 		cmp	r3, #0
 2210 0684 0300000A 		beq	.L121
 882:../CX3RDKOV5640.c **** 					{
 883:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2211              		.loc 1 883 0
 2212 0688 0400A0E3 		mov	r0, #4
 2213 068c 541A9FE5 		ldr	r1, .L229+76
 2214 0690 24201BE5 		ldr	r2, [fp, #-36]
 2215 0694 FEFFFFEB 		bl	CyU3PDebugPrint
 2216              	.L121:
 884:../CX3RDKOV5640.c **** 					}
 885:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 886:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_MAX_STILL_PROBE_SETTING)
 2217              		.loc 1 886 0
 2218 0698 B2335BE1 		ldrh	r3, [fp, #-50]
 2219 069c 0B0053E3 		cmp	r3, #11
 2220 06a0 0300009A 		bls	.L122
 887:../CX3RDKOV5640.c **** 					{
 888:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2221              		.loc 1 888 0
 2222 06a4 0400A0E3 		mov	r0, #4
 2223 06a8 3C1A9FE5 		ldr	r1, .L229+80
 2224 06ac FEFFFFEB 		bl	CyU3PDebugPrint
 2225 06b0 0F0000EA 		b	.L123
 2226              	.L122:
 889:../CX3RDKOV5640.c **** 					}
 890:../CX3RDKOV5640.c **** 					else
 891:../CX3RDKOV5640.c **** 					{
 892:../CX3RDKOV5640.c **** 						/* Set Probe Control */
 893:../CX3RDKOV5640.c **** 						if(wValue == ES_UVC_STILL_PROBE_CONTROL)
 2227              		.loc 1 893 0
 2228 06b4 BC325BE1 		ldrh	r3, [fp, #-44]
 2229 06b8 030C53E3 		cmp	r3, #768
 2230 06bc 0400001A 		bne	.L124
 894:../CX3RDKOV5640.c **** 						{
 895:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2231              		.loc 1 895 0
 2232 06c0 383A9FE5 		ldr	r3, .L229+100
 2233 06c4 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2234 06c8 3C3A9FE5 		ldr	r3, .L229+112
 2235 06cc 0020C3E5 		strb	r2, [r3]
 2236 06d0 070000EA 		b	.L123
 2237              	.L124:
 896:../CX3RDKOV5640.c **** 						}
 897:../CX3RDKOV5640.c **** 						/* Set Commit Control and Start Streaming*/
 898:../CX3RDKOV5640.c **** 						else if(wValue == ES_UVC_STILL_COMMIT_CONTROL)
 2238              		.loc 1 898 0
 2239 06d4 BC325BE1 		ldrh	r3, [fp, #-44]
 2240 06d8 010B53E3 		cmp	r3, #1024
 2241 06dc 0400001A 		bne	.L123
 899:../CX3RDKOV5640.c **** 						{
 900:../CX3RDKOV5640.c **** 							glCurrentStillFrameIndex = glStillCommitCtrl[1];
 2242              		.loc 1 900 0
 2243 06e0 183A9FE5 		ldr	r3, .L229+100
 2244 06e4 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2245 06e8 1C3A9FE5 		ldr	r3, .L229+112
 2246 06ec 0020C3E5 		strb	r2, [r3]
 886:../CX3RDKOV5640.c **** 					{
 2247              		.loc 1 886 0
 2248 06f0 220000EA 		b	.L118
 2249              	.L123:
 2250 06f4 210000EA 		b	.L118
 2251              	.L120:
 901:../CX3RDKOV5640.c **** 						}
 902:../CX3RDKOV5640.c **** 					}
 903:../CX3RDKOV5640.c **** 
 904:../CX3RDKOV5640.c ****                 }
 905:../CX3RDKOV5640.c ****                 else if(wValue == ES_UVC_STILL_TRIGGER)
 2252              		.loc 1 905 0
 2253 06f8 BC325BE1 		ldrh	r3, [fp, #-44]
 2254 06fc 050C53E3 		cmp	r3, #1280
 2255 0700 DA03001A 		bne	.L90
 906:../CX3RDKOV5640.c ****                 {
 907:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(ES_UVC_STILL_TRIGGER_ALIGNED,&glStillTriggerCtrl, &readCount);
 2256              		.loc 1 907 0
 2257 0704 32304BE2 		sub	r3, fp, #50
 2258 0708 1000A0E3 		mov	r0, #16
 2259 070c FC199FE5 		ldr	r1, .L229+116
 2260 0710 0320A0E1 		mov	r2, r3
 2261 0714 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2262 0718 24000BE5 		str	r0, [fp, #-36]
 908:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2263              		.loc 1 908 0
 2264 071c 24301BE5 		ldr	r3, [fp, #-36]
 2265 0720 000053E3 		cmp	r3, #0
 2266 0724 0300000A 		beq	.L125
 909:../CX3RDKOV5640.c **** 					{
 910:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:SET_CUR:GetEP0Data Err = 0x%x.", status);
 2267              		.loc 1 910 0
 2268 0728 0400A0E3 		mov	r0, #4
 2269 072c B4199FE5 		ldr	r1, .L229+76
 2270 0730 24201BE5 		ldr	r2, [fp, #-36]
 2271 0734 FEFFFFEB 		bl	CyU3PDebugPrint
 2272              	.L125:
 911:../CX3RDKOV5640.c **** 					}
 912:../CX3RDKOV5640.c **** 					/* Check the read count. Expecting a count of CX3_UVC_MAX_PROBE_SETTING bytes. */
 913:../CX3RDKOV5640.c **** 					if (readCount > (uint16_t)ES_UVC_STILL_TRIGGER_COUNT)
 2273              		.loc 1 913 0
 2274 0738 B2335BE1 		ldrh	r3, [fp, #-50]
 2275 073c 010053E3 		cmp	r3, #1
 2276 0740 0300009A 		bls	.L126
 914:../CX3RDKOV5640.c **** 					{
 915:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:Invalid SET_CUR Rqt Len.");
 2277              		.loc 1 915 0
 2278 0744 0400A0E3 		mov	r0, #4
 2279 0748 9C199FE5 		ldr	r1, .L229+80
 2280 074c FEFFFFEB 		bl	CyU3PDebugPrint
 2281 0750 C60300EA 		b	.L90
 2282              	.L126:
 916:../CX3RDKOV5640.c **** 					}
 917:../CX3RDKOV5640.c **** 					else
 918:../CX3RDKOV5640.c **** 					{
 919:../CX3RDKOV5640.c **** 						if(glStillTriggerCtrl == 0x01)
 2283              		.loc 1 919 0
 2284 0754 B4399FE5 		ldr	r3, .L229+116
 2285 0758 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 075c 010053E3 		cmp	r3, #1
 2287 0760 C203001A 		bne	.L90
 920:../CX3RDKOV5640.c **** 						{
 921:../CX3RDKOV5640.c **** 							glStillSkip = 3;
 2288              		.loc 1 921 0
 2289 0764 A8399FE5 		ldr	r3, .L229+120
 2290 0768 0320A0E3 		mov	r2, #3
 2291 076c 0020C3E5 		strb	r2, [r3]
 922:../CX3RDKOV5640.c **** 							glStillCaptureStart = CyTrue;
 2292              		.loc 1 922 0
 2293 0770 A0399FE5 		ldr	r3, .L229+124
 2294 0774 0120A0E3 		mov	r2, #1
 2295 0778 002083E5 		str	r2, [r3]
 2296 077c BB0300EA 		b	.L90
 2297              	.L118:
 2298 0780 BA0300EA 		b	.L90
 2299              	.L107:
 923:../CX3RDKOV5640.c **** 						}
 924:../CX3RDKOV5640.c **** 					}
 925:../CX3RDKOV5640.c ****                 }
 926:../CX3RDKOV5640.c ****             }
 927:../CX3RDKOV5640.c ****             else
 928:../CX3RDKOV5640.c ****             {
 929:../CX3RDKOV5640.c ****                 /* Mark with error. */
 930:../CX3RDKOV5640.c ****                 status = CY_U3P_ERROR_FAILURE;
 2300              		.loc 1 930 0
 2301 0784 4A30A0E3 		mov	r3, #74
 2302 0788 24300BE5 		str	r3, [fp, #-36]
 2303 078c B70300EA 		b	.L90
 2304              	.L106:
 2305 0790 B60300EA 		b	.L90
 2306              	.L91:
 931:../CX3RDKOV5640.c ****             }
 932:../CX3RDKOV5640.c ****         }
 933:../CX3RDKOV5640.c ****         else if((wIndex & 0x00FF) == ES_UVC_CONTROL_INTERFACE) /* Video Control Interface */
 2307              		.loc 1 933 0
 2308 0794 BE325BE1 		ldrh	r3, [fp, #-46]
 2309 0798 FF3003E2 		and	r3, r3, #255
 2310 079c 000053E3 		cmp	r3, #0
 2311 07a0 B203001A 		bne	.L90
 934:../CX3RDKOV5640.c ****         {
 935:../CX3RDKOV5640.c ****             isHandled = CyTrue;
 2312              		.loc 1 935 0
 2313 07a4 0130A0E3 		mov	r3, #1
 2314 07a8 20300BE5 		str	r3, [fp, #-32]
 936:../CX3RDKOV5640.c ****             /* Respond to VC_REQUEST_ERROR_CODE_CONTROL and stall every other request as this examp
 937:../CX3RDKOV5640.c ****                any of the Video Control features */
 938:../CX3RDKOV5640.c ****             if((wIndex == 0x200) && (wValue == 0x200))/*Brightness*/
 2315              		.loc 1 938 0
 2316 07ac BE325BE1 		ldrh	r3, [fp, #-46]
 2317 07b0 020C53E3 		cmp	r3, #512
 2318 07b4 4D00001A 		bne	.L127
 2319              		.loc 1 938 0 is_stmt 0 discriminator 1
 2320 07b8 BC325BE1 		ldrh	r3, [fp, #-44]
 2321 07bc 020C53E3 		cmp	r3, #512
 2322 07c0 4A00001A 		bne	.L127
 939:../CX3RDKOV5640.c ****             {
 940:../CX3RDKOV5640.c ****             	switch(bRequest)
 2323              		.loc 1 940 0 is_stmt 1
 2324 07c4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2325 07c8 840053E3 		cmp	r3, #132
 2326 07cc 040000CA 		bgt	.L129
 2327 07d0 810053E3 		cmp	r3, #129
 2328 07d4 170000AA 		bge	.L130
 2329 07d8 010053E3 		cmp	r3, #1
 2330 07dc 2D00000A 		beq	.L131
 941:../CX3RDKOV5640.c ****             	{
 942:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_INFO_REQ:
 943:../CX3RDKOV5640.c ****             		glGet_Info=0x03;
 944:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 945:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 946:../CX3RDKOV5640.c **** 					{
 947:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 948:../CX3RDKOV5640.c **** 					}
 949:../CX3RDKOV5640.c **** 					break;
 950:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 951:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MAX_REQ:
 952:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_RES_REQ:
 953:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_CUR_REQ:
 954:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_DEF_REQ:
 955:../CX3RDKOV5640.c ****             		RequestOption = (bRequest & 0x0F);
 956:../CX3RDKOV5640.c **** 
 957:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service all the GE
 958:../CX3RDKOV5640.c ****             		gl16GetControl = esOV5640_GetBrightness(RequestOption);
 959:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 960:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 961:../CX3RDKOV5640.c **** 					{
 962:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 963:../CX3RDKOV5640.c **** 					}
 964:../CX3RDKOV5640.c ****             		break;
 965:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 966:../CX3RDKOV5640.c ****             		status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
 967:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 968:../CX3RDKOV5640.c **** 					{
 969:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 970:../CX3RDKOV5640.c **** 					}
 971:../CX3RDKOV5640.c ****             		//TODO Change this function with the "Sensor specific" function to Service the SET re
 972:../CX3RDKOV5640.c **** 					esOV5640_SetBrightness((int8_t)gl16SetControl);
 973:../CX3RDKOV5640.c **** 					break;
 974:../CX3RDKOV5640.c ****             	}
 975:../CX3RDKOV5640.c ****             }
 2331              		.loc 1 975 0
 2332 07e0 A20300EA 		b	.L90
 2333              	.L129:
 940:../CX3RDKOV5640.c ****             	{
 2334              		.loc 1 940 0
 2335 07e4 860053E3 		cmp	r3, #134
 2336 07e8 0200000A 		beq	.L132
 2337 07ec 870053E3 		cmp	r3, #135
 2338 07f0 1000000A 		beq	.L130
 2339              		.loc 1 975 0
 2340 07f4 9D0300EA 		b	.L90
 2341              	.L132:
 943:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2342              		.loc 1 943 0
 2343 07f8 34399FE5 		ldr	r3, .L229+152
 2344 07fc 0320A0E3 		mov	r2, #3
 2345 0800 0020C3E5 		strb	r2, [r3]
 944:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2346              		.loc 1 944 0
 2347 0804 0100A0E3 		mov	r0, #1
 2348 0808 24199FE5 		ldr	r1, .L229+152
 2349 080c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2350 0810 24000BE5 		str	r0, [fp, #-36]
 945:../CX3RDKOV5640.c **** 					{
 2351              		.loc 1 945 0
 2352 0814 24301BE5 		ldr	r3, [fp, #-36]
 2353 0818 000053E3 		cmp	r3, #0
 2354 081c 0400000A 		beq	.L133
 947:../CX3RDKOV5640.c **** 					}
 2355              		.loc 1 947 0
 2356 0820 0400A0E3 		mov	r0, #4
 2357 0824 14199FE5 		ldr	r1, .L229+164
 2358 0828 24201BE5 		ldr	r2, [fp, #-36]
 2359 082c FEFFFFEB 		bl	CyU3PDebugPrint
 949:../CX3RDKOV5640.c ****             	case ES_UVC_USB_GET_MIN_REQ:
 2360              		.loc 1 949 0
 2361 0830 2D0000EA 		b	.L128
 2362              	.L133:
 2363 0834 2C0000EA 		b	.L128
 2364              	.L130:
 955:../CX3RDKOV5640.c **** 
 2365              		.loc 1 955 0
 2366 0838 29305BE5 		ldrb	r3, [fp, #-41]
 2367 083c 0F3003E2 		and	r3, r3, #15
 2368 0840 25304BE5 		strb	r3, [fp, #-37]
 958:../CX3RDKOV5640.c ****             		status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2369              		.loc 1 958 0
 2370 0844 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2371 0848 0300A0E1 		mov	r0, r3
 2372 084c FEFFFFEB 		bl	esOV5640_GetBrightness
 2373 0850 0030A0E1 		mov	r3, r0
 2374 0854 0338A0E1 		mov	r3, r3, asl #16
 2375 0858 2328A0E1 		mov	r2, r3, lsr #16
 2376 085c D4389FE5 		ldr	r3, .L229+156
 2377 0860 B020C3E1 		strh	r2, [r3]	@ movhi
 959:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2378              		.loc 1 959 0
 2379 0864 0200A0E3 		mov	r0, #2
 2380 0868 C8189FE5 		ldr	r1, .L229+156
 2381 086c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2382 0870 24000BE5 		str	r0, [fp, #-36]
 960:../CX3RDKOV5640.c **** 					{
 2383              		.loc 1 960 0
 2384 0874 24301BE5 		ldr	r3, [fp, #-36]
 2385 0878 000053E3 		cmp	r3, #0
 2386 087c 0400000A 		beq	.L134
 962:../CX3RDKOV5640.c **** 					}
 2387              		.loc 1 962 0
 2388 0880 0400A0E3 		mov	r0, #4
 2389 0884 B4189FE5 		ldr	r1, .L229+164
 2390 0888 24201BE5 		ldr	r2, [fp, #-36]
 2391 088c FEFFFFEB 		bl	CyU3PDebugPrint
 964:../CX3RDKOV5640.c ****             	case ES_UVC_USB_SET_CUR_REQ:
 2392              		.loc 1 964 0
 2393 0890 150000EA 		b	.L128
 2394              	.L134:
 2395 0894 140000EA 		b	.L128
 2396              	.L131:
 966:../CX3RDKOV5640.c ****             		if (status != CY_U3P_SUCCESS)
 2397              		.loc 1 966 0
 2398 0898 32304BE2 		sub	r3, fp, #50
 2399 089c 1000A0E3 		mov	r0, #16
 2400 08a0 94189FE5 		ldr	r1, .L229+160
 2401 08a4 0320A0E1 		mov	r2, r3
 2402 08a8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2403 08ac 24000BE5 		str	r0, [fp, #-36]
 967:../CX3RDKOV5640.c **** 					{
 2404              		.loc 1 967 0
 2405 08b0 24301BE5 		ldr	r3, [fp, #-36]
 2406 08b4 000053E3 		cmp	r3, #0
 2407 08b8 0300000A 		beq	.L135
 969:../CX3RDKOV5640.c **** 					}
 2408              		.loc 1 969 0
 2409 08bc 0400A0E3 		mov	r0, #4
 2410 08c0 78189FE5 		ldr	r1, .L229+164
 2411 08c4 24201BE5 		ldr	r2, [fp, #-36]
 2412 08c8 FEFFFFEB 		bl	CyU3PDebugPrint
 2413              	.L135:
 972:../CX3RDKOV5640.c **** 					break;
 2414              		.loc 1 972 0
 2415 08cc 68389FE5 		ldr	r3, .L229+160
 2416 08d0 B030D3E1 		ldrh	r3, [r3]
 2417 08d4 FF3003E2 		and	r3, r3, #255
 2418 08d8 033CA0E1 		mov	r3, r3, asl #24
 2419 08dc 433CA0E1 		mov	r3, r3, asr #24
 2420 08e0 0300A0E1 		mov	r0, r3
 2421 08e4 FEFFFFEB 		bl	esOV5640_SetBrightness
 973:../CX3RDKOV5640.c ****             	}
 2422              		.loc 1 973 0
 2423 08e8 0000A0E1 		mov	r0, r0	@ nop
 2424              	.L128:
 2425              		.loc 1 975 0
 2426 08ec 5F0300EA 		b	.L90
 2427              	.L127:
 976:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x200))/*Auto Exposure*/
 2428              		.loc 1 976 0
 2429 08f0 BE325BE1 		ldrh	r3, [fp, #-46]
 2430 08f4 010C53E3 		cmp	r3, #256
 2431 08f8 4A00001A 		bne	.L136
 2432              		.loc 1 976 0 is_stmt 0 discriminator 1
 2433 08fc BC325BE1 		ldrh	r3, [fp, #-44]
 2434 0900 020C53E3 		cmp	r3, #512
 2435 0904 4700001A 		bne	.L136
 977:../CX3RDKOV5640.c **** 			{
 978:../CX3RDKOV5640.c ****             //	CyU3PDebugPrint (4, "\n\rAuto Exposure");
 979:../CX3RDKOV5640.c **** 				switch(bRequest)
 2436              		.loc 1 979 0 is_stmt 1
 2437 0908 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2438 090c 840053E3 		cmp	r3, #132
 2439 0910 040000CA 		bgt	.L138
 2440 0914 810053E3 		cmp	r3, #129
 2441 0918 170000AA 		bge	.L139
 2442 091c 010053E3 		cmp	r3, #1
 2443 0920 2C00000A 		beq	.L140
 980:../CX3RDKOV5640.c **** 				{
 981:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
 982:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
 983:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 984:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 985:../CX3RDKOV5640.c **** 					{
 986:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 987:../CX3RDKOV5640.c **** 					}
 988:../CX3RDKOV5640.c **** 					break;
 989:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 990:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
 991:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
 992:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
 993:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
 994:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
 995:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 996:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutoExposure(RequestOption);
 997:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 998:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 999:../CX3RDKOV5640.c **** 					{
1000:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1001:../CX3RDKOV5640.c **** 					}
1002:../CX3RDKOV5640.c **** 					break;
1003:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1004:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1005:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1006:../CX3RDKOV5640.c **** 					{
1007:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1008:../CX3RDKOV5640.c **** 					}
1009:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1010:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Exposure= %d",gl8SetControl);
1011:../CX3RDKOV5640.c **** 					esOV5640_SetAutoExposure(gl8SetControl);
1012:../CX3RDKOV5640.c **** 					break;
1013:../CX3RDKOV5640.c **** 				}
1014:../CX3RDKOV5640.c **** 			}
 2444              		.loc 1 1014 0
 2445 0924 510300EA 		b	.L90
 2446              	.L138:
 979:../CX3RDKOV5640.c **** 				{
 2447              		.loc 1 979 0
 2448 0928 860053E3 		cmp	r3, #134
 2449 092c 0200000A 		beq	.L141
 2450 0930 870053E3 		cmp	r3, #135
 2451 0934 1000000A 		beq	.L139
 2452              		.loc 1 1014 0
 2453 0938 4C0300EA 		b	.L90
 2454              	.L141:
 982:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2455              		.loc 1 982 0
 2456 093c F0379FE5 		ldr	r3, .L229+152
 2457 0940 0320A0E3 		mov	r2, #3
 2458 0944 0020C3E5 		strb	r2, [r3]
 983:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2459              		.loc 1 983 0
 2460 0948 0100A0E3 		mov	r0, #1
 2461 094c E0179FE5 		ldr	r1, .L229+152
 2462 0950 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2463 0954 24000BE5 		str	r0, [fp, #-36]
 984:../CX3RDKOV5640.c **** 					{
 2464              		.loc 1 984 0
 2465 0958 24301BE5 		ldr	r3, [fp, #-36]
 2466 095c 000053E3 		cmp	r3, #0
 2467 0960 0400000A 		beq	.L142
 986:../CX3RDKOV5640.c **** 					}
 2468              		.loc 1 986 0
 2469 0964 0400A0E3 		mov	r0, #4
 2470 0968 D0179FE5 		ldr	r1, .L229+164
 2471 096c 24201BE5 		ldr	r2, [fp, #-36]
 2472 0970 FEFFFFEB 		bl	CyU3PDebugPrint
 988:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2473              		.loc 1 988 0
 2474 0974 2A0000EA 		b	.L137
 2475              	.L142:
 2476 0978 290000EA 		b	.L137
 2477              	.L139:
 994:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2478              		.loc 1 994 0
 2479 097c 29305BE5 		ldrb	r3, [fp, #-41]
 2480 0980 0F3003E2 		and	r3, r3, #15
 2481 0984 25304BE5 		strb	r3, [fp, #-37]
 996:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,(uint8_t*)&gl8GetControl);
 2482              		.loc 1 996 0
 2483 0988 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2484 098c 0300A0E1 		mov	r0, r3
 2485 0990 FEFFFFEB 		bl	esOV5640_GetAutoExposure
 2486 0994 0030A0E1 		mov	r3, r0
 2487 0998 0320A0E1 		mov	r2, r3
 2488 099c 84379FE5 		ldr	r3, .L229+140
 2489 09a0 B020C3E1 		strh	r2, [r3]	@ movhi
 997:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2490              		.loc 1 997 0
 2491 09a4 0100A0E3 		mov	r0, #1
 2492 09a8 78179FE5 		ldr	r1, .L229+140
 2493 09ac FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2494 09b0 24000BE5 		str	r0, [fp, #-36]
 998:../CX3RDKOV5640.c **** 					{
 2495              		.loc 1 998 0
 2496 09b4 24301BE5 		ldr	r3, [fp, #-36]
 2497 09b8 000053E3 		cmp	r3, #0
 2498 09bc 0400000A 		beq	.L143
1000:../CX3RDKOV5640.c **** 					}
 2499              		.loc 1 1000 0
 2500 09c0 0400A0E3 		mov	r0, #4
 2501 09c4 74179FE5 		ldr	r1, .L229+164
 2502 09c8 24201BE5 		ldr	r2, [fp, #-36]
 2503 09cc FEFFFFEB 		bl	CyU3PDebugPrint
1002:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2504              		.loc 1 1002 0
 2505 09d0 130000EA 		b	.L137
 2506              	.L143:
 2507 09d4 120000EA 		b	.L137
 2508              	.L140:
1004:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2509              		.loc 1 1004 0
 2510 09d8 32304BE2 		sub	r3, fp, #50
 2511 09dc 1000A0E3 		mov	r0, #16
 2512 09e0 44179FE5 		ldr	r1, .L229+144
 2513 09e4 0320A0E1 		mov	r2, r3
 2514 09e8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2515 09ec 24000BE5 		str	r0, [fp, #-36]
1005:../CX3RDKOV5640.c **** 					{
 2516              		.loc 1 1005 0
 2517 09f0 24301BE5 		ldr	r3, [fp, #-36]
 2518 09f4 000053E3 		cmp	r3, #0
 2519 09f8 0300000A 		beq	.L144
1007:../CX3RDKOV5640.c **** 					}
 2520              		.loc 1 1007 0
 2521 09fc 0400A0E3 		mov	r0, #4
 2522 0a00 38179FE5 		ldr	r1, .L229+164
 2523 0a04 24201BE5 		ldr	r2, [fp, #-36]
 2524 0a08 FEFFFFEB 		bl	CyU3PDebugPrint
 2525              	.L144:
1011:../CX3RDKOV5640.c **** 					break;
 2526              		.loc 1 1011 0
 2527 0a0c 18379FE5 		ldr	r3, .L229+144
 2528 0a10 B030D3E1 		ldrh	r3, [r3]
 2529 0a14 FF3003E2 		and	r3, r3, #255
 2530 0a18 0300A0E1 		mov	r0, r3
 2531 0a1c FEFFFFEB 		bl	esOV5640_SetAutoExposure
1012:../CX3RDKOV5640.c **** 				}
 2532              		.loc 1 1012 0
 2533 0a20 0000A0E1 		mov	r0, r0	@ nop
 2534              	.L137:
 2535              		.loc 1 1014 0
 2536 0a24 110300EA 		b	.L90
 2537              	.L136:
1015:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x300))/*Contrast*/
 2538              		.loc 1 1015 0
 2539 0a28 BE325BE1 		ldrh	r3, [fp, #-46]
 2540 0a2c 020C53E3 		cmp	r3, #512
 2541 0a30 4D00001A 		bne	.L145
 2542              		.loc 1 1015 0 is_stmt 0 discriminator 1
 2543 0a34 BC325BE1 		ldrh	r3, [fp, #-44]
 2544 0a38 030C53E3 		cmp	r3, #768
 2545 0a3c 4A00001A 		bne	.L145
1016:../CX3RDKOV5640.c ****             {
1017:../CX3RDKOV5640.c ****             	switch(bRequest)
 2546              		.loc 1 1017 0 is_stmt 1
 2547 0a40 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2548 0a44 840053E3 		cmp	r3, #132
 2549 0a48 040000CA 		bgt	.L147
 2550 0a4c 810053E3 		cmp	r3, #129
 2551 0a50 170000AA 		bge	.L148
 2552 0a54 010053E3 		cmp	r3, #1
 2553 0a58 2D00000A 		beq	.L149
1018:../CX3RDKOV5640.c **** 				{
1019:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1020:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1021:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1022:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1023:../CX3RDKOV5640.c **** 					{
1024:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1025:../CX3RDKOV5640.c **** 					}
1026:../CX3RDKOV5640.c **** 					break;
1027:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1028:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1029:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1030:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1031:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1032:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1033:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1034:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetContrast(RequestOption);
1035:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1036:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1037:../CX3RDKOV5640.c **** 					{
1038:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1039:../CX3RDKOV5640.c **** 					}
1040:../CX3RDKOV5640.c **** 					break;
1041:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1042:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1043:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1044:../CX3RDKOV5640.c **** 					{
1045:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1046:../CX3RDKOV5640.c **** 					}
1047:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1048:../CX3RDKOV5640.c **** 					esOV5640_SetContrast((int8_t)gl16SetControl);
1049:../CX3RDKOV5640.c **** 					break;
1050:../CX3RDKOV5640.c **** 				}
1051:../CX3RDKOV5640.c ****             }
 2554              		.loc 1 1051 0
 2555 0a5c 030300EA 		b	.L90
 2556              	.L147:
1017:../CX3RDKOV5640.c **** 				{
 2557              		.loc 1 1017 0
 2558 0a60 860053E3 		cmp	r3, #134
 2559 0a64 0200000A 		beq	.L150
 2560 0a68 870053E3 		cmp	r3, #135
 2561 0a6c 1000000A 		beq	.L148
 2562              		.loc 1 1051 0
 2563 0a70 FE0200EA 		b	.L90
 2564              	.L150:
1020:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2565              		.loc 1 1020 0
 2566 0a74 B8369FE5 		ldr	r3, .L229+152
 2567 0a78 0320A0E3 		mov	r2, #3
 2568 0a7c 0020C3E5 		strb	r2, [r3]
1021:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2569              		.loc 1 1021 0
 2570 0a80 0100A0E3 		mov	r0, #1
 2571 0a84 A8169FE5 		ldr	r1, .L229+152
 2572 0a88 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2573 0a8c 24000BE5 		str	r0, [fp, #-36]
1022:../CX3RDKOV5640.c **** 					{
 2574              		.loc 1 1022 0
 2575 0a90 24301BE5 		ldr	r3, [fp, #-36]
 2576 0a94 000053E3 		cmp	r3, #0
 2577 0a98 0400000A 		beq	.L151
1024:../CX3RDKOV5640.c **** 					}
 2578              		.loc 1 1024 0
 2579 0a9c 0400A0E3 		mov	r0, #4
 2580 0aa0 98169FE5 		ldr	r1, .L229+164
 2581 0aa4 24201BE5 		ldr	r2, [fp, #-36]
 2582 0aa8 FEFFFFEB 		bl	CyU3PDebugPrint
1026:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2583              		.loc 1 1026 0
 2584 0aac 2D0000EA 		b	.L146
 2585              	.L151:
 2586 0ab0 2C0000EA 		b	.L146
 2587              	.L148:
1032:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2588              		.loc 1 1032 0
 2589 0ab4 29305BE5 		ldrb	r3, [fp, #-41]
 2590 0ab8 0F3003E2 		and	r3, r3, #15
 2591 0abc 25304BE5 		strb	r3, [fp, #-37]
1034:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2592              		.loc 1 1034 0
 2593 0ac0 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2594 0ac4 0300A0E1 		mov	r0, r3
 2595 0ac8 FEFFFFEB 		bl	esOV5640_GetContrast
 2596 0acc 0030A0E1 		mov	r3, r0
 2597 0ad0 0338A0E1 		mov	r3, r3, asl #16
 2598 0ad4 2328A0E1 		mov	r2, r3, lsr #16
 2599 0ad8 58369FE5 		ldr	r3, .L229+156
 2600 0adc B020C3E1 		strh	r2, [r3]	@ movhi
1035:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2601              		.loc 1 1035 0
 2602 0ae0 0200A0E3 		mov	r0, #2
 2603 0ae4 4C169FE5 		ldr	r1, .L229+156
 2604 0ae8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2605 0aec 24000BE5 		str	r0, [fp, #-36]
1036:../CX3RDKOV5640.c **** 					{
 2606              		.loc 1 1036 0
 2607 0af0 24301BE5 		ldr	r3, [fp, #-36]
 2608 0af4 000053E3 		cmp	r3, #0
 2609 0af8 0400000A 		beq	.L152
1038:../CX3RDKOV5640.c **** 					}
 2610              		.loc 1 1038 0
 2611 0afc 0400A0E3 		mov	r0, #4
 2612 0b00 38169FE5 		ldr	r1, .L229+164
 2613 0b04 24201BE5 		ldr	r2, [fp, #-36]
 2614 0b08 FEFFFFEB 		bl	CyU3PDebugPrint
1040:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2615              		.loc 1 1040 0
 2616 0b0c 150000EA 		b	.L146
 2617              	.L152:
 2618 0b10 140000EA 		b	.L146
 2619              	.L149:
1042:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2620              		.loc 1 1042 0
 2621 0b14 32304BE2 		sub	r3, fp, #50
 2622 0b18 1000A0E3 		mov	r0, #16
 2623 0b1c 18169FE5 		ldr	r1, .L229+160
 2624 0b20 0320A0E1 		mov	r2, r3
 2625 0b24 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2626 0b28 24000BE5 		str	r0, [fp, #-36]
1043:../CX3RDKOV5640.c **** 					{
 2627              		.loc 1 1043 0
 2628 0b2c 24301BE5 		ldr	r3, [fp, #-36]
 2629 0b30 000053E3 		cmp	r3, #0
 2630 0b34 0300000A 		beq	.L153
1045:../CX3RDKOV5640.c **** 					}
 2631              		.loc 1 1045 0
 2632 0b38 0400A0E3 		mov	r0, #4
 2633 0b3c FC159FE5 		ldr	r1, .L229+164
 2634 0b40 24201BE5 		ldr	r2, [fp, #-36]
 2635 0b44 FEFFFFEB 		bl	CyU3PDebugPrint
 2636              	.L153:
1048:../CX3RDKOV5640.c **** 					break;
 2637              		.loc 1 1048 0
 2638 0b48 EC359FE5 		ldr	r3, .L229+160
 2639 0b4c B030D3E1 		ldrh	r3, [r3]
 2640 0b50 FF3003E2 		and	r3, r3, #255
 2641 0b54 033CA0E1 		mov	r3, r3, asl #24
 2642 0b58 433CA0E1 		mov	r3, r3, asr #24
 2643 0b5c 0300A0E1 		mov	r0, r3
 2644 0b60 FEFFFFEB 		bl	esOV5640_SetContrast
1049:../CX3RDKOV5640.c **** 				}
 2645              		.loc 1 1049 0
 2646 0b64 0000A0E1 		mov	r0, r0	@ nop
 2647              	.L146:
 2648              		.loc 1 1051 0
 2649 0b68 C00200EA 		b	.L90
 2650              	.L145:
1052:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x400))/*Manual Exposure*/
 2651              		.loc 1 1052 0
 2652 0b6c BE325BE1 		ldrh	r3, [fp, #-46]
 2653 0b70 010C53E3 		cmp	r3, #256
 2654 0b74 4800001A 		bne	.L154
 2655              		.loc 1 1052 0 is_stmt 0 discriminator 1
 2656 0b78 BC325BE1 		ldrh	r3, [fp, #-44]
 2657 0b7c 010B53E3 		cmp	r3, #1024
 2658 0b80 4500001A 		bne	.L154
1053:../CX3RDKOV5640.c **** 			{
1054:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Exposure ");
1055:../CX3RDKOV5640.c **** 				switch(bRequest)
 2659              		.loc 1 1055 0 is_stmt 1
 2660 0b84 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2661 0b88 840053E3 		cmp	r3, #132
 2662 0b8c 040000CA 		bgt	.L156
 2663 0b90 810053E3 		cmp	r3, #129
 2664 0b94 170000AA 		bge	.L157
 2665 0b98 010053E3 		cmp	r3, #1
 2666 0b9c 2B00000A 		beq	.L158
1056:../CX3RDKOV5640.c **** 				{
1057:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1058:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1059:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1060:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1061:../CX3RDKOV5640.c **** 					{
1062:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1063:../CX3RDKOV5640.c **** 					}
1064:../CX3RDKOV5640.c **** 					break;
1065:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1066:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1067:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1068:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1069:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1070:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1071:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1072:../CX3RDKOV5640.c **** 					gl32GetControl = esOV5640_GetExposure(RequestOption);
1073:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1074:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1075:../CX3RDKOV5640.c **** 					{
1076:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1077:../CX3RDKOV5640.c **** 					}
1078:../CX3RDKOV5640.c **** 					break;
1079:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1080:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1081:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1082:../CX3RDKOV5640.c **** 					{
1083:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1084:../CX3RDKOV5640.c **** 					}
1085:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1086:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Exposure = %d", gl32SetControl);
1087:../CX3RDKOV5640.c **** 					esOV5640_SetExposure(gl32SetControl);
1088:../CX3RDKOV5640.c **** 					break;
1089:../CX3RDKOV5640.c **** 				}
1090:../CX3RDKOV5640.c **** 			}
 2667              		.loc 1 1090 0
 2668 0ba0 B20200EA 		b	.L90
 2669              	.L156:
1055:../CX3RDKOV5640.c **** 				{
 2670              		.loc 1 1055 0
 2671 0ba4 860053E3 		cmp	r3, #134
 2672 0ba8 0200000A 		beq	.L159
 2673 0bac 870053E3 		cmp	r3, #135
 2674 0bb0 1000000A 		beq	.L157
 2675              		.loc 1 1090 0
 2676 0bb4 AD0200EA 		b	.L90
 2677              	.L159:
1058:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2678              		.loc 1 1058 0
 2679 0bb8 74359FE5 		ldr	r3, .L229+152
 2680 0bbc 0320A0E3 		mov	r2, #3
 2681 0bc0 0020C3E5 		strb	r2, [r3]
1059:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2682              		.loc 1 1059 0
 2683 0bc4 0100A0E3 		mov	r0, #1
 2684 0bc8 64159FE5 		ldr	r1, .L229+152
 2685 0bcc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2686 0bd0 24000BE5 		str	r0, [fp, #-36]
1060:../CX3RDKOV5640.c **** 					{
 2687              		.loc 1 1060 0
 2688 0bd4 24301BE5 		ldr	r3, [fp, #-36]
 2689 0bd8 000053E3 		cmp	r3, #0
 2690 0bdc 0400000A 		beq	.L160
1062:../CX3RDKOV5640.c **** 					}
 2691              		.loc 1 1062 0
 2692 0be0 0400A0E3 		mov	r0, #4
 2693 0be4 54159FE5 		ldr	r1, .L229+164
 2694 0be8 24201BE5 		ldr	r2, [fp, #-36]
 2695 0bec FEFFFFEB 		bl	CyU3PDebugPrint
1064:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2696              		.loc 1 1064 0
 2697 0bf0 280000EA 		b	.L155
 2698              	.L160:
 2699 0bf4 270000EA 		b	.L155
 2700              	.L157:
1070:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2701              		.loc 1 1070 0
 2702 0bf8 29305BE5 		ldrb	r3, [fp, #-41]
 2703 0bfc 0F3003E2 		and	r3, r3, #15
 2704 0c00 25304BE5 		strb	r3, [fp, #-37]
1072:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2705              		.loc 1 1072 0
 2706 0c04 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2707 0c08 0300A0E1 		mov	r0, r3
 2708 0c0c FEFFFFEB 		bl	esOV5640_GetExposure
 2709 0c10 0020A0E1 		mov	r2, r0
 2710 0c14 00359FE5 		ldr	r3, .L229+128
 2711 0c18 002083E5 		str	r2, [r3]
1073:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2712              		.loc 1 1073 0
 2713 0c1c 0400A0E3 		mov	r0, #4
 2714 0c20 F4149FE5 		ldr	r1, .L229+128
 2715 0c24 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2716 0c28 24000BE5 		str	r0, [fp, #-36]
1074:../CX3RDKOV5640.c **** 					{
 2717              		.loc 1 1074 0
 2718 0c2c 24301BE5 		ldr	r3, [fp, #-36]
 2719 0c30 000053E3 		cmp	r3, #0
 2720 0c34 0400000A 		beq	.L161
1076:../CX3RDKOV5640.c **** 					}
 2721              		.loc 1 1076 0
 2722 0c38 0400A0E3 		mov	r0, #4
 2723 0c3c FC149FE5 		ldr	r1, .L229+164
 2724 0c40 24201BE5 		ldr	r2, [fp, #-36]
 2725 0c44 FEFFFFEB 		bl	CyU3PDebugPrint
1078:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2726              		.loc 1 1078 0
 2727 0c48 120000EA 		b	.L155
 2728              	.L161:
 2729 0c4c 110000EA 		b	.L155
 2730              	.L158:
1080:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2731              		.loc 1 1080 0
 2732 0c50 32304BE2 		sub	r3, fp, #50
 2733 0c54 1000A0E3 		mov	r0, #16
 2734 0c58 C0149FE5 		ldr	r1, .L229+132
 2735 0c5c 0320A0E1 		mov	r2, r3
 2736 0c60 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2737 0c64 24000BE5 		str	r0, [fp, #-36]
1081:../CX3RDKOV5640.c **** 					{
 2738              		.loc 1 1081 0
 2739 0c68 24301BE5 		ldr	r3, [fp, #-36]
 2740 0c6c 000053E3 		cmp	r3, #0
 2741 0c70 0300000A 		beq	.L162
1083:../CX3RDKOV5640.c **** 					}
 2742              		.loc 1 1083 0
 2743 0c74 0400A0E3 		mov	r0, #4
 2744 0c78 C0149FE5 		ldr	r1, .L229+164
 2745 0c7c 24201BE5 		ldr	r2, [fp, #-36]
 2746 0c80 FEFFFFEB 		bl	CyU3PDebugPrint
 2747              	.L162:
1087:../CX3RDKOV5640.c **** 					break;
 2748              		.loc 1 1087 0
 2749 0c84 94349FE5 		ldr	r3, .L229+132
 2750 0c88 003093E5 		ldr	r3, [r3]
 2751 0c8c 0300A0E1 		mov	r0, r3
 2752 0c90 FEFFFFEB 		bl	esOV5640_SetExposure
1088:../CX3RDKOV5640.c **** 				}
 2753              		.loc 1 1088 0
 2754 0c94 0000A0E1 		mov	r0, r0	@ nop
 2755              	.L155:
 2756              		.loc 1 1090 0
 2757 0c98 740200EA 		b	.L90
 2758              	.L154:
1091:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x600))/*Hue*/
 2759              		.loc 1 1091 0
 2760 0c9c BE325BE1 		ldrh	r3, [fp, #-46]
 2761 0ca0 020C53E3 		cmp	r3, #512
 2762 0ca4 4B00001A 		bne	.L163
 2763              		.loc 1 1091 0 is_stmt 0 discriminator 1
 2764 0ca8 BC325BE1 		ldrh	r3, [fp, #-44]
 2765 0cac 060C53E3 		cmp	r3, #1536
 2766 0cb0 4800001A 		bne	.L163
1092:../CX3RDKOV5640.c **** 			{
1093:../CX3RDKOV5640.c **** 				switch(bRequest)
 2767              		.loc 1 1093 0 is_stmt 1
 2768 0cb4 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2769 0cb8 840053E3 		cmp	r3, #132
 2770 0cbc 040000CA 		bgt	.L165
 2771 0cc0 810053E3 		cmp	r3, #129
 2772 0cc4 170000AA 		bge	.L166
 2773 0cc8 010053E3 		cmp	r3, #1
 2774 0ccc 2B00000A 		beq	.L167
1094:../CX3RDKOV5640.c **** 				{
1095:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1096:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1097:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1098:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1099:../CX3RDKOV5640.c **** 					{
1100:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1101:../CX3RDKOV5640.c **** 					}
1102:../CX3RDKOV5640.c **** 					break;
1103:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1104:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1105:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1106:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1107:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1108:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1109:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1110:../CX3RDKOV5640.c **** 					gl32GetControl = (int32_t)esOV5640_GetHue(RequestOption);
1111:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
1112:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1113:../CX3RDKOV5640.c **** 					{
1114:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1115:../CX3RDKOV5640.c **** 					}
1116:../CX3RDKOV5640.c **** 					break;
1117:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1118:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl32SetControl,&readCount);
1119:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1120:../CX3RDKOV5640.c **** 					{
1121:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1122:../CX3RDKOV5640.c **** 					}
1123:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1124:../CX3RDKOV5640.c **** 					esOV5640_SetHue((int8_t)gl32SetControl);
1125:../CX3RDKOV5640.c **** 					break;
1126:../CX3RDKOV5640.c **** 				}
1127:../CX3RDKOV5640.c **** 			}
 2775              		.loc 1 1127 0
 2776 0cd0 660200EA 		b	.L90
 2777              	.L165:
1093:../CX3RDKOV5640.c **** 				{
 2778              		.loc 1 1093 0
 2779 0cd4 860053E3 		cmp	r3, #134
 2780 0cd8 0200000A 		beq	.L168
 2781 0cdc 870053E3 		cmp	r3, #135
 2782 0ce0 1000000A 		beq	.L166
 2783              		.loc 1 1127 0
 2784 0ce4 610200EA 		b	.L90
 2785              	.L168:
1096:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2786              		.loc 1 1096 0
 2787 0ce8 44349FE5 		ldr	r3, .L229+152
 2788 0cec 0320A0E3 		mov	r2, #3
 2789 0cf0 0020C3E5 		strb	r2, [r3]
1097:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2790              		.loc 1 1097 0
 2791 0cf4 0100A0E3 		mov	r0, #1
 2792 0cf8 34149FE5 		ldr	r1, .L229+152
 2793 0cfc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2794 0d00 24000BE5 		str	r0, [fp, #-36]
1098:../CX3RDKOV5640.c **** 					{
 2795              		.loc 1 1098 0
 2796 0d04 24301BE5 		ldr	r3, [fp, #-36]
 2797 0d08 000053E3 		cmp	r3, #0
 2798 0d0c 0400000A 		beq	.L169
1100:../CX3RDKOV5640.c **** 					}
 2799              		.loc 1 1100 0
 2800 0d10 0400A0E3 		mov	r0, #4
 2801 0d14 24149FE5 		ldr	r1, .L229+164
 2802 0d18 24201BE5 		ldr	r2, [fp, #-36]
 2803 0d1c FEFFFFEB 		bl	CyU3PDebugPrint
1102:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2804              		.loc 1 1102 0
 2805 0d20 2B0000EA 		b	.L164
 2806              	.L169:
 2807 0d24 2A0000EA 		b	.L164
 2808              	.L166:
1108:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 2809              		.loc 1 1108 0
 2810 0d28 29305BE5 		ldrb	r3, [fp, #-41]
 2811 0d2c 0F3003E2 		and	r3, r3, #15
 2812 0d30 25304BE5 		strb	r3, [fp, #-37]
1110:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(4,(uint8_t*)&gl32GetControl);
 2813              		.loc 1 1110 0
 2814 0d34 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2815 0d38 0300A0E1 		mov	r0, r3
 2816 0d3c FEFFFFEB 		bl	esOV5640_GetHue
 2817 0d40 0020A0E1 		mov	r2, r0
 2818 0d44 D0339FE5 		ldr	r3, .L229+128
 2819 0d48 002083E5 		str	r2, [r3]
1111:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2820              		.loc 1 1111 0
 2821 0d4c 0400A0E3 		mov	r0, #4
 2822 0d50 C4139FE5 		ldr	r1, .L229+128
 2823 0d54 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2824 0d58 24000BE5 		str	r0, [fp, #-36]
1112:../CX3RDKOV5640.c **** 					{
 2825              		.loc 1 1112 0
 2826 0d5c 24301BE5 		ldr	r3, [fp, #-36]
 2827 0d60 000053E3 		cmp	r3, #0
 2828 0d64 0400000A 		beq	.L170
1114:../CX3RDKOV5640.c **** 					}
 2829              		.loc 1 1114 0
 2830 0d68 0400A0E3 		mov	r0, #4
 2831 0d6c CC139FE5 		ldr	r1, .L229+164
 2832 0d70 24201BE5 		ldr	r2, [fp, #-36]
 2833 0d74 FEFFFFEB 		bl	CyU3PDebugPrint
1116:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2834              		.loc 1 1116 0
 2835 0d78 150000EA 		b	.L164
 2836              	.L170:
 2837 0d7c 140000EA 		b	.L164
 2838              	.L167:
1118:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2839              		.loc 1 1118 0
 2840 0d80 32304BE2 		sub	r3, fp, #50
 2841 0d84 1000A0E3 		mov	r0, #16
 2842 0d88 90139FE5 		ldr	r1, .L229+132
 2843 0d8c 0320A0E1 		mov	r2, r3
 2844 0d90 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2845 0d94 24000BE5 		str	r0, [fp, #-36]
1119:../CX3RDKOV5640.c **** 					{
 2846              		.loc 1 1119 0
 2847 0d98 24301BE5 		ldr	r3, [fp, #-36]
 2848 0d9c 000053E3 		cmp	r3, #0
 2849 0da0 0300000A 		beq	.L171
1121:../CX3RDKOV5640.c **** 					}
 2850              		.loc 1 1121 0
 2851 0da4 0400A0E3 		mov	r0, #4
 2852 0da8 90139FE5 		ldr	r1, .L229+164
 2853 0dac 24201BE5 		ldr	r2, [fp, #-36]
 2854 0db0 FEFFFFEB 		bl	CyU3PDebugPrint
 2855              	.L171:
1124:../CX3RDKOV5640.c **** 					break;
 2856              		.loc 1 1124 0
 2857 0db4 64339FE5 		ldr	r3, .L229+132
 2858 0db8 003093E5 		ldr	r3, [r3]
 2859 0dbc FF3003E2 		and	r3, r3, #255
 2860 0dc0 033CA0E1 		mov	r3, r3, asl #24
 2861 0dc4 433CA0E1 		mov	r3, r3, asr #24
 2862 0dc8 0300A0E1 		mov	r0, r3
 2863 0dcc FEFFFFEB 		bl	esOV5640_SetHue
1125:../CX3RDKOV5640.c **** 				}
 2864              		.loc 1 1125 0
 2865 0dd0 0000A0E1 		mov	r0, r0	@ nop
 2866              	.L164:
 2867              		.loc 1 1127 0
 2868 0dd4 250200EA 		b	.L90
 2869              	.L163:
1128:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x600))/*Manual Focus*/
 2870              		.loc 1 1128 0
 2871 0dd8 BE325BE1 		ldrh	r3, [fp, #-46]
 2872 0ddc 010C53E3 		cmp	r3, #256
 2873 0de0 4F00001A 		bne	.L172
 2874              		.loc 1 1128 0 is_stmt 0 discriminator 1
 2875 0de4 BC325BE1 		ldrh	r3, [fp, #-44]
 2876 0de8 060C53E3 		cmp	r3, #1536
 2877 0dec 4C00001A 		bne	.L172
1129:../CX3RDKOV5640.c **** 			{
1130:../CX3RDKOV5640.c ****             	//CyU3PDebugPrint (4, "\n\rManual Focus ");
1131:../CX3RDKOV5640.c **** 				switch(bRequest)
 2878              		.loc 1 1131 0 is_stmt 1
 2879 0df0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2880 0df4 840053E3 		cmp	r3, #132
 2881 0df8 040000CA 		bgt	.L174
 2882 0dfc 810053E3 		cmp	r3, #129
 2883 0e00 170000AA 		bge	.L175
 2884 0e04 010053E3 		cmp	r3, #1
 2885 0e08 2D00000A 		beq	.L176
1132:../CX3RDKOV5640.c **** 				{
1133:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1134:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1135:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1136:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1137:../CX3RDKOV5640.c **** 					{
1138:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1139:../CX3RDKOV5640.c **** 					}
1140:../CX3RDKOV5640.c **** 					break;
1141:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1142:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1143:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1144:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1145:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1146:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1147:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1148:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
1149:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1150:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1151:../CX3RDKOV5640.c **** 					{
1152:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1153:../CX3RDKOV5640.c **** 					}
1154:../CX3RDKOV5640.c **** 					break;
1155:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1156:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1157:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1158:../CX3RDKOV5640.c **** 					{
1159:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1160:../CX3RDKOV5640.c **** 					}
1161:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1162:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rManual Focus= %d",gl16SetControl);
1163:../CX3RDKOV5640.c **** 					esOV5640_SetManualfocus((uint16_t)gl16SetControl);
1164:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
1165:../CX3RDKOV5640.c **** 					break;
1166:../CX3RDKOV5640.c **** 				}
1167:../CX3RDKOV5640.c **** 			}
 2886              		.loc 1 1167 0
 2887 0e0c 170200EA 		b	.L90
 2888              	.L174:
1131:../CX3RDKOV5640.c **** 				{
 2889              		.loc 1 1131 0
 2890 0e10 860053E3 		cmp	r3, #134
 2891 0e14 0200000A 		beq	.L177
 2892 0e18 870053E3 		cmp	r3, #135
 2893 0e1c 1000000A 		beq	.L175
 2894              		.loc 1 1167 0
 2895 0e20 120200EA 		b	.L90
 2896              	.L177:
1134:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 2897              		.loc 1 1134 0
 2898 0e24 08339FE5 		ldr	r3, .L229+152
 2899 0e28 0320A0E3 		mov	r2, #3
 2900 0e2c 0020C3E5 		strb	r2, [r3]
1135:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2901              		.loc 1 1135 0
 2902 0e30 0100A0E3 		mov	r0, #1
 2903 0e34 F8129FE5 		ldr	r1, .L229+152
 2904 0e38 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2905 0e3c 24000BE5 		str	r0, [fp, #-36]
1136:../CX3RDKOV5640.c **** 					{
 2906              		.loc 1 1136 0
 2907 0e40 24301BE5 		ldr	r3, [fp, #-36]
 2908 0e44 000053E3 		cmp	r3, #0
 2909 0e48 0400000A 		beq	.L178
1138:../CX3RDKOV5640.c **** 					}
 2910              		.loc 1 1138 0
 2911 0e4c 0400A0E3 		mov	r0, #4
 2912 0e50 E8129FE5 		ldr	r1, .L229+164
 2913 0e54 24201BE5 		ldr	r2, [fp, #-36]
 2914 0e58 FEFFFFEB 		bl	CyU3PDebugPrint
1140:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 2915              		.loc 1 1140 0
 2916 0e5c 2F0000EA 		b	.L173
 2917              	.L178:
 2918 0e60 2E0000EA 		b	.L173
 2919              	.L175:
1147:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetManualfocus(RequestOption);
 2920              		.loc 1 1147 0
 2921 0e64 29305BE5 		ldrb	r3, [fp, #-41]
 2922 0e68 0F3003E2 		and	r3, r3, #15
 2923 0e6c 25304BE5 		strb	r3, [fp, #-37]
1148:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 2924              		.loc 1 1148 0
 2925 0e70 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 2926 0e74 0300A0E1 		mov	r0, r3
 2927 0e78 FEFFFFEB 		bl	esOV5640_GetManualfocus
 2928 0e7c 0030A0E1 		mov	r3, r0
 2929 0e80 0338A0E1 		mov	r3, r3, asl #16
 2930 0e84 2328A0E1 		mov	r2, r3, lsr #16
 2931 0e88 A8329FE5 		ldr	r3, .L229+156
 2932 0e8c B020C3E1 		strh	r2, [r3]	@ movhi
1149:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2933              		.loc 1 1149 0
 2934 0e90 0200A0E3 		mov	r0, #2
 2935 0e94 9C129FE5 		ldr	r1, .L229+156
 2936 0e98 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 2937 0e9c 24000BE5 		str	r0, [fp, #-36]
1150:../CX3RDKOV5640.c **** 					{
 2938              		.loc 1 1150 0
 2939 0ea0 24301BE5 		ldr	r3, [fp, #-36]
 2940 0ea4 000053E3 		cmp	r3, #0
 2941 0ea8 0400000A 		beq	.L179
1152:../CX3RDKOV5640.c **** 					}
 2942              		.loc 1 1152 0
 2943 0eac 0400A0E3 		mov	r0, #4
 2944 0eb0 88129FE5 		ldr	r1, .L229+164
 2945 0eb4 24201BE5 		ldr	r2, [fp, #-36]
 2946 0eb8 FEFFFFEB 		bl	CyU3PDebugPrint
1154:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 2947              		.loc 1 1154 0
 2948 0ebc 170000EA 		b	.L173
 2949              	.L179:
 2950 0ec0 160000EA 		b	.L173
 2951              	.L176:
1156:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 2952              		.loc 1 1156 0
 2953 0ec4 32304BE2 		sub	r3, fp, #50
 2954 0ec8 1000A0E3 		mov	r0, #16
 2955 0ecc 68129FE5 		ldr	r1, .L229+160
 2956 0ed0 0320A0E1 		mov	r2, r3
 2957 0ed4 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 2958 0ed8 24000BE5 		str	r0, [fp, #-36]
1157:../CX3RDKOV5640.c **** 					{
 2959              		.loc 1 1157 0
 2960 0edc 24301BE5 		ldr	r3, [fp, #-36]
 2961 0ee0 000053E3 		cmp	r3, #0
 2962 0ee4 0300000A 		beq	.L180
1159:../CX3RDKOV5640.c **** 					}
 2963              		.loc 1 1159 0
 2964 0ee8 0400A0E3 		mov	r0, #4
 2965 0eec 4C129FE5 		ldr	r1, .L229+164
 2966 0ef0 24201BE5 		ldr	r2, [fp, #-36]
 2967 0ef4 FEFFFFEB 		bl	CyU3PDebugPrint
 2968              	.L180:
1163:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 0;
 2969              		.loc 1 1163 0
 2970 0ef8 3C329FE5 		ldr	r3, .L229+160
 2971 0efc B030D3E1 		ldrh	r3, [r3]
 2972 0f00 0338A0E1 		mov	r3, r3, asl #16
 2973 0f04 2338A0E1 		mov	r3, r3, lsr #16
 2974 0f08 0300A0E1 		mov	r0, r3
 2975 0f0c FEFFFFEB 		bl	esOV5640_SetManualfocus
1164:../CX3RDKOV5640.c **** 					break;
 2976              		.loc 1 1164 0
 2977 0f10 18329FE5 		ldr	r3, .L229+148
 2978 0f14 0020A0E3 		mov	r2, #0
 2979 0f18 0020C3E5 		strb	r2, [r3]
1165:../CX3RDKOV5640.c **** 				}
 2980              		.loc 1 1165 0
 2981 0f1c 0000A0E1 		mov	r0, r0	@ nop
 2982              	.L173:
 2983              		.loc 1 1167 0
 2984 0f20 D20100EA 		b	.L90
 2985              	.L172:
1168:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x700))/*Saturation*/
 2986              		.loc 1 1168 0
 2987 0f24 BE325BE1 		ldrh	r3, [fp, #-46]
 2988 0f28 020C53E3 		cmp	r3, #512
 2989 0f2c 4C00001A 		bne	.L181
 2990              		.loc 1 1168 0 is_stmt 0 discriminator 1
 2991 0f30 BC325BE1 		ldrh	r3, [fp, #-44]
 2992 0f34 070C53E3 		cmp	r3, #1792
 2993 0f38 4900001A 		bne	.L181
1169:../CX3RDKOV5640.c **** 			{
1170:../CX3RDKOV5640.c **** 				switch(bRequest)
 2994              		.loc 1 1170 0 is_stmt 1
 2995 0f3c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 2996 0f40 840053E3 		cmp	r3, #132
 2997 0f44 040000CA 		bgt	.L183
 2998 0f48 810053E3 		cmp	r3, #129
 2999 0f4c 170000AA 		bge	.L184
 3000 0f50 010053E3 		cmp	r3, #1
 3001 0f54 2D00000A 		beq	.L185
1171:../CX3RDKOV5640.c **** 				{
1172:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1173:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1174:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1175:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1176:../CX3RDKOV5640.c **** 					{
1177:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1178:../CX3RDKOV5640.c **** 					}
1179:../CX3RDKOV5640.c **** 					break;
1180:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1181:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1182:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1183:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1184:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1185:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1186:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1187:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSaturation(RequestOption);
1188:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1189:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1190:../CX3RDKOV5640.c **** 					{
1191:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1192:../CX3RDKOV5640.c **** 					}
1193:../CX3RDKOV5640.c **** 					break;
1194:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1195:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1196:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1197:../CX3RDKOV5640.c **** 					{
1198:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1199:../CX3RDKOV5640.c **** 					}
1200:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1201:../CX3RDKOV5640.c **** 					esOV5640_SetSaturation((uint32_t)gl16SetControl);
1202:../CX3RDKOV5640.c **** 					break;
1203:../CX3RDKOV5640.c **** 				}
1204:../CX3RDKOV5640.c **** 			}
 3002              		.loc 1 1204 0
 3003 0f58 C40100EA 		b	.L90
 3004              	.L183:
1170:../CX3RDKOV5640.c **** 				{
 3005              		.loc 1 1170 0
 3006 0f5c 860053E3 		cmp	r3, #134
 3007 0f60 0200000A 		beq	.L186
 3008 0f64 870053E3 		cmp	r3, #135
 3009 0f68 1000000A 		beq	.L184
 3010              		.loc 1 1204 0
 3011 0f6c BF0100EA 		b	.L90
 3012              	.L186:
1173:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3013              		.loc 1 1173 0
 3014 0f70 BC319FE5 		ldr	r3, .L229+152
 3015 0f74 0320A0E3 		mov	r2, #3
 3016 0f78 0020C3E5 		strb	r2, [r3]
1174:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3017              		.loc 1 1174 0
 3018 0f7c 0100A0E3 		mov	r0, #1
 3019 0f80 AC119FE5 		ldr	r1, .L229+152
 3020 0f84 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3021 0f88 24000BE5 		str	r0, [fp, #-36]
1175:../CX3RDKOV5640.c **** 					{
 3022              		.loc 1 1175 0
 3023 0f8c 24301BE5 		ldr	r3, [fp, #-36]
 3024 0f90 000053E3 		cmp	r3, #0
 3025 0f94 0400000A 		beq	.L187
1177:../CX3RDKOV5640.c **** 					}
 3026              		.loc 1 1177 0
 3027 0f98 0400A0E3 		mov	r0, #4
 3028 0f9c 9C119FE5 		ldr	r1, .L229+164
 3029 0fa0 24201BE5 		ldr	r2, [fp, #-36]
 3030 0fa4 FEFFFFEB 		bl	CyU3PDebugPrint
1179:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3031              		.loc 1 1179 0
 3032 0fa8 2C0000EA 		b	.L182
 3033              	.L187:
 3034 0fac 2B0000EA 		b	.L182
 3035              	.L184:
1185:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3036              		.loc 1 1185 0
 3037 0fb0 29305BE5 		ldrb	r3, [fp, #-41]
 3038 0fb4 0F3003E2 		and	r3, r3, #15
 3039 0fb8 25304BE5 		strb	r3, [fp, #-37]
1187:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3040              		.loc 1 1187 0
 3041 0fbc 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3042 0fc0 0300A0E1 		mov	r0, r3
 3043 0fc4 FEFFFFEB 		bl	esOV5640_GetSaturation
 3044 0fc8 0030A0E1 		mov	r3, r0
 3045 0fcc 0338A0E1 		mov	r3, r3, asl #16
 3046 0fd0 2328A0E1 		mov	r2, r3, lsr #16
 3047 0fd4 5C319FE5 		ldr	r3, .L229+156
 3048 0fd8 B020C3E1 		strh	r2, [r3]	@ movhi
1188:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3049              		.loc 1 1188 0
 3050 0fdc 0200A0E3 		mov	r0, #2
 3051 0fe0 50119FE5 		ldr	r1, .L229+156
 3052 0fe4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3053 0fe8 24000BE5 		str	r0, [fp, #-36]
1189:../CX3RDKOV5640.c **** 					{
 3054              		.loc 1 1189 0
 3055 0fec 24301BE5 		ldr	r3, [fp, #-36]
 3056 0ff0 000053E3 		cmp	r3, #0
 3057 0ff4 0400000A 		beq	.L188
1191:../CX3RDKOV5640.c **** 					}
 3058              		.loc 1 1191 0
 3059 0ff8 0400A0E3 		mov	r0, #4
 3060 0ffc 3C119FE5 		ldr	r1, .L229+164
 3061 1000 24201BE5 		ldr	r2, [fp, #-36]
 3062 1004 FEFFFFEB 		bl	CyU3PDebugPrint
1193:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3063              		.loc 1 1193 0
 3064 1008 140000EA 		b	.L182
 3065              	.L188:
 3066 100c 130000EA 		b	.L182
 3067              	.L185:
1195:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3068              		.loc 1 1195 0
 3069 1010 32304BE2 		sub	r3, fp, #50
 3070 1014 1000A0E3 		mov	r0, #16
 3071 1018 1C119FE5 		ldr	r1, .L229+160
 3072 101c 0320A0E1 		mov	r2, r3
 3073 1020 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3074 1024 24000BE5 		str	r0, [fp, #-36]
1196:../CX3RDKOV5640.c **** 					{
 3075              		.loc 1 1196 0
 3076 1028 24301BE5 		ldr	r3, [fp, #-36]
 3077 102c 000053E3 		cmp	r3, #0
 3078 1030 0300000A 		beq	.L189
1198:../CX3RDKOV5640.c **** 					}
 3079              		.loc 1 1198 0
 3080 1034 0400A0E3 		mov	r0, #4
 3081 1038 00119FE5 		ldr	r1, .L229+164
 3082 103c 24201BE5 		ldr	r2, [fp, #-36]
 3083 1040 FEFFFFEB 		bl	CyU3PDebugPrint
 3084              	.L189:
1201:../CX3RDKOV5640.c **** 					break;
 3085              		.loc 1 1201 0
 3086 1044 F0309FE5 		ldr	r3, .L229+160
 3087 1048 B030D3E1 		ldrh	r3, [r3]
 3088 104c 0338A0E1 		mov	r3, r3, asl #16
 3089 1050 4338A0E1 		mov	r3, r3, asr #16
 3090 1054 0300A0E1 		mov	r0, r3
 3091 1058 FEFFFFEB 		bl	esOV5640_SetSaturation
1202:../CX3RDKOV5640.c **** 				}
 3092              		.loc 1 1202 0
 3093 105c 0000A0E1 		mov	r0, r0	@ nop
 3094              	.L182:
 3095              		.loc 1 1204 0
 3096 1060 820100EA 		b	.L90
 3097              	.L181:
1205:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0x800))/*Sharpness*/
 3098              		.loc 1 1205 0
 3099 1064 BE325BE1 		ldrh	r3, [fp, #-46]
 3100 1068 020C53E3 		cmp	r3, #512
 3101 106c 7500001A 		bne	.L190
 3102              		.loc 1 1205 0 is_stmt 0 discriminator 1
 3103 1070 BC325BE1 		ldrh	r3, [fp, #-44]
 3104 1074 020B53E3 		cmp	r3, #2048
 3105 1078 7200001A 		bne	.L190
1206:../CX3RDKOV5640.c **** 			{
1207:../CX3RDKOV5640.c **** 				switch(bRequest)
 3106              		.loc 1 1207 0 is_stmt 1
 3107 107c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3108 1080 840053E3 		cmp	r3, #132
 3109 1084 2E0000CA 		bgt	.L192
 3110 1088 810053E3 		cmp	r3, #129
 3111 108c 410000AA 		bge	.L193
 3112 1090 010053E3 		cmp	r3, #1
 3113 1094 5700000A 		beq	.L194
1208:../CX3RDKOV5640.c **** 				{
1209:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1210:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1211:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1212:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1213:../CX3RDKOV5640.c **** 					{
1214:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1215:../CX3RDKOV5640.c **** 					}
1216:../CX3RDKOV5640.c **** 					break;
1217:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1218:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1219:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1220:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1221:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1222:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1223:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1224:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetSharpness(RequestOption);
1225:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1226:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1227:../CX3RDKOV5640.c **** 					{
1228:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1229:../CX3RDKOV5640.c **** 					}
1230:../CX3RDKOV5640.c **** 					break;
1231:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1232:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1233:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1234:../CX3RDKOV5640.c **** 					{
1235:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1236:../CX3RDKOV5640.c **** 					}
1237:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1238:../CX3RDKOV5640.c **** 					esOV5640_SetSharpness((uint8_t)gl16SetControl);
1239:../CX3RDKOV5640.c **** 					break;
1240:../CX3RDKOV5640.c **** 				}
1241:../CX3RDKOV5640.c **** 			}
 3114              		.loc 1 1241 0
 3115 1098 740100EA 		b	.L90
 3116              	.L230:
 3117              		.align	2
 3118              	.L229:
 3119 109c FC020000 		.word	.LC17
 3120 10a0 00000000 		.word	glIsApplnActive
 3121 10a4 00000000 		.word	glIsStreamingStarted
 3122 10a8 00000000 		.word	glPreviewStarted
 3123 10ac 00000000 		.word	glIsClearFeature
 3124 10b0 00000000 		.word	glcommitcount
 3125 10b4 4C030000 		.word	.LC18
 3126 10b8 00000000 		.word	glIsConfigured
 3127 10bc 00000000 		.word	glCurrentFrameIndex
 3128 10c0 00000000 		.word	glProbeCtrl
 3129 10c4 00000000 		.word	gl5MpProbeCtrl
 3130 10c8 00000000 		.word	gl720pProbeCtrl
 3131 10cc 00000000 		.word	glVga60ProbeCtrl
 3132 10d0 00000000 		.word	gl1080pProbeCtrl
 3133 10d4 00000000 		.word	glVga30ProbeCtrl
 3134 10d8 74030000 		.word	.LC19
 3135 10dc 90030000 		.word	.LC20
 3136 10e0 00000000 		.word	glStillProbeCtrl
 3137 10e4 00000000 		.word	glCommitCtrl
 3138 10e8 BC030000 		.word	.LC21
 3139 10ec E8030000 		.word	.LC22
 3140 10f0 00000000 		.word	glcheckframe
 3141 10f4 00000000 		.word	glFrameIndexToSet
 3142 10f8 0C040000 		.word	.LC23
 3143 10fc 4C040000 		.word	.LC24
 3144 1100 00000000 		.word	glStillCommitCtrl
 3145 1104 8C040000 		.word	.LC25
 3146 1108 B0040000 		.word	.LC26
 3147 110c 00000000 		.word	glCurrentStillFrameIndex
 3148 1110 00000000 		.word	glStillTriggerCtrl
 3149 1114 00000000 		.word	glStillSkip
 3150 1118 00000000 		.word	glStillCaptureStart
 3151 111c 00000000 		.word	gl32GetControl
 3152 1120 00000000 		.word	gl32SetControl
 3153 1124 F8040000 		.word	.LC28
 3154 1128 00000000 		.word	gl8GetControl
 3155 112c 00000000 		.word	gl8SetControl
 3156 1130 00000000 		.word	g_IsAutoFocus
 3157 1134 00000000 		.word	glGet_Info
 3158 1138 00000000 		.word	gl16GetControl
 3159 113c 00000000 		.word	gl16SetControl
 3160 1140 D8040000 		.word	.LC27
 3161              	.L192:
1207:../CX3RDKOV5640.c **** 				{
 3162              		.loc 1 1207 0
 3163 1144 860053E3 		cmp	r3, #134
 3164 1148 0200000A 		beq	.L195
 3165 114c 870053E3 		cmp	r3, #135
 3166 1150 1000000A 		beq	.L193
 3167              		.loc 1 1241 0
 3168 1154 450100EA 		b	.L90
 3169              	.L195:
1210:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3170              		.loc 1 1210 0
 3171 1158 2C301FE5 		ldr	r3, .L229+152
 3172 115c 0320A0E3 		mov	r2, #3
 3173 1160 0020C3E5 		strb	r2, [r3]
1211:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3174              		.loc 1 1211 0
 3175 1164 0100A0E3 		mov	r0, #1
 3176 1168 3C101FE5 		ldr	r1, .L229+152
 3177 116c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3178 1170 24000BE5 		str	r0, [fp, #-36]
1212:../CX3RDKOV5640.c **** 					{
 3179              		.loc 1 1212 0
 3180 1174 24301BE5 		ldr	r3, [fp, #-36]
 3181 1178 000053E3 		cmp	r3, #0
 3182 117c 0400000A 		beq	.L196
1214:../CX3RDKOV5640.c **** 					}
 3183              		.loc 1 1214 0
 3184 1180 0400A0E3 		mov	r0, #4
 3185 1184 4C101FE5 		ldr	r1, .L229+164
 3186 1188 24201BE5 		ldr	r2, [fp, #-36]
 3187 118c FEFFFFEB 		bl	CyU3PDebugPrint
1216:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3188              		.loc 1 1216 0
 3189 1190 2B0000EA 		b	.L191
 3190              	.L196:
 3191 1194 2A0000EA 		b	.L191
 3192              	.L193:
1222:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3193              		.loc 1 1222 0
 3194 1198 29305BE5 		ldrb	r3, [fp, #-41]
 3195 119c 0F3003E2 		and	r3, r3, #15
 3196 11a0 25304BE5 		strb	r3, [fp, #-37]
1224:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3197              		.loc 1 1224 0
 3198 11a4 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3199 11a8 0300A0E1 		mov	r0, r3
 3200 11ac FEFFFFEB 		bl	esOV5640_GetSharpness
 3201 11b0 0030A0E1 		mov	r3, r0
 3202 11b4 0338A0E1 		mov	r3, r3, asl #16
 3203 11b8 2328A0E1 		mov	r2, r3, lsr #16
 3204 11bc 8C301FE5 		ldr	r3, .L229+156
 3205 11c0 B020C3E1 		strh	r2, [r3]	@ movhi
1225:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3206              		.loc 1 1225 0
 3207 11c4 0200A0E3 		mov	r0, #2
 3208 11c8 98101FE5 		ldr	r1, .L229+156
 3209 11cc FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3210 11d0 24000BE5 		str	r0, [fp, #-36]
1226:../CX3RDKOV5640.c **** 					{
 3211              		.loc 1 1226 0
 3212 11d4 24301BE5 		ldr	r3, [fp, #-36]
 3213 11d8 000053E3 		cmp	r3, #0
 3214 11dc 0400000A 		beq	.L197
1228:../CX3RDKOV5640.c **** 					}
 3215              		.loc 1 1228 0
 3216 11e0 0400A0E3 		mov	r0, #4
 3217 11e4 AC101FE5 		ldr	r1, .L229+164
 3218 11e8 24201BE5 		ldr	r2, [fp, #-36]
 3219 11ec FEFFFFEB 		bl	CyU3PDebugPrint
1230:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3220              		.loc 1 1230 0
 3221 11f0 130000EA 		b	.L191
 3222              	.L197:
 3223 11f4 120000EA 		b	.L191
 3224              	.L194:
1232:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3225              		.loc 1 1232 0
 3226 11f8 32304BE2 		sub	r3, fp, #50
 3227 11fc 1000A0E3 		mov	r0, #16
 3228 1200 CC101FE5 		ldr	r1, .L229+160
 3229 1204 0320A0E1 		mov	r2, r3
 3230 1208 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3231 120c 24000BE5 		str	r0, [fp, #-36]
1233:../CX3RDKOV5640.c **** 					{
 3232              		.loc 1 1233 0
 3233 1210 24301BE5 		ldr	r3, [fp, #-36]
 3234 1214 000053E3 		cmp	r3, #0
 3235 1218 0300000A 		beq	.L198
1235:../CX3RDKOV5640.c **** 					}
 3236              		.loc 1 1235 0
 3237 121c 0400A0E3 		mov	r0, #4
 3238 1220 E8101FE5 		ldr	r1, .L229+164
 3239 1224 24201BE5 		ldr	r2, [fp, #-36]
 3240 1228 FEFFFFEB 		bl	CyU3PDebugPrint
 3241              	.L198:
1238:../CX3RDKOV5640.c **** 					break;
 3242              		.loc 1 1238 0
 3243 122c F8301FE5 		ldr	r3, .L229+160
 3244 1230 B030D3E1 		ldrh	r3, [r3]
 3245 1234 FF3003E2 		and	r3, r3, #255
 3246 1238 0300A0E1 		mov	r0, r3
 3247 123c FEFFFFEB 		bl	esOV5640_SetSharpness
1239:../CX3RDKOV5640.c **** 				}
 3248              		.loc 1 1239 0
 3249 1240 0000A0E1 		mov	r0, r0	@ nop
 3250              	.L191:
 3251              		.loc 1 1241 0
 3252 1244 090100EA 		b	.L90
 3253              	.L190:
1242:../CX3RDKOV5640.c ****             else if((wIndex == 0x100) && (wValue == 0x800))/*Auto Focus*/
 3254              		.loc 1 1242 0
 3255 1248 BE325BE1 		ldrh	r3, [fp, #-46]
 3256 124c 010C53E3 		cmp	r3, #256
 3257 1250 5000001A 		bne	.L199
 3258              		.loc 1 1242 0 is_stmt 0 discriminator 1
 3259 1254 BC325BE1 		ldrh	r3, [fp, #-44]
 3260 1258 020B53E3 		cmp	r3, #2048
 3261 125c 4D00001A 		bne	.L199
1243:../CX3RDKOV5640.c **** 			{
1244:../CX3RDKOV5640.c ****             	CyU3PDebugPrint (4, "\n\rAuto Focus");
 3262              		.loc 1 1244 0 is_stmt 1
 3263 1260 0400A0E3 		mov	r0, #4
 3264 1264 48111FE5 		ldr	r1, .L229+136
 3265 1268 FEFFFFEB 		bl	CyU3PDebugPrint
1245:../CX3RDKOV5640.c **** 				switch(bRequest)
 3266              		.loc 1 1245 0
 3267 126c 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3268 1270 840053E3 		cmp	r3, #132
 3269 1274 040000CA 		bgt	.L201
 3270 1278 810053E3 		cmp	r3, #129
 3271 127c 170000AA 		bge	.L202
 3272 1280 010053E3 		cmp	r3, #1
 3273 1284 2C00000A 		beq	.L203
1246:../CX3RDKOV5640.c **** 				{
1247:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1248:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1249:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1250:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1251:../CX3RDKOV5640.c **** 					{
1252:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1253:../CX3RDKOV5640.c **** 					}
1254:../CX3RDKOV5640.c **** 					break;
1255:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1256:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1257:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1258:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1259:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1260:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1261:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1262:../CX3RDKOV5640.c **** 					gl8GetControl = esOV5640_GetAutofocus(RequestOption);
1263:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
1264:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1265:../CX3RDKOV5640.c **** 					{
1266:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1267:../CX3RDKOV5640.c **** 					}
1268:../CX3RDKOV5640.c **** 					break;
1269:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1270:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl8SetControl,&readCount);
1271:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1272:../CX3RDKOV5640.c **** 					{
1273:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1274:../CX3RDKOV5640.c **** 					}
1275:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1276:../CX3RDKOV5640.c **** 				//	CyU3PDebugPrint (4, "\n\rAuto Focus =%d",gl8SetControl);
1277:../CX3RDKOV5640.c **** 					esOV5640_SetAutofocus((uint8_t)gl8SetControl);
1278:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
1279:../CX3RDKOV5640.c **** 					break;
1280:../CX3RDKOV5640.c **** 				}
1281:../CX3RDKOV5640.c **** 			}
 3274              		.loc 1 1281 0
 3275 1288 F80000EA 		b	.L90
 3276              	.L201:
1245:../CX3RDKOV5640.c **** 				switch(bRequest)
 3277              		.loc 1 1245 0
 3278 128c 860053E3 		cmp	r3, #134
 3279 1290 0200000A 		beq	.L204
 3280 1294 870053E3 		cmp	r3, #135
 3281 1298 1000000A 		beq	.L202
 3282              		.loc 1 1281 0
 3283 129c F30000EA 		b	.L90
 3284              	.L204:
1248:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3285              		.loc 1 1248 0
 3286 12a0 74311FE5 		ldr	r3, .L229+152
 3287 12a4 0320A0E3 		mov	r2, #3
 3288 12a8 0020C3E5 		strb	r2, [r3]
1249:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3289              		.loc 1 1249 0
 3290 12ac 0100A0E3 		mov	r0, #1
 3291 12b0 84111FE5 		ldr	r1, .L229+152
 3292 12b4 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3293 12b8 24000BE5 		str	r0, [fp, #-36]
1250:../CX3RDKOV5640.c **** 					{
 3294              		.loc 1 1250 0
 3295 12bc 24301BE5 		ldr	r3, [fp, #-36]
 3296 12c0 000053E3 		cmp	r3, #0
 3297 12c4 0400000A 		beq	.L205
1252:../CX3RDKOV5640.c **** 					}
 3298              		.loc 1 1252 0
 3299 12c8 0400A0E3 		mov	r0, #4
 3300 12cc 94111FE5 		ldr	r1, .L229+164
 3301 12d0 24201BE5 		ldr	r2, [fp, #-36]
 3302 12d4 FEFFFFEB 		bl	CyU3PDebugPrint
1254:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3303              		.loc 1 1254 0
 3304 12d8 2D0000EA 		b	.L200
 3305              	.L205:
 3306 12dc 2C0000EA 		b	.L200
 3307              	.L202:
1260:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3308              		.loc 1 1260 0
 3309 12e0 29305BE5 		ldrb	r3, [fp, #-41]
 3310 12e4 0F3003E2 		and	r3, r3, #15
 3311 12e8 25304BE5 		strb	r3, [fp, #-37]
1262:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl8GetControl);
 3312              		.loc 1 1262 0
 3313 12ec 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3314 12f0 0300A0E1 		mov	r0, r3
 3315 12f4 FEFFFFEB 		bl	esOV5640_GetAutofocus
 3316 12f8 0030A0E1 		mov	r3, r0
 3317 12fc 0320A0E1 		mov	r2, r3
 3318 1300 E0311FE5 		ldr	r3, .L229+140
 3319 1304 B020C3E1 		strh	r2, [r3]	@ movhi
1263:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3320              		.loc 1 1263 0
 3321 1308 0200A0E3 		mov	r0, #2
 3322 130c EC111FE5 		ldr	r1, .L229+140
 3323 1310 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3324 1314 24000BE5 		str	r0, [fp, #-36]
1264:../CX3RDKOV5640.c **** 					{
 3325              		.loc 1 1264 0
 3326 1318 24301BE5 		ldr	r3, [fp, #-36]
 3327 131c 000053E3 		cmp	r3, #0
 3328 1320 0400000A 		beq	.L206
1266:../CX3RDKOV5640.c **** 					}
 3329              		.loc 1 1266 0
 3330 1324 0400A0E3 		mov	r0, #4
 3331 1328 F0111FE5 		ldr	r1, .L229+164
 3332 132c 24201BE5 		ldr	r2, [fp, #-36]
 3333 1330 FEFFFFEB 		bl	CyU3PDebugPrint
1268:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3334              		.loc 1 1268 0
 3335 1334 160000EA 		b	.L200
 3336              	.L206:
 3337 1338 150000EA 		b	.L200
 3338              	.L203:
1270:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3339              		.loc 1 1270 0
 3340 133c 32304BE2 		sub	r3, fp, #50
 3341 1340 1000A0E3 		mov	r0, #16
 3342 1344 20121FE5 		ldr	r1, .L229+144
 3343 1348 0320A0E1 		mov	r2, r3
 3344 134c FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3345 1350 24000BE5 		str	r0, [fp, #-36]
1271:../CX3RDKOV5640.c **** 					{
 3346              		.loc 1 1271 0
 3347 1354 24301BE5 		ldr	r3, [fp, #-36]
 3348 1358 000053E3 		cmp	r3, #0
 3349 135c 0300000A 		beq	.L207
1273:../CX3RDKOV5640.c **** 					}
 3350              		.loc 1 1273 0
 3351 1360 0400A0E3 		mov	r0, #4
 3352 1364 2C121FE5 		ldr	r1, .L229+164
 3353 1368 24201BE5 		ldr	r2, [fp, #-36]
 3354 136c FEFFFFEB 		bl	CyU3PDebugPrint
 3355              	.L207:
1277:../CX3RDKOV5640.c **** 					g_IsAutoFocus = 1;
 3356              		.loc 1 1277 0
 3357 1370 4C321FE5 		ldr	r3, .L229+144
 3358 1374 B030D3E1 		ldrh	r3, [r3]
 3359 1378 FF3003E2 		and	r3, r3, #255
 3360 137c 0300A0E1 		mov	r0, r3
 3361 1380 FEFFFFEB 		bl	esOV5640_SetAutofocus
1278:../CX3RDKOV5640.c **** 					break;
 3362              		.loc 1 1278 0
 3363 1384 5C321FE5 		ldr	r3, .L229+148
 3364 1388 0120A0E3 		mov	r2, #1
 3365 138c 0020C3E5 		strb	r2, [r3]
1279:../CX3RDKOV5640.c **** 				}
 3366              		.loc 1 1279 0
 3367 1390 0000A0E1 		mov	r0, r0	@ nop
 3368              	.L200:
 3369              		.loc 1 1281 0
 3370 1394 B50000EA 		b	.L90
 3371              	.L199:
1282:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xA00))/*White Balance manual*/
 3372              		.loc 1 1282 0
 3373 1398 BE325BE1 		ldrh	r3, [fp, #-46]
 3374 139c 020C53E3 		cmp	r3, #512
 3375 13a0 4A00001A 		bne	.L208
 3376              		.loc 1 1282 0 is_stmt 0 discriminator 1
 3377 13a4 BC325BE1 		ldrh	r3, [fp, #-44]
 3378 13a8 0A0C53E3 		cmp	r3, #2560
 3379 13ac 4700001A 		bne	.L208
1283:../CX3RDKOV5640.c **** 			{
1284:../CX3RDKOV5640.c **** 				switch(bRequest)
 3380              		.loc 1 1284 0 is_stmt 1
 3381 13b0 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3382 13b4 840053E3 		cmp	r3, #132
 3383 13b8 040000CA 		bgt	.L210
 3384 13bc 810053E3 		cmp	r3, #129
 3385 13c0 170000AA 		bge	.L211
 3386 13c4 010053E3 		cmp	r3, #1
 3387 13c8 2C00000A 		beq	.L212
1285:../CX3RDKOV5640.c **** 				{
1286:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1287:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1288:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1289:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1290:../CX3RDKOV5640.c **** 					{
1291:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1292:../CX3RDKOV5640.c **** 					}
1293:../CX3RDKOV5640.c **** 					break;
1294:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1295:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1296:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1297:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1298:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1299:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1300:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1301:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetWhiteBalance(RequestOption);
1302:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1303:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1304:../CX3RDKOV5640.c **** 					{
1305:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1306:../CX3RDKOV5640.c **** 					}
1307:../CX3RDKOV5640.c **** 					break;
1308:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1309:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1310:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1311:../CX3RDKOV5640.c **** 					{
1312:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1313:../CX3RDKOV5640.c **** 					}
1314:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1315:../CX3RDKOV5640.c **** 					esOV5640_SetWhiteBalance((uint8_t)gl16SetControl);
1316:../CX3RDKOV5640.c **** 					break;
1317:../CX3RDKOV5640.c **** 				}
1318:../CX3RDKOV5640.c **** 			}
 3388              		.loc 1 1318 0
 3389 13cc A70000EA 		b	.L90
 3390              	.L210:
1284:../CX3RDKOV5640.c **** 				{
 3391              		.loc 1 1284 0
 3392 13d0 860053E3 		cmp	r3, #134
 3393 13d4 0200000A 		beq	.L213
 3394 13d8 870053E3 		cmp	r3, #135
 3395 13dc 1000000A 		beq	.L211
 3396              		.loc 1 1318 0
 3397 13e0 A20000EA 		b	.L90
 3398              	.L213:
1287:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3399              		.loc 1 1287 0
 3400 13e4 B8321FE5 		ldr	r3, .L229+152
 3401 13e8 0320A0E3 		mov	r2, #3
 3402 13ec 0020C3E5 		strb	r2, [r3]
1288:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3403              		.loc 1 1288 0
 3404 13f0 0100A0E3 		mov	r0, #1
 3405 13f4 C8121FE5 		ldr	r1, .L229+152
 3406 13f8 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3407 13fc 24000BE5 		str	r0, [fp, #-36]
1289:../CX3RDKOV5640.c **** 					{
 3408              		.loc 1 1289 0
 3409 1400 24301BE5 		ldr	r3, [fp, #-36]
 3410 1404 000053E3 		cmp	r3, #0
 3411 1408 0400000A 		beq	.L214
1291:../CX3RDKOV5640.c **** 					}
 3412              		.loc 1 1291 0
 3413 140c 0400A0E3 		mov	r0, #4
 3414 1410 D8121FE5 		ldr	r1, .L229+164
 3415 1414 24201BE5 		ldr	r2, [fp, #-36]
 3416 1418 FEFFFFEB 		bl	CyU3PDebugPrint
1293:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3417              		.loc 1 1293 0
 3418 141c 2A0000EA 		b	.L209
 3419              	.L214:
 3420 1420 290000EA 		b	.L209
 3421              	.L211:
1299:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3422              		.loc 1 1299 0
 3423 1424 29305BE5 		ldrb	r3, [fp, #-41]
 3424 1428 0F3003E2 		and	r3, r3, #15
 3425 142c 25304BE5 		strb	r3, [fp, #-37]
1301:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3426              		.loc 1 1301 0
 3427 1430 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3428 1434 0300A0E1 		mov	r0, r3
 3429 1438 FEFFFFEB 		bl	esOV5640_GetWhiteBalance
 3430 143c 0030A0E1 		mov	r3, r0
 3431 1440 0320A0E1 		mov	r2, r3
 3432 1444 14331FE5 		ldr	r3, .L229+156
 3433 1448 B020C3E1 		strh	r2, [r3]	@ movhi
1302:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3434              		.loc 1 1302 0
 3435 144c 0200A0E3 		mov	r0, #2
 3436 1450 20131FE5 		ldr	r1, .L229+156
 3437 1454 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3438 1458 24000BE5 		str	r0, [fp, #-36]
1303:../CX3RDKOV5640.c **** 					{
 3439              		.loc 1 1303 0
 3440 145c 24301BE5 		ldr	r3, [fp, #-36]
 3441 1460 000053E3 		cmp	r3, #0
 3442 1464 0400000A 		beq	.L215
1305:../CX3RDKOV5640.c **** 					}
 3443              		.loc 1 1305 0
 3444 1468 0400A0E3 		mov	r0, #4
 3445 146c 34131FE5 		ldr	r1, .L229+164
 3446 1470 24201BE5 		ldr	r2, [fp, #-36]
 3447 1474 FEFFFFEB 		bl	CyU3PDebugPrint
1307:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3448              		.loc 1 1307 0
 3449 1478 130000EA 		b	.L209
 3450              	.L215:
 3451 147c 120000EA 		b	.L209
 3452              	.L212:
1309:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3453              		.loc 1 1309 0
 3454 1480 32304BE2 		sub	r3, fp, #50
 3455 1484 1000A0E3 		mov	r0, #16
 3456 1488 54131FE5 		ldr	r1, .L229+160
 3457 148c 0320A0E1 		mov	r2, r3
 3458 1490 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3459 1494 24000BE5 		str	r0, [fp, #-36]
1310:../CX3RDKOV5640.c **** 					{
 3460              		.loc 1 1310 0
 3461 1498 24301BE5 		ldr	r3, [fp, #-36]
 3462 149c 000053E3 		cmp	r3, #0
 3463 14a0 0300000A 		beq	.L216
1312:../CX3RDKOV5640.c **** 					}
 3464              		.loc 1 1312 0
 3465 14a4 0400A0E3 		mov	r0, #4
 3466 14a8 70131FE5 		ldr	r1, .L229+164
 3467 14ac 24201BE5 		ldr	r2, [fp, #-36]
 3468 14b0 FEFFFFEB 		bl	CyU3PDebugPrint
 3469              	.L216:
1315:../CX3RDKOV5640.c **** 					break;
 3470              		.loc 1 1315 0
 3471 14b4 80331FE5 		ldr	r3, .L229+160
 3472 14b8 B030D3E1 		ldrh	r3, [r3]
 3473 14bc FF3003E2 		and	r3, r3, #255
 3474 14c0 0300A0E1 		mov	r0, r3
 3475 14c4 FEFFFFEB 		bl	esOV5640_SetWhiteBalance
1316:../CX3RDKOV5640.c **** 				}
 3476              		.loc 1 1316 0
 3477 14c8 0000A0E1 		mov	r0, r0	@ nop
 3478              	.L209:
 3479              		.loc 1 1318 0
 3480 14cc 670000EA 		b	.L90
 3481              	.L208:
1319:../CX3RDKOV5640.c ****             else if((wIndex == 0x200) && (wValue == 0xB00))/*White Balance Auto*/
 3482              		.loc 1 1319 0
 3483 14d0 BE325BE1 		ldrh	r3, [fp, #-46]
 3484 14d4 020C53E3 		cmp	r3, #512
 3485 14d8 4A00001A 		bne	.L217
 3486              		.loc 1 1319 0 is_stmt 0 discriminator 1
 3487 14dc BC325BE1 		ldrh	r3, [fp, #-44]
 3488 14e0 0B0C53E3 		cmp	r3, #2816
 3489 14e4 4700001A 		bne	.L217
1320:../CX3RDKOV5640.c **** 			{
1321:../CX3RDKOV5640.c **** 				switch(bRequest)
 3490              		.loc 1 1321 0 is_stmt 1
 3491 14e8 29305BE5 		ldrb	r3, [fp, #-41]	@ zero_extendqisi2
 3492 14ec 840053E3 		cmp	r3, #132
 3493 14f0 040000CA 		bgt	.L219
 3494 14f4 810053E3 		cmp	r3, #129
 3495 14f8 170000AA 		bge	.L220
 3496 14fc 010053E3 		cmp	r3, #1
 3497 1500 2C00000A 		beq	.L221
1322:../CX3RDKOV5640.c **** 				{
1323:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_INFO_REQ:
1324:../CX3RDKOV5640.c **** 					glGet_Info=0x03;
1325:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
1326:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1327:../CX3RDKOV5640.c **** 					{
1328:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1329:../CX3RDKOV5640.c **** 					}
1330:../CX3RDKOV5640.c **** 					break;
1331:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
1332:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MAX_REQ:
1333:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_RES_REQ:
1334:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_CUR_REQ:
1335:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_DEF_REQ:
1336:../CX3RDKOV5640.c **** 					RequestOption = (bRequest & 0x0F);
1337:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
1338:../CX3RDKOV5640.c **** 					gl16GetControl = esOV5640_GetAutoWhiteBalance(RequestOption);
1339:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
1340:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1341:../CX3RDKOV5640.c **** 					{
1342:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1343:../CX3RDKOV5640.c **** 					}
1344:../CX3RDKOV5640.c **** 					break;
1345:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
1346:../CX3RDKOV5640.c **** 					status = CyU3PUsbGetEP0Data(16,(uint8_t*)&gl16SetControl,&readCount);
1347:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
1348:../CX3RDKOV5640.c **** 					{
1349:../CX3RDKOV5640.c **** 						CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
1350:../CX3RDKOV5640.c **** 					}
1351:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service the SET request for
1352:../CX3RDKOV5640.c **** 					esOV5640_SetAutoWhiteBalance((uint8_t)gl16SetControl);
1353:../CX3RDKOV5640.c **** 					break;
1354:../CX3RDKOV5640.c **** 				}
1355:../CX3RDKOV5640.c **** 			}
 3498              		.loc 1 1355 0
 3499 1504 590000EA 		b	.L90
 3500              	.L219:
1321:../CX3RDKOV5640.c **** 				{
 3501              		.loc 1 1321 0
 3502 1508 860053E3 		cmp	r3, #134
 3503 150c 0200000A 		beq	.L222
 3504 1510 870053E3 		cmp	r3, #135
 3505 1514 1000000A 		beq	.L220
 3506              		.loc 1 1355 0
 3507 1518 540000EA 		b	.L90
 3508              	.L222:
1324:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(1,&glGet_Info);
 3509              		.loc 1 1324 0
 3510 151c F0331FE5 		ldr	r3, .L229+152
 3511 1520 0320A0E3 		mov	r2, #3
 3512 1524 0020C3E5 		strb	r2, [r3]
1325:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3513              		.loc 1 1325 0
 3514 1528 0100A0E3 		mov	r0, #1
 3515 152c 00141FE5 		ldr	r1, .L229+152
 3516 1530 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3517 1534 24000BE5 		str	r0, [fp, #-36]
1326:../CX3RDKOV5640.c **** 					{
 3518              		.loc 1 1326 0
 3519 1538 24301BE5 		ldr	r3, [fp, #-36]
 3520 153c 000053E3 		cmp	r3, #0
 3521 1540 0400000A 		beq	.L223
1328:../CX3RDKOV5640.c **** 					}
 3522              		.loc 1 1328 0
 3523 1544 0400A0E3 		mov	r0, #4
 3524 1548 10141FE5 		ldr	r1, .L229+164
 3525 154c 24201BE5 		ldr	r2, [fp, #-36]
 3526 1550 FEFFFFEB 		bl	CyU3PDebugPrint
1330:../CX3RDKOV5640.c **** 				case ES_UVC_USB_GET_MIN_REQ:
 3527              		.loc 1 1330 0
 3528 1554 2A0000EA 		b	.L218
 3529              	.L223:
 3530 1558 290000EA 		b	.L218
 3531              	.L220:
1336:../CX3RDKOV5640.c **** 					//TODO Change this function with the "Sensor specific" function to Service all the GET request
 3532              		.loc 1 1336 0
 3533 155c 29305BE5 		ldrb	r3, [fp, #-41]
 3534 1560 0F3003E2 		and	r3, r3, #15
 3535 1564 25304BE5 		strb	r3, [fp, #-37]
1338:../CX3RDKOV5640.c **** 					status = CyU3PUsbSendEP0Data(2,(uint8_t*)&gl16GetControl);
 3536              		.loc 1 1338 0
 3537 1568 25305BE5 		ldrb	r3, [fp, #-37]	@ zero_extendqisi2
 3538 156c 0300A0E1 		mov	r0, r3
 3539 1570 FEFFFFEB 		bl	esOV5640_GetAutoWhiteBalance
 3540 1574 0030A0E1 		mov	r3, r0
 3541 1578 0320A0E1 		mov	r2, r3
 3542 157c 4C341FE5 		ldr	r3, .L229+156
 3543 1580 B020C3E1 		strh	r2, [r3]	@ movhi
1339:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3544              		.loc 1 1339 0
 3545 1584 0200A0E3 		mov	r0, #2
 3546 1588 58141FE5 		ldr	r1, .L229+156
 3547 158c FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3548 1590 24000BE5 		str	r0, [fp, #-36]
1340:../CX3RDKOV5640.c **** 					{
 3549              		.loc 1 1340 0
 3550 1594 24301BE5 		ldr	r3, [fp, #-36]
 3551 1598 000053E3 		cmp	r3, #0
 3552 159c 0400000A 		beq	.L224
1342:../CX3RDKOV5640.c **** 					}
 3553              		.loc 1 1342 0
 3554 15a0 0400A0E3 		mov	r0, #4
 3555 15a4 6C141FE5 		ldr	r1, .L229+164
 3556 15a8 24201BE5 		ldr	r2, [fp, #-36]
 3557 15ac FEFFFFEB 		bl	CyU3PDebugPrint
1344:../CX3RDKOV5640.c **** 				case ES_UVC_USB_SET_CUR_REQ:
 3558              		.loc 1 1344 0
 3559 15b0 130000EA 		b	.L218
 3560              	.L224:
 3561 15b4 120000EA 		b	.L218
 3562              	.L221:
1346:../CX3RDKOV5640.c **** 					if (status != CY_U3P_SUCCESS)
 3563              		.loc 1 1346 0
 3564 15b8 32304BE2 		sub	r3, fp, #50
 3565 15bc 1000A0E3 		mov	r0, #16
 3566 15c0 8C141FE5 		ldr	r1, .L229+160
 3567 15c4 0320A0E1 		mov	r2, r3
 3568 15c8 FEFFFFEB 		bl	CyU3PUsbGetEP0Data
 3569 15cc 24000BE5 		str	r0, [fp, #-36]
1347:../CX3RDKOV5640.c **** 					{
 3570              		.loc 1 1347 0
 3571 15d0 24301BE5 		ldr	r3, [fp, #-36]
 3572 15d4 000053E3 		cmp	r3, #0
 3573 15d8 0300000A 		beq	.L225
1349:../CX3RDKOV5640.c **** 					}
 3574              		.loc 1 1349 0
 3575 15dc 0400A0E3 		mov	r0, #4
 3576 15e0 A8141FE5 		ldr	r1, .L229+164
 3577 15e4 24201BE5 		ldr	r2, [fp, #-36]
 3578 15e8 FEFFFFEB 		bl	CyU3PDebugPrint
 3579              	.L225:
1352:../CX3RDKOV5640.c **** 					break;
 3580              		.loc 1 1352 0
 3581 15ec B8341FE5 		ldr	r3, .L229+160
 3582 15f0 B030D3E1 		ldrh	r3, [r3]
 3583 15f4 FF3003E2 		and	r3, r3, #255
 3584 15f8 0300A0E1 		mov	r0, r3
 3585 15fc FEFFFFEB 		bl	esOV5640_SetAutoWhiteBalance
1353:../CX3RDKOV5640.c **** 				}
 3586              		.loc 1 1353 0
 3587 1600 0000A0E1 		mov	r0, r0	@ nop
 3588              	.L218:
 3589              		.loc 1 1355 0
 3590 1604 190000EA 		b	.L90
 3591              	.L217:
1356:../CX3RDKOV5640.c ****             else if((wValue == ES_UVC_VC_REQUEST_ERROR_CODE_CONTROL) && (wIndex == 0x00))
 3592              		.loc 1 1356 0
 3593 1608 BC325BE1 		ldrh	r3, [fp, #-44]
 3594 160c 020C53E3 		cmp	r3, #512
 3595 1610 1200001A 		bne	.L226
 3596              		.loc 1 1356 0 is_stmt 0 discriminator 1
 3597 1614 BE325BE1 		ldrh	r3, [fp, #-46]
 3598 1618 000053E3 		cmp	r3, #0
 3599 161c 0F00001A 		bne	.L226
1357:../CX3RDKOV5640.c ****             {
1358:../CX3RDKOV5640.c ****                 temp = ES_UVC_ERROR_INVALID_CONTROL;
 3600              		.loc 1 1358 0 is_stmt 1
 3601 1620 0630A0E3 		mov	r3, #6
 3602 1624 35304BE5 		strb	r3, [fp, #-53]
1359:../CX3RDKOV5640.c ****                 status = CyU3PUsbSendEP0Data(0x01, &temp);
 3603              		.loc 1 1359 0
 3604 1628 35304BE2 		sub	r3, fp, #53
 3605 162c 0100A0E3 		mov	r0, #1
 3606 1630 0310A0E1 		mov	r1, r3
 3607 1634 FEFFFFEB 		bl	CyU3PUsbSendEP0Data
 3608 1638 24000BE5 		str	r0, [fp, #-36]
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3609              		.loc 1 1360 0
 3610 163c 24301BE5 		ldr	r3, [fp, #-36]
 3611 1640 000053E3 		cmp	r3, #0
 3612 1644 0400000A 		beq	.L227
1361:../CX3RDKOV5640.c ****                 {
1362:../CX3RDKOV5640.c ****                     CyU3PDebugPrint (4, "\n\rUSBStpCB:VCI SendEP0Data = %d", status);
 3613              		.loc 1 1362 0
 3614 1648 0400A0E3 		mov	r0, #4
 3615 164c 14151FE5 		ldr	r1, .L229+164
 3616 1650 24201BE5 		ldr	r2, [fp, #-36]
 3617 1654 FEFFFFEB 		bl	CyU3PDebugPrint
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3618              		.loc 1 1360 0
 3619 1658 040000EA 		b	.L90
 3620              	.L227:
1360:../CX3RDKOV5640.c ****                 if (status != CY_U3P_SUCCESS)
 3621              		.loc 1 1360 0 is_stmt 0 discriminator 1
 3622 165c 030000EA 		b	.L90
 3623              	.L226:
1363:../CX3RDKOV5640.c ****                 }
1364:../CX3RDKOV5640.c ****             }
1365:../CX3RDKOV5640.c ****             else
1366:../CX3RDKOV5640.c ****                 CyU3PUsbStall(0,CyTrue, CyTrue);
 3624              		.loc 1 1366 0 is_stmt 1
 3625 1660 0000A0E3 		mov	r0, #0
 3626 1664 0110A0E3 		mov	r1, #1
 3627 1668 0120A0E3 		mov	r2, #1
 3628 166c FEFFFFEB 		bl	CyU3PUsbStall
 3629              	.L90:
1367:../CX3RDKOV5640.c ****         }
1368:../CX3RDKOV5640.c ****     }
1369:../CX3RDKOV5640.c ****     return isHandled;
 3630              		.loc 1 1369 0
 3631 1670 20301BE5 		ldr	r3, [fp, #-32]
 3632              	.L228:
1370:../CX3RDKOV5640.c **** }
 3633              		.loc 1 1370 0
 3634 1674 0300A0E1 		mov	r0, r3
 3635 1678 18D04BE2 		sub	sp, fp, #24
 3636              		@ sp needed
 3637 167c F089BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, fp, pc}
 3638              		.cfi_endproc
 3639              	.LFE10:
 3641              		.section	.rodata
 3642 0505 000000   		.align	2
 3643              	.LC29:
 3644 0508 0A0D4170 		.ascii	"\012\015AppInit:I2CInit Err = 0x%x.\000"
 3644      70496E69 
 3644      743A4932 
 3644      43496E69 
 3644      74204572 
 3645 0526 0000     		.align	2
 3646              	.LC30:
 3647 0528 0A0D4170 		.ascii	"\012\015AppInit:I2CInit\000"
 3647      70496E69 
 3647      743A4932 
 3647      43496E69 
 3647      7400
 3648 053a 0000     		.align	2
 3649              	.LC31:
 3650 053c 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit Err = 0x%x\000"
 3650      70496E69 
 3650      743A4750 
 3650      494F496E 
 3650      69742045 
 3651 055a 0000     		.align	2
 3652              	.LC32:
 3653 055c 0A0D4170 		.ascii	"\012\015AppInit:GPIOInit\000"
 3653      70496E69 
 3653      743A4750 
 3653      494F496E 
 3653      697400
 3654 056f 00       		.align	2
 3655              	.LC33:
 3656 0570 0A0D4170 		.ascii	"\012\015AppInit:PIBInit Err = 0x%x\000"
 3656      70496E69 
 3656      743A5049 
 3656      42496E69 
 3656      74204572 
 3657 058d 000000   		.align	2
 3658              	.LC34:
 3659 0590 0A0D4170 		.ascii	"\012\015AppInit:PIBInit\000"
 3659      70496E69 
 3659      743A5049 
 3659      42496E69 
 3659      7400
 3660 05a2 0000     		.align	2
 3661              	.LC35:
 3662 05a4 0A0D4170 		.ascii	"\012\015AppInit:UsbStart Err = 0x%x\000"
 3662      70496E69 
 3662      743A5573 
 3662      62537461 
 3662      72742045 
 3663 05c2 0000     		.align	2
 3664              	.LC36:
 3665 05c4 0A0D4170 		.ascii	"\012\015AppInit:UsbStart\000"
 3665      70496E69 
 3665      743A5573 
 3665      62537461 
 3665      727400
 3666 05d7 00       		.align	2
 3667              	.LC37:
 3668 05d8 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr Err = 0x%x\000"
 3668      70496E69 
 3668      743A5365 
 3668      745F5353 
 3668      5F446576 
 3669              		.align	2
 3670              	.LC38:
 3671 0600 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_Device_Dscr\000"
 3671      70496E69 
 3671      743A5365 
 3671      745F5353 
 3671      5F446576 
 3672 061d 000000   		.align	2
 3673              	.LC39:
 3674 0620 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr Err = 0x%x\000"
 3674      70496E69 
 3674      743A5365 
 3674      745F4853 
 3674      5F446576 
 3675              		.align	2
 3676              	.LC40:
 3677 0648 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_Device_Dscr\000"
 3677      70496E69 
 3677      743A5365 
 3677      745F4853 
 3677      5F446576 
 3678 0665 000000   		.align	2
 3679              	.LC41:
 3680 0668 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr Err = 0x%x\000"
 3680      70496E69 
 3680      743A5365 
 3680      745F424F 
 3680      535F4473 
 3681 068a 0000     		.align	2
 3682              	.LC42:
 3683 068c 0A0D4170 		.ascii	"\012\015AppInit:Set_BOS_Dscr\000"
 3683      70496E69 
 3683      743A5365 
 3683      745F424F 
 3683      535F4473 
 3684 06a3 00       		.align	2
 3685              	.LC43:
 3686 06a4 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr Err = 0x%x\000"
 3686      70496E69 
 3686      743A5365 
 3686      745F4445 
 3686      56515541 
 3687 06ca 0000     		.align	2
 3688              	.LC44:
 3689 06cc 0A0D4170 		.ascii	"\012\015AppInit:Set_DEVQUAL_Dscr\000"
 3689      70496E69 
 3689      743A5365 
 3689      745F4445 
 3689      56515541 
 3690 06e7 00       		.align	2
 3691              	.LC45:
 3692 06e8 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr Err = 0x%x\000"
 3692      70496E69 
 3692      743A5365 
 3692      745F5353 
 3692      5F434647 
 3693 070d 000000   		.align	2
 3694              	.LC46:
 3695 0710 0A0D4170 		.ascii	"\012\015AppInit:Set_SS_CFG_Dscr\000"
 3695      70496E69 
 3695      743A5365 
 3695      745F5353 
 3695      5F434647 
 3696 072a 0000     		.align	2
 3697              	.LC47:
 3698 072c 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr Err = 0x%x\000"
 3698      70496E69 
 3698      743A5365 
 3698      745F4853 
 3698      5F434647 
 3699 0751 000000   		.align	2
 3700              	.LC48:
 3701 0754 0A0D4170 		.ascii	"\012\015AppInit:Set_HS_CFG_Dscr\000"
 3701      70496E69 
 3701      743A5365 
 3701      745F4853 
 3701      5F434647 
 3702 076e 0000     		.align	2
 3703              	.LC49:
 3704 0770 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr Err = 0x%x\000"
 3704      70496E69 
 3704      743A5365 
 3704      745F4653 
 3704      5F434647 
 3705 0795 000000   		.align	2
 3706              	.LC50:
 3707 0798 0A0D4170 		.ascii	"\012\015AppInit:Set_FS_CFG_Dscr\000"
 3707      70496E69 
 3707      743A5365 
 3707      745F4653 
 3707      5F434647 
 3708 07b2 0000     		.align	2
 3709              	.LC51:
 3710 07b4 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr0 Err = 0x%x\000"
 3710      70496E69 
 3710      743A5365 
 3710      745F5354 
 3710      524E475F 
 3711 07d9 000000   		.align	2
 3712              	.LC52:
 3713 07dc 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr1 Err = 0x%x\000"
 3713      70496E69 
 3713      743A5365 
 3713      745F5354 
 3713      524E475F 
 3714 0801 000000   		.align	2
 3715              	.LC53:
 3716 0804 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr2 Err = 0x%x\000"
 3716      70496E69 
 3716      743A5365 
 3716      745F5354 
 3716      524E475F 
 3717 0829 000000   		.align	2
 3718              	.LC54:
 3719 082c 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr3 Err = 0x%x\000"
 3719      70496E69 
 3719      743A5365 
 3719      745F5354 
 3719      524E475F 
 3720 0851 000000   		.align	2
 3721              	.LC55:
 3722 0854 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr4 Err = 0x%x\000"
 3722      70496E69 
 3722      743A5365 
 3722      745F5354 
 3722      524E475F 
 3723 0879 000000   		.align	2
 3724              	.LC56:
 3725 087c 0A0D4170 		.ascii	"\012\015AppInit:Set_STRNG_Dscr5 Err = 0x%x\000"
 3725      70496E69 
 3725      743A5365 
 3725      745F5354 
 3725      524E475F 
 3726 08a1 000000   		.align	2
 3727              	.LC57:
 3728 08a4 0A0D4170 		.ascii	"\012\015AppInit:ConnectState Err = 0x%x\000"
 3728      70496E69 
 3728      743A436F 
 3728      6E6E6563 
 3728      74537461 
 3729 08c6 0000     		.align	2
 3730              	.LC58:
 3731 08c8 6E0D4170 		.ascii	"n\015AppInit:ConnectState\000"
 3731      70496E69 
 3731      743A436F 
 3731      6E6E6563 
 3731      74537461 
 3732 08df 00       		.align	2
 3733              	.LC59:
 3734 08e0 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x\000"
 3734      70496E69 
 3734      743A4379 
 3734      55335053 
 3734      65744570 
 3735 090d 000000   		.align	2
 3736              	.LC60:
 3737 0910 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp Err = 0x%x\000"
 3737      70496E69 
 3737      743A4379 
 3737      55335053 
 3737      65744570 
 3738 093d 000000   		.align	2
 3739              	.LC61:
 3740 0940 0A0D4170 		.ascii	"\012\015AppInit:CyU3PSetEpConfig BulkEp\000"
 3740      70496E69 
 3740      743A4379 
 3740      55335053 
 3740      65744570 
 3741 0962 0000     		.align	2
 3742              	.LC62:
 3743 0964 0A0D4170 		.ascii	"\012\015AppInit:DmaMultiChannelCreate Err = 0x%x\000"
 3743      70496E69 
 3743      743A446D 
 3743      614D756C 
 3743      74694368 
 3744 098f 00       		.align	2
 3745              	.LC63:
 3746 0990 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset Err = 0x%x\000"
 3746      70496E69 
 3746      743A4D75 
 3746      6C746943 
 3746      68616E6E 
 3747 09b7 00       		.align	2
 3748              	.LC64:
 3749 09b8 0A0D4170 		.ascii	"\012\015AppInit:MultiChannelReset\000"
 3749      70496E69 
 3749      743A4D75 
 3749      6C746943 
 3749      68616E6E 
 3750              		.align	2
 3751              	.LC65:
 3752 09d4 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad Err = 0x%x\000"
 3752      70496E69 
 3752      743A4D69 
 3752      70696373 
 3752      69477069 
 3753 09f9 000000   		.align	2
 3754              	.LC66:
 3755 09fc 0A0D4170 		.ascii	"\012\015AppInit:MipicsiGpifLoad\000"
 3755      70496E69 
 3755      743A4D69 
 3755      70696373 
 3755      69477069 
 3756 0a16 0000     		.align	2
 3757              	.LC67:
 3758 0a18 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart Err = 0x%x\000"
 3758      70496E69 
 3758      743A4770 
 3758      6966534D 
 3758      53746172 
 3759 0a39 000000   		.align	2
 3760              	.LC68:
 3761 0a3c 0A0D4170 		.ascii	"\012\015AppInit:GpifSMStart\000"
 3761      70496E69 
 3761      743A4770 
 3761      6966534D 
 3761      53746172 
 3762 0a52 0000     		.align	2
 3763              	.LC69:
 3764 0a54 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit Err = 0x%x\000"
 3764      70496E69 
 3764      743A4D69 
 3764      70696373 
 3764      69496E69 
 3765 0a75 000000   		.align	2
 3766              	.LC70:
 3767 0a78 0A0D4170 		.ascii	"\012\015AppInit:MipicsiInit\000"
 3767      70496E69 
 3767      743A4D69 
 3767      70696373 
 3767      69496E69 
 3768 0a8e 0000     		.align	2
 3769              	.LC71:
 3770 0a90 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams Err = 0x%x\000"
 3770      70496E69 
 3770      743A4D69 
 3770      70696373 
 3770      69536574 
 3771 0aba 0000     		.align	2
 3772              	.LC72:
 3773 0abc 0A0D4170 		.ascii	"\012\015AppInit:MipicsiSetIntfParams\000"
 3773      70496E69 
 3773      743A4D69 
 3773      70696373 
 3773      69536574 
 3774 0adb 00       		.align	2
 3775              	.LC73:
 3776 0adc 0A0D4669 		.ascii	"\012\015Firmware Version: %d.%d.%d.%d\000"
 3776      726D7761 
 3776      72652056 
 3776      65727369 
 3776      6F6E3A20 
 3777              		.section	.text.esUVCUvcApplnInit,"ax",%progbits
 3778              		.align	2
 3779              		.global	esUVCUvcApplnInit
 3781              	esUVCUvcApplnInit:
 3782              	.LFB11:
1371:../CX3RDKOV5640.c **** 
1372:../CX3RDKOV5640.c **** 
1373:../CX3RDKOV5640.c **** /* This function initializes the USB Module, creates event group,
1374:../CX3RDKOV5640.c ****    sets the enumeration descriptors, configures the Endpoints and
1375:../CX3RDKOV5640.c ****    configures the DMA module for the UVC Application */
1376:../CX3RDKOV5640.c ****     void
1377:../CX3RDKOV5640.c **** esUVCUvcApplnInit (void)
1378:../CX3RDKOV5640.c **** {
 3783              		.loc 1 1378 0
 3784              		.cfi_startproc
 3785              		@ args = 0, pretend = 0, frame = 56
 3786              		@ frame_needed = 1, uses_anonymous_args = 0
 3787 0000 00482DE9 		stmfd	sp!, {fp, lr}
 3788              	.LCFI22:
 3789              		.cfi_def_cfa_offset 8
 3790              		.cfi_offset 11, -8
 3791              		.cfi_offset 14, -4
 3792 0004 04B08DE2 		add	fp, sp, #4
 3793              	.LCFI23:
 3794              		.cfi_def_cfa 11, 4
 3795 0008 48D04DE2 		sub	sp, sp, #72
1379:../CX3RDKOV5640.c ****     CyU3PEpConfig_t endPointConfig;
1380:../CX3RDKOV5640.c ****     CyU3PDmaMultiChannelConfig_t dmaCfg;
1381:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 3796              		.loc 1 1381 0
 3797 000c 0030A0E3 		mov	r3, #0
 3798 0010 08300BE5 		str	r3, [fp, #-8]
1382:../CX3RDKOV5640.c **** 
1383:../CX3RDKOV5640.c ****     /* Initialize the I2C interface for Mipi Block Usage and Camera. */
1384:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeI2c (CY_U3P_MIPICSI_I2C_400KHZ);
 3799              		.loc 1 1384 0
 3800 0014 0100A0E3 		mov	r0, #1
 3801 0018 FEFFFFEB 		bl	CyU3PMipicsiInitializeI2c
 3802 001c 08000BE5 		str	r0, [fp, #-8]
1385:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3803              		.loc 1 1385 0
 3804 0020 08301BE5 		ldr	r3, [fp, #-8]
 3805 0024 000053E3 		cmp	r3, #0
 3806 0028 0500000A 		beq	.L232
1386:../CX3RDKOV5640.c ****     {
1387:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:I2CInit Err = 0x%x.",status);
 3807              		.loc 1 1387 0
 3808 002c 0400A0E3 		mov	r0, #4
 3809 0030 48189FE5 		ldr	r1, .L263
 3810 0034 08201BE5 		ldr	r2, [fp, #-8]
 3811 0038 FEFFFFEB 		bl	CyU3PDebugPrint
1388:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3812              		.loc 1 1388 0
 3813 003c 08001BE5 		ldr	r0, [fp, #-8]
 3814 0040 FEFFFFEB 		bl	esUVCAppErrorHandler
 3815              	.L232:
1389:../CX3RDKOV5640.c ****     }
1390:../CX3RDKOV5640.c **** #ifdef VISDebug
1391:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:I2CInit");
 3816              		.loc 1 1391 0
 3817 0044 0400A0E3 		mov	r0, #4
 3818 0048 34189FE5 		ldr	r1, .L263+4
 3819 004c FEFFFFEB 		bl	CyU3PDebugPrint
1392:../CX3RDKOV5640.c **** #endif
1393:../CX3RDKOV5640.c ****     /* Initialize GPIO module. */
1394:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializeGPIO ();
 3820              		.loc 1 1394 0
 3821 0050 FEFFFFEB 		bl	CyU3PMipicsiInitializeGPIO
 3822 0054 08000BE5 		str	r0, [fp, #-8]
1395:../CX3RDKOV5640.c ****     if( status != CY_U3P_SUCCESS)
 3823              		.loc 1 1395 0
 3824 0058 08301BE5 		ldr	r3, [fp, #-8]
 3825 005c 000053E3 		cmp	r3, #0
 3826 0060 0500000A 		beq	.L233
1396:../CX3RDKOV5640.c ****     {
1397:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit Err = 0x%x",status);
 3827              		.loc 1 1397 0
 3828 0064 0400A0E3 		mov	r0, #4
 3829 0068 18189FE5 		ldr	r1, .L263+8
 3830 006c 08201BE5 		ldr	r2, [fp, #-8]
 3831 0070 FEFFFFEB 		bl	CyU3PDebugPrint
1398:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3832              		.loc 1 1398 0
 3833 0074 08001BE5 		ldr	r0, [fp, #-8]
 3834 0078 FEFFFFEB 		bl	esUVCAppErrorHandler
 3835              	.L233:
1399:../CX3RDKOV5640.c ****     }
1400:../CX3RDKOV5640.c **** #ifdef VISDebug
1401:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GPIOInit");
 3836              		.loc 1 1401 0
 3837 007c 0400A0E3 		mov	r0, #4
 3838 0080 04189FE5 		ldr	r1, .L263+12
 3839 0084 FEFFFFEB 		bl	CyU3PDebugPrint
1402:../CX3RDKOV5640.c **** #endif
1403:../CX3RDKOV5640.c ****     /* Initialize the PIB block */
1404:../CX3RDKOV5640.c ****     status = CyU3PMipicsiInitializePIB ();
 3840              		.loc 1 1404 0
 3841 0088 FEFFFFEB 		bl	CyU3PMipicsiInitializePIB
 3842 008c 08000BE5 		str	r0, [fp, #-8]
1405:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3843              		.loc 1 1405 0
 3844 0090 08301BE5 		ldr	r3, [fp, #-8]
 3845 0094 000053E3 		cmp	r3, #0
 3846 0098 0500000A 		beq	.L234
1406:../CX3RDKOV5640.c ****     {
1407:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:PIBInit Err = 0x%x",status);
 3847              		.loc 1 1407 0
 3848 009c 0400A0E3 		mov	r0, #4
 3849 00a0 E8179FE5 		ldr	r1, .L263+16
 3850 00a4 08201BE5 		ldr	r2, [fp, #-8]
 3851 00a8 FEFFFFEB 		bl	CyU3PDebugPrint
1408:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3852              		.loc 1 1408 0
 3853 00ac 08001BE5 		ldr	r0, [fp, #-8]
 3854 00b0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3855              	.L234:
1409:../CX3RDKOV5640.c ****     }
1410:../CX3RDKOV5640.c **** #ifdef VISDebug
1411:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:PIBInit");
 3856              		.loc 1 1411 0
 3857 00b4 0400A0E3 		mov	r0, #4
 3858 00b8 D4179FE5 		ldr	r1, .L263+20
 3859 00bc FEFFFFEB 		bl	CyU3PDebugPrint
1412:../CX3RDKOV5640.c **** #endif
1413:../CX3RDKOV5640.c ****     /* Start the USB functionality */
1414:../CX3RDKOV5640.c ****     status = CyU3PUsbStart();
 3860              		.loc 1 1414 0
 3861 00c0 FEFFFFEB 		bl	CyU3PUsbStart
 3862 00c4 08000BE5 		str	r0, [fp, #-8]
1415:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3863              		.loc 1 1415 0
 3864 00c8 08301BE5 		ldr	r3, [fp, #-8]
 3865 00cc 000053E3 		cmp	r3, #0
 3866 00d0 0500000A 		beq	.L235
1416:../CX3RDKOV5640.c ****     {
1417:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:UsbStart Err = 0x%x",status);
 3867              		.loc 1 1417 0
 3868 00d4 0400A0E3 		mov	r0, #4
 3869 00d8 B8179FE5 		ldr	r1, .L263+24
 3870 00dc 08201BE5 		ldr	r2, [fp, #-8]
 3871 00e0 FEFFFFEB 		bl	CyU3PDebugPrint
1418:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3872              		.loc 1 1418 0
 3873 00e4 08001BE5 		ldr	r0, [fp, #-8]
 3874 00e8 FEFFFFEB 		bl	esUVCAppErrorHandler
 3875              	.L235:
1419:../CX3RDKOV5640.c ****     }
1420:../CX3RDKOV5640.c **** #ifdef VISDebug
1421:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:UsbStart");
 3876              		.loc 1 1421 0
 3877 00ec 0400A0E3 		mov	r0, #4
 3878 00f0 A4179FE5 		ldr	r1, .L263+28
 3879 00f4 FEFFFFEB 		bl	CyU3PDebugPrint
1422:../CX3RDKOV5640.c **** #endif
1423:../CX3RDKOV5640.c ****     /* The fast enumeration is the easiest way to setup a USB connection,
1424:../CX3RDKOV5640.c ****      * where all enumeration phase is handled by the library. Only the
1425:../CX3RDKOV5640.c ****      * class / vendor requests need to be handled by the application. */
1426:../CX3RDKOV5640.c ****     CyU3PUsbRegisterSetupCallback(esUVCUvcApplnUSBSetupCB, CyTrue);
 3880              		.loc 1 1426 0
 3881 00f8 A0079FE5 		ldr	r0, .L263+32
 3882 00fc 0110A0E3 		mov	r1, #1
 3883 0100 FEFFFFEB 		bl	CyU3PUsbRegisterSetupCallback
1427:../CX3RDKOV5640.c **** 
1428:../CX3RDKOV5640.c ****     /* Setup the callback to handle the USB events */
1429:../CX3RDKOV5640.c ****     CyU3PUsbRegisterEventCallback(esUVCUvcApplnUSBEventCB);
 3884              		.loc 1 1429 0
 3885 0104 98079FE5 		ldr	r0, .L263+36
 3886 0108 FEFFFFEB 		bl	CyU3PUsbRegisterEventCallback
1430:../CX3RDKOV5640.c **** 
1431:../CX3RDKOV5640.c ****     /* Register a callback to handle LPM requests from the USB 3.0 host. */
1432:../CX3RDKOV5640.c ****     CyU3PUsbRegisterLPMRequestCallback (esUVCApplnLPMRqtCB);
 3887              		.loc 1 1432 0
 3888 010c 94079FE5 		ldr	r0, .L263+40
 3889 0110 FEFFFFEB 		bl	CyU3PUsbRegisterLPMRequestCallback
1433:../CX3RDKOV5640.c **** 
1434:../CX3RDKOV5640.c ****     /* Set the USB Enumeration descriptors */
1435:../CX3RDKOV5640.c **** 
1436:../CX3RDKOV5640.c ****     /* Super speed device descriptor. */
1437:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB30DeviceDscr);
 3890              		.loc 1 1437 0
 3891 0114 0000A0E3 		mov	r0, #0
 3892 0118 0010A0E3 		mov	r1, #0
 3893 011c 88279FE5 		ldr	r2, .L263+44
 3894 0120 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3895 0124 08000BE5 		str	r0, [fp, #-8]
1438:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3896              		.loc 1 1438 0
 3897 0128 08301BE5 		ldr	r3, [fp, #-8]
 3898 012c 000053E3 		cmp	r3, #0
 3899 0130 0500000A 		beq	.L236
1439:../CX3RDKOV5640.c ****     {
1440:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr Err = 0x%x", status);
 3900              		.loc 1 1440 0
 3901 0134 0400A0E3 		mov	r0, #4
 3902 0138 70179FE5 		ldr	r1, .L263+48
 3903 013c 08201BE5 		ldr	r2, [fp, #-8]
 3904 0140 FEFFFFEB 		bl	CyU3PDebugPrint
1441:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3905              		.loc 1 1441 0
 3906 0144 08001BE5 		ldr	r0, [fp, #-8]
 3907 0148 FEFFFFEB 		bl	esUVCAppErrorHandler
 3908              	.L236:
1442:../CX3RDKOV5640.c ****     }
1443:../CX3RDKOV5640.c **** #ifdef VISDebug
1444:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_Device_Dscr");
 3909              		.loc 1 1444 0
 3910 014c 0400A0E3 		mov	r0, #4
 3911 0150 5C179FE5 		ldr	r1, .L263+52
 3912 0154 FEFFFFEB 		bl	CyU3PDebugPrint
1445:../CX3RDKOV5640.c **** #endif
1446:../CX3RDKOV5640.c ****     /* High speed device descriptor. */
1447:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, 0, (uint8_t *)esUVCUSB20DeviceDscr);
 3913              		.loc 1 1447 0
 3914 0158 0100A0E3 		mov	r0, #1
 3915 015c 0010A0E3 		mov	r1, #0
 3916 0160 50279FE5 		ldr	r2, .L263+56
 3917 0164 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3918 0168 08000BE5 		str	r0, [fp, #-8]
1448:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3919              		.loc 1 1448 0
 3920 016c 08301BE5 		ldr	r3, [fp, #-8]
 3921 0170 000053E3 		cmp	r3, #0
 3922 0174 0500000A 		beq	.L237
1449:../CX3RDKOV5640.c ****     {
1450:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr Err = 0x%x", status);
 3923              		.loc 1 1450 0
 3924 0178 0400A0E3 		mov	r0, #4
 3925 017c 38179FE5 		ldr	r1, .L263+60
 3926 0180 08201BE5 		ldr	r2, [fp, #-8]
 3927 0184 FEFFFFEB 		bl	CyU3PDebugPrint
1451:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3928              		.loc 1 1451 0
 3929 0188 08001BE5 		ldr	r0, [fp, #-8]
 3930 018c FEFFFFEB 		bl	esUVCAppErrorHandler
 3931              	.L237:
1452:../CX3RDKOV5640.c ****     }
1453:../CX3RDKOV5640.c **** #ifdef VISDebug
1454:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_Device_Dscr");
 3932              		.loc 1 1454 0
 3933 0190 0400A0E3 		mov	r0, #4
 3934 0194 24179FE5 		ldr	r1, .L263+64
 3935 0198 FEFFFFEB 		bl	CyU3PDebugPrint
1455:../CX3RDKOV5640.c **** #endif
1456:../CX3RDKOV5640.c ****     /* BOS descriptor */
1457:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, 0, (uint8_t *)esUVCUSBBOSDscr);
 3936              		.loc 1 1457 0
 3937 019c 0700A0E3 		mov	r0, #7
 3938 01a0 0010A0E3 		mov	r1, #0
 3939 01a4 18279FE5 		ldr	r2, .L263+68
 3940 01a8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3941 01ac 08000BE5 		str	r0, [fp, #-8]
1458:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3942              		.loc 1 1458 0
 3943 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3944 01b4 000053E3 		cmp	r3, #0
 3945 01b8 0500000A 		beq	.L238
1459:../CX3RDKOV5640.c ****     {
1460:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr Err = 0x%x", status);
 3946              		.loc 1 1460 0
 3947 01bc 0400A0E3 		mov	r0, #4
 3948 01c0 00179FE5 		ldr	r1, .L263+72
 3949 01c4 08201BE5 		ldr	r2, [fp, #-8]
 3950 01c8 FEFFFFEB 		bl	CyU3PDebugPrint
1461:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3951              		.loc 1 1461 0
 3952 01cc 08001BE5 		ldr	r0, [fp, #-8]
 3953 01d0 FEFFFFEB 		bl	esUVCAppErrorHandler
 3954              	.L238:
1462:../CX3RDKOV5640.c ****     }
1463:../CX3RDKOV5640.c **** #ifdef VISDebug
1464:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_BOS_Dscr");
 3955              		.loc 1 1464 0
 3956 01d4 0400A0E3 		mov	r0, #4
 3957 01d8 EC169FE5 		ldr	r1, .L263+76
 3958 01dc FEFFFFEB 		bl	CyU3PDebugPrint
1465:../CX3RDKOV5640.c **** #endif
1466:../CX3RDKOV5640.c ****     /* Device qualifier descriptor */
1467:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, 0, (uint8_t *)esUVCUSBDeviceQualDscr);
 3959              		.loc 1 1467 0
 3960 01e0 0200A0E3 		mov	r0, #2
 3961 01e4 0010A0E3 		mov	r1, #0
 3962 01e8 E0269FE5 		ldr	r2, .L263+80
 3963 01ec FEFFFFEB 		bl	CyU3PUsbSetDesc
 3964 01f0 08000BE5 		str	r0, [fp, #-8]
1468:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3965              		.loc 1 1468 0
 3966 01f4 08301BE5 		ldr	r3, [fp, #-8]
 3967 01f8 000053E3 		cmp	r3, #0
 3968 01fc 0500000A 		beq	.L239
1469:../CX3RDKOV5640.c ****     {
1470:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr Err = 0x%x", status);
 3969              		.loc 1 1470 0
 3970 0200 0400A0E3 		mov	r0, #4
 3971 0204 C8169FE5 		ldr	r1, .L263+84
 3972 0208 08201BE5 		ldr	r2, [fp, #-8]
 3973 020c FEFFFFEB 		bl	CyU3PDebugPrint
1471:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3974              		.loc 1 1471 0
 3975 0210 08001BE5 		ldr	r0, [fp, #-8]
 3976 0214 FEFFFFEB 		bl	esUVCAppErrorHandler
 3977              	.L239:
1472:../CX3RDKOV5640.c ****     }
1473:../CX3RDKOV5640.c **** #ifdef VISDebug
1474:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_DEVQUAL_Dscr");
 3978              		.loc 1 1474 0
 3979 0218 0400A0E3 		mov	r0, #4
 3980 021c B4169FE5 		ldr	r1, .L263+88
 3981 0220 FEFFFFEB 		bl	CyU3PDebugPrint
1475:../CX3RDKOV5640.c **** #endif
1476:../CX3RDKOV5640.c ****     /* Super speed configuration descriptor */
1477:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBSSConfigDscr);
 3982              		.loc 1 1477 0
 3983 0224 0600A0E3 		mov	r0, #6
 3984 0228 0010A0E3 		mov	r1, #0
 3985 022c A8269FE5 		ldr	r2, .L263+92
 3986 0230 FEFFFFEB 		bl	CyU3PUsbSetDesc
 3987 0234 08000BE5 		str	r0, [fp, #-8]
1478:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 3988              		.loc 1 1478 0
 3989 0238 08301BE5 		ldr	r3, [fp, #-8]
 3990 023c 000053E3 		cmp	r3, #0
 3991 0240 0500000A 		beq	.L240
1479:../CX3RDKOV5640.c ****     {
1480:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr Err = 0x%x", status);
 3992              		.loc 1 1480 0
 3993 0244 0400A0E3 		mov	r0, #4
 3994 0248 90169FE5 		ldr	r1, .L263+96
 3995 024c 08201BE5 		ldr	r2, [fp, #-8]
 3996 0250 FEFFFFEB 		bl	CyU3PDebugPrint
1481:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 3997              		.loc 1 1481 0
 3998 0254 08001BE5 		ldr	r0, [fp, #-8]
 3999 0258 FEFFFFEB 		bl	esUVCAppErrorHandler
 4000              	.L240:
1482:../CX3RDKOV5640.c ****     }
1483:../CX3RDKOV5640.c **** #ifdef VISDebug
1484:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_SS_CFG_Dscr");
 4001              		.loc 1 1484 0
 4002 025c 0400A0E3 		mov	r0, #4
 4003 0260 7C169FE5 		ldr	r1, .L263+100
 4004 0264 FEFFFFEB 		bl	CyU3PDebugPrint
1485:../CX3RDKOV5640.c **** #endif
1486:../CX3RDKOV5640.c ****     /* High speed configuration descriptor */
1487:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBHSConfigDscr);
 4005              		.loc 1 1487 0
 4006 0268 0400A0E3 		mov	r0, #4
 4007 026c 0010A0E3 		mov	r1, #0
 4008 0270 70269FE5 		ldr	r2, .L263+104
 4009 0274 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4010 0278 08000BE5 		str	r0, [fp, #-8]
1488:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4011              		.loc 1 1488 0
 4012 027c 08301BE5 		ldr	r3, [fp, #-8]
 4013 0280 000053E3 		cmp	r3, #0
 4014 0284 0500000A 		beq	.L241
1489:../CX3RDKOV5640.c ****     {
1490:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr Err = 0x%x", status);
 4015              		.loc 1 1490 0
 4016 0288 0400A0E3 		mov	r0, #4
 4017 028c 58169FE5 		ldr	r1, .L263+108
 4018 0290 08201BE5 		ldr	r2, [fp, #-8]
 4019 0294 FEFFFFEB 		bl	CyU3PDebugPrint
1491:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4020              		.loc 1 1491 0
 4021 0298 08001BE5 		ldr	r0, [fp, #-8]
 4022 029c FEFFFFEB 		bl	esUVCAppErrorHandler
 4023              	.L241:
1492:../CX3RDKOV5640.c ****     }
1493:../CX3RDKOV5640.c **** #ifdef VISDebug
1494:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_HS_CFG_Dscr");
 4024              		.loc 1 1494 0
 4025 02a0 0400A0E3 		mov	r0, #4
 4026 02a4 44169FE5 		ldr	r1, .L263+112
 4027 02a8 FEFFFFEB 		bl	CyU3PDebugPrint
1495:../CX3RDKOV5640.c **** #endif
1496:../CX3RDKOV5640.c ****     /* Full speed configuration descriptor */
1497:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, 0, (uint8_t *)esUVCUSBFSConfigDscr);
 4028              		.loc 1 1497 0
 4029 02ac 0300A0E3 		mov	r0, #3
 4030 02b0 0010A0E3 		mov	r1, #0
 4031 02b4 38269FE5 		ldr	r2, .L263+116
 4032 02b8 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4033 02bc 08000BE5 		str	r0, [fp, #-8]
1498:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4034              		.loc 1 1498 0
 4035 02c0 08301BE5 		ldr	r3, [fp, #-8]
 4036 02c4 000053E3 		cmp	r3, #0
 4037 02c8 0500000A 		beq	.L242
1499:../CX3RDKOV5640.c ****     {
1500:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr Err = 0x%x", status);
 4038              		.loc 1 1500 0
 4039 02cc 0400A0E3 		mov	r0, #4
 4040 02d0 20169FE5 		ldr	r1, .L263+120
 4041 02d4 08201BE5 		ldr	r2, [fp, #-8]
 4042 02d8 FEFFFFEB 		bl	CyU3PDebugPrint
1501:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4043              		.loc 1 1501 0
 4044 02dc 08001BE5 		ldr	r0, [fp, #-8]
 4045 02e0 FEFFFFEB 		bl	esUVCAppErrorHandler
 4046              	.L242:
1502:../CX3RDKOV5640.c ****     }
1503:../CX3RDKOV5640.c **** #ifdef VISDebug
1504:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:Set_FS_CFG_Dscr");
 4047              		.loc 1 1504 0
 4048 02e4 0400A0E3 		mov	r0, #4
 4049 02e8 0C169FE5 		ldr	r1, .L263+124
 4050 02ec FEFFFFEB 		bl	CyU3PDebugPrint
1505:../CX3RDKOV5640.c **** #endif
1506:../CX3RDKOV5640.c ****     /* String descriptor 0 */
1507:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)esUVCUSBStringLangIDDscr);
 4051              		.loc 1 1507 0
 4052 02f0 0500A0E3 		mov	r0, #5
 4053 02f4 0010A0E3 		mov	r1, #0
 4054 02f8 00269FE5 		ldr	r2, .L263+128
 4055 02fc FEFFFFEB 		bl	CyU3PUsbSetDesc
 4056 0300 08000BE5 		str	r0, [fp, #-8]
1508:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4057              		.loc 1 1508 0
 4058 0304 08301BE5 		ldr	r3, [fp, #-8]
 4059 0308 000053E3 		cmp	r3, #0
 4060 030c 0500000A 		beq	.L243
1509:../CX3RDKOV5640.c ****     {
1510:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr0 Err = 0x%x", status);
 4061              		.loc 1 1510 0
 4062 0310 0400A0E3 		mov	r0, #4
 4063 0314 E8159FE5 		ldr	r1, .L263+132
 4064 0318 08201BE5 		ldr	r2, [fp, #-8]
 4065 031c FEFFFFEB 		bl	CyU3PDebugPrint
1511:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4066              		.loc 1 1511 0
 4067 0320 08001BE5 		ldr	r0, [fp, #-8]
 4068 0324 FEFFFFEB 		bl	esUVCAppErrorHandler
 4069              	.L243:
1512:../CX3RDKOV5640.c ****     }
1513:../CX3RDKOV5640.c **** 
1514:../CX3RDKOV5640.c ****     /* String descriptor 1 */
1515:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)esUVCUSBManufactureDscr);
 4070              		.loc 1 1515 0
 4071 0328 0500A0E3 		mov	r0, #5
 4072 032c 0110A0E3 		mov	r1, #1
 4073 0330 D0259FE5 		ldr	r2, .L263+136
 4074 0334 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4075 0338 08000BE5 		str	r0, [fp, #-8]
1516:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4076              		.loc 1 1516 0
 4077 033c 08301BE5 		ldr	r3, [fp, #-8]
 4078 0340 000053E3 		cmp	r3, #0
 4079 0344 0500000A 		beq	.L244
1517:../CX3RDKOV5640.c ****     {
1518:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr1 Err = 0x%x", status);
 4080              		.loc 1 1518 0
 4081 0348 0400A0E3 		mov	r0, #4
 4082 034c B8159FE5 		ldr	r1, .L263+140
 4083 0350 08201BE5 		ldr	r2, [fp, #-8]
 4084 0354 FEFFFFEB 		bl	CyU3PDebugPrint
1519:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4085              		.loc 1 1519 0
 4086 0358 08001BE5 		ldr	r0, [fp, #-8]
 4087 035c FEFFFFEB 		bl	esUVCAppErrorHandler
 4088              	.L244:
1520:../CX3RDKOV5640.c ****     }
1521:../CX3RDKOV5640.c **** 
1522:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1523:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)esUVCUSBProductDscr);
 4089              		.loc 1 1523 0
 4090 0360 0500A0E3 		mov	r0, #5
 4091 0364 0210A0E3 		mov	r1, #2
 4092 0368 A0259FE5 		ldr	r2, .L263+144
 4093 036c FEFFFFEB 		bl	CyU3PUsbSetDesc
 4094 0370 08000BE5 		str	r0, [fp, #-8]
1524:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4095              		.loc 1 1524 0
 4096 0374 08301BE5 		ldr	r3, [fp, #-8]
 4097 0378 000053E3 		cmp	r3, #0
 4098 037c 0500000A 		beq	.L245
1525:../CX3RDKOV5640.c ****     {
1526:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr2 Err = 0x%x", status);
 4099              		.loc 1 1526 0
 4100 0380 0400A0E3 		mov	r0, #4
 4101 0384 88159FE5 		ldr	r1, .L263+148
 4102 0388 08201BE5 		ldr	r2, [fp, #-8]
 4103 038c FEFFFFEB 		bl	CyU3PDebugPrint
1527:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4104              		.loc 1 1527 0
 4105 0390 08001BE5 		ldr	r0, [fp, #-8]
 4106 0394 FEFFFFEB 		bl	esUVCAppErrorHandler
 4107              	.L245:
1528:../CX3RDKOV5640.c ****     }
1529:../CX3RDKOV5640.c ****     /* String descriptor 3 */
1530:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 3, (uint8_t *)esUVCUSBConfigSSDscr);
 4108              		.loc 1 1530 0
 4109 0398 0500A0E3 		mov	r0, #5
 4110 039c 0310A0E3 		mov	r1, #3
 4111 03a0 70259FE5 		ldr	r2, .L263+152
 4112 03a4 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4113 03a8 08000BE5 		str	r0, [fp, #-8]
1531:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4114              		.loc 1 1531 0
 4115 03ac 08301BE5 		ldr	r3, [fp, #-8]
 4116 03b0 000053E3 		cmp	r3, #0
 4117 03b4 0500000A 		beq	.L246
1532:../CX3RDKOV5640.c ****     {
1533:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr3 Err = 0x%x", status);
 4118              		.loc 1 1533 0
 4119 03b8 0400A0E3 		mov	r0, #4
 4120 03bc 58159FE5 		ldr	r1, .L263+156
 4121 03c0 08201BE5 		ldr	r2, [fp, #-8]
 4122 03c4 FEFFFFEB 		bl	CyU3PDebugPrint
1534:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4123              		.loc 1 1534 0
 4124 03c8 08001BE5 		ldr	r0, [fp, #-8]
 4125 03cc FEFFFFEB 		bl	esUVCAppErrorHandler
 4126              	.L246:
1535:../CX3RDKOV5640.c ****     }
1536:../CX3RDKOV5640.c **** 
1537:../CX3RDKOV5640.c ****     /* String descriptor 4 */
1538:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 4, (uint8_t *)esUVCUSBConfigHSDscr);
 4127              		.loc 1 1538 0
 4128 03d0 0500A0E3 		mov	r0, #5
 4129 03d4 0410A0E3 		mov	r1, #4
 4130 03d8 40259FE5 		ldr	r2, .L263+160
 4131 03dc FEFFFFEB 		bl	CyU3PUsbSetDesc
 4132 03e0 08000BE5 		str	r0, [fp, #-8]
1539:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4133              		.loc 1 1539 0
 4134 03e4 08301BE5 		ldr	r3, [fp, #-8]
 4135 03e8 000053E3 		cmp	r3, #0
 4136 03ec 0500000A 		beq	.L247
1540:../CX3RDKOV5640.c ****     {
1541:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr4 Err = 0x%x", status);
 4137              		.loc 1 1541 0
 4138 03f0 0400A0E3 		mov	r0, #4
 4139 03f4 28159FE5 		ldr	r1, .L263+164
 4140 03f8 08201BE5 		ldr	r2, [fp, #-8]
 4141 03fc FEFFFFEB 		bl	CyU3PDebugPrint
1542:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4142              		.loc 1 1542 0
 4143 0400 08001BE5 		ldr	r0, [fp, #-8]
 4144 0404 FEFFFFEB 		bl	esUVCAppErrorHandler
 4145              	.L247:
1543:../CX3RDKOV5640.c ****     }
1544:../CX3RDKOV5640.c ****     /* String descriptor 2 */
1545:../CX3RDKOV5640.c ****     status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 5, (uint8_t *)esUVCUSBConfigFSDscr);
 4146              		.loc 1 1545 0
 4147 0408 0500A0E3 		mov	r0, #5
 4148 040c 0510A0E3 		mov	r1, #5
 4149 0410 10259FE5 		ldr	r2, .L263+168
 4150 0414 FEFFFFEB 		bl	CyU3PUsbSetDesc
 4151 0418 08000BE5 		str	r0, [fp, #-8]
1546:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4152              		.loc 1 1546 0
 4153 041c 08301BE5 		ldr	r3, [fp, #-8]
 4154 0420 000053E3 		cmp	r3, #0
 4155 0424 0500000A 		beq	.L248
1547:../CX3RDKOV5640.c ****     {
1548:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:Set_STRNG_Dscr5 Err = 0x%x", status);
 4156              		.loc 1 1548 0
 4157 0428 0400A0E3 		mov	r0, #4
 4158 042c F8149FE5 		ldr	r1, .L263+172
 4159 0430 08201BE5 		ldr	r2, [fp, #-8]
 4160 0434 FEFFFFEB 		bl	CyU3PDebugPrint
1549:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4161              		.loc 1 1549 0
 4162 0438 08001BE5 		ldr	r0, [fp, #-8]
 4163 043c FEFFFFEB 		bl	esUVCAppErrorHandler
 4164              	.L248:
1550:../CX3RDKOV5640.c ****     }
1551:../CX3RDKOV5640.c **** 
1552:../CX3RDKOV5640.c ****     CyU3PUsbVBattEnable (CyTrue);
 4165              		.loc 1 1552 0
 4166 0440 0100A0E3 		mov	r0, #1
 4167 0444 FEFFFFEB 		bl	CyU3PUsbVBattEnable
1553:../CX3RDKOV5640.c ****     CyU3PUsbControlVBusDetect (CyFalse, CyTrue);
 4168              		.loc 1 1553 0
 4169 0448 0000A0E3 		mov	r0, #0
 4170 044c 0110A0E3 		mov	r1, #1
 4171 0450 FEFFFFEB 		bl	CyU3PUsbControlVBusDetect
1554:../CX3RDKOV5640.c **** 
1555:../CX3RDKOV5640.c ****     //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings 
1556:../CX3RDKOV5640.c ****     /* Setup Image Sensor */
1557:../CX3RDKOV5640.c **** 	//esOV5640_Base_Config();
1558:../CX3RDKOV5640.c **** 	 //TODO Change this function with the "Sensor specific" function to Write the Base I2C settings fo
1559:../CX3RDKOV5640.c **** 	//esOV5640_Auto_Focus_Config();
1560:../CX3RDKOV5640.c **** 	//TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the sensor
1561:../CX3RDKOV5640.c **** 	//esCamera_Power_Down();
1562:../CX3RDKOV5640.c **** 
1563:../CX3RDKOV5640.c ****     /* Connect the USB pins and enable super speed operation */
1564:../CX3RDKOV5640.c ****     status = CyU3PConnectState(CyTrue, CyTrue);
 4172              		.loc 1 1564 0
 4173 0454 0100A0E3 		mov	r0, #1
 4174 0458 0110A0E3 		mov	r1, #1
 4175 045c FEFFFFEB 		bl	CyU3PConnectState
 4176 0460 08000BE5 		str	r0, [fp, #-8]
1565:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4177              		.loc 1 1565 0
 4178 0464 08301BE5 		ldr	r3, [fp, #-8]
 4179 0468 000053E3 		cmp	r3, #0
 4180 046c 0500000A 		beq	.L249
1566:../CX3RDKOV5640.c ****     {
1567:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:ConnectState Err = 0x%x", status);
 4181              		.loc 1 1567 0
 4182 0470 0400A0E3 		mov	r0, #4
 4183 0474 B4149FE5 		ldr	r1, .L263+176
 4184 0478 08201BE5 		ldr	r2, [fp, #-8]
 4185 047c FEFFFFEB 		bl	CyU3PDebugPrint
1568:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4186              		.loc 1 1568 0
 4187 0480 08001BE5 		ldr	r0, [fp, #-8]
 4188 0484 FEFFFFEB 		bl	esUVCAppErrorHandler
 4189              	.L249:
1569:../CX3RDKOV5640.c ****     }
1570:../CX3RDKOV5640.c **** #ifdef VISDebug
1571:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "n\rAppInit:ConnectState");
 4190              		.loc 1 1571 0
 4191 0488 0400A0E3 		mov	r0, #4
 4192 048c A0149FE5 		ldr	r1, .L263+180
 4193 0490 FEFFFFEB 		bl	CyU3PDebugPrint
1572:../CX3RDKOV5640.c **** #endif
1573:../CX3RDKOV5640.c ****     /* Since the status interrupt endpoint is not used in this application,
1574:../CX3RDKOV5640.c ****      * just enable the EP in the beginning. */
1575:../CX3RDKOV5640.c ****     /* Control status interrupt endpoint configuration */
1576:../CX3RDKOV5640.c ****     endPointConfig.enable = 1;
 4194              		.loc 1 1576 0
 4195 0494 0130A0E3 		mov	r3, #1
 4196 0498 14300BE5 		str	r3, [fp, #-20]
1577:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_INTR;
 4197              		.loc 1 1577 0
 4198 049c 0330A0E3 		mov	r3, #3
 4199 04a0 10304BE5 		strb	r3, [fp, #-16]
1578:../CX3RDKOV5640.c ****     endPointConfig.pcktSize = 64;
 4200              		.loc 1 1578 0
 4201 04a4 4030A0E3 		mov	r3, #64
 4202 04a8 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1579:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 1;
 4203              		.loc 1 1579 0
 4204 04ac 0130A0E3 		mov	r3, #1
 4205 04b0 09304BE5 		strb	r3, [fp, #-9]
1580:../CX3RDKOV5640.c ****     endPointConfig.burstLen = 1;
 4206              		.loc 1 1580 0
 4207 04b4 0130A0E3 		mov	r3, #1
 4208 04b8 0A304BE5 		strb	r3, [fp, #-10]
1581:../CX3RDKOV5640.c **** 
1582:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_CONTROL_STATUS, &endPointConfig);
 4209              		.loc 1 1582 0
 4210 04bc 14304BE2 		sub	r3, fp, #20
 4211 04c0 8200A0E3 		mov	r0, #130
 4212 04c4 0310A0E1 		mov	r1, r3
 4213 04c8 FEFFFFEB 		bl	CyU3PSetEpConfig
 4214 04cc 08000BE5 		str	r0, [fp, #-8]
1583:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4215              		.loc 1 1583 0
 4216 04d0 08301BE5 		ldr	r3, [fp, #-8]
 4217 04d4 000053E3 		cmp	r3, #0
 4218 04d8 0500000A 		beq	.L250
1584:../CX3RDKOV5640.c ****     {
1585:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig CtrlEp Err = 0x%x", status);
 4219              		.loc 1 1585 0
 4220 04dc 0400A0E3 		mov	r0, #4
 4221 04e0 50149FE5 		ldr	r1, .L263+184
 4222 04e4 08201BE5 		ldr	r2, [fp, #-8]
 4223 04e8 FEFFFFEB 		bl	CyU3PDebugPrint
1586:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4224              		.loc 1 1586 0
 4225 04ec 08001BE5 		ldr	r0, [fp, #-8]
 4226 04f0 FEFFFFEB 		bl	esUVCAppErrorHandler
 4227              	.L250:
1587:../CX3RDKOV5640.c ****     }
1588:../CX3RDKOV5640.c **** 
1589:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_CONTROL_STATUS);
 4228              		.loc 1 1589 0
 4229 04f4 8200A0E3 		mov	r0, #130
 4230 04f8 FEFFFFEB 		bl	CyU3PUsbFlushEp
1590:../CX3RDKOV5640.c **** 
1591:../CX3RDKOV5640.c ****     /* Setup the Bulk endpoint used for Video Streaming */
1592:../CX3RDKOV5640.c ****     endPointConfig.enable = CyTrue;
 4231              		.loc 1 1592 0
 4232 04fc 0130A0E3 		mov	r3, #1
 4233 0500 14300BE5 		str	r3, [fp, #-20]
1593:../CX3RDKOV5640.c ****     endPointConfig.epType = CY_U3P_USB_EP_BULK;
 4234              		.loc 1 1593 0
 4235 0504 0230A0E3 		mov	r3, #2
 4236 0508 10304BE5 		strb	r3, [fp, #-16]
1594:../CX3RDKOV5640.c **** 
1595:../CX3RDKOV5640.c ****     endPointConfig.isoPkts  = 0;
 4237              		.loc 1 1595 0
 4238 050c 0030A0E3 		mov	r3, #0
 4239 0510 09304BE5 		strb	r3, [fp, #-9]
1596:../CX3RDKOV5640.c ****     endPointConfig.streams = 0;
 4240              		.loc 1 1596 0
 4241 0514 0030A0E3 		mov	r3, #0
 4242 0518 BE304BE1 		strh	r3, [fp, #-14]	@ movhi
1597:../CX3RDKOV5640.c **** 
1598:../CX3RDKOV5640.c ****     CyU3PThreadSleep(1000);
 4243              		.loc 1 1598 0
 4244 051c FA0FA0E3 		mov	r0, #1000
 4245 0520 FEFFFFEB 		bl	_tx_thread_sleep
1599:../CX3RDKOV5640.c **** 
1600:../CX3RDKOV5640.c ****     switch(CyU3PUsbGetSpeed())
 4246              		.loc 1 1600 0
 4247 0524 FEFFFFEB 		bl	CyU3PUsbGetSpeed
 4248 0528 0030A0E1 		mov	r3, r0
 4249 052c 010053E3 		cmp	r3, #1
 4250 0530 0F00000A 		beq	.L252
 4251 0534 020053E3 		cmp	r3, #2
 4252 0538 1200001A 		bne	.L262
1601:../CX3RDKOV5640.c ****     {
1602:../CX3RDKOV5640.c ****         case CY_U3P_HIGH_SPEED:
1603:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x200;
 4253              		.loc 1 1603 0
 4254 053c 023CA0E3 		mov	r3, #512
 4255 0540 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1604:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4256              		.loc 1 1604 0
 4257 0544 0130A0E3 		mov	r3, #1
 4258 0548 0A304BE5 		strb	r3, [fp, #-10]
1605:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_HS_STREAM_BUF_SIZE;
 4259              		.loc 1 1605 0
 4260 054c E8339FE5 		ldr	r3, .L263+188
 4261 0550 032BA0E3 		mov	r2, #3072
 4262 0554 B020C3E1 		strh	r2, [r3]	@ movhi
1606:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_HS_DATA_BUF_SIZE;
 4263              		.loc 1 1606 0
 4264 0558 E0339FE5 		ldr	r3, .L263+192
 4265 055c BF2EA0E3 		mov	r2, #3056
 4266 0560 B020C3E1 		strh	r2, [r3]	@ movhi
1607:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_HS_STREAM_BUF_COUNT;
 4267              		.loc 1 1607 0
 4268 0564 D8339FE5 		ldr	r3, .L263+196
 4269 0568 0820A0E3 		mov	r2, #8
 4270 056c 0020C3E5 		strb	r2, [r3]
1608:../CX3RDKOV5640.c ****             break;
 4271              		.loc 1 1608 0
 4272 0570 120000EA 		b	.L254
 4273              	.L252:
1609:../CX3RDKOV5640.c **** 
1610:../CX3RDKOV5640.c ****         case CY_U3P_FULL_SPEED:
1611:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = 0x40;
 4274              		.loc 1 1611 0
 4275 0574 4030A0E3 		mov	r3, #64
 4276 0578 BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1612:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 1;
 4277              		.loc 1 1612 0
 4278 057c 0130A0E3 		mov	r3, #1
 4279 0580 0A304BE5 		strb	r3, [fp, #-10]
1613:../CX3RDKOV5640.c ****             break;
 4280              		.loc 1 1613 0
 4281 0584 0D0000EA 		b	.L254
 4282              	.L262:
1614:../CX3RDKOV5640.c **** 
1615:../CX3RDKOV5640.c ****         case CY_U3P_SUPER_SPEED:
1616:../CX3RDKOV5640.c ****         default:
1617:../CX3RDKOV5640.c ****             endPointConfig.pcktSize = ES_UVC_EP_BULK_VIDEO_PKT_SIZE;
 4283              		.loc 1 1617 0
 4284 0588 013BA0E3 		mov	r3, #1024
 4285 058c BC304BE1 		strh	r3, [fp, #-12]	@ movhi
1618:../CX3RDKOV5640.c ****             endPointConfig.burstLen = 16;
 4286              		.loc 1 1618 0
 4287 0590 1030A0E3 		mov	r3, #16
 4288 0594 0A304BE5 		strb	r3, [fp, #-10]
1619:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_SIZE 	= ES_UVC_SS_STREAM_BUF_SIZE;
 4289              		.loc 1 1619 0
 4290 0598 9C339FE5 		ldr	r3, .L263+188
 4291 059c 062AA0E3 		mov	r2, #24576
 4292 05a0 B020C3E1 		strh	r2, [r3]	@ movhi
1620:../CX3RDKOV5640.c ****             ES_UVC_DATA_BUF_SIZE 	= ES_UVC_SS_DATA_BUF_SIZE;
 4293              		.loc 1 1620 0
 4294 05a4 94339FE5 		ldr	r3, .L263+192
 4295 05a8 98239FE5 		ldr	r2, .L263+200
 4296 05ac B020C3E1 		strh	r2, [r3]	@ movhi
1621:../CX3RDKOV5640.c ****             ES_UVC_STREAM_BUF_COUNT	= ES_UVC_SS_STREAM_BUF_COUNT;
 4297              		.loc 1 1621 0
 4298 05b0 8C339FE5 		ldr	r3, .L263+196
 4299 05b4 0420A0E3 		mov	r2, #4
 4300 05b8 0020C3E5 		strb	r2, [r3]
1622:../CX3RDKOV5640.c ****             break;
 4301              		.loc 1 1622 0
 4302 05bc 0000A0E1 		mov	r0, r0	@ nop
 4303              	.L254:
1623:../CX3RDKOV5640.c ****     }
1624:../CX3RDKOV5640.c **** 
1625:../CX3RDKOV5640.c ****     status = CyU3PSetEpConfig(ES_UVC_EP_BULK_VIDEO, &endPointConfig);
 4304              		.loc 1 1625 0
 4305 05c0 14304BE2 		sub	r3, fp, #20
 4306 05c4 8300A0E3 		mov	r0, #131
 4307 05c8 0310A0E1 		mov	r1, r3
 4308 05cc FEFFFFEB 		bl	CyU3PSetEpConfig
 4309 05d0 08000BE5 		str	r0, [fp, #-8]
1626:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4310              		.loc 1 1626 0
 4311 05d4 08301BE5 		ldr	r3, [fp, #-8]
 4312 05d8 000053E3 		cmp	r3, #0
 4313 05dc 0500000A 		beq	.L255
1627:../CX3RDKOV5640.c ****     {
1628:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp Err = 0x%x", status);
 4314              		.loc 1 1628 0
 4315 05e0 0400A0E3 		mov	r0, #4
 4316 05e4 60139FE5 		ldr	r1, .L263+204
 4317 05e8 08201BE5 		ldr	r2, [fp, #-8]
 4318 05ec FEFFFFEB 		bl	CyU3PDebugPrint
1629:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4319              		.loc 1 1629 0
 4320 05f0 08001BE5 		ldr	r0, [fp, #-8]
 4321 05f4 FEFFFFEB 		bl	esUVCAppErrorHandler
 4322              	.L255:
1630:../CX3RDKOV5640.c ****     }
1631:../CX3RDKOV5640.c **** #ifdef VISDebug
1632:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:CyU3PSetEpConfig BulkEp");
 4323              		.loc 1 1632 0
 4324 05f8 0400A0E3 		mov	r0, #4
 4325 05fc 4C139FE5 		ldr	r1, .L263+208
 4326 0600 FEFFFFEB 		bl	CyU3PDebugPrint
1633:../CX3RDKOV5640.c **** #endif
1634:../CX3RDKOV5640.c ****     CyU3PUsbEPSetBurstMode (ES_UVC_EP_BULK_VIDEO, CyTrue);
 4327              		.loc 1 1634 0
 4328 0604 8300A0E3 		mov	r0, #131
 4329 0608 0110A0E3 		mov	r1, #1
 4330 060c FEFFFFEB 		bl	CyU3PUsbEPSetBurstMode
1635:../CX3RDKOV5640.c **** 
1636:../CX3RDKOV5640.c ****     /* Flush the endpoint memory */
1637:../CX3RDKOV5640.c ****     CyU3PUsbFlushEp(ES_UVC_EP_BULK_VIDEO);
 4331              		.loc 1 1637 0
 4332 0610 8300A0E3 		mov	r0, #131
 4333 0614 FEFFFFEB 		bl	CyU3PUsbFlushEp
1638:../CX3RDKOV5640.c **** 
1639:../CX3RDKOV5640.c ****     /* Create a DMA Manual OUT channel for streaming data */
1640:../CX3RDKOV5640.c ****     /* Video streaming Channel is not active till a stream request is received */
1641:../CX3RDKOV5640.c ****     dmaCfg.size                 = ES_UVC_STREAM_BUF_SIZE;
 4334              		.loc 1 1641 0
 4335 0618 1C339FE5 		ldr	r3, .L263+188
 4336 061c B030D3E1 		ldrh	r3, [r3]
 4337 0620 BC334BE1 		strh	r3, [fp, #-60]	@ movhi
1642:../CX3RDKOV5640.c ****     dmaCfg.count                = ES_UVC_STREAM_BUF_COUNT;
 4338              		.loc 1 1642 0
 4339 0624 18339FE5 		ldr	r3, .L263+196
 4340 0628 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4341 062c BA334BE1 		strh	r3, [fp, #-58]	@ movhi
1643:../CX3RDKOV5640.c ****     dmaCfg.validSckCount        = 2;
 4342              		.loc 1 1643 0
 4343 0630 0230A0E3 		mov	r3, #2
 4344 0634 B8334BE1 		strh	r3, [fp, #-56]	@ movhi
1644:../CX3RDKOV5640.c **** 
1645:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[0]         = ES_UVC_PRODUCER_PPORT_SOCKET_0;
 4345              		.loc 1 1645 0
 4346 0638 013CA0E3 		mov	r3, #256
 4347 063c B6334BE1 		strh	r3, [fp, #-54]	@ movhi
1646:../CX3RDKOV5640.c ****     dmaCfg.prodSckId[1]         = ES_UVC_PRODUCER_PPORT_SOCKET_1;
 4348              		.loc 1 1646 0
 4349 0640 0C339FE5 		ldr	r3, .L263+212
 4350 0644 B4334BE1 		strh	r3, [fp, #-52]	@ movhi
1647:../CX3RDKOV5640.c **** 
1648:../CX3RDKOV5640.c ****     dmaCfg.consSckId[0]         = ES_UVC_EP_VIDEO_CONS_SOCKET;
 4351              		.loc 1 1648 0
 4352 0648 08339FE5 		ldr	r3, .L263+216
 4353 064c BE324BE1 		strh	r3, [fp, #-46]	@ movhi
1649:../CX3RDKOV5640.c ****     dmaCfg.dmaMode              = CY_U3P_DMA_MODE_BYTE;
 4354              		.loc 1 1649 0
 4355 0650 0030A0E3 		mov	r3, #0
 4356 0654 1E304BE5 		strb	r3, [fp, #-30]
1650:../CX3RDKOV5640.c ****     dmaCfg.notification         = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
 4357              		.loc 1 1650 0
 4358 0658 1830A0E3 		mov	r3, #24
 4359 065c 1C300BE5 		str	r3, [fp, #-28]
1651:../CX3RDKOV5640.c ****     dmaCfg.cb                   = esUVCUvcAppDmaCallback;
 4360              		.loc 1 1651 0
 4361 0660 F4329FE5 		ldr	r3, .L263+220
 4362 0664 18300BE5 		str	r3, [fp, #-24]
1652:../CX3RDKOV5640.c ****     dmaCfg.prodHeader           = ES_UVC_PROD_HEADER;
 4363              		.loc 1 1652 0
 4364 0668 0C30A0E3 		mov	r3, #12
 4365 066c B4324BE1 		strh	r3, [fp, #-36]	@ movhi
1653:../CX3RDKOV5640.c ****     dmaCfg.prodFooter           = ES_UVC_PROD_FOOTER;
 4366              		.loc 1 1653 0
 4367 0670 0430A0E3 		mov	r3, #4
 4368 0674 B2324BE1 		strh	r3, [fp, #-34]	@ movhi
1654:../CX3RDKOV5640.c ****     dmaCfg.consHeader           = 0;
 4369              		.loc 1 1654 0
 4370 0678 0030A0E3 		mov	r3, #0
 4371 067c B0324BE1 		strh	r3, [fp, #-32]	@ movhi
1655:../CX3RDKOV5640.c ****     dmaCfg.prodAvailCount       = 0;
 4372              		.loc 1 1655 0
 4373 0680 0030A0E3 		mov	r3, #0
 4374 0684 B6324BE1 		strh	r3, [fp, #-38]	@ movhi
1656:../CX3RDKOV5640.c **** 
1657:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE ,
 4375              		.loc 1 1657 0
 4376 0688 3C304BE2 		sub	r3, fp, #60
 4377 068c CC029FE5 		ldr	r0, .L263+224
 4378 0690 0710A0E3 		mov	r1, #7
 4379 0694 0320A0E1 		mov	r2, r3
 4380 0698 FEFFFFEB 		bl	CyU3PDmaMultiChannelCreate
 4381 069c 08000BE5 		str	r0, [fp, #-8]
1658:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4382              		.loc 1 1658 0
 4383 06a0 08301BE5 		ldr	r3, [fp, #-8]
 4384 06a4 000053E3 		cmp	r3, #0
 4385 06a8 0300000A 		beq	.L256
1659:../CX3RDKOV5640.c ****     {
1660:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:DmaMultiChannelCreate Err = 0x%x", status);
 4386              		.loc 1 1660 0
 4387 06ac 0400A0E3 		mov	r0, #4
 4388 06b0 AC129FE5 		ldr	r1, .L263+228
 4389 06b4 08201BE5 		ldr	r2, [fp, #-8]
 4390 06b8 FEFFFFEB 		bl	CyU3PDebugPrint
 4391              	.L256:
1661:../CX3RDKOV5640.c ****     }
1662:../CX3RDKOV5640.c ****     CyU3PThreadSleep(100);
 4392              		.loc 1 1662 0
 4393 06bc 6400A0E3 		mov	r0, #100
 4394 06c0 FEFFFFEB 		bl	_tx_thread_sleep
1663:../CX3RDKOV5640.c **** 
1664:../CX3RDKOV5640.c ****     /* Reset the channel: Set to DSCR chain starting point in PORD/CONS SCKT; set
1665:../CX3RDKOV5640.c ****        DSCR_SIZE field in DSCR memory */
1666:../CX3RDKOV5640.c ****     status = CyU3PDmaMultiChannelReset(&glChHandleUVCStream);  //-TODO the glChHandleUVCStream
 4395              		.loc 1 1666 0
 4396 06c4 94029FE5 		ldr	r0, .L263+224
 4397 06c8 FEFFFFEB 		bl	CyU3PDmaMultiChannelReset
 4398 06cc 08000BE5 		str	r0, [fp, #-8]
1667:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4399              		.loc 1 1667 0
 4400 06d0 08301BE5 		ldr	r3, [fp, #-8]
 4401 06d4 000053E3 		cmp	r3, #0
 4402 06d8 0300000A 		beq	.L257
1668:../CX3RDKOV5640.c ****     {
1669:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4,"\n\rAppInit:MultiChannelReset Err = 0x%x", status);
 4403              		.loc 1 1669 0
 4404 06dc 0400A0E3 		mov	r0, #4
 4405 06e0 80129FE5 		ldr	r1, .L263+232
 4406 06e4 08201BE5 		ldr	r2, [fp, #-8]
 4407 06e8 FEFFFFEB 		bl	CyU3PDebugPrint
 4408              	.L257:
1670:../CX3RDKOV5640.c ****     }
1671:../CX3RDKOV5640.c **** #ifdef VISDebug
1672:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MultiChannelReset");
 4409              		.loc 1 1672 0
 4410 06ec 0400A0E3 		mov	r0, #4
 4411 06f0 74129FE5 		ldr	r1, .L263+236
 4412 06f4 FEFFFFEB 		bl	CyU3PDebugPrint
1673:../CX3RDKOV5640.c **** #endif
1674:../CX3RDKOV5640.c ****     /* Configure the Fixed Function GPIF on the CX3 to use a 16 bit bus, and
1675:../CX3RDKOV5640.c ****      * a DMA Buffer of size CX3_UVC_DATA_BUF_SIZE
1676:../CX3RDKOV5640.c ****      */
1677:../CX3RDKOV5640.c ****     status = CyU3PMipicsiGpifLoad(CY_U3P_MIPICSI_BUS_16, ES_UVC_DATA_BUF_SIZE);
 4413              		.loc 1 1677 0
 4414 06f8 40329FE5 		ldr	r3, .L263+192
 4415 06fc B030D3E1 		ldrh	r3, [r3]
 4416 0700 0100A0E3 		mov	r0, #1
 4417 0704 0310A0E1 		mov	r1, r3
 4418 0708 FEFFFFEB 		bl	CyU3PMipicsiGpifLoad
 4419 070c 08000BE5 		str	r0, [fp, #-8]
1678:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4420              		.loc 1 1678 0
 4421 0710 08301BE5 		ldr	r3, [fp, #-8]
 4422 0714 000053E3 		cmp	r3, #0
 4423 0718 0500000A 		beq	.L258
1679:../CX3RDKOV5640.c ****     {
1680:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad Err = 0x%x", status);
 4424              		.loc 1 1680 0
 4425 071c 0400A0E3 		mov	r0, #4
 4426 0720 48129FE5 		ldr	r1, .L263+240
 4427 0724 08201BE5 		ldr	r2, [fp, #-8]
 4428 0728 FEFFFFEB 		bl	CyU3PDebugPrint
1681:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4429              		.loc 1 1681 0
 4430 072c 08001BE5 		ldr	r0, [fp, #-8]
 4431 0730 FEFFFFEB 		bl	esUVCAppErrorHandler
 4432              	.L258:
1682:../CX3RDKOV5640.c ****     }
1683:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4433              		.loc 1 1683 0
 4434 0734 3200A0E3 		mov	r0, #50
 4435 0738 FEFFFFEB 		bl	_tx_thread_sleep
1684:../CX3RDKOV5640.c **** #ifdef VISDebug
1685:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiGpifLoad");
 4436              		.loc 1 1685 0
 4437 073c 0400A0E3 		mov	r0, #4
 4438 0740 2C129FE5 		ldr	r1, .L263+244
 4439 0744 FEFFFFEB 		bl	CyU3PDebugPrint
1686:../CX3RDKOV5640.c **** #endif
1687:../CX3RDKOV5640.c ****     CyU3PGpifRegisterCallback(esUVCGpifCB);
 4440              		.loc 1 1687 0
 4441 0748 28029FE5 		ldr	r0, .L263+248
 4442 074c FEFFFFEB 		bl	CyU3PGpifRegisterCallback
1688:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4443              		.loc 1 1688 0
 4444 0750 3200A0E3 		mov	r0, #50
 4445 0754 FEFFFFEB 		bl	_tx_thread_sleep
1689:../CX3RDKOV5640.c **** 
1690:../CX3RDKOV5640.c ****     /* Start the state machine. */
1691:../CX3RDKOV5640.c ****     status = CyU3PGpifSMStart (CX3_START_SCK0, ALPHA_CX3_START_SCK0);
 4446              		.loc 1 1691 0
 4447 0758 0000A0E3 		mov	r0, #0
 4448 075c 0010A0E3 		mov	r1, #0
 4449 0760 FEFFFFEB 		bl	CyU3PGpifSMStart
 4450 0764 08000BE5 		str	r0, [fp, #-8]
1692:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4451              		.loc 1 1692 0
 4452 0768 08301BE5 		ldr	r3, [fp, #-8]
 4453 076c 000053E3 		cmp	r3, #0
 4454 0770 0500000A 		beq	.L259
1693:../CX3RDKOV5640.c ****     {
1694:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart Err = 0x%x", status);
 4455              		.loc 1 1694 0
 4456 0774 0400A0E3 		mov	r0, #4
 4457 0778 FC119FE5 		ldr	r1, .L263+252
 4458 077c 08201BE5 		ldr	r2, [fp, #-8]
 4459 0780 FEFFFFEB 		bl	CyU3PDebugPrint
1695:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4460              		.loc 1 1695 0
 4461 0784 08001BE5 		ldr	r0, [fp, #-8]
 4462 0788 FEFFFFEB 		bl	esUVCAppErrorHandler
 4463              	.L259:
1696:../CX3RDKOV5640.c ****     }
1697:../CX3RDKOV5640.c ****     CyU3PThreadSleep(50);
 4464              		.loc 1 1697 0
 4465 078c 3200A0E3 		mov	r0, #50
 4466 0790 FEFFFFEB 		bl	_tx_thread_sleep
1698:../CX3RDKOV5640.c **** #ifdef VISDebug
1699:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:GpifSMStart");
 4467              		.loc 1 1699 0
 4468 0794 0400A0E3 		mov	r0, #4
 4469 0798 E0119FE5 		ldr	r1, .L263+256
 4470 079c FEFFFFEB 		bl	CyU3PDebugPrint
1700:../CX3RDKOV5640.c **** #endif
1701:../CX3RDKOV5640.c ****     /* Pause the GPIF*/
1702:../CX3RDKOV5640.c ****     CyU3PGpifSMControl(CyTrue);
 4471              		.loc 1 1702 0
 4472 07a0 0100A0E3 		mov	r0, #1
 4473 07a4 FEFFFFEB 		bl	CyU3PGpifSMControl
1703:../CX3RDKOV5640.c **** 
1704:../CX3RDKOV5640.c ****     /* Initialize the MIPI block */
1705:../CX3RDKOV5640.c ****     status =  CyU3PMipicsiInit();
 4474              		.loc 1 1705 0
 4475 07a8 FEFFFFEB 		bl	CyU3PMipicsiInit
 4476 07ac 08000BE5 		str	r0, [fp, #-8]
1706:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4477              		.loc 1 1706 0
 4478 07b0 08301BE5 		ldr	r3, [fp, #-8]
 4479 07b4 000053E3 		cmp	r3, #0
 4480 07b8 0500000A 		beq	.L260
1707:../CX3RDKOV5640.c ****     {
1708:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit Err = 0x%x", status);
 4481              		.loc 1 1708 0
 4482 07bc 0400A0E3 		mov	r0, #4
 4483 07c0 BC119FE5 		ldr	r1, .L263+260
 4484 07c4 08201BE5 		ldr	r2, [fp, #-8]
 4485 07c8 FEFFFFEB 		bl	CyU3PDebugPrint
1709:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4486              		.loc 1 1709 0
 4487 07cc 08001BE5 		ldr	r0, [fp, #-8]
 4488 07d0 FEFFFFEB 		bl	esUVCAppErrorHandler
 4489              	.L260:
1710:../CX3RDKOV5640.c ****     }
1711:../CX3RDKOV5640.c **** #ifdef VISDebug
1712:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiInit");
 4490              		.loc 1 1712 0
 4491 07d4 0400A0E3 		mov	r0, #4
 4492 07d8 A8119FE5 		ldr	r1, .L263+264
 4493 07dc FEFFFFEB 		bl	CyU3PDebugPrint
1713:../CX3RDKOV5640.c **** #endif
1714:../CX3RDKOV5640.c ****     status = CyU3PMipicsiSetIntfParams(&cfgUvcVgaNoMclk, CyFalse);
 4494              		.loc 1 1714 0
 4495 07e0 A4019FE5 		ldr	r0, .L263+268
 4496 07e4 0010A0E3 		mov	r1, #0
 4497 07e8 FEFFFFEB 		bl	CyU3PMipicsiSetIntfParams
 4498 07ec 08000BE5 		str	r0, [fp, #-8]
1715:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4499              		.loc 1 1715 0
 4500 07f0 08301BE5 		ldr	r3, [fp, #-8]
 4501 07f4 000053E3 		cmp	r3, #0
 4502 07f8 0500000A 		beq	.L261
1716:../CX3RDKOV5640.c ****     {
1717:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams Err = 0x%x",status);
 4503              		.loc 1 1717 0
 4504 07fc 0400A0E3 		mov	r0, #4
 4505 0800 88119FE5 		ldr	r1, .L263+272
 4506 0804 08201BE5 		ldr	r2, [fp, #-8]
 4507 0808 FEFFFFEB 		bl	CyU3PDebugPrint
1718:../CX3RDKOV5640.c ****         esUVCAppErrorHandler(status);
 4508              		.loc 1 1718 0
 4509 080c 08001BE5 		ldr	r0, [fp, #-8]
 4510 0810 FEFFFFEB 		bl	esUVCAppErrorHandler
 4511              	.L261:
1719:../CX3RDKOV5640.c ****     }
1720:../CX3RDKOV5640.c **** #ifdef VISDebug
1721:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rAppInit:MipicsiSetIntfParams");
 4512              		.loc 1 1721 0
 4513 0814 0400A0E3 		mov	r0, #4
 4514 0818 74119FE5 		ldr	r1, .L263+276
 4515 081c FEFFFFEB 		bl	CyU3PDebugPrint
1722:../CX3RDKOV5640.c **** #endif
1723:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1724:../CX3RDKOV5640.c ****     CyU3PTimerCreate (&UvcTimer, UvcAppProgressTimer, 0x00, TIMER_PERIOD, 0, CYU3P_NO_ACTIVATE);
 4516              		.loc 1 1724 0
 4517 0820 7D3FA0E3 		mov	r3, #500
 4518 0824 00308DE5 		str	r3, [sp]
 4519 0828 0030A0E3 		mov	r3, #0
 4520 082c 04308DE5 		str	r3, [sp, #4]
 4521 0830 0030A0E3 		mov	r3, #0
 4522 0834 08308DE5 		str	r3, [sp, #8]
 4523 0838 2C30A0E3 		mov	r3, #44
 4524 083c 0C308DE5 		str	r3, [sp, #12]
 4525 0840 50019FE5 		ldr	r0, .L263+280
 4526 0844 0010A0E3 		mov	r1, #0
 4527 0848 4C219FE5 		ldr	r2, .L263+284
 4528 084c 0030A0E3 		mov	r3, #0
 4529 0850 FEFFFFEB 		bl	_txe_timer_create
1725:../CX3RDKOV5640.c **** #endif
1726:../CX3RDKOV5640.c **** 
1727:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rFirmware Version: %d.%d.%d.%d",MajorVersion,MinorVersion,SubVersion,Su
 4530              		.loc 1 1727 0
 4531 0854 8530A0E3 		mov	r3, #133
 4532 0858 00308DE5 		str	r3, [sp]
 4533 085c 3C319FE5 		ldr	r3, .L263+288
 4534 0860 04308DE5 		str	r3, [sp, #4]
 4535 0864 0400A0E3 		mov	r0, #4
 4536 0868 34119FE5 		ldr	r1, .L263+292
 4537 086c 0120A0E3 		mov	r2, #1
 4538 0870 0330A0E3 		mov	r3, #3
 4539 0874 FEFFFFEB 		bl	CyU3PDebugPrint
1728:../CX3RDKOV5640.c **** }
 4540              		.loc 1 1728 0
 4541 0878 04D04BE2 		sub	sp, fp, #4
 4542              		@ sp needed
 4543 087c 0088BDE8 		ldmfd	sp!, {fp, pc}
 4544              	.L264:
 4545              		.align	2
 4546              	.L263:
 4547 0880 08050000 		.word	.LC29
 4548 0884 28050000 		.word	.LC30
 4549 0888 3C050000 		.word	.LC31
 4550 088c 5C050000 		.word	.LC32
 4551 0890 70050000 		.word	.LC33
 4552 0894 90050000 		.word	.LC34
 4553 0898 A4050000 		.word	.LC35
 4554 089c C4050000 		.word	.LC36
 4555 08a0 00000000 		.word	esUVCUvcApplnUSBSetupCB
 4556 08a4 00000000 		.word	esUVCUvcApplnUSBEventCB
 4557 08a8 00000000 		.word	esUVCApplnLPMRqtCB
 4558 08ac 00000000 		.word	esUVCUSB30DeviceDscr
 4559 08b0 D8050000 		.word	.LC37
 4560 08b4 00060000 		.word	.LC38
 4561 08b8 00000000 		.word	esUVCUSB20DeviceDscr
 4562 08bc 20060000 		.word	.LC39
 4563 08c0 48060000 		.word	.LC40
 4564 08c4 00000000 		.word	esUVCUSBBOSDscr
 4565 08c8 68060000 		.word	.LC41
 4566 08cc 8C060000 		.word	.LC42
 4567 08d0 00000000 		.word	esUVCUSBDeviceQualDscr
 4568 08d4 A4060000 		.word	.LC43
 4569 08d8 CC060000 		.word	.LC44
 4570 08dc 00000000 		.word	esUVCUSBSSConfigDscr
 4571 08e0 E8060000 		.word	.LC45
 4572 08e4 10070000 		.word	.LC46
 4573 08e8 00000000 		.word	esUVCUSBHSConfigDscr
 4574 08ec 2C070000 		.word	.LC47
 4575 08f0 54070000 		.word	.LC48
 4576 08f4 00000000 		.word	esUVCUSBFSConfigDscr
 4577 08f8 70070000 		.word	.LC49
 4578 08fc 98070000 		.word	.LC50
 4579 0900 00000000 		.word	esUVCUSBStringLangIDDscr
 4580 0904 B4070000 		.word	.LC51
 4581 0908 00000000 		.word	esUVCUSBManufactureDscr
 4582 090c DC070000 		.word	.LC52
 4583 0910 00000000 		.word	esUVCUSBProductDscr
 4584 0914 04080000 		.word	.LC53
 4585 0918 00000000 		.word	esUVCUSBConfigSSDscr
 4586 091c 2C080000 		.word	.LC54
 4587 0920 00000000 		.word	esUVCUSBConfigHSDscr
 4588 0924 54080000 		.word	.LC55
 4589 0928 00000000 		.word	esUVCUSBConfigFSDscr
 4590 092c 7C080000 		.word	.LC56
 4591 0930 A4080000 		.word	.LC57
 4592 0934 C8080000 		.word	.LC58
 4593 0938 E0080000 		.word	.LC59
 4594 093c 00000000 		.word	ES_UVC_STREAM_BUF_SIZE
 4595 0940 00000000 		.word	ES_UVC_DATA_BUF_SIZE
 4596 0944 00000000 		.word	ES_UVC_STREAM_BUF_COUNT
 4597 0948 F05F0000 		.word	24560
 4598 094c 10090000 		.word	.LC60
 4599 0950 40090000 		.word	.LC61
 4600 0954 01010000 		.word	257
 4601 0958 03030000 		.word	771
 4602 095c 00000000 		.word	esUVCUvcAppDmaCallback
 4603 0960 00000000 		.word	glChHandleUVCStream
 4604 0964 64090000 		.word	.LC62
 4605 0968 90090000 		.word	.LC63
 4606 096c B8090000 		.word	.LC64
 4607 0970 D4090000 		.word	.LC65
 4608 0974 FC090000 		.word	.LC66
 4609 0978 00000000 		.word	esUVCGpifCB
 4610 097c 180A0000 		.word	.LC67
 4611 0980 3C0A0000 		.word	.LC68
 4612 0984 540A0000 		.word	.LC69
 4613 0988 780A0000 		.word	.LC70
 4614 098c 00000000 		.word	cfgUvcVgaNoMclk
 4615 0990 900A0000 		.word	.LC71
 4616 0994 BC0A0000 		.word	.LC72
 4617 0998 00000000 		.word	UvcTimer
 4618 099c 00000000 		.word	UvcAppProgressTimer
 4619 09a0 35010000 		.word	309
 4620 09a4 DC0A0000 		.word	.LC73
 4621              		.cfi_endproc
 4622              	.LFE11:
 4624              		.section	.rodata
 4625              		.align	2
 4626              	.LC74:
 4627 0afc 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartInit failed"
 4627      55564355 
 4627      76634170 
 4627      706C6E44 
 4627      65627567 
 4628 0b29 20457272 		.ascii	" Error = 0x%x\000"
 4628      6F72203D 
 4628      20307825 
 4628      7800
 4629 0b37 00       		.align	2
 4630              	.LC75:
 4631 0b38 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartSetConfig f"
 4631      55564355 
 4631      76634170 
 4631      706C6E44 
 4631      65627567 
 4632 0b65 61696C65 		.ascii	"ailed Error = 0x%x\000"
 4632      64204572 
 4632      726F7220 
 4632      3D203078 
 4632      257800
 4633              		.align	2
 4634              	.LC76:
 4635 0b78 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PUartTxSetBlockX"
 4635      55564355 
 4635      76634170 
 4635      706C6E44 
 4635      65627567 
 4636 0ba5 66657220 		.ascii	"fer failed Error = 0x%x\000"
 4636      6661696C 
 4636      65642045 
 4636      72726F72 
 4636      203D2030 
 4637 0bbd 000000   		.align	2
 4638              	.LC77:
 4639 0bc0 0A0D6573 		.ascii	"\012\015esUVCUvcApplnDebugInit:CyU3PDebugInit faile"
 4639      55564355 
 4639      76634170 
 4639      706C6E44 
 4639      65627567 
 4640 0bed 64204572 		.ascii	"d Error = 0x%x\000"
 4640      726F7220 
 4640      3D203078 
 4640      257800
 4641              		.section	.text.esUVCUvcApplnDebugInit,"ax",%progbits
 4642              		.align	2
 4643              		.global	esUVCUvcApplnDebugInit
 4645              	esUVCUvcApplnDebugInit:
 4646              	.LFB12:
1729:../CX3RDKOV5640.c **** 
1730:../CX3RDKOV5640.c **** /* This function initializes the debug module for the UVC application */
1731:../CX3RDKOV5640.c ****     void
1732:../CX3RDKOV5640.c **** esUVCUvcApplnDebugInit (void)
1733:../CX3RDKOV5640.c **** {
 4647              		.loc 1 1733 0
 4648              		.cfi_startproc
 4649              		@ args = 0, pretend = 0, frame = 32
 4650              		@ frame_needed = 1, uses_anonymous_args = 0
 4651 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4652              	.LCFI24:
 4653              		.cfi_def_cfa_offset 8
 4654              		.cfi_offset 11, -8
 4655              		.cfi_offset 14, -4
 4656 0004 04B08DE2 		add	fp, sp, #4
 4657              	.LCFI25:
 4658              		.cfi_def_cfa 11, 4
 4659 0008 20D04DE2 		sub	sp, sp, #32
1734:../CX3RDKOV5640.c ****     CyU3PUartConfig_t uartConfig;
1735:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 4660              		.loc 1 1735 0
 4661 000c 0030A0E3 		mov	r3, #0
 4662 0010 08300BE5 		str	r3, [fp, #-8]
1736:../CX3RDKOV5640.c **** 
1737:../CX3RDKOV5640.c ****     /* Initialize the UART for printing debug messages */
1738:../CX3RDKOV5640.c ****     status = CyU3PUartInit();
 4663              		.loc 1 1738 0
 4664 0014 FEFFFFEB 		bl	CyU3PUartInit
 4665 0018 08000BE5 		str	r0, [fp, #-8]
1739:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4666              		.loc 1 1739 0
 4667 001c 08301BE5 		ldr	r3, [fp, #-8]
 4668 0020 000053E3 		cmp	r3, #0
 4669 0024 0300000A 		beq	.L266
1740:../CX3RDKOV5640.c ****     {
1741:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartInit failed Error = 0x%x",status);
 4670              		.loc 1 1741 0
 4671 0028 0400A0E3 		mov	r0, #4
 4672 002c D0109FE5 		ldr	r1, .L270
 4673 0030 08201BE5 		ldr	r2, [fp, #-8]
 4674 0034 FEFFFFEB 		bl	CyU3PDebugPrint
 4675              	.L266:
1742:../CX3RDKOV5640.c ****     }
1743:../CX3RDKOV5640.c **** 
1744:../CX3RDKOV5640.c ****     /* Set UART Configuration */
1745:../CX3RDKOV5640.c ****     uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 4676              		.loc 1 1745 0
 4677 0038 C8309FE5 		ldr	r3, .L270+4
 4678 003c 10300BE5 		str	r3, [fp, #-16]
1746:../CX3RDKOV5640.c ****     uartConfig.stopBit = CY_U3P_UART_ONE_STOP_BIT;
 4679              		.loc 1 1746 0
 4680 0040 0130A0E3 		mov	r3, #1
 4681 0044 0C304BE5 		strb	r3, [fp, #-12]
1747:../CX3RDKOV5640.c ****     uartConfig.parity = CY_U3P_UART_NO_PARITY;
 4682              		.loc 1 1747 0
 4683 0048 0030A0E3 		mov	r3, #0
 4684 004c 0B304BE5 		strb	r3, [fp, #-11]
1748:../CX3RDKOV5640.c ****     uartConfig.txEnable = CyTrue;
 4685              		.loc 1 1748 0
 4686 0050 0130A0E3 		mov	r3, #1
 4687 0054 20300BE5 		str	r3, [fp, #-32]
1749:../CX3RDKOV5640.c ****     uartConfig.rxEnable = CyFalse;
 4688              		.loc 1 1749 0
 4689 0058 0030A0E3 		mov	r3, #0
 4690 005c 1C300BE5 		str	r3, [fp, #-28]
1750:../CX3RDKOV5640.c ****     uartConfig.flowCtrl = CyFalse;
 4691              		.loc 1 1750 0
 4692 0060 0030A0E3 		mov	r3, #0
 4693 0064 18300BE5 		str	r3, [fp, #-24]
1751:../CX3RDKOV5640.c ****     uartConfig.isDma = CyTrue;
 4694              		.loc 1 1751 0
 4695 0068 0130A0E3 		mov	r3, #1
 4696 006c 14300BE5 		str	r3, [fp, #-20]
1752:../CX3RDKOV5640.c **** 
1753:../CX3RDKOV5640.c ****     /* Set the UART configuration */
1754:../CX3RDKOV5640.c ****     status = CyU3PUartSetConfig (&uartConfig, NULL);
 4697              		.loc 1 1754 0
 4698 0070 20304BE2 		sub	r3, fp, #32
 4699 0074 0300A0E1 		mov	r0, r3
 4700 0078 0010A0E3 		mov	r1, #0
 4701 007c FEFFFFEB 		bl	CyU3PUartSetConfig
 4702 0080 08000BE5 		str	r0, [fp, #-8]
1755:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4703              		.loc 1 1755 0
 4704 0084 08301BE5 		ldr	r3, [fp, #-8]
 4705 0088 000053E3 		cmp	r3, #0
 4706 008c 0300000A 		beq	.L267
1756:../CX3RDKOV5640.c ****     {
1757:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartSetConfig failed Error = 0x%x",sta
 4707              		.loc 1 1757 0
 4708 0090 0400A0E3 		mov	r0, #4
 4709 0094 70109FE5 		ldr	r1, .L270+8
 4710 0098 08201BE5 		ldr	r2, [fp, #-8]
 4711 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4712              	.L267:
1758:../CX3RDKOV5640.c ****     }
1759:../CX3RDKOV5640.c **** 
1760:../CX3RDKOV5640.c ****     /* Set the UART transfer */
1761:../CX3RDKOV5640.c ****     status = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
 4713              		.loc 1 1761 0
 4714 00a0 0000E0E3 		mvn	r0, #0
 4715 00a4 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 4716 00a8 08000BE5 		str	r0, [fp, #-8]
1762:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4717              		.loc 1 1762 0
 4718 00ac 08301BE5 		ldr	r3, [fp, #-8]
 4719 00b0 000053E3 		cmp	r3, #0
 4720 00b4 0300000A 		beq	.L268
1763:../CX3RDKOV5640.c ****     {
1764:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PUartTxSetBlockXfer failed Error = 0x%x
 4721              		.loc 1 1764 0
 4722 00b8 0400A0E3 		mov	r0, #4
 4723 00bc 4C109FE5 		ldr	r1, .L270+12
 4724 00c0 08201BE5 		ldr	r2, [fp, #-8]
 4725 00c4 FEFFFFEB 		bl	CyU3PDebugPrint
 4726              	.L268:
1765:../CX3RDKOV5640.c ****     }
1766:../CX3RDKOV5640.c **** 
1767:../CX3RDKOV5640.c ****     /* Initialize the debug application */
1768:../CX3RDKOV5640.c ****     status = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 8);
 4727              		.loc 1 1768 0
 4728 00c8 0300A0E3 		mov	r0, #3
 4729 00cc 0810A0E3 		mov	r1, #8
 4730 00d0 FEFFFFEB 		bl	CyU3PDebugInit
 4731 00d4 08000BE5 		str	r0, [fp, #-8]
1769:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 4732              		.loc 1 1769 0
 4733 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4734 00dc 000053E3 		cmp	r3, #0
 4735 00e0 0300000A 		beq	.L269
1770:../CX3RDKOV5640.c ****     {
1771:../CX3RDKOV5640.c ****         CyU3PDebugPrint (4, "\n\resUVCUvcApplnDebugInit:CyU3PDebugInit failed Error = 0x%x",status)
 4736              		.loc 1 1771 0
 4737 00e4 0400A0E3 		mov	r0, #4
 4738 00e8 24109FE5 		ldr	r1, .L270+16
 4739 00ec 08201BE5 		ldr	r2, [fp, #-8]
 4740 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
 4741              	.L269:
1772:../CX3RDKOV5640.c ****     }
1773:../CX3RDKOV5640.c ****     CyU3PDebugPreamble (CyFalse);
 4742              		.loc 1 1773 0
 4743 00f4 0000A0E3 		mov	r0, #0
 4744 00f8 FEFFFFEB 		bl	CyU3PDebugPreamble
1774:../CX3RDKOV5640.c **** 
1775:../CX3RDKOV5640.c **** }
 4745              		.loc 1 1775 0
 4746 00fc 04D04BE2 		sub	sp, fp, #4
 4747              		@ sp needed
 4748 0100 0088BDE8 		ldmfd	sp!, {fp, pc}
 4749              	.L271:
 4750              		.align	2
 4751              	.L270:
 4752 0104 FC0A0000 		.word	.LC74
 4753 0108 00C20100 		.word	115200
 4754 010c 380B0000 		.word	.LC75
 4755 0110 780B0000 		.word	.LC76
 4756 0114 C00B0000 		.word	.LC77
 4757              		.cfi_endproc
 4758              	.LFE12:
 4760              		.section	.rodata
 4761              		.align	2
 4762              	.LC78:
 4763 0bfc 0A0D4553 		.ascii	"\012\015ES_TIMER_RESET_EVENT: esUVCUvcApplnStop\000"
 4763      5F54494D 
 4763      45525F52 
 4763      45534554 
 4763      5F455645 
 4764 0c26 0000     		.align	2
 4765              	.LC79:
 4766 0c28 0A0D4553 		.ascii	"\012\015ES_TIMER_RESET_EVENT: esUVCUvcApplnStart\000"
 4766      5F54494D 
 4766      45525F52 
 4766      45534554 
 4766      5F455645 
 4767 0c53 00       		.align	2
 4768              	.LC80:
 4769 0c54 0A0D4553 		.ascii	"\012\015ES_USB_SUSP_EVENT_FLAG %x\000"
 4769      5F555342 
 4769      5F535553 
 4769      505F4556 
 4769      454E545F 
 4770              		.align	2
 4771              	.LC81:
 4772 0c70 0A0D4553 		.ascii	"\012\015ES_USB_SUSP_EVENT_FLAG: esCamera_Power_Up\000"
 4772      5F555342 
 4772      5F535553 
 4772      505F4556 
 4772      454E545F 
 4773              		.align	2
 4774              	.LC82:
 4775 0c9c 0A0D4170 		.ascii	"\012\015App Thread Loop\000"
 4775      70205468 
 4775      72656164 
 4775      204C6F6F 
 4775      7000
 4776              		.section	.text.esUVCUvcAppThread_Entry,"ax",%progbits
 4777              		.align	2
 4778              		.global	esUVCUvcAppThread_Entry
 4780              	esUVCUvcAppThread_Entry:
 4781              	.LFB13:
1776:../CX3RDKOV5640.c **** 
1777:../CX3RDKOV5640.c **** /* Entry function for the UVC application thread. */
1778:../CX3RDKOV5640.c ****     void
1779:../CX3RDKOV5640.c **** esUVCUvcAppThread_Entry (
1780:../CX3RDKOV5640.c ****         uint32_t input)
1781:../CX3RDKOV5640.c **** {
 4782              		.loc 1 1781 0
 4783              		.cfi_startproc
 4784              		@ args = 0, pretend = 0, frame = 16
 4785              		@ frame_needed = 1, uses_anonymous_args = 0
 4786 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4787              	.LCFI26:
 4788              		.cfi_def_cfa_offset 8
 4789              		.cfi_offset 11, -8
 4790              		.cfi_offset 14, -4
 4791 0004 04B08DE2 		add	fp, sp, #4
 4792              	.LCFI27:
 4793              		.cfi_def_cfa 11, 4
 4794 0008 18D04DE2 		sub	sp, sp, #24
 4795 000c 10000BE5 		str	r0, [fp, #-16]
1782:../CX3RDKOV5640.c ****     uint16_t wakeReason;
1783:../CX3RDKOV5640.c ****     uint32_t eventFlag;
1784:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status;
1785:../CX3RDKOV5640.c **** 
1786:../CX3RDKOV5640.c ****     /* Initialize the Debug Module */
1787:../CX3RDKOV5640.c ****     esUVCUvcApplnDebugInit();
 4796              		.loc 1 1787 0
 4797 0010 FEFFFFEB 		bl	esUVCUvcApplnDebugInit
1788:../CX3RDKOV5640.c **** 
1789:../CX3RDKOV5640.c ****     /* Initialize the UVC Application */
1790:../CX3RDKOV5640.c ****     esUVCUvcApplnInit();
 4798              		.loc 1 1790 0
 4799 0014 FEFFFFEB 		bl	esUVCUvcApplnInit
 4800              	.L279:
1791:../CX3RDKOV5640.c **** 
1792:../CX3RDKOV5640.c ****     for (;;)
1793:../CX3RDKOV5640.c ****     {
1794:../CX3RDKOV5640.c ****         CyU3PEventGet (&glTimerEvent,ES_USB_SUSP_EVENT_FLAG|ES_TIMER_RESET_EVENT, CYU3P_EVENT_OR_CL
 4801              		.loc 1 1794 0
 4802 0018 0C304BE2 		sub	r3, fp, #12
 4803 001c 0020E0E3 		mvn	r2, #0
 4804 0020 00208DE5 		str	r2, [sp]
 4805 0024 E4009FE5 		ldr	r0, .L280
 4806 0028 3010A0E3 		mov	r1, #48
 4807 002c 0120A0E3 		mov	r2, #1
 4808 0030 FEFFFFEB 		bl	_txe_event_flags_get
1795:../CX3RDKOV5640.c **** 
1796:../CX3RDKOV5640.c ****         /* Handle TimerReset Event*/
1797:../CX3RDKOV5640.c ****         if( eventFlag & ES_TIMER_RESET_EVENT)
 4809              		.loc 1 1797 0
 4810 0034 0C301BE5 		ldr	r3, [fp, #-12]
 4811 0038 103003E2 		and	r3, r3, #16
 4812 003c 000053E3 		cmp	r3, #0
 4813 0040 1A00000A 		beq	.L273
1798:../CX3RDKOV5640.c ****         {
1799:../CX3RDKOV5640.c ****             if (glIsApplnActive)
 4814              		.loc 1 1799 0
 4815 0044 C8309FE5 		ldr	r3, .L280+4
 4816 0048 003093E5 		ldr	r3, [r3]
 4817 004c 000053E3 		cmp	r3, #0
 4818 0050 0600000A 		beq	.L274
1800:../CX3RDKOV5640.c ****             {
1801:../CX3RDKOV5640.c ****             	glIsClearFeature = CyFalse;
 4819              		.loc 1 1801 0
 4820 0054 BC309FE5 		ldr	r3, .L280+8
 4821 0058 0020A0E3 		mov	r2, #0
 4822 005c 002083E5 		str	r2, [r3]
1802:../CX3RDKOV5640.c ****                 esUVCUvcApplnStop();
 4823              		.loc 1 1802 0
 4824 0060 FEFFFFEB 		bl	esUVCUvcApplnStop
1803:../CX3RDKOV5640.c **** #ifdef VISDebug
1804:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStop");
 4825              		.loc 1 1804 0
 4826 0064 0400A0E3 		mov	r0, #4
 4827 0068 AC109FE5 		ldr	r1, .L280+12
 4828 006c FEFFFFEB 		bl	CyU3PDebugPrint
 4829              	.L274:
1805:../CX3RDKOV5640.c **** #endif
1806:../CX3RDKOV5640.c ****             }
1807:../CX3RDKOV5640.c ****             if(glPreviewStarted == CyTrue)
 4830              		.loc 1 1807 0
 4831 0070 A8309FE5 		ldr	r3, .L280+16
 4832 0074 003093E5 		ldr	r3, [r3]
 4833 0078 010053E3 		cmp	r3, #1
 4834 007c 0700001A 		bne	.L275
1808:../CX3RDKOV5640.c ****             {
1809:../CX3RDKOV5640.c ****             	//TODO Change this function with "Sensor Specific" function to write the sensor settin
1810:../CX3RDKOV5640.c ****             	esSetCameraResolution(glFrameIndexToSet);
 4835              		.loc 1 1810 0
 4836 0080 9C309FE5 		ldr	r3, .L280+20
 4837 0084 0030D3E5 		ldrb	r3, [r3]	@ zero_extendqisi2
 4838 0088 0300A0E1 		mov	r0, r3
 4839 008c FEFFFFEB 		bl	esSetCameraResolution
1811:../CX3RDKOV5640.c ****             	esUVCUvcApplnStart();
 4840              		.loc 1 1811 0
 4841 0090 FEFFFFEB 		bl	esUVCUvcApplnStart
1812:../CX3RDKOV5640.c **** #ifdef VISDebug
1813:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_TIMER_RESET_EVENT: esUVCUvcApplnStart");
 4842              		.loc 1 1813 0
 4843 0094 0400A0E3 		mov	r0, #4
 4844 0098 88109FE5 		ldr	r1, .L280+24
 4845 009c FEFFFFEB 		bl	CyU3PDebugPrint
 4846              	.L275:
1814:../CX3RDKOV5640.c **** #endif
1815:../CX3RDKOV5640.c ****             }
1816:../CX3RDKOV5640.c **** #ifdef RESET_TIMER_ENABLE
1817:../CX3RDKOV5640.c ****             CyU3PTimerModify (&UvcTimer, TIMER_PERIOD, 0);
 4847              		.loc 1 1817 0
 4848 00a0 84009FE5 		ldr	r0, .L280+28
 4849 00a4 7D1FA0E3 		mov	r1, #500
 4850 00a8 0020A0E3 		mov	r2, #0
 4851 00ac FEFFFFEB 		bl	_txe_timer_change
 4852              	.L273:
1818:../CX3RDKOV5640.c **** #endif
1819:../CX3RDKOV5640.c ****         }
1820:../CX3RDKOV5640.c ****         /* Handle Suspend Event*/
1821:../CX3RDKOV5640.c ****         if(eventFlag & ES_USB_SUSP_EVENT_FLAG)
 4853              		.loc 1 1821 0
 4854 00b0 0C301BE5 		ldr	r3, [fp, #-12]
 4855 00b4 203003E2 		and	r3, r3, #32
 4856 00b8 000053E3 		cmp	r3, #0
 4857 00bc 0E00000A 		beq	.L276
1822:../CX3RDKOV5640.c ****         {
1823:../CX3RDKOV5640.c ****             /* Place CX3 in Low Power Suspend mode, with USB bus activity as the wakeup source. */
1824:../CX3RDKOV5640.c ****             //CyU3PMipicsiSleep();
1825:../CX3RDKOV5640.c ****             //TODO Change this function with "Sensor Specific" PowerDown function to PowerDown the 
1826:../CX3RDKOV5640.c ****             //esCamera_Power_Down();
1827:../CX3RDKOV5640.c **** 
1828:../CX3RDKOV5640.c ****             //status = CyU3PSysEnterSuspendMode (CY_U3P_SYS_USB_BUS_ACTVTY_WAKEUP_SRC, 0, &wakeReas
1829:../CX3RDKOV5640.c **** #ifdef VISDebug
1830:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG %x", status);
 4858              		.loc 1 1830 0
 4859 00c0 0400A0E3 		mov	r0, #4
 4860 00c4 64109FE5 		ldr	r1, .L280+32
 4861 00c8 08201BE5 		ldr	r2, [fp, #-8]
 4862 00cc FEFFFFEB 		bl	CyU3PDebugPrint
1831:../CX3RDKOV5640.c **** #endif
1832:../CX3RDKOV5640.c ****     		if(glMipiActive)
 4863              		.loc 1 1832 0
 4864 00d0 5C309FE5 		ldr	r3, .L280+36
 4865 00d4 003093E5 		ldr	r3, [r3]
 4866 00d8 000053E3 		cmp	r3, #0
 4867 00dc 0500000A 		beq	.L277
1833:../CX3RDKOV5640.c ****             {
1834:../CX3RDKOV5640.c ****                 CyU3PMipicsiWakeup();
 4868              		.loc 1 1834 0
 4869 00e0 FEFFFFEB 		bl	CyU3PMipicsiWakeup
1835:../CX3RDKOV5640.c ****                 //TODO Change this function with "Sensor Specific" PowerUp function to PowerUp the 
1836:../CX3RDKOV5640.c ****                 esCamera_Power_Up();
 4870              		.loc 1 1836 0
 4871 00e4 FEFFFFEB 		bl	esCamera_Power_Up
1837:../CX3RDKOV5640.c **** #ifdef VISDebug
1838:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rES_USB_SUSP_EVENT_FLAG: esCamera_Power_Up");
 4872              		.loc 1 1838 0
 4873 00e8 0400A0E3 		mov	r0, #4
 4874 00ec 44109FE5 		ldr	r1, .L280+40
 4875 00f0 FEFFFFEB 		bl	CyU3PDebugPrint
1839:../CX3RDKOV5640.c **** #endif
1840:../CX3RDKOV5640.c ****             }
1841:../CX3RDKOV5640.c ****             continue;
 4876              		.loc 1 1841 0
 4877 00f4 040000EA 		b	.L278
 4878              	.L277:
 4879 00f8 030000EA 		b	.L278
 4880              	.L276:
1842:../CX3RDKOV5640.c ****         }
1843:../CX3RDKOV5640.c **** #ifdef VISDebug
1844:../CX3RDKOV5640.c ****     CyU3PDebugPrint (4, "\n\rApp Thread Loop");
 4881              		.loc 1 1844 0
 4882 00fc 0400A0E3 		mov	r0, #4
 4883 0100 34109FE5 		ldr	r1, .L280+44
 4884 0104 FEFFFFEB 		bl	CyU3PDebugPrint
1845:../CX3RDKOV5640.c **** #endif
1846:../CX3RDKOV5640.c ****     } /* End of for(;;) */
 4885              		.loc 1 1846 0
 4886 0108 C2FFFFEA 		b	.L279
 4887              	.L278:
 4888 010c C1FFFFEA 		b	.L279
 4889              	.L281:
 4890              		.align	2
 4891              	.L280:
 4892 0110 00000000 		.word	glTimerEvent
 4893 0114 00000000 		.word	glIsApplnActive
 4894 0118 00000000 		.word	glIsClearFeature
 4895 011c FC0B0000 		.word	.LC78
 4896 0120 00000000 		.word	glPreviewStarted
 4897 0124 00000000 		.word	glFrameIndexToSet
 4898 0128 280C0000 		.word	.LC79
 4899 012c 00000000 		.word	UvcTimer
 4900 0130 540C0000 		.word	.LC80
 4901 0134 00000000 		.word	glMipiActive
 4902 0138 700C0000 		.word	.LC81
 4903 013c 9C0C0000 		.word	.LC82
 4904              		.cfi_endproc
 4905              	.LFE13:
 4907              		.section	.rodata
 4908 0cae 0000     		.align	2
 4909              	.LC83:
 4910 0cb0 33303A55 		.ascii	"30:UVC_app_thread\000"
 4910      56435F61 
 4910      70705F74 
 4910      68726561 
 4910      6400
 4911 0cc2 0000     		.section	.text.CyFxApplicationDefine,"ax",%progbits
 4912              		.align	2
 4913              		.global	CyFxApplicationDefine
 4915              	CyFxApplicationDefine:
 4916              	.LFB14:
1847:../CX3RDKOV5640.c **** }
1848:../CX3RDKOV5640.c **** 
1849:../CX3RDKOV5640.c **** 
1850:../CX3RDKOV5640.c **** /* Application define function which creates the threads. */
1851:../CX3RDKOV5640.c ****     void
1852:../CX3RDKOV5640.c **** CyFxApplicationDefine (
1853:../CX3RDKOV5640.c ****         void)
1854:../CX3RDKOV5640.c **** {
 4917              		.loc 1 1854 0
 4918              		.cfi_startproc
 4919              		@ args = 0, pretend = 0, frame = 8
 4920              		@ frame_needed = 1, uses_anonymous_args = 0
 4921 0000 00482DE9 		stmfd	sp!, {fp, lr}
 4922              	.LCFI28:
 4923              		.cfi_def_cfa_offset 8
 4924              		.cfi_offset 11, -8
 4925              		.cfi_offset 14, -4
 4926 0004 04B08DE2 		add	fp, sp, #4
 4927              	.LCFI29:
 4928              		.cfi_def_cfa 11, 4
 4929 0008 28D04DE2 		sub	sp, sp, #40
1855:../CX3RDKOV5640.c ****     void *ptr = NULL;
 4930              		.loc 1 1855 0
 4931 000c 0030A0E3 		mov	r3, #0
 4932 0010 08300BE5 		str	r3, [fp, #-8]
1856:../CX3RDKOV5640.c ****     uint32_t retThrdCreate = CY_U3P_SUCCESS;
 4933              		.loc 1 1856 0
 4934 0014 0030A0E3 		mov	r3, #0
 4935 0018 0C300BE5 		str	r3, [fp, #-12]
1857:../CX3RDKOV5640.c **** 
1858:../CX3RDKOV5640.c ****     /* Allocate the memory for the thread and create the thread */
1859:../CX3RDKOV5640.c ****     ptr = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
 4936              		.loc 1 1859 0
 4937 001c 010AA0E3 		mov	r0, #4096
 4938 0020 FEFFFFEB 		bl	CyU3PMemAlloc
 4939 0024 08000BE5 		str	r0, [fp, #-8]
1860:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
 4940              		.loc 1 1860 0
 4941 0028 08301BE5 		ldr	r3, [fp, #-8]
 4942 002c 00308DE5 		str	r3, [sp]
 4943 0030 013AA0E3 		mov	r3, #4096
 4944 0034 04308DE5 		str	r3, [sp, #4]
 4945 0038 0830A0E3 		mov	r3, #8
 4946 003c 08308DE5 		str	r3, [sp, #8]
 4947 0040 0830A0E3 		mov	r3, #8
 4948 0044 0C308DE5 		str	r3, [sp, #12]
 4949 0048 0030A0E3 		mov	r3, #0
 4950 004c 10308DE5 		str	r3, [sp, #16]
 4951 0050 0130A0E3 		mov	r3, #1
 4952 0054 14308DE5 		str	r3, [sp, #20]
 4953 0058 A830A0E3 		mov	r3, #168
 4954 005c 18308DE5 		str	r3, [sp, #24]
 4955 0060 4C009FE5 		ldr	r0, .L287
 4956 0064 4C109FE5 		ldr	r1, .L287+4
 4957 0068 4C209FE5 		ldr	r2, .L287+8
 4958 006c 0030A0E3 		mov	r3, #0
 4959 0070 FEFFFFEB 		bl	_txe_thread_create
 4960 0074 0C000BE5 		str	r0, [fp, #-12]
1861:../CX3RDKOV5640.c ****             "30:UVC_app_thread",         /* Thread Id and name */
1862:../CX3RDKOV5640.c ****             esUVCUvcAppThread_Entry,          /* UVC Application Thread Entry function */
1863:../CX3RDKOV5640.c ****             0,                           /* No input parameter to thread */
1864:../CX3RDKOV5640.c ****             ptr,                         /* Pointer to the allocated thread stack */
1865:../CX3RDKOV5640.c ****             UVC_APP_THREAD_STACK,        /* UVC Application Thread stack size */
1866:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* UVC Application Thread priority */
1867:../CX3RDKOV5640.c ****             UVC_APP_THREAD_PRIORITY,     /* Pre-emption threshold */
1868:../CX3RDKOV5640.c ****             CYU3P_NO_TIME_SLICE,         /* No time slice for the application thread */
1869:../CX3RDKOV5640.c ****             CYU3P_AUTO_START             /* Start the Thread immediately */
1870:../CX3RDKOV5640.c ****             );
1871:../CX3RDKOV5640.c **** 
1872:../CX3RDKOV5640.c ****     /* Check the return code */
1873:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4961              		.loc 1 1873 0
 4962 0078 0C301BE5 		ldr	r3, [fp, #-12]
 4963 007c 000053E3 		cmp	r3, #0
 4964 0080 0000000A 		beq	.L283
 4965              	.L284:
1874:../CX3RDKOV5640.c ****     {
1875:../CX3RDKOV5640.c ****         /* Thread Creation failed with the error code retThrdCreate */
1876:../CX3RDKOV5640.c **** 
1877:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1878:../CX3RDKOV5640.c **** 
1879:../CX3RDKOV5640.c ****         /* Application cannot continue */
1880:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1881:../CX3RDKOV5640.c ****         while(1);
 4966              		.loc 1 1881 0 discriminator 1
 4967 0084 FEFFFFEA 		b	.L284
 4968              	.L283:
1882:../CX3RDKOV5640.c ****     }
1883:../CX3RDKOV5640.c **** 
1884:../CX3RDKOV5640.c ****     /* Create GPIO application event group */
1885:../CX3RDKOV5640.c ****     retThrdCreate = CyU3PEventCreate(&glTimerEvent);
 4969              		.loc 1 1885 0
 4970 0088 30009FE5 		ldr	r0, .L287+12
 4971 008c 0010A0E3 		mov	r1, #0
 4972 0090 2820A0E3 		mov	r2, #40
 4973 0094 FEFFFFEB 		bl	_txe_event_flags_create
 4974 0098 0C000BE5 		str	r0, [fp, #-12]
1886:../CX3RDKOV5640.c ****     if (retThrdCreate != 0)
 4975              		.loc 1 1886 0
 4976 009c 0C301BE5 		ldr	r3, [fp, #-12]
 4977 00a0 000053E3 		cmp	r3, #0
 4978 00a4 0000000A 		beq	.L282
 4979              	.L286:
1887:../CX3RDKOV5640.c ****     {
1888:../CX3RDKOV5640.c ****         /* Event group creation failed with the error code retThrdCreate */
1889:../CX3RDKOV5640.c **** 
1890:../CX3RDKOV5640.c ****         /* Add custom recovery or debug actions here */
1891:../CX3RDKOV5640.c **** 
1892:../CX3RDKOV5640.c ****         /* Application cannot continue */
1893:../CX3RDKOV5640.c ****         /* Loop indefinitely */
1894:../CX3RDKOV5640.c ****         while(1);
 4980              		.loc 1 1894 0 discriminator 1
 4981 00a8 FEFFFFEA 		b	.L286
 4982              	.L282:
1895:../CX3RDKOV5640.c ****     }
1896:../CX3RDKOV5640.c **** }
 4983              		.loc 1 1896 0
 4984 00ac 04D04BE2 		sub	sp, fp, #4
 4985              		@ sp needed
 4986 00b0 0088BDE8 		ldmfd	sp!, {fp, pc}
 4987              	.L288:
 4988              		.align	2
 4989              	.L287:
 4990 00b4 00000000 		.word	uvcAppThread
 4991 00b8 B00C0000 		.word	.LC83
 4992 00bc 00000000 		.word	esUVCUvcAppThread_Entry
 4993 00c0 00000000 		.word	glTimerEvent
 4994              		.cfi_endproc
 4995              	.LFE14:
 4997              		.section	.text.main,"ax",%progbits
 4998              		.align	2
 4999              		.global	main
 5001              	main:
 5002              	.LFB15:
1897:../CX3RDKOV5640.c **** 
1898:../CX3RDKOV5640.c **** /*
1899:../CX3RDKOV5640.c ****  * Main function
1900:../CX3RDKOV5640.c ****  */
1901:../CX3RDKOV5640.c **** 
1902:../CX3RDKOV5640.c ****     int
1903:../CX3RDKOV5640.c **** main (void)
1904:../CX3RDKOV5640.c **** {
 5003              		.loc 1 1904 0
 5004              		.cfi_startproc
 5005              		@ args = 0, pretend = 0, frame = 48
 5006              		@ frame_needed = 1, uses_anonymous_args = 0
 5007 0000 00482DE9 		stmfd	sp!, {fp, lr}
 5008              	.LCFI30:
 5009              		.cfi_def_cfa_offset 8
 5010              		.cfi_offset 11, -8
 5011              		.cfi_offset 14, -4
 5012 0004 04B08DE2 		add	fp, sp, #4
 5013              	.LCFI31:
 5014              		.cfi_def_cfa 11, 4
 5015 0008 30D04DE2 		sub	sp, sp, #48
1905:../CX3RDKOV5640.c ****     CyU3PIoMatrixConfig_t io_cfg;
1906:../CX3RDKOV5640.c ****     CyU3PReturnStatus_t status = CY_U3P_SUCCESS;
 5016              		.loc 1 1906 0
 5017 000c 0030A0E3 		mov	r3, #0
 5018 0010 08300BE5 		str	r3, [fp, #-8]
1907:../CX3RDKOV5640.c **** 
1908:../CX3RDKOV5640.c ****     /* Initialize the device */
1909:../CX3RDKOV5640.c ****     status = CyU3PDeviceInit (NULL);
 5019              		.loc 1 1909 0
 5020 0014 0000A0E3 		mov	r0, #0
 5021 0018 FEFFFFEB 		bl	CyU3PDeviceInit
 5022 001c 08000BE5 		str	r0, [fp, #-8]
1910:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5023              		.loc 1 1910 0
 5024 0020 08301BE5 		ldr	r3, [fp, #-8]
 5025 0024 000053E3 		cmp	r3, #0
 5026 0028 0000000A 		beq	.L290
1911:../CX3RDKOV5640.c ****     {
1912:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5027              		.loc 1 1912 0
 5028 002c 270000EA 		b	.L291
 5029              	.L290:
1913:../CX3RDKOV5640.c ****     }
1914:../CX3RDKOV5640.c **** 
1915:../CX3RDKOV5640.c ****     /* Initialize the caches. Enable instruction cache and keep data cache disabled.
1916:../CX3RDKOV5640.c ****      * The data cache is useful only when there is a large amount of CPU based memory
1917:../CX3RDKOV5640.c ****      * accesses. When used in simple cases, it can decrease performance due to large
1918:../CX3RDKOV5640.c ****      * number of cache flushes and cleans and also it adds to the complexity of the
1919:../CX3RDKOV5640.c ****      * code. */
1920:../CX3RDKOV5640.c ****     status = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
 5030              		.loc 1 1920 0
 5031 0030 0100A0E3 		mov	r0, #1
 5032 0034 0010A0E3 		mov	r1, #0
 5033 0038 0020A0E3 		mov	r2, #0
 5034 003c FEFFFFEB 		bl	CyU3PDeviceCacheControl
 5035 0040 08000BE5 		str	r0, [fp, #-8]
1921:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5036              		.loc 1 1921 0
 5037 0044 08301BE5 		ldr	r3, [fp, #-8]
 5038 0048 000053E3 		cmp	r3, #0
 5039 004c 0000000A 		beq	.L292
1922:../CX3RDKOV5640.c ****     {
1923:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5040              		.loc 1 1923 0
 5041 0050 1E0000EA 		b	.L291
 5042              	.L292:
1924:../CX3RDKOV5640.c ****     }
1925:../CX3RDKOV5640.c **** 
1926:../CX3RDKOV5640.c ****     /* Configure the IO matrix for the device.*/
1927:../CX3RDKOV5640.c ****     io_cfg.isDQ32Bit = CyFalse;
 5043              		.loc 1 1927 0
 5044 0054 0030A0E3 		mov	r3, #0
 5045 0058 30300BE5 		str	r3, [fp, #-48]
1928:../CX3RDKOV5640.c **** 
1929:../CX3RDKOV5640.c ****     io_cfg.useUart   = CyTrue;
 5046              		.loc 1 1929 0
 5047 005c 0130A0E3 		mov	r3, #1
 5048 0060 2C300BE5 		str	r3, [fp, #-44]
1930:../CX3RDKOV5640.c ****     io_cfg.useI2C    = CyTrue;
 5049              		.loc 1 1930 0
 5050 0064 0130A0E3 		mov	r3, #1
 5051 0068 28300BE5 		str	r3, [fp, #-40]
1931:../CX3RDKOV5640.c ****     io_cfg.useI2S    = CyFalse;
 5052              		.loc 1 1931 0
 5053 006c 0030A0E3 		mov	r3, #0
 5054 0070 24300BE5 		str	r3, [fp, #-36]
1932:../CX3RDKOV5640.c ****     io_cfg.useSpi    = CyFalse;
 5055              		.loc 1 1932 0
 5056 0074 0030A0E3 		mov	r3, #0
 5057 0078 20300BE5 		str	r3, [fp, #-32]
1933:../CX3RDKOV5640.c ****     io_cfg.lppMode   = CY_U3P_IO_MATRIX_LPP_DEFAULT;
 5058              		.loc 1 1933 0
 5059 007c 0030A0E3 		mov	r3, #0
 5060 0080 1A304BE5 		strb	r3, [fp, #-26]
1934:../CX3RDKOV5640.c ****     /* No GPIOs are enabled. */
1935:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[0]  = 0;
 5061              		.loc 1 1935 0
 5062 0084 0030A0E3 		mov	r3, #0
 5063 0088 18300BE5 		str	r3, [fp, #-24]
1936:../CX3RDKOV5640.c ****     io_cfg.gpioSimpleEn[1]  = 0;
 5064              		.loc 1 1936 0
 5065 008c 0030A0E3 		mov	r3, #0
 5066 0090 14300BE5 		str	r3, [fp, #-20]
1937:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[0] = 0;
 5067              		.loc 1 1937 0
 5068 0094 0030A0E3 		mov	r3, #0
 5069 0098 10300BE5 		str	r3, [fp, #-16]
1938:../CX3RDKOV5640.c ****     io_cfg.gpioComplexEn[1] = 0;
 5070              		.loc 1 1938 0
 5071 009c 0030A0E3 		mov	r3, #0
 5072 00a0 0C300BE5 		str	r3, [fp, #-12]
1939:../CX3RDKOV5640.c ****     status = CyU3PDeviceConfigureIOMatrix (&io_cfg);
 5073              		.loc 1 1939 0
 5074 00a4 30304BE2 		sub	r3, fp, #48
 5075 00a8 0300A0E1 		mov	r0, r3
 5076 00ac FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
 5077 00b0 08000BE5 		str	r0, [fp, #-8]
1940:../CX3RDKOV5640.c ****     if (status != CY_U3P_SUCCESS)
 5078              		.loc 1 1940 0
 5079 00b4 08301BE5 		ldr	r3, [fp, #-8]
 5080 00b8 000053E3 		cmp	r3, #0
 5081 00bc 0000000A 		beq	.L293
1941:../CX3RDKOV5640.c ****     {
1942:../CX3RDKOV5640.c ****         goto handle_fatal_error;
 5082              		.loc 1 1942 0
 5083 00c0 020000EA 		b	.L291
 5084              	.L293:
1943:../CX3RDKOV5640.c ****     }
1944:../CX3RDKOV5640.c **** 
1945:../CX3RDKOV5640.c ****     /* This is a non returnable call for initializing the RTOS kernel */
1946:../CX3RDKOV5640.c ****     CyU3PKernelEntry ();
 5085              		.loc 1 1946 0
 5086 00c4 FEFFFFEB 		bl	_tx_initialize_kernel_enter
1947:../CX3RDKOV5640.c **** 
1948:../CX3RDKOV5640.c ****     /* Dummy return to make the compiler happy */
1949:../CX3RDKOV5640.c ****     return 0;
 5087              		.loc 1 1949 0
 5088 00c8 0030A0E3 		mov	r3, #0
 5089 00cc 000000EA 		b	.L295
 5090              	.L291:
1950:../CX3RDKOV5640.c **** 
1951:../CX3RDKOV5640.c **** handle_fatal_error:
1952:../CX3RDKOV5640.c ****     /* Cannot recover from this error. */
1953:../CX3RDKOV5640.c ****     while (1);
 5091              		.loc 1 1953 0 discriminator 1
 5092 00d0 FEFFFFEA 		b	.L291
 5093              	.L295:
1954:../CX3RDKOV5640.c **** }
 5094              		.loc 1 1954 0
 5095 00d4 0300A0E1 		mov	r0, r3
 5096 00d8 04D04BE2 		sub	sp, fp, #4
 5097              		@ sp needed
 5098 00dc 0088BDE8 		ldmfd	sp!, {fp, pc}
 5099              		.cfi_endproc
 5100              	.LFE15:
 5102              		.text
 5103              	.Letext0:
 5104              		.file 2 "c:\\program files (x86)\\cypress\\ez-usb fx3 sdk\\1.3\\arm gcc\\arm-none-eabi\\include\\s
 5105              		.file 3 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5106              		.file 4 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyfx
 5107              		.file 5 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_p
 5108              		.file 6 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/tx_a
 5109              		.file 7 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5110              		.file 8 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5111              		.file 9 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu3
 5112              		.file 10 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5113              		.file 11 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5114              		.file 12 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5115              		.file 13 "C:\\Program Files (x86)\\Cypress\\EZ-USB FX3 SDK\\1.3\\\\firmware\\u3p_firmware\\inc/cyu
 5116              		.file 14 "..\\..\\CX3OV5640LIB\\INC/CX3OV5640Lib.h"
 5117              		.file 15 "../CX3RDKOV5640.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CX3RDKOV5640.c
                            *COM*:00000004 gl32SetControl
                            *COM*:00000002 gl16SetControl
                            *COM*:000000a8 uvcAppThread
                            *COM*:00000028 glTimerEvent
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:21     .bss.UvcTimer:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:24     .bss.UvcTimer:00000000 UvcTimer
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:27     .text.UvcAppProgressTimer:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:29     .text.UvcAppProgressTimer:00000000 UvcAppProgressTimer
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:58     .text.UvcAppProgressTimer:00000028 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:67     .bss.glDMATxCount:00000000 glDMATxCount
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:64     .bss.glDMATxCount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:74     .bss.glDmaDone:00000000 glDmaDone
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:71     .bss.glDmaDone:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:80     .bss.glActiveSocket:00000000 glActiveSocket
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:81     .bss.glActiveSocket:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:87     .data.doLpmDisable:00000000 doLpmDisable
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:84     .data.doLpmDisable:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:94     .bss.glHitFV:00000000 glHitFV
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:91     .bss.glHitFV:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:101    .bss.glMipiActive:00000000 glMipiActive
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:98     .bss.glMipiActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:108    .bss.glIsClearFeature:00000000 glIsClearFeature
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:105    .bss.glIsClearFeature:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:115    .bss.glPreviewStarted:00000000 glPreviewStarted
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:112    .bss.glPreviewStarted:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:122    .data.glUVCHeader:00000000 glUVCHeader
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:119    .data.glUVCHeader:00000000 $d
                            *COM*:00000020 glCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:140    .data.glCurrentFrameIndex:00000000 glCurrentFrameIndex
                            *COM*:00000020 glStillCommitCtrl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:147    .data.glCurrentStillFrameIndex:00000000 glCurrentStillFrameIndex
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:153    .bss.glStillTriggerCtrl:00000000 glStillTriggerCtrl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:154    .bss.glStillTriggerCtrl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:159    .bss.glFrameIndexToSet:00000000 glFrameIndexToSet
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:160    .bss.glFrameIndexToSet:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:166    .bss.glStillCaptureStart:00000000 glStillCaptureStart
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:163    .bss.glStillCaptureStart:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:173    .bss.glStillCaptured:00000000 glStillCaptured
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:170    .bss.glStillCaptured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:179    .bss.glStillSkip:00000000 glStillSkip
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:180    .bss.glStillSkip:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:186    .bss.glIsApplnActive:00000000 glIsApplnActive
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:183    .bss.glIsApplnActive:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:193    .bss.glIsConfigured:00000000 glIsConfigured
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:190    .bss.glIsConfigured:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:200    .bss.glIsStreamingStarted:00000000 glIsStreamingStarted
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:197    .bss.glIsStreamingStarted:00000000 $d
                            *COM*:000000e8 glChHandleUVCStream
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:208    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 ES_UVC_STREAM_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:205    .bss.ES_UVC_STREAM_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:215    .bss.ES_UVC_DATA_BUF_SIZE:00000000 ES_UVC_DATA_BUF_SIZE
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:212    .bss.ES_UVC_DATA_BUF_SIZE:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:221    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 ES_UVC_STREAM_BUF_COUNT
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:222    .bss.ES_UVC_STREAM_BUF_COUNT:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:227    .data.g_IsAutoFocus:00000000 g_IsAutoFocus
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:233    .bss.glGet_Info:00000000 glGet_Info
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:234    .bss.glGet_Info:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:240    .bss.gl8GetControl:00000000 gl8GetControl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:237    .bss.gl8GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:247    .bss.gl8SetControl:00000000 gl8SetControl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:244    .bss.gl8SetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:254    .bss.gl16GetControl:00000000 gl16GetControl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:251    .bss.gl16GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:261    .bss.gl32GetControl:00000000 gl32GetControl
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:258    .bss.gl32GetControl:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:267    .bss.glcommitcount:00000000 glcommitcount
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:268    .bss.glcommitcount:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:273    .data.glcheckframe:00000000 glcheckframe
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:276    .text.esUVCAppErrorHandler:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:279    .text.esUVCAppErrorHandler:00000000 esUVCAppErrorHandler
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:305    .text.esUVCUvcAddHeader:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:307    .text.esUVCUvcAddHeader:00000000 esUVCUvcAddHeader
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:358    .text.esUVCUvcAddHeader:00000074 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:363    .rodata:00000000 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:370    .text.esUVCUvcApplnStart:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:373    .text.esUVCUvcApplnStart:00000000 esUVCUvcApplnStart
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:520    .text.esUVCUvcApplnStart:0000017c $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:542    .text.esUVCUvcApplnStop:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:545    .text.esUVCUvcApplnStop:00000000 esUVCUvcApplnStop
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:648    .text.esUVCUvcApplnStop:000000f8 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:670    .text.esUVCGpifCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:673    .text.esUVCGpifCB:00000000 esUVCGpifCB
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:751    .text.esUVCGpifCB:000000c0 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:768    .text.esUVCUvcAppDmaCallback:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:771    .text.esUVCUvcAppDmaCallback:00000000 esUVCUvcAppDmaCallback
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1097   .text.esUVCUvcAppDmaCallback:000003c4 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1135   .text.esUVCUvcApplnUSBEventCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1137   .text.esUVCUvcApplnUSBEventCB:00000000 esUVCUvcApplnUSBEventCB
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1167   .text.esUVCUvcApplnUSBEventCB:0000003c $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1177   .text.esUVCUvcApplnUSBEventCB:0000005c $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1317   .text.esUVCUvcApplnUSBEventCB:000001d0 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1332   .text.esUVCApplnLPMRqtCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1334   .text.esUVCApplnLPMRqtCB:00000000 esUVCApplnLPMRqtCB
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1379   .text.esSetCameraResolution:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1382   .text.esSetCameraResolution:00000000 esSetCameraResolution
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1558   .text.esSetCameraResolution:000001c8 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1611   .text.esUVCUvcApplnUSBSetupCB:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:1613   .text.esUVCUvcApplnUSBSetupCB:00000000 esUVCUvcApplnUSBSetupCB
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:3119   .text.esUVCUvcApplnUSBSetupCB:0000109c $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:3163   .text.esUVCUvcApplnUSBSetupCB:00001144 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:3778   .text.esUVCUvcApplnInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:3781   .text.esUVCUvcApplnInit:00000000 esUVCUvcApplnInit
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4547   .text.esUVCUvcApplnInit:00000880 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4642   .text.esUVCUvcApplnDebugInit:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4645   .text.esUVCUvcApplnDebugInit:00000000 esUVCUvcApplnDebugInit
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4752   .text.esUVCUvcApplnDebugInit:00000104 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4777   .text.esUVCUvcAppThread_Entry:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4780   .text.esUVCUvcAppThread_Entry:00000000 esUVCUvcAppThread_Entry
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4892   .text.esUVCUvcAppThread_Entry:00000110 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4912   .text.CyFxApplicationDefine:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4915   .text.CyFxApplicationDefine:00000000 CyFxApplicationDefine
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4990   .text.CyFxApplicationDefine:000000b4 $d
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:4998   .text.main:00000000 $a
C:\Users\wcheng\AppData\Local\Temp\ccgl9gTw.s:5001   .text.main:00000000 main
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.29463082a45126943f020ea30bda05c8
                           .group:00000000 wm4.newlib.h.8.384a112feabb3bef7b573ae48cde2e3b
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.219.8eb38badc3f446ace4f0fbbdc7b4e018
                           .group:00000000 wm4._ansi.h.23.5644b60c990a4800b02a6e654e88f93a
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.cyu3types.h.80.f5310e165127de2daf78c334a454267e
                           .group:00000000 wm4.stdlib.h.18.8bab2fb43ac4e90235390733c30a4530
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.59.db8450f33c1f6150c0372fa1091a887a
                           .group:00000000 wm4.stddef.h.348.9a99de77b6ba3b4278b57e9cc6d6e349
                           .group:00000000 wm4.reent.h.16.ec713094ff7b80200da61a1b94cca956
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.55.7091a050e07f1c4abd225630fe3d62f1
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.cdefs.h.56.efab90f4d89fbc41d6b3a5c5fb0d3d0f
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.tx_port.h.95.54ef54ef950923016df123872c81f77f
                           .group:00000000 wm4.tx_api.h.90.d18ffa804751aa80b6d59c3d596c2234
                           .group:00000000 wm4.cyu3tx.h.61.421a5eac9b37f3e2677fcfe17ba1c9c3
                           .group:00000000 wm4.cyu3dma.h.569.521da17a880bb7dc9c063e240d18d9bc
                           .group:00000000 wm4.cyu3system.h.43.0fbd82548e591beefe95401c72410881
                           .group:00000000 wm4.cyu3usbconst.h.37.502980e110c2142a7316d50a53794397
                           .group:00000000 wm4.cyu3usb.h.302.ade7bb9b5b6e92c233eea1baf2851afa
                           .group:00000000 wm4.cyu3lpp.h.138.66435309bc2407b6684483dfed574450
                           .group:00000000 wm4.assert.h.11.060c3dc511517628fd4f958fa9448dce
                           .group:00000000 wm4.cyu3utils.h.45.ea1b88089ccad3d50489f6f768ad8e9f
                           .group:00000000 wm4.cyu3pib.h.192.a1483c513c81c352d6719814a4b66283
                           .group:00000000 wm4.cyu3descriptor.h.104.486178ff96f7d84792762d8905519d09
                           .group:00000000 wm4.cyu3socket.h.153.0d077cd39632ba9c913ec648cfa0f9e9
                           .group:00000000 wm4.sock_regs.h.24.15d70ab2b2a99b01b4189217fc091bd3
                           .group:00000000 wm4.cyu3sib.h.59.b1cff9a75023363cc612aef2b2314b23
                           .group:00000000 wm4.cyu3gpif.h.52.b01ef1bece12652336136a0aaabab45b
                           .group:00000000 wm4.cyu3mipicsi.h.46.b99df5b141b2543db3c56d6e408e0c5e
                           .group:00000000 wm4.CX3OV5640Lib.h.18.ebed1e57f77d2633a42de60cae388313
                           .group:00000000 wm4.CX3RDKOV5640.h.34.16f03605a9abf281a0c637c9029be977

UNDEFINED SYMBOLS
_txe_event_flags_set
_tx_thread_sleep
CyU3PMemCopy
_txe_timer_deactivate
CyU3PUsbSetEpNak
CyFx3BusyWait
CyU3PUsbFlushEp
CyU3PDmaMultiChannelReset
CyU3PDebugPrint
CyU3PDmaMultiChannelSetXfer
CyU3PGpifSMControl
CyU3PGpifSMSwitch
CyU3PMipicsiWakeup
esCamera_Power_Up
esOV5640_SetAutofocus
CyU3PMipicsiSleep
esCamera_Power_Down
CyU3PUsbStall
CyU3PUsbLPMEnable
CyU3PDmaMultiChannelSetWrapUp
CyU3PUsbGetSpeed
CyU3PUsbLPMDisable
CyU3PUsbSetLinkPowerState
_txe_timer_activate
CyU3PDmaMultiChannelGetBuffer
CyU3PDmaMultiChannelCommitBuffer
_txe_timer_change
CyU3PMipicsiSetIntfParams
esOV5640_1080P_config
esOV5640_VGA_config
esOV5640_5MP_config
esOV5640_VGA_HS_config
cfgUvc1080p30NoMclk
cfgUvcVga30NoMclk
cfgUvc720p60NoMclk
cfgUvc5Mp15NoMclk
CyU3PUsbAckSetup
CyU3PUsbSendEP0Data
CyU3PUsbGetEP0Data
esOV5640_GetBrightness
esOV5640_SetBrightness
esOV5640_GetAutoExposure
esOV5640_SetAutoExposure
esOV5640_GetContrast
esOV5640_SetContrast
esOV5640_GetExposure
esOV5640_SetExposure
esOV5640_GetHue
esOV5640_SetHue
esOV5640_GetManualfocus
esOV5640_SetManualfocus
esOV5640_GetSaturation
esOV5640_SetSaturation
glProbeCtrl
gl5MpProbeCtrl
gl720pProbeCtrl
glVga60ProbeCtrl
gl1080pProbeCtrl
glVga30ProbeCtrl
glStillProbeCtrl
esOV5640_GetSharpness
esOV5640_SetSharpness
esOV5640_GetAutofocus
esOV5640_GetWhiteBalance
esOV5640_SetWhiteBalance
esOV5640_GetAutoWhiteBalance
esOV5640_SetAutoWhiteBalance
CyU3PMipicsiInitializeI2c
CyU3PMipicsiInitializeGPIO
CyU3PMipicsiInitializePIB
CyU3PUsbStart
CyU3PUsbRegisterSetupCallback
CyU3PUsbRegisterEventCallback
CyU3PUsbRegisterLPMRequestCallback
CyU3PUsbSetDesc
CyU3PUsbVBattEnable
CyU3PUsbControlVBusDetect
CyU3PConnectState
CyU3PSetEpConfig
CyU3PUsbEPSetBurstMode
CyU3PDmaMultiChannelCreate
CyU3PMipicsiGpifLoad
CyU3PGpifRegisterCallback
CyU3PGpifSMStart
CyU3PMipicsiInit
_txe_timer_create
esUVCUSB30DeviceDscr
esUVCUSB20DeviceDscr
esUVCUSBBOSDscr
esUVCUSBDeviceQualDscr
esUVCUSBSSConfigDscr
esUVCUSBHSConfigDscr
esUVCUSBFSConfigDscr
esUVCUSBStringLangIDDscr
esUVCUSBManufactureDscr
esUVCUSBProductDscr
esUVCUSBConfigSSDscr
esUVCUSBConfigHSDscr
esUVCUSBConfigFSDscr
cfgUvcVgaNoMclk
CyU3PUartInit
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
_txe_event_flags_get
CyU3PMemAlloc
_txe_thread_create
_txe_event_flags_create
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
